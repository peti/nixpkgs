# This file was generated from generate-r-packages.R on 2015-05-22.
# DO NOT EDIT. Execute the following command to update the file.
#
# Rscript generate-r-packages.R > r-packages.nix

{ self, derive }: with self; {
A3 = derive { name="A3"; version="0.9.2"; type="cran"; sha256="01s7znhph2mr3snpscci3y7nbcisa6kg6hy7im3742r6ah0z3jv7"; depends=[xtable pbapply ]; };
ABCExtremes = derive { name="ABCExtremes"; version="1.0"; type="cran"; sha256="032bc9a6cxy4war95n8v4vaax3q96k2wryjbcipi3z55b2l8hdny"; depends=[SpatialExtremes combinat ]; };
ABCanalysis = derive { name="ABCanalysis"; version="1.0.1"; type="cran"; sha256="1q1ms76nzg93sf71r0v3d3yx3a8agpccndlv9lz49cr6asa9iwl0"; depends=[Hmisc plotrix ]; };
ABCoptim = derive { name="ABCoptim"; version="0.13.11"; type="cran"; sha256="1j2pbfl5g9x71gq9f7vg6wznsds8sn8dj3q2h5fhjcv58di3gjhl"; depends=[ ]; };
ABCp2 = derive { name="ABCp2"; version="1.1"; type="cran"; sha256="0s0lbwlc8nycm7b8vx0v01f8dmy91r1zqcj9zgrlj7dnpg4cpkml"; depends=[MASS ]; };
ABSSeq = derive { name="ABSSeq"; version="1.2.0"; type="bioc"; sha256="0y8cr6w6jw8ac94jn4kbvrf9kdpjz2hq4s5hfkgd1gnphfkrw4f9"; depends=[Rcpp Rcpp ]; };
ABarray = derive { name="ABarray"; version="1.34.0"; type="bioc"; sha256="0b7vyd3vagbczsf5ppd8pv18yrlzgb818lg1ga3lpzf6yr9gb2kd"; depends=[Biobase multtest ]; };
ACCLMA = derive { name="ACCLMA"; version="1.0"; type="cran"; sha256="1na27sp18fq12gp6vxgqw1ffsz2yi1d8xvrxbrzx5g1kqxrayy0v"; depends=[ ]; };
ACD = derive { name="ACD"; version="1.5.3"; type="cran"; sha256="1a67bi3hklq8nlc50r0qnyr4k7m9kpvijy8sqqpm54by5hsysfd6"; depends=[ ]; };
ACME = derive { name="ACME"; version="2.22.0"; type="bioc"; sha256="06jhvqm2m27k44pk4iqz1msq3vnkchxvhsamdydsnlv52finfl66"; depends=[Biobase BiocGenerics ]; };
ACNE = derive { name="ACNE"; version="0.8.0"; type="cran"; sha256="0ps38lljzm2aszqf8fhh74zbdxh46kypmybkw5w7xaf9nv5kcq8g"; depends=[aroma_affymetrix MASS R_methodsS3 R_oo R_utils matrixStats R_filesets aroma_core ]; };
ACTCD = derive { name="ACTCD"; version="1.0-0"; type="cran"; sha256="0zn8f6l5vmn4w1lqjnpcxvfbr2fhwbhdjx4144h3bk71bk9raavl"; depends=[R_methodsS3 ]; };
ADDT = derive { name="ADDT"; version="1.0"; type="cran"; sha256="1jx7rxi0yfn34pf3cf9zpf434rapgn5qn2mn5rkq5lysr3kwdw91"; depends=[ ]; };
ADGofTest = derive { name="ADGofTest"; version="0.3"; type="cran"; sha256="0ik817qzqp6kfbckjp1z7srlma0w6z2zcwykh0jdiv7nahwk3ncw"; depends=[ ]; };
ADM3 = derive { name="ADM3"; version="1.3"; type="cran"; sha256="1hg9wjdhckilqd13dr4cim4j6jsh2sdwm18i3pfmfdj8cyswm3h0"; depends=[ ]; };
ADPclust = derive { name="ADPclust"; version="0.6.3"; type="cran"; sha256="0lr4zkjhqr9azqxnxpxp9i0ppn8wi8ndb61ki7h2dzfgv27fingk"; depends=[dplyr cluster fields knitr ]; };
ADaCGH2 = derive { name="ADaCGH2"; version="2.6.0"; type="bioc"; sha256="15afapvazksy6kgp9fgz57vc96dfhlz6hd0bssgfgjr243qgh2yy"; depends=[ff bit ffbase DNAcopy tilingArray GLAD waveslim cluster aCGH snapCGH ]; };
AER = derive { name="AER"; version="1.2-3"; type="cran"; sha256="0823zjpl0b7fzhszi28lg1paa41vbxq2xpjil1d4f6dxdysalxlx"; depends=[car lmtest sandwich survival zoo Formula ]; };
AFLPsim = derive { name="AFLPsim"; version="0.3-4"; type="cran"; sha256="0xqp1d3cn8rcrsx0yipqh0k4xynv446acxpcammbflsz01xsgx9v"; depends=[adegenet introgress ]; };
AGD = derive { name="AGD"; version="0.32"; type="cran"; sha256="1jjkclqylh43vm1bj1g4cml7a84sxdl94kmhxgmk04rdkmgf8c47"; depends=[gamlss gamlss_dist ]; };
AGDEX = derive { name="AGDEX"; version="1.14.0"; type="bioc"; sha256="1kc8k2nqq2jc6hvxxs1abya8k96cc7lba0f3vndijai14lp2ynl0"; depends=[Biobase GSEABase ]; };
AGSDest = derive { name="AGSDest"; version="2.2"; type="cran"; sha256="00kf786i72bc4a80qswq1iazwqi709pxvzadgfih511plgir6ik2"; depends=[ldbounds ]; };
AICcmodavg = derive { name="AICcmodavg"; version="2.0-3"; type="cran"; sha256="1a9jbf3vd77hsf98smjgqchhkc9z8qqp12c1mflln3l0pxx0vk8q"; depends=[lattice MASS Matrix nlme unmarked VGAM xtable ]; };
AID = derive { name="AID"; version="1.5"; type="cran"; sha256="0fpgq2ahl0mdj0sb0p39z2ksslsiwm3hma8d09jmggi3yjbrgqq7"; depends=[MASS tseries nortest ]; };
AIM = derive { name="AIM"; version="1.01"; type="cran"; sha256="11lkfilxk265a7jkc1wq5xlgxa56xhg302f1q9xb7gmjnzdigb21"; depends=[survival survival ]; };
ALDEx2 = derive { name="ALDEx2"; version="1.0.0"; type="bioc"; sha256="0baqnwrwgyrhxwzns4ljpfg8mvy9plxg44dfsrpzg8093vmihsdi"; depends=[GenomicRanges ]; };
ALDqr = derive { name="ALDqr"; version="0.5"; type="cran"; sha256="0294d6cjfl5m63jhrv4rbh7npwrbmmw5101jz5bbwihhj94qcxp9"; depends=[HyperbolicDist ]; };
ALKr = derive { name="ALKr"; version="0.5.3.1"; type="cran"; sha256="09df3vx2q0sn8fwz2cc9lckzwrf2hgbglzyn376d6nkrm6gq792a"; depends=[MASS Rcpp Rcpp ]; };
ALS = derive { name="ALS"; version="0.0.5"; type="cran"; sha256="1ryviknpf7c0v20bmc40khhmx51b83hbh9q9iwz9d694by51xryc"; depends=[nnls Iso ]; };
ALSCPC = derive { name="ALSCPC"; version="1.0"; type="cran"; sha256="0ippxzq5qwb9dnpvm1kxhc0fxh83rs9ny5rcvd30w2bp632q9qdx"; depends=[ ]; };
ALTopt = derive { name="ALTopt"; version="0.1.0"; type="cran"; sha256="0vdn535x199m95gs715i42p0cf9zlj74s7xgxly7aknr0l2ypl2c"; depends=[cubature lattice ]; };
AMAP_Seq = derive { name="AMAP.Seq"; version="1.0"; type="cran"; sha256="0z0rrzps6rm58k4m1ybg77s3w05m5zfya4x8ril78ksxsjwi3636"; depends=[ ]; };
AMGET = derive { name="AMGET"; version="1.0"; type="cran"; sha256="18wdzzg5wr7akbd1iasa4mvmy44fb2n5gpghwcrx80knnicy3dxq"; depends=[ ]; };
AMOEBA = derive { name="AMOEBA"; version="1.1"; type="cran"; sha256="1npzh3rpfnxd4r1pj1hm214sfgbw4wmq4ws093lnl7pvsl0q37xn"; depends=[snowfall rlecuyer spdep ]; };
AMORE = derive { name="AMORE"; version="0.2-15"; type="cran"; sha256="00zfqcsah2353mrhqkv8bbh24l8gaxk4y78icr9kxy4pqb2988yz"; depends=[ ]; };
AOfamilies = derive { name="AOfamilies"; version="1.01"; type="cran"; sha256="0v3b83k12lsrdcrkjl2ff38d0g8sbrnm5pmm9xphyrk3lfgap76k"; depends=[lqmm quantreg ]; };
APSIMBatch = derive { name="APSIMBatch"; version="0.1.0.2374"; type="cran"; sha256="0j44ijq1v1k60lka9nmw8m1jfjw7pidny9bvswqy5v82gzmwl29d"; depends=[ ]; };
AR1seg = derive { name="AR1seg"; version="1.0"; type="cran"; sha256="0v9adx5wj9r4jwl3bqqmj0byiqfp585jz013qfqrq601wj8v4zi3"; depends=[Segmentor3IsBack ]; };
ARPobservation = derive { name="ARPobservation"; version="1.1"; type="cran"; sha256="1cdhn11jf1nf03jyvs17ygmjq9pb5rvmyyrq9fp7ifmvcgbkwsms"; depends=[ ]; };
ARRmNormalization = derive { name="ARRmNormalization"; version="1.6.0"; type="bioc"; sha256="108rjwd21z2k45a8dhsd1hs8ssf6gml80wcvg3768bzr0nipsc83"; depends=[ ]; };
ARTIVA = derive { name="ARTIVA"; version="1.2.3"; type="cran"; sha256="1jdvsslc8parz7wibcv51fx62brl2mc6i482hz43j1npsms2z1hl"; depends=[MASS igraph gplots ]; };
ARTP = derive { name="ARTP"; version="2.0.4"; type="cran"; sha256="1f6ay9lyaqsc33b0larb8v6imp5adaycya84wif2sg32rv4gx3yl"; depends=[ ]; };
ARTool = derive { name="ARTool"; version="0.9.3"; type="cran"; sha256="188k3whgm93jm2kpvh711d4l73gickn9iwidz95srwdcdlf9cf1y"; depends=[lme4 car plyr pbkrtest ]; };
ASEB = derive { name="ASEB"; version="1.10.0"; type="bioc"; sha256="0cwm7f9x7msnb5d8iq9d7s84r07iv0h43kjcim4hdmg27ij9a4yv"; depends=[ ]; };
ASGSCA = derive { name="ASGSCA"; version="1.0.0"; type="bioc"; sha256="0j43fm4vdl2s02a32l0bf7lj7j9irj2sgb958zykq42clzfsbcyx"; depends=[Matrix MASS ]; };
ASMap = derive { name="ASMap"; version="0.4-1"; type="cran"; sha256="0nslmzhf99vl1zkp702xgcrd36xvis45yb5b0hx0mvf4dfv233lm"; depends=[qtl gtools fields lattice ]; };
ASPBay = derive { name="ASPBay"; version="1.2"; type="cran"; sha256="0b1qpyvmj7z10ixrmdxp42bj9s72c1l9rihzmv9p58f12a5aznjz"; depends=[hexbin Rcpp Rcpp RcppArmadillo ]; };
ASSET = derive { name="ASSET"; version="1.4.0"; type="bioc"; sha256="1dizmldax3b38zq1i6yvkcwzvir3jy74dmf2j3acbkri9ksxfbyp"; depends=[MASS msm rmeta ]; };
ASSIGN = derive { name="ASSIGN"; version="1.2.0"; type="bioc"; sha256="0qvhyp2mbmpdv08sdlw49kgba56zhblrf3x5vjld20frarfjjmm2"; depends=[Rlab msm gplots ]; };
ATE = derive { name="ATE"; version="0.2.0"; type="cran"; sha256="1i46ivb7q61kq11z9v1rlnwad914nsdjcz9bagqx17vjk160mc0a"; depends=[ ]; };
ATmet = derive { name="ATmet"; version="1.2"; type="cran"; sha256="047ibxxf5si45zw22zy8a1kpj36q0pd3bsmxwvn0dhf4h65ah0zz"; depends=[DiceDesign lhs metRology msm sensitivity ]; };
AUC = derive { name="AUC"; version="0.3.0"; type="cran"; sha256="0ripcib2qz0m7rgr1kiz68nx8f6p408l1ww7j78ljqik7p3g41g7"; depends=[ ]; };
AUCRF = derive { name="AUCRF"; version="1.1"; type="cran"; sha256="00d7jcg2dyvf7sc9w7vxxd85m7nsbcmfqsavrv236vxfpfc9yn7i"; depends=[randomForest ]; };
AcceptanceSampling = derive { name="AcceptanceSampling"; version="1.0-3"; type="cran"; sha256="1camxmvz8prkvpf3d3rc07bnfphakwdlickqlr4sgzrs4k27rr4f"; depends=[ ]; };
Actigraphy = derive { name="Actigraphy"; version="1.2"; type="cran"; sha256="02xxmzjqym46q0fzddmy29i8la9knrna3b46y8849nmbpqvmp3qn"; depends=[fda lattice SDMTools ]; };
ActuDistns = derive { name="ActuDistns"; version="3.0"; type="cran"; sha256="04rff9czcgac80clpv32a1dl0jbyvfsa7wqxyywgk99w672x50i2"; depends=[reliaR actuar hypergeo ]; };
AdMit = derive { name="AdMit"; version="2.0.1"; type="cran"; sha256="0bqzq2pf5449qyr8ff5d3sq0lbsph29ppv6zzf1rbjz06sc5d6ff"; depends=[mvtnorm ]; };
AdaptFit = derive { name="AdaptFit"; version="0.2-2"; type="cran"; sha256="124lj1sq5cbp35z4ybkc7ci3fi6pgf8pc5k9mpqmyb6dj870q836"; depends=[SemiPar MASS nlme cluster ]; };
AdaptFitOS = derive { name="AdaptFitOS"; version="0.54"; type="cran"; sha256="0h9jfq9mk5wd6v6an40l3sk2adn6fcaks22bi8d9s7zr2ldpzrjq"; depends=[SemiPar nlme MASS mgcv ]; };
AdaptiveSparsity = derive { name="AdaptiveSparsity"; version="1.4"; type="cran"; sha256="1az7isvalf3kmdiycrfl6s9k9xqk22k1mc6rh8v0jmcz402qyq8z"; depends=[Rcpp Rcpp RcppArmadillo ]; };
AdequacyModel = derive { name="AdequacyModel"; version="1.0.8"; type="cran"; sha256="1bpb6lwgkh5g82h4yaf5dh2jbl6f0vz36k22538rhb3kdld6w0i3"; depends=[ ]; };
AffyCompatible = derive { name="AffyCompatible"; version="1.26.0"; type="bioc"; sha256="1d803lbhibwr26m392vss3zkyiczivjiwj5bkcalwlyv3bmkikyn"; depends=[XML RCurl Biostrings ]; };
AffyExpress = derive { name="AffyExpress"; version="1.32.0"; type="bioc"; sha256="1zmrqrh0dzzgprxh8gibj3dxdkh6ga6m3dlb8jvxyi9p6bwvdihq"; depends=[affy limma ]; };
AffyRNADegradation = derive { name="AffyRNADegradation"; version="1.12.0"; type="bioc"; sha256="1wpgfnrajwhq850ibrkwiy1k2lvf1g4zfc35z1kwksh0fbx50s3d"; depends=[affy ]; };
AffyTiling = derive { name="AffyTiling"; version="1.24.0"; type="bioc"; sha256="0rv1rg573qnwf1vfiklgm8dprr5gnfqccg06dvz5fddr1myjg53b"; depends=[affxparser affy preprocessCore ]; };
AgiMicroRna = derive { name="AgiMicroRna"; version="2.16.0"; type="bioc"; sha256="1ziw9yvj2zn6ymqc3mihy55nl51r0jss3x2raspfpnzn9fv4lnph"; depends=[Biobase limma affy preprocessCore affycoretools Biobase ]; };
Agreement = derive { name="Agreement"; version="0.8-1"; type="cran"; sha256="1g29rxr8xsr0dh2r6c6j2bqs0q6snz9wz0hrnb92cxj27ili55yq"; depends=[R2HTML ]; };
Ake = derive { name="Ake"; version="1.0"; type="cran"; sha256="1dj598xfdyjqvysc39a0d5gizgk367c5lkddmwmsqa8zjmvpr15a"; depends=[ ]; };
AlgDesign = derive { name="AlgDesign"; version="1.1-7.3"; type="cran"; sha256="0bl7mx4dnmkgs2x1fj7cqnrp7jx18mqwxyga0rzlniq12h8mc3fz"; depends=[ ]; };
AllPossibleSpellings = derive { name="AllPossibleSpellings"; version="1.1"; type="cran"; sha256="0ksfm2pfjka3yjgcd257v7sns1niaylsfxvhhh2jwdi016cpdw10"; depends=[ ]; };
AlleleRetain = derive { name="AlleleRetain"; version="1.3.1"; type="cran"; sha256="1k2iwns1wk5n02cii6p9prgdb6asys3vwiq5dq2i26fk2xr6j4gq"; depends=[ ]; };
AllelicImbalance = derive { name="AllelicImbalance"; version="1.4.2"; type="bioc"; sha256="1idxgilwlxf26991rilnggrm0qbvajmm4w6ssfljrddnlcqpnnkh"; depends=[GenomicRanges GenomicAlignments BiocGenerics AnnotationDbi Biostrings S4Vectors IRanges Rsamtools GenomicFeatures Gviz lattice GenomeInfoDb ]; };
Amelia = derive { name="Amelia"; version="1.7.3"; type="cran"; sha256="07agkgg4jdjk4kxf87nck7dyihpf2l4pmpf20a7ld9c83is14ib1"; depends=[Rcpp foreign Rcpp RcppArmadillo ]; };
AmericanCallOpt = derive { name="AmericanCallOpt"; version="0.95"; type="cran"; sha256="1nhy44j5bmmjsp6g79nrn741rzzxikhdnxk4wwbdj9igcc1bs573"; depends=[ ]; };
AmpliconDuo = derive { name="AmpliconDuo"; version="1.0"; type="cran"; sha256="0l6p5c2802a1f3b77cdrrk3wdf41926mh34630p462fb3wqipps0"; depends=[ggplot2 xtable ]; };
AnDE = derive { name="AnDE"; version="1.0"; type="cran"; sha256="1yil8ab50wvlqmdla9kmfba8vfgy5r694r6igb58s6vnmld78yf2"; depends=[discretization functional foreign stringr ]; };
AnalyzeFMRI = derive { name="AnalyzeFMRI"; version="1.1-16"; type="cran"; sha256="1mbjb682ns5230jd3vcvd6x4gnn9hpbmjd7r8120y4sp2g733b0f"; depends=[R_matlab fastICA ]; };
AncestryMapper = derive { name="AncestryMapper"; version="1.2"; type="cran"; sha256="0d47vkf59ysa58wnlqkshsvdzhcppb9xc1agwkxv37jv1asllb67"; depends=[ ]; };
AnglerCreelSurveySimulation = derive { name="AnglerCreelSurveySimulation"; version="0.2.1"; type="cran"; sha256="100mbmdllk6c32j75jviz2k9kmwca3jvrqb95a555alfcpkfim8c"; depends=[ ]; };
AnnotLists = derive { name="AnnotLists"; version="1.2"; type="cran"; sha256="1g2khb2ggniwg2zcjamsm3bxyrl2zabvk540b5vyy9am9k83m1g9"; depends=[ ]; };
AnnotationDbi = derive { name="AnnotationDbi"; version="1.28.2"; type="bioc"; sha256="0czhmh2bgip8ax30nk1jkb82qa68cyi7ki5fwwrv3sd05gvc8qln"; depends=[BiocGenerics Biobase GenomeInfoDb DBI RSQLite BiocGenerics Biobase S4Vectors ]; };
AnnotationForge = derive { name="AnnotationForge"; version="1.8.2"; type="bioc"; sha256="13gqf7pa44js7z64psk2p6abjvwzp28pn0lc6hgmc7bcnbnblsg8"; depends=[BiocGenerics Biobase AnnotationDbi DBI RSQLite BiocGenerics S4Vectors Biobase ]; };
AnnotationFuncs = derive { name="AnnotationFuncs"; version="1.16.0"; type="bioc"; sha256="090m1dm37r3pdn7367akmddil1qivcjsy7ilgplqhabii0gb8dhi"; depends=[AnnotationDbi ]; };
AnnotationHub = derive { name="AnnotationHub"; version="1.6.0"; type="bioc"; sha256="1kkdxf28pl743c9yamg75kcvp0pqxvphba7q9yblfsjhq2sym2v2"; depends=[S4Vectors IRanges rjson BiocGenerics httr BiocInstaller AnnotationDbi GenomicRanges interactiveDisplay ]; };
AntWeb = derive { name="AntWeb"; version="0.7"; type="cran"; sha256="1ykfg3zzjdvjppr2l4f26lx00cn5vaqhhz1j1b5yh113ggyl40qw"; depends=[rjson plyr assertthat httr leafletR ]; };
AnthropMMD = derive { name="AnthropMMD"; version="0.9.9"; type="cran"; sha256="10wn0fkcli5yz3fhngsz8sg1mfllqkvjrpjggd9qynay2zrpiw1n"; depends=[tcltk2 ]; };
Anthropometry = derive { name="Anthropometry"; version="1.2"; type="cran"; sha256="15689jy85kf8j9w8yhffjfjw3lsdlv2w99za32p33shp32f3rvjz"; depends=[shapes rgl archetypes nnls depth FNN ICGE cluster biclust ]; };
ApacheLogProcessor = derive { name="ApacheLogProcessor"; version="0.1"; type="cran"; sha256="0wdf9438c5rww0fm5k44ahvivg95vzn3dpnhf4mhpvrjd1am546z"; depends=[foreach doParallel ]; };
AppliedPredictiveModeling = derive { name="AppliedPredictiveModeling"; version="1.1-6"; type="cran"; sha256="004d2k3mhl45inb7kx1ph8xc8h9bgm7f7l3prmvqrl5792400cn4"; depends=[CORElearn MASS plyr reshape2 ]; };
AquaEnv = derive { name="AquaEnv"; version="1.0-3"; type="cran"; sha256="1hkygw09w70im9f6l6q5yxk86mdl5pkczqfqrwc4wl1yhz7z1gjb"; depends=[minpack_lm deSolve ]; };
ArArRedux = derive { name="ArArRedux"; version="0.1"; type="cran"; sha256="1fgll399plraijbh1xrhf1nmc308daqhhsi5krq2lm7q2cn584pc"; depends=[ ]; };
ArDec = derive { name="ArDec"; version="2.0"; type="cran"; sha256="14niggcq7xlvpdhxhy8j870gb11cpk4rwn9gwsfmcfvh49g58i80"; depends=[ ]; };
ArfimaMLM = derive { name="ArfimaMLM"; version="1.3"; type="cran"; sha256="0s5igf703zzvagsbdxf5yv4gn0vdq51b7fvbc8xkgvlmv91yy372"; depends=[lme4 fractal fracdiff ]; };
ArrayBin = derive { name="ArrayBin"; version="0.2"; type="cran"; sha256="0jlhcv2d7pmqi32w71nz063ri1yj4i4isr3msnw7ckzvi9r42jwm"; depends=[SAGx ]; };
ArrayExpress = derive { name="ArrayExpress"; version="1.26.0"; type="bioc"; sha256="06746fvc2xlz42ykp9b8vzgfhz4jzyx5qp6drvl9776lpawd2qq8"; depends=[Biobase XML affy limma ]; };
ArrayExpressHTS = derive { name="ArrayExpressHTS"; version="1.16.0"; type="bioc"; sha256="0mp9dafd5h2n8sfdadncch4inxy7gn4rsmv68fyjxr4cs52c229p"; depends=[sampling Rsamtools snow Biobase BiocGenerics Biostrings DESeq GenomicRanges Hmisc IRanges R2HTML RColorBrewer Rsamtools ShortRead XML biomaRt edgeR rJava svMisc sendmailR bitops Rsamtools ]; };
ArrayTV = derive { name="ArrayTV"; version="1.4.0"; type="bioc"; sha256="06yf52yf3jydr187yfg52vr7krhw433wab487qj3qlq903nkvjn0"; depends=[foreach DNAcopy oligoClasses ]; };
ArrayTools = derive { name="ArrayTools"; version="1.26.0"; type="bioc"; sha256="1sf38isnq2bv8np9skqs9iwhb7k6waf6xzzrmkrxqrbm86izvdxj"; depends=[affy Biobase affy Biobase limma xtable ]; };
AssetPricing = derive { name="AssetPricing"; version="1.0-0"; type="cran"; sha256="12v8hmmknkp472x406zgzwjp7x8sc90byc3s3dvmwd5qhryxkkix"; depends=[polynom deSolve ]; };
AssotesteR = derive { name="AssotesteR"; version="0.1-10"; type="cran"; sha256="0aysilg79vprcyjirqz6c5s1ry1ia92xik3l38qrw1gf3vfli9cw"; depends=[mvtnorm ]; };
AsynchLong = derive { name="AsynchLong"; version="1.0"; type="cran"; sha256="097d0zvzjkz3v32qhxdir0xv7kbjkhzy6q5k54w8l4fa2632j3mk"; depends=[ ]; };
AtelieR = derive { name="AtelieR"; version="0.24"; type="cran"; sha256="0yialpmbsbx70gvps4r58xg9wvqcril8j8yd61lkkmz4b3195zai"; depends=[proto cairoDevice gWidgetsRGtk2 partitions ]; };
AtlasRDF = derive { name="AtlasRDF"; version="1.2.0"; type="bioc"; sha256="0cdan2739w7sbz503kqm3xyyizs4l1vi9i2a5jmxn6fb9nqgkar5"; depends=[hash SPARQL ]; };
AtmRay = derive { name="AtmRay"; version="1.31"; type="cran"; sha256="162078jd032i72sgaar9hqcnn1lh60ajcqpsz4l5ysxfkghcxlh8"; depends=[ ]; };
AutoSEARCH = derive { name="AutoSEARCH"; version="1.5"; type="cran"; sha256="1s2ldhxijd8n9ba78faik6gn4f07pdzksy0030pqyafxlr3v1qdj"; depends=[zoo lgarch ]; };
B2Z = derive { name="B2Z"; version="1.4"; type="cran"; sha256="0w7394vs883vb32gs6yhrc1kh5406rs851yb2gs8hqzxad1alvpn"; depends=[numDeriv coda mvtnorm ]; };
BAC = derive { name="BAC"; version="1.26.0"; type="bioc"; sha256="1km0d3k2qxqa0s1bf2hpic71rplh07b5y06i8qr3yj3nis23z6a2"; depends=[ ]; };
BACA = derive { name="BACA"; version="0.99.0"; type="cran"; sha256="19n6ajq6szpzwj36lfg7wrh2j3d3ikn13a1j3g2xvfy275qdmmm4"; depends=[RDAVIDWebService ggplot2 rJava ]; };
BACCO = derive { name="BACCO"; version="2.0-9"; type="cran"; sha256="0i1dnk0g3miyv3b60rzgjjm60180wxzv6v2q477r71q74b0v0r1y"; depends=[emulator calibrator approximator ]; };
BACprior = derive { name="BACprior"; version="2.0"; type="cran"; sha256="1z9dvjq4lr99yp6c99bcv6n5jiiwfddfz4izcpfnnyvagfgizr8p"; depends=[mvtnorm leaps boot ]; };
BADER = derive { name="BADER"; version="1.4.0"; type="bioc"; sha256="06k2dmh9dv9ng469cp67c2ld2mv7sqgynkwn368whqvvv8drc23g"; depends=[ ]; };
BAEssd = derive { name="BAEssd"; version="1.0.1"; type="cran"; sha256="04wkhcj4wm93hvmfnnzryswaylnxz5qsgnqky9lsx4jqhvg340l6"; depends=[mvtnorm ]; };
BAGS = derive { name="BAGS"; version="2.6.0"; type="bioc"; sha256="1553n2cslnvslcc09x8wb1jll5w24zbfpjj2fhwl1955fxhclfdm"; depends=[Biobase ]; };
BAMMtools = derive { name="BAMMtools"; version="2.0.5"; type="cran"; sha256="1xrhif8872w5rwiba5lc705162si3vflri2r6wj8n69qg979kvw0"; depends=[ape ]; };
BANFF = derive { name="BANFF"; version="0.3"; type="cran"; sha256="0z7hwplp12m8sypkndjkjkmanbh67h47k8j9wm60qg6nnyqry9np"; depends=[foreach doParallel DPpackage igraph mclust pscl tmvtnorm network coda ]; };
BANOVA = derive { name="BANOVA"; version="0.2"; type="cran"; sha256="1zgn9wxh4c89rris58hhj5fh37mmy8wjvligr02id7a1pcw177m3"; depends=[rjags runjags coda ]; };
BASIX = derive { name="BASIX"; version="1.1"; type="cran"; sha256="18dkvv1iwskfnlpl6xridcgqpalbbpm2616mvc3hfrc0b26v01id"; depends=[ ]; };
BAT = derive { name="BAT"; version="1.3.0"; type="cran"; sha256="0a8l3hzlgxyp604dg20qm9hvxl97dyh1lm0hj85p6s6nz0qwi8jy"; depends=[vegan spatstat nls2 ]; };
BAYSTAR = derive { name="BAYSTAR"; version="0.2-9"; type="cran"; sha256="0crillww1f1jvhjw639sf09lpc3wpzd69milah143gk9zlrkhmz2"; depends=[mvtnorm coda ]; };
BB = derive { name="BB"; version="2014.10-1"; type="cran"; sha256="1lig3vxhyxy8cnic5bczms8pajmdvwr2ijad1rkdndpglving7x0"; depends=[quadprog ]; };
BBEST = derive { name="BBEST"; version="0.1-4"; type="cran"; sha256="0yqsz97lljlydhphiy0fb7vwbqxpjzn5v0v665c39dlprxv3jg3b"; depends=[DEoptim wmtsa ggplot2 reshape2 shiny ]; };
BBMM = derive { name="BBMM"; version="3.0"; type="cran"; sha256="1cvv786wf1rr5906qg1di2krrv5jgw3dnyl8z2pvs8jyn0kb3fkj"; depends=[ ]; };
BBRecapture = derive { name="BBRecapture"; version="0.1"; type="cran"; sha256="05xzp5zjmkh0cyl47qfsz0l8drg8mimssybhycc4q69aif9scqxb"; depends=[HI locfit lme4 secr ]; };
BBmisc = derive { name="BBmisc"; version="1.9"; type="cran"; sha256="01ihbx6cfgqvz87kpy7yb9c7jlizdym3f0n16967x2imq73dazsb"; depends=[checkmate ]; };
BCA = derive { name="BCA"; version="0.9-3"; type="cran"; sha256="0ksd6b0ykydgdn33x29bwwqkrp23cvdj3imps0l6qs1p4465j5nf"; depends=[RcmdrMisc Rcmdr car rpart flexclust clv ]; };
BCBCSF = derive { name="BCBCSF"; version="1.0-0"; type="cran"; sha256="1ag8wz8a9vh1x4jgppimgchfs53rr6hbg5xzzr6k2h4bfsg7pmn3"; depends=[abind ]; };
BCDating = derive { name="BCDating"; version="0.9.7"; type="cran"; sha256="0z3a95sc481p0n33mhg7qlsf1jynbm1vbfds0n03bsjrwvqkzpb2"; depends=[ ]; };
BCE = derive { name="BCE"; version="2.1"; type="cran"; sha256="0dqp08pbq7r88yhvlwgzzk9dcdln7awlliy5mfq18j5jhiy7axiz"; depends=[FME limSolve Matrix ]; };
BCEA = derive { name="BCEA"; version="2.1-1"; type="cran"; sha256="1j2zb2icv5b6kwgbjzvidbzvciag89227ina6qcb2m4g6spyxcrm"; depends=[ ]; };
BCEs0 = derive { name="BCEs0"; version="1.1"; type="cran"; sha256="0q63bkmk0kk9p5d3xb0f5srzfrbr743isyw4v2h9ch5yyxizcizb"; depends=[ ]; };
BCRA = derive { name="BCRA"; version="1.0"; type="cran"; sha256="1bbxh1kf35h31c4k565kk6grdhp5pnn8vr3nr6vnp32dp4pc05zh"; depends=[ ]; };
BCRANK = derive { name="BCRANK"; version="1.28.0"; type="bioc"; sha256="1fwyfj619i8d32k69x5ngmc7f3j71986l762rhl6idb28krfgzb8"; depends=[Biostrings ]; };
BDgraph = derive { name="BDgraph"; version="2.18"; type="cran"; sha256="08cm4lk587ffrbr57s4krvwgb7fdpnd767g4adnadq0hv0r27xqq"; depends=[Matrix igraph ]; };
BEANSP = derive { name="BEANSP"; version="1.0"; type="cran"; sha256="0xcb81pk3iidb3dz9l4hm6cwx8hrbg5qz0sfi59yx2f7nsazr4xk"; depends=[ ]; };
BEAT = derive { name="BEAT"; version="1.4.0"; type="bioc"; sha256="1xqnabgbzd08f25wdvwbzi3f68ldvxbisriww9f32ysj5dhjl0mh"; depends=[GenomicRanges ShortRead Biostrings BSgenome ]; };
BEDASSLE = derive { name="BEDASSLE"; version="1.5"; type="cran"; sha256="1bz3lr0waly9vj9adwhmgs3lq7zjdkcbvm3y9rnn72qlrwmv5fbn"; depends=[MASS matrixcalc emdbook ]; };
BEQI2 = derive { name="BEQI2"; version="2.0-0"; type="cran"; sha256="19q29kkwww5hziffkm2yx7n4cpfcsyh0z4mljdcnjkwfp732sjig"; depends=[knitr markdown jsonlite xtable plyr reshape2 ]; };
BEST = derive { name="BEST"; version="0.2.2"; type="cran"; sha256="160lvrd0zjm1lr8llra6lyz3qsmqhn3bpdlmwingwfimbpb754rz"; depends=[rjags coda ]; };
BGPhazard = derive { name="BGPhazard"; version="1.2.2"; type="cran"; sha256="1v89pjigrjkin9vsf6sa0qhwxvn1a3dy2gqwq3sd9v6y0hrld6ng"; depends=[survival ]; };
BGSIMD = derive { name="BGSIMD"; version="1.0"; type="cran"; sha256="0xkr56z8l72wps7faqi5pna1nzalc3qj09jvd3v9zy8s7zf5r7w4"; depends=[ ]; };
BGmix = derive { name="BGmix"; version="1.26.0"; type="bioc"; sha256="1fc9dh23i1lab5b10z1xz6hb5ilgpif5ifg32qyppxz971cxrb2j"; depends=[KernSmooth ]; };
BH = derive { name="BH"; version="1.58.0-1"; type="cran"; sha256="17rnwyw9ib2pvm60iixzkbz7ff4fslpifp1nlx4czp42hy67kqpf"; depends=[ ]; };
BHC = derive { name="BHC"; version="1.18.0"; type="bioc"; sha256="16i2di8d71as8jh4lm185405xmc3kkmsmlrwkqr0rj59vlgghn46"; depends=[ ]; };
BHH2 = derive { name="BHH2"; version="2012.04-0"; type="cran"; sha256="10ixvjpkqamlddrndpnw5gsdm4gdhp693jdvc0f774ngmf32rbaa"; depends=[ ]; };
BHMSMAfMRI = derive { name="BHMSMAfMRI"; version="1.0"; type="cran"; sha256="0j5ivknsr441clgm0b95f2rz4pr29ixvw3dgsi8nb0ffh52dgz7q"; depends=[fmri AnalyzeFMRI wavethresh ]; };
BIFIEsurvey = derive { name="BIFIEsurvey"; version="1.2-6"; type="cran"; sha256="1fin5dr1xxr617i4ysfx39gaw6ygbcm4h7j1l38kqnfz18hn6xsq"; depends=[Rcpp miceadds mitools TAM Rcpp RcppArmadillo ]; };
BIOM_utils = derive { name="BIOM.utils"; version="0.9"; type="cran"; sha256="0xckhdvf15a62awfk9rjyqbi6rm7p4awxz7vg2m7bqiqzdll80p7"; depends=[ ]; };
BIPOD = derive { name="BIPOD"; version="0.2.1"; type="cran"; sha256="04r58gzk3hldbn115j9ik4bclzz5xb2i3x6b90m2w9sq7ymn3zg1"; depends=[Rcpp Rcpp RcppArmadillo ]; };
BLCOP = derive { name="BLCOP"; version="0.3.1"; type="cran"; sha256="1qfkljw5b1k4b5jd08hw6dsmvgr7vg3kjyib5s13q0mkxvclasym"; depends=[MASS quadprog RUnit timeSeries fBasics fMultivar fPortfolio ]; };
BLR = derive { name="BLR"; version="1.4"; type="cran"; sha256="0wy3c8nnzkdhwb5s1ygdid47hpdx72ryim36mnicrydy0msjivja"; depends=[SuppDists ]; };
BMA = derive { name="BMA"; version="3.18.1"; type="cran"; sha256="0ppcjjcrjrs18lp55hrs0ad7x052v57wd0zdfmvyydlsjbgnsx1p"; depends=[survival leaps robustbase inline ]; };
BMN = derive { name="BMN"; version="1.02"; type="cran"; sha256="12gyq01cn6a9ixqgki1ihx5jrp2gw6jdj7q210rb12xlvj3p6x7w"; depends=[ ]; };
BMS = derive { name="BMS"; version="0.3.3"; type="cran"; sha256="1yj9vi8jvhkwpcjkclf0zbah0dayridklpj65ay6r18fyf4crnd2"; depends=[ ]; };
BMhyd = derive { name="BMhyd"; version="1.2-2"; type="cran"; sha256="09gb1pq9y3gq9avpaqrlxdsm9iqsxpbnr0bg2mw1vkhc0d5z8zv7"; depends=[corpcor numDeriv ]; };
BNDataGenerator = derive { name="BNDataGenerator"; version="1.0"; type="cran"; sha256="17zi83jhpn9ygavkpr9haffvd4622sca18jzzxxxmfq0ilrj201g"; depends=[ ]; };
BNPTSclust = derive { name="BNPTSclust"; version="1.1"; type="cran"; sha256="1zmxwg6zn3nqqm1sw2n4pvq47mv7ygb4lf1c6yhn3xaf1rqmf26s"; depends=[mvtnorm MASS ]; };
BNPdensity = derive { name="BNPdensity"; version="2013.8"; type="cran"; sha256="1qlhav764ji289kcibbmqjj62mmxiw3zsiwjz1gkifzgpmzyar85"; depends=[ ]; };
BNSP = derive { name="BNSP"; version="1.0.2"; type="cran"; sha256="0hbrx02mybfrzfab5g7kwi6g68jdzj2dc69zxkn3hpyf4rqwbw4x"; depends=[ ]; };
BOG = derive { name="BOG"; version="2.0"; type="cran"; sha256="0lz5af813b67hfl4hzcydn58sjhgn5706n2h44g488bks928k940"; depends=[hash DIME ]; };
BOIN = derive { name="BOIN"; version="1.1"; type="cran"; sha256="1ffr6w9ml0mkffgg1vds8fmf8ww7rs375pxk2dqv9nlb9061m97r"; depends=[ ]; };
BRAIN = derive { name="BRAIN"; version="1.12.0"; type="bioc"; sha256="0284ww8gxzgvq6c1pkzr4lsrw6gv94ghl9myp4pihfgj26g4qcdm"; depends=[PolynomF Biostrings lattice ]; };
BRugs = derive { name="BRugs"; version="0.8-3"; type="cran"; sha256="1qjwm6qizg70nvpl5p2yx65ynghazchqw7d2iadhdjz7dd293sqi"; depends=[coda ]; };
BSDA = derive { name="BSDA"; version="1.01"; type="cran"; sha256="06mgmwwh56bj27wdya8ln9mr3v5gb6fcca7v9s256k64i19z12yi"; depends=[e1071 lattice ]; };
BSGS = derive { name="BSGS"; version="1.0"; type="cran"; sha256="11r7bx9ax84iv3gam02p1hg174ni3d3gv6yj64n0gp2gaj438hv7"; depends=[MASS pscl plyr ]; };
BSGW = derive { name="BSGW"; version="0.9"; type="cran"; sha256="0df5d0d0kfvwavxbxra36jjs9044q1szq1xm37dvh4wfvvv6igmb"; depends=[survival ]; };
BSSasymp = derive { name="BSSasymp"; version="1.1-0"; type="cran"; sha256="0z3abgvbpmwgzb6b6r5ys3msy97lfdg81p8d19c83aaa6hrngggn"; depends=[fICA JADE ]; };
BSagri = derive { name="BSagri"; version="0.1-8"; type="cran"; sha256="148pr4lkgdi4bwc9lavgj356nh240iazz28xklq14rw4gzhmz2k4"; depends=[gamlss multcomp MCPAN mvtnorm boot mratios ]; };
BSgenome = derive { name="BSgenome"; version="1.34.1"; type="bioc"; sha256="099jwllff6gkzs34jhhrnjljjm7wv2jdh1y01318pifgcrym5sw0"; depends=[BiocGenerics S4Vectors IRanges GenomeInfoDb GenomicRanges Biostrings rtracklayer BiocGenerics S4Vectors IRanges XVector GenomeInfoDb GenomicRanges Biostrings Rsamtools rtracklayer ]; };
BSquare = derive { name="BSquare"; version="1.1"; type="cran"; sha256="1s16307m5gj60nv4m652iisyqi3jw5pmnvar6f52rw1sypfp5n49"; depends=[quadprog quantreg VGAM ]; };
BTSPAS = derive { name="BTSPAS"; version="2014.0901"; type="cran"; sha256="0ankkhm38rvq06g0jnbvjbja4jv8lg21dsc0rxsy174b1i6vjhwi"; depends=[coda actuar rjags R2OpenBUGS ggplot2 plyr ]; };
BTYD = derive { name="BTYD"; version="2.4"; type="cran"; sha256="13szcsgsrd7mwc4f47xrfrmsm2sg5sf7pfm21ly4cbvqcz8m0147"; depends=[hypergeo Matrix ]; };
BUS = derive { name="BUS"; version="1.22.0"; type="bioc"; sha256="0l3rhvja8k8yawc2wz3xdk6m8ccvx024i2ckpwiimslnpb5qai3m"; depends=[minet infotheo ]; };
BVS = derive { name="BVS"; version="4.12.1"; type="cran"; sha256="111g61bpwh80v6gy44q087swcrnnnzdcibm22pzzi9jsfphy6l0c"; depends=[MASS msm haplo_stats ]; };
BaBooN = derive { name="BaBooN"; version="0.1-6"; type="cran"; sha256="1splid5mvyd04d1lxkq45md910ry6n516cph20j6vqfhla0arxjg"; depends=[MASS nnet ]; };
BaM = derive { name="BaM"; version="0.99"; type="cran"; sha256="1q04va2s876ydlmaalx63r520pfx1qzpjg6hbnl9pvn86b5grnf4"; depends=[bayesm coda MASS mice survival foreign nnet ]; };
BaSTA = derive { name="BaSTA"; version="1.9.3"; type="cran"; sha256="1jfki5lnsvd6fjrld2qp179lyzli61pi2308lkkl1h6vgp11zp2v"; depends=[msm ]; };
BalancedSampling = derive { name="BalancedSampling"; version="1.4"; type="cran"; sha256="0l8jxszd0j27kb58xrn7lvf52mhifqjd1w42cp4kdiax8c6s7421"; depends=[Rcpp Rcpp ]; };
BaseSpaceR = derive { name="BaseSpaceR"; version="1.10.0"; type="bioc"; sha256="0gsrs9aan1802hv8db5x1mfaawayrcw8zvdcf3ly7z9cavf1nyfs"; depends=[RCurl RJSONIO ]; };
Basic4Cseq = derive { name="Basic4Cseq"; version="1.2.0"; type="bioc"; sha256="0kpsvrwl1mphdraww8ha586a57j1iqz1dk7ms5x9rsddjkl7vqa6"; depends=[Biostrings ShortRead caTools GenomicRanges RCircos ]; };
BatchExperiments = derive { name="BatchExperiments"; version="1.4.1"; type="cran"; sha256="0fg7p0q6avc0kcwcd3z4q3akrr2mkrx2yf9zcd6hhz22l3x4aphz"; depends=[BatchJobs checkmate BBmisc DBI RSQLite plyr ]; };
BatchJobs = derive { name="BatchJobs"; version="1.6"; type="cran"; sha256="1kb99024jih5bycc226bl4jyvbbl1sg72q3m2wnlshl7s8p6vva0"; depends=[BBmisc brew checkmate DBI digest fail RSQLite sendmailR stringr ]; };
BayClone2 = derive { name="BayClone2"; version="1.1"; type="cran"; sha256="1wprdj22zh8fwqawcv4m2n2y7sqwh2f6m9b0cq0rp4ll774yz30i"; depends=[combinat ]; };
BayHap = derive { name="BayHap"; version="1.0.1"; type="cran"; sha256="0xqnl2cbf0pyjlpywyy0j4mwknfn8msz4s719dsri3r7hvn9m6kd"; depends=[boa ]; };
BayHaz = derive { name="BayHaz"; version="0.1-3"; type="cran"; sha256="08ilghlkgyma5758yw7mdgqycqcillqmx73knzzdlg2kzc77dvg6"; depends=[ ]; };
BaySIC = derive { name="BaySIC"; version="1.0"; type="cran"; sha256="023ji6q1nvksmhp3ny8ad39xxccc0a1rv9iaiaagwavgzzc0pjd9"; depends=[rjags fields poibin ]; };
BayesBridge = derive { name="BayesBridge"; version="0.6"; type="cran"; sha256="1j03m465pwq0lhbrfvddjglrzs6px7bc89yvfzj776amm7myqd0l"; depends=[ ]; };
BayesCR = derive { name="BayesCR"; version="2.0"; type="cran"; sha256="0cafind5vz81ryw1c7324hyfc6922fsxmjnvddb4mrhis54id2r4"; depends=[mvtnorm Rlab truncdist mnormt rootSolve ]; };
BayesComm = derive { name="BayesComm"; version="0.1-0"; type="cran"; sha256="17hnq4z451g2j3p73awllihhwsdy3grh6ki3qy9bkr064wvzbvcj"; depends=[Rcpp RcppArmadillo coda Rcpp RcppArmadillo ]; };
BayesDA = derive { name="BayesDA"; version="2012.04-1"; type="cran"; sha256="0fp27cmhw8dsxr4mc1flm6qh907476kph8ch2889g9p31xm1psjc"; depends=[ ]; };
BayesFactor = derive { name="BayesFactor"; version="0.9.11-1"; type="cran"; sha256="0vq656q38vlf0ba8g23psk8as1y48y6s8yrvqrppbjx5d9wlm9wv"; depends=[coda Matrix pbapply mvtnorm stringr gtools MatrixModels Rcpp Rcpp RcppEigen ]; };
BayesGESM = derive { name="BayesGESM"; version="1.3"; type="cran"; sha256="0lw593hqava5bhr8nfbh3qw63ilfr06zh58p2rw3nnv1ldrrzncv"; depends=[truncdist GIGrvg normalp Formula ]; };
BayesLCA = derive { name="BayesLCA"; version="1.7"; type="cran"; sha256="0lsqgjqal9092v1wr07p8g5cqm24k2d80sp7hlr7r1xknakmm1b6"; depends=[e1071 coda fields nlme MCMCpack ]; };
BayesLogit = derive { name="BayesLogit"; version="0.5.1"; type="cran"; sha256="0nr215wzhqlfi32617mmqb6i3w5x1kh5fiy68k0xzdqjsyjr65m0"; depends=[ ]; };
BayesMed = derive { name="BayesMed"; version="1.0.1"; type="cran"; sha256="1ysc7sh0drqxbisi2dz6gj4jlw6qsd879bbhr5pra7nxgmk4h650"; depends=[R2jags QRM polspline MCMCpack ]; };
BayesMixSurv = derive { name="BayesMixSurv"; version="0.9"; type="cran"; sha256="0hqkqpzk21d2zh7pyn042w1s51wyszkmam0rwzgy0i9i51zjxwvz"; depends=[survival ]; };
BayesNI = derive { name="BayesNI"; version="0.1"; type="cran"; sha256="0zvr6rkb5zxgl53xby69d0j3yrfnlcmac6kwkxz77q5616w9dwq0"; depends=[ ]; };
BayesPeak = derive { name="BayesPeak"; version="1.18.2"; type="bioc"; sha256="16ndpxlwgpzhh7c9kmv2pvlan0ida1zzcflzvnq7sggynfghff2j"; depends=[IRanges IRanges ]; };
BayesSAE = derive { name="BayesSAE"; version="1.0-1"; type="cran"; sha256="09s7f472by689b2b0gahnkhyjriizpsx6r5qa95nf3f4bfqi2cpf"; depends=[Formula coda lattice ]; };
BayesSingleSub = derive { name="BayesSingleSub"; version="0.6.2"; type="cran"; sha256="0hgmyhg4mpxx7k91hbfa9h3533mqyn9rz4kl9kb30cc9g7g0m045"; depends=[coda mvtnorm MCMCpack ]; };
BayesSummaryStatLM = derive { name="BayesSummaryStatLM"; version="1.0-1"; type="cran"; sha256="05mlgyi4fglvjkpqyw3vcjpipqllx37svcb20c1mrsa46m6fm4s7"; depends=[mvnfast ff ]; };
BayesTree = derive { name="BayesTree"; version="0.3-1.2"; type="cran"; sha256="1if6x7xxs8pv37c3w4yij17gxnf63k83lawzlmd2644w1i6p7sw1"; depends=[nnet ]; };
BayesValidate = derive { name="BayesValidate"; version="0.0"; type="cran"; sha256="1gli65avpkb90asx92l1yjbwaxcsyb920idyjwgd2sl2b3l657ly"; depends=[ ]; };
BayesVarSel = derive { name="BayesVarSel"; version="1.6.1"; type="cran"; sha256="1pmhbyvsq4k2kqnbnxm089qxil0ac61msa204pck6r0b360pmpnh"; depends=[MASS ]; };
BayesX = derive { name="BayesX"; version="0.2-9"; type="cran"; sha256="0p170m8zkaspiah1fdyql9lj9yqg6sl525blzq7wwgx5wx4rvncs"; depends=[shapefiles sp maptools colorspace coda ]; };
BayesXsrc = derive { name="BayesXsrc"; version="2.1-2"; type="cran"; sha256="114804f6maak5dmwzw4cbigjcdw7c6sgx48af35yrvkspi1gsz3b"; depends=[ ]; };
BayesianAnimalTracker = derive { name="BayesianAnimalTracker"; version="1.2"; type="cran"; sha256="1pgjijqznfdpvw296h5vksnxgspxs7qhy6s84ww7abnlhg59bz5s"; depends=[TrackReconstruction ]; };
Bayesianbetareg = derive { name="Bayesianbetareg"; version="1.2"; type="cran"; sha256="0imsz2761ngbnap0vnxks9527la51m5g8gkkn1vrgwis43i6qcgs"; depends=[mvtnorm betareg ]; };
Bayesthresh = derive { name="Bayesthresh"; version="2.0.1"; type="cran"; sha256="0w26h1ragqcg1i4h7c2y6vd8fig2jb2zrnvvchgg5z2hg9qdplsf"; depends=[lme4 MASS VGAM mvtnorm matrixcalc coda ]; };
BaylorEdPsych = derive { name="BaylorEdPsych"; version="0.5"; type="cran"; sha256="1kq6nvzdqwawygp7k62lw5hyccsj81jg82hq60yidgxnmmnnf7y2"; depends=[ ]; };
BcDiag = derive { name="BcDiag"; version="1.0.8"; type="cran"; sha256="1x9rkr96dgxp88z9qaw72ikcdmdlxnj8vjn3bfv0q27sfyxwb3a5"; depends=[fabia ]; };
Bchron = derive { name="Bchron"; version="4.1.1"; type="cran"; sha256="0dnfz7xpmbygyarh9ai9x3xfsqiizi0zhnxm8bmkvqyb8h7zpghb"; depends=[inline hdrcde MASS ellipse coda mclust ]; };
Bclim = derive { name="Bclim"; version="2.3.1"; type="cran"; sha256="160c9v83bpik73yjj45lr8sdgl8v4ymlkqw424ncc3lficyhvfjg"; depends=[MASS mclust hdrcde statmod ]; };
BeadDataPackR = derive { name="BeadDataPackR"; version="1.18.0"; type="bioc"; sha256="0z7s1v2xac3k52d1cyir8h99yf3h494s104z9slvd679kn7r1288"; depends=[ ]; };
Benchmarking = derive { name="Benchmarking"; version="0.24"; type="cran"; sha256="18gx8cwip1c03p37apyr9z89p117bz439vfgx91gxbbg1scc8bfp"; depends=[lpSolveAPI ucminf ]; };
BenfordTests = derive { name="BenfordTests"; version="1.1.1"; type="cran"; sha256="12xzc4gq4h7p18ypbkybrzjj2qh71rgd7nzznij36yv7n6h21mlw"; depends=[ ]; };
Bergm = derive { name="Bergm"; version="3.0.1"; type="cran"; sha256="1ngxqpagf8snnwdm82bg8yxbf1zpzd99g32fhw9l4gjx77kpkhl2"; depends=[ergm network coda mvtnorm ]; };
BerlinData = derive { name="BerlinData"; version="1.0.1"; type="cran"; sha256="1shhx4pisi139sc0siawa7gp9psfgxm58qijg5m65nihv7spki75"; depends=[XML stringr rjson ]; };
Bessel = derive { name="Bessel"; version="0.5-5"; type="cran"; sha256="1apcpwqgnbsn544x2mfjkp4136xn33pijazmbzas7lr14syl5a6b"; depends=[Rmpfr ]; };
Bhat = derive { name="Bhat"; version="0.9-10"; type="cran"; sha256="1vg4pzrk3y0dk1kbf80mxsbz9ammkysh6bn26maiplmjagbj954v"; depends=[ ]; };
BiDimRegression = derive { name="BiDimRegression"; version="1.0.6"; type="cran"; sha256="1kgrk4xanvxqdq619ha08wwplmsn2xqygx4dziagx48iqfpp1lxj"; depends=[nlme ]; };
BiGGR = derive { name="BiGGR"; version="1.2.0"; type="bioc"; sha256="18brc57np4074fckcv3h1ik6zaw18r82c8z7kmna4f66396i6v1g"; depends=[rsbml hyperdraw LIM hypergraph ]; };
BiRewire = derive { name="BiRewire"; version="1.8.0"; type="bioc"; sha256="1bdilpbz0z1ppbg5729f0wi8xvr0j96q9q1mdqs7agnfc82yiwhq"; depends=[igraph ]; };
BiSEp = derive { name="BiSEp"; version="2.0.1"; type="cran"; sha256="15sn9kxs0mb98kclfpif90c808a1365gdj2j332sxi07f64pb87q"; depends=[mclust GOSemSim AnnotationDbi ]; };
BiSeq = derive { name="BiSeq"; version="1.6.0"; type="bioc"; sha256="0rsf9kii79qjzabahpvbmmkyxc0605z325pkkdzrp3062fwafhm9"; depends=[S4Vectors IRanges GenomicRanges Formula BiocGenerics Biobase S4Vectors IRanges GenomicRanges rtracklayer betareg lokern Formula globaltest ]; };
BiasedUrn = derive { name="BiasedUrn"; version="1.06.1"; type="cran"; sha256="1ra9fmymm97a2b8jsrsi98cjnnxc478zq51lx7a5pgafprcwcgkg"; depends=[ ]; };
BicARE = derive { name="BicARE"; version="1.24.0"; type="bioc"; sha256="0945kwimcbb7asp1jsadl97glyw26a0wqrymb8qb1zn5r6scplbv"; depends=[Biobase multtest GSEABase ]; };
BigTSP = derive { name="BigTSP"; version="1.0"; type="cran"; sha256="1jdpa8rcnrhzn0hilb422pdxprdljrzpgr4f26668c1vv0kd6k4v"; depends=[glmnet tree randomForest gbm ]; };
BinNonNor = derive { name="BinNonNor"; version="1.2"; type="cran"; sha256="15bzpi2q2428661v8z9izp942ihffgq8dgh4fsnzllvdrpqcyc41"; depends=[BB corpcor mvtnorm Matrix ]; };
BinNor = derive { name="BinNor"; version="2.0"; type="cran"; sha256="0c1qy93ccgzg8g25wm1j4ninsa0ck4y3jjh25za92w070cqhkd8m"; depends=[mvtnorm corpcor psych Matrix ]; };
BinOrdNonNor = derive { name="BinOrdNonNor"; version="1.0"; type="cran"; sha256="1x231xxdiyp6nwj2dx9w1shi5w6mdyzg43g5zc4r2bpvzccgj0l0"; depends=[GenOrd OrdNor BB corpcor Matrix mvtnorm ]; };
Binarize = derive { name="Binarize"; version="1.0"; type="cran"; sha256="1yfr87s1hgjhc8ah81sfrgr1hpp0vd5clqayrz1i698h1c34amkh"; depends=[diptest ]; };
BinaryEPPM = derive { name="BinaryEPPM"; version="1.0"; type="cran"; sha256="088yg07966g09gv9hznhwfdka4yk0c9j0viy9x4ldmhxl9w9scv5"; depends=[Formula expm numDeriv ]; };
BioGeoBEARS = derive { name="BioGeoBEARS"; version="0.2.1"; type="cran"; sha256="0wyddc5ma47ljpqipfkwsgddp12m9iy4kqwwgklyhf0rqia56b1h"; depends=[rexpokit cladoRcpp ape phylobase optimx FD xtable plotrix gdata ]; };
BioMVCClass = derive { name="BioMVCClass"; version="1.34.0"; type="bioc"; sha256="0yzpwynxyxqfjhggkq1jmfc86bxzfnzy4pc7b78q6flkkz025d0h"; depends=[MVCClass Biobase graph Rgraphviz ]; };
BioMark = derive { name="BioMark"; version="0.4.2"; type="cran"; sha256="17r4q2migmdk2vqfbr69q07cgdzwpjgs3ijmnm42srs5d3brw8cr"; depends=[pls glmnet MASS st ]; };
BioNet = derive { name="BioNet"; version="1.26.1"; type="bioc"; sha256="0cwgjddx9zdbfwjcsx7qlzi2yw8jgi6xl69y1i87b00smi0dj0in"; depends=[Biobase graph RBGL igraph AnnotationDbi ]; };
BioPhysConnectoR = derive { name="BioPhysConnectoR"; version="1.6-10"; type="cran"; sha256="1cc22knlvbvwsrz2a7syk2ampm1ljc44ykv5wf0szhnh75pxg13l"; depends=[snow matrixcalc ]; };
BioSeqClass = derive { name="BioSeqClass"; version="1.24.0"; type="bioc"; sha256="13ry3kwlkpk5gr6rjkhip1hhd6b6b02v9hw30wz9qcwfai8fxklv"; depends=[scatterplot3d Biostrings ipred e1071 klaR randomForest class tree nnet rpart party foreign Biobase ]; };
BioStatR = derive { name="BioStatR"; version="2.0.0"; type="cran"; sha256="1k3z337lj8r06xgrqgi5h67hhkz2s5hggj6dhcciq26i1nzafsw6"; depends=[ggplot2 ]; };
Biobase = derive { name="Biobase"; version="2.26.0"; type="bioc"; sha256="170vaqkpb2ycmydxh8kl0g7f0wmy5kks43sx4adrcbbnawza50f4"; depends=[BiocGenerics ]; };
BiocCaseStudies = derive { name="BiocCaseStudies"; version="1.28.0"; type="bioc"; sha256="01xlfl5klhiwnn8cmp8jqrsr54c4d9s54flf8rjr5vb6n0gnfnwy"; depends=[Biobase ]; };
BiocCheck = derive { name="BiocCheck"; version="1.2.3"; type="bioc"; sha256="0blcll935flkn9019mxzg0g1146z3h6lqy52kwq53alwqbqllxw0"; depends=[biocViews BiocInstaller graph devtools httr knitr optparse codetools ]; };
BiocGenerics = derive { name="BiocGenerics"; version="0.12.1"; type="bioc"; sha256="0xszm3ppkw1mi509bz0vdnlabw3jp83s4lnjdpxbb9s65k3z4lfl"; depends=[ ]; };
BiocInstaller = derive { name="BiocInstaller"; version="1.16.5"; type="bioc"; sha256="1s9qvvr4cgxysvz1rr9bnnalmcc4jhbabfl3j7zcx77pdh14wkqb"; depends=[ ]; };
BiocParallel = derive { name="BiocParallel"; version="1.0.3"; type="bioc"; sha256="07zpmdy2yrk4rn20jjak2vdgab80xwlx98rw1zxglyk3hn17r71k"; depends=[foreach BatchJobs BBmisc BiocGenerics ]; };
BiocStyle = derive { name="BiocStyle"; version="1.4.1"; type="bioc"; sha256="0s4518fd29ym9ql0pj9p5grym0ykddc85yp9rkpip9g3i9cy9izp"; depends=[ ]; };
Biodem = derive { name="Biodem"; version="0.3"; type="cran"; sha256="0wfyypr46awki2nrvhcjwacmaxrr2wvhdv9hddnf10msssflvshc"; depends=[ ]; };
BiodiversityR = derive { name="BiodiversityR"; version="2.5-2"; type="cran"; sha256="0l23nlibv7wjmkv1jnssaab3iwm2i5wrkzjji2x9rr5131aj82gn"; depends=[vegan Rcmdr ]; };
Biograph = derive { name="Biograph"; version="2.0.4"; type="cran"; sha256="1mik5yvbi28xnyzha8p3xjaa064x29wgn18yx766wha7djxxr353"; depends=[etm msm Epi lubridate reshape plyr survival mstate ggplot2 ]; };
Biostrings = derive { name="Biostrings"; version="2.34.1"; type="bioc"; sha256="1kfh3gabgfxnksadxd31qxv46j59l0gmfnxj197gmfhxxgwgh2mh"; depends=[BiocGenerics S4Vectors IRanges XVector BiocGenerics IRanges XVector zlibbioc S4Vectors IRanges XVector ]; };
BitSeq = derive { name="BitSeq"; version="1.10.0"; type="bioc"; sha256="1g5znh2hyvc6ywzhqdr2f2wl81842wy9xsndmx7xswy6vkvalyc4"; depends=[Rsamtools zlibbioc S4Vectors IRanges Rsamtools zlibbioc ]; };
BivarP = derive { name="BivarP"; version="1.0"; type="cran"; sha256="08f7sphylaj3kximy1avaf29hxj2n800adsnssh01p9bcxnzb2i4"; depends=[dfoptim survival copula ]; };
BlakerCI = derive { name="BlakerCI"; version="1.0-4"; type="cran"; sha256="1sa9qq5frjjcw46p3ankn7v3gj0gwn9lww6jacz8flf5qpplhn4l"; depends=[ ]; };
BlandAltmanLeh = derive { name="BlandAltmanLeh"; version="0.1.0"; type="cran"; sha256="0y35zkxiallp4x09646qb8wj9bayh7mpnjg43qmzhxkm7l95b78r"; depends=[ ]; };
Blaunet = derive { name="Blaunet"; version="1.0.1"; type="cran"; sha256="1qcp5wag4081pcjg5paryxz3hk3rqql15v891ppqc1injni7rljz"; depends=[network ]; };
BlockMessage = derive { name="BlockMessage"; version="1.0"; type="cran"; sha256="1jrcb9j1ikbpw098gqbcj29yhffa15xav90y6vpginmhbfpwlbf4"; depends=[ ]; };
Bmix = derive { name="Bmix"; version="0.5"; type="cran"; sha256="0cwp0z5841yqndpln8vc7wkbc8jgdwf0a772x4rgpihvg1g9qz5j"; depends=[mvtnorm ]; };
BoSSA = derive { name="BoSSA"; version="1.2"; type="cran"; sha256="191hq0np9iadks4sflg360k64xnz8j956y30pqzwciinb4hgq1nr"; depends=[ape SoDA ]; };
Bolstad = derive { name="Bolstad"; version="0.2-25"; type="cran"; sha256="1dj0ib3jndnsdx2cqsy0dz54szdx1xq3r2xqnxzk4ysng6svdym8"; depends=[ ]; };
Bolstad2 = derive { name="Bolstad2"; version="1.0-28"; type="cran"; sha256="08cfadvl9jl9278ilsf8cm2i2a3i8zsa2f3vjzw2nlv85fwi2c7v"; depends=[ ]; };
BoolNet = derive { name="BoolNet"; version="2.1.1"; type="cran"; sha256="0g8f2pv8s8kj84qcp2fy3h8p91ja6ap2dgxkdaf5kjv7r3hfddg0"; depends=[igraph XML ]; };
Boom = derive { name="Boom"; version="0.2"; type="cran"; sha256="0myb8pihjz25y9sj8b844jrkkd2x7zxyr3pg212cgkx9arby0afn"; depends=[MASS BH ]; };
BoomSpikeSlab = derive { name="BoomSpikeSlab"; version="0.5.2"; type="cran"; sha256="0n7kf0nkznsaajx4z4bkzjx99b56mjpd8543jc1dq6ki81yxlr1v"; depends=[Boom BH ]; };
BootPR = derive { name="BootPR"; version="0.60"; type="cran"; sha256="03zw7hz4gyhp6iq3sb03pc5k2fhvrpkspzi22zks25s1l7mq51bi"; depends=[ ]; };
Boruta = derive { name="Boruta"; version="4.0.0"; type="cran"; sha256="1r7bl4ab6swhks9cijhqn9gdhp2vjfhwb65fi5rzz0yvzxx97xi8"; depends=[randomForest rFerns ]; };
BradleyTerry2 = derive { name="BradleyTerry2"; version="1.0-6"; type="cran"; sha256="1080q7fw4yfl2y0jh3w2xz342i5yhhhavq40i3902bsmjj8g531d"; depends=[lme4 brglm gtools ]; };
BrailleR = derive { name="BrailleR"; version="0.18-1"; type="cran"; sha256="0v5y5v6b52kh4146bbhwpsnb5p435dk5nhv28sxi7r89fixbc20q"; depends=[nortest xtable moments knitr gridGraphics gridSVG ]; };
BrainStars = derive { name="BrainStars"; version="1.10.0"; type="bioc"; sha256="17jb1n0ndh05gvwh0sjcqmn17i54p9q1g3520zhpqp7d2wz8diyi"; depends=[RCurl Biobase RJSONIO Biobase ]; };
BridgeDbR = derive { name="BridgeDbR"; version="1.0.0"; type="bioc"; sha256="1m3gq4hssvaazgv966lwv0fh4b8hsxxipbfzmf6jrwlwkz1snvc0"; depends=[rJava RCurl ]; };
Brobdingnag = derive { name="Brobdingnag"; version="1.2-4"; type="cran"; sha256="1saxa492f32f511vw0ys55z3kgyzhswxkylw9k9ccl87zgbszf3a"; depends=[ ]; };
Brq = derive { name="Brq"; version="1.0"; type="cran"; sha256="0m01qw0mh9za1gx1vkbyvwny4k5fvmvs9dbp0504q8jqfqf4l1vj"; depends=[quantreg truncnorm ]; };
BsMD = derive { name="BsMD"; version="2013.0718"; type="cran"; sha256="1yvazqlbmm221r7nkhrhi309gkk6vx7ji5xlvf07klya2zg20gcj"; depends=[ ]; };
BufferedMatrix = derive { name="BufferedMatrix"; version="1.30.0"; type="bioc"; sha256="1c8asd6k9wkpdkmy5pgicr86kgp2y830w3zmha47jjsrni71fm2v"; depends=[ ]; };
BufferedMatrixMethods = derive { name="BufferedMatrixMethods"; version="1.30.0"; type="bioc"; sha256="0aih4b3is6qhb5ac3s2mmcmvmbscb3cv5kpgp7cn5zzsd6gqan34"; depends=[BufferedMatrix BufferedMatrix ]; };
BurStFin = derive { name="BurStFin"; version="1.02"; type="cran"; sha256="16w2s0bg73swdps9r0i8lwvf1najiqyx7w7f91xrsfhmnqkkjzka"; depends=[ ]; };
BurStMisc = derive { name="BurStMisc"; version="1.00"; type="cran"; sha256="0718a1p7iiqkfhhmnzxggc6hd8sm847n1qh7rfbdl8b0k0bgvnj0"; depends=[ ]; };
C50 = derive { name="C50"; version="0.1.0-24"; type="cran"; sha256="17ay0rbm2cg2s27mh09xg0knk7idx6f761sc849m41vsc6pfhzk1"; depends=[partykit ]; };
CADFtest = derive { name="CADFtest"; version="0.3-2"; type="cran"; sha256="00nsnzgjwkif7mbrw7msswjxhi9aysjdx3qg3i4mdmj1rmp7c4dc"; depends=[dynlm sandwich tseries urca ]; };
CAFE = derive { name="CAFE"; version="1.2.0"; type="bioc"; sha256="0h3gy904dgjggk84cjmx8k8x9482fx5cvvy8hcc39z97p39ar5wn"; depends=[biovizBase GenomicRanges IRanges ggbio affy ggplot2 annotate gridExtra Biobase ]; };
CAGEr = derive { name="CAGEr"; version="1.10.3"; type="bioc"; sha256="0dja1xszwy8nmn6id7yjh13x7myl36104y4kb4qs5fdc955ir93a"; depends=[BSgenome Rsamtools GenomicRanges IRanges data_table beanplot rtracklayer som VGAM ]; };
CALIB = derive { name="CALIB"; version="1.32.0"; type="bioc"; sha256="17hm37xklsmizmwyaak3i657ly60afpl01zhrvd5jcp1z8p315rj"; depends=[limma limma ]; };
CALIBERrfimpute = derive { name="CALIBERrfimpute"; version="0.1-6"; type="cran"; sha256="036nwnday098mawc9qlgl3jjjcdjnja1immg6xkq27hvv2xfbz82"; depends=[mice mvtnorm randomForest ]; };
CALINE3 = derive { name="CALINE3"; version="1.0-2"; type="cran"; sha256="07w1kb7wqdi1qslpvpmqcmq6da4h7sgwv3aih4brdprym61c3rkm"; depends=[ ]; };
CAM = derive { name="CAM"; version="1.0"; type="cran"; sha256="07mmrz6j8cm6zgaw2zcxgkxb7abd651kb80526r271snjgvpr5bl"; depends=[glmnet mboost Matrix mgcv ]; };
CAMAN = derive { name="CAMAN"; version="0.72"; type="cran"; sha256="10qikirv73d03ssg3sb6w3ih92ms5726b5lqw3x7r5rpbl9179rh"; depends=[sp mvtnorm ]; };
CAMERA = derive { name="CAMERA"; version="1.22.0"; type="bioc"; sha256="17yv2q67xcdmnwlxd5yd3z3gq4rksbazzjk44g6caz8k1scl5yj6"; depends=[Biobase xcms igraph xcms RBGL graph Hmisc igraph ]; };
CARBayes = derive { name="CARBayes"; version="4.1"; type="cran"; sha256="0g4b44p3ybb92wrm42ws8yrrdzmxk454w6a3w20fbhfc2zprjilz"; depends=[MASS Rcpp CARBayesdata coda sp spam truncdist Rcpp ]; };
CARBayesST = derive { name="CARBayesST"; version="1.1"; type="cran"; sha256="03vp6qajag0ak4lcn0ddyxri3ndiwsc4yxi6ym5lr2v6kv674wl6"; depends=[Rcpp spam truncdist coda Rcpp ]; };
CARBayesdata = derive { name="CARBayesdata"; version="1.0"; type="cran"; sha256="19dhgkqpdcq1y866arb3qm7wbl348w66yl85kwajkmqgplx2pvaq"; depends=[sp shapefiles ]; };
CARE1 = derive { name="CARE1"; version="1.1.0"; type="cran"; sha256="1zwl4zv60mrzlzfgd7n37jjlr0j918a8ji36n94s5xw8wwipiznw"; depends=[ ]; };
CARLIT = derive { name="CARLIT"; version="1.0"; type="cran"; sha256="04kpjfps4ydf8fj75isqp16g1asdsyf8nszhbfkpw1zxkrmiksyp"; depends=[ ]; };
CARramps = derive { name="CARramps"; version="0.1.2"; type="cran"; sha256="097xxvql6qglk6x4yi7xsvr15n0yj21613zv003z0mhgvqr1n5vf"; depends=[ ]; };
CARrampsOcl = derive { name="CARrampsOcl"; version="0.1.4"; type="cran"; sha256="1sdrir7h7xl1imipm9b71vca062dxqsqd8mg3w9f3s80x2aghxl8"; depends=[OpenCL fields ]; };
CAvariants = derive { name="CAvariants"; version="2.1"; type="cran"; sha256="105bj6r6i7xz95lr5g4ld9xfgyq1dn15lw117jivx76z3k2zpi59"; depends=[ ]; };
CBPS = derive { name="CBPS"; version="0.9"; type="cran"; sha256="08pc50fndpx6xvxkvqdklrp6v98w2j387frq08nlglcbfjk22i6x"; depends=[MASS MatchIt nnet numDeriv ]; };
CCA = derive { name="CCA"; version="1.2"; type="cran"; sha256="00zy6bln22qshhlll0y0adnvb8wa1f7famqyws71b6pcnwxki5ha"; depends=[fda fields ]; };
CCAGFA = derive { name="CCAGFA"; version="1.0.4"; type="cran"; sha256="159gh0mx4da1gpqf5swyhg8ksclpi59p4zmzsiq5ywfpy5cjr71z"; depends=[ ]; };
CCM = derive { name="CCM"; version="1.1"; type="cran"; sha256="0gya1109w61ia6cq3jg2z5gmvjkv9xg71l2rxhrrf6bx1c2nsrq6"; depends=[ ]; };
CCP = derive { name="CCP"; version="1.1"; type="cran"; sha256="07jxh33pb8llk1gx4rc80ppi35z8y1gwsf19zrca9w91aahcs8cx"; depends=[ ]; };
CCTpack = derive { name="CCTpack"; version="1.4"; type="cran"; sha256="09s2ysqsz158lrah44rwvs3nlhyqlvwcj6aar2p79flf4xxdwsvk"; depends=[R2jags rjags psych mvtnorm polycor MASS ]; };
CCpop = derive { name="CCpop"; version="1.0"; type="cran"; sha256="10kgw3b98r0kn74w89znq6skgk8b3ldil6yb0hn5rlcf6lazjzca"; depends=[nloptr ]; };
CDFt = derive { name="CDFt"; version="1.0.1"; type="cran"; sha256="0sc8ga48l3vvqfjq3ak5j1y27hgr5dw61wp0w5jpwzjz22jzqbap"; depends=[ ]; };
CDLasso = derive { name="CDLasso"; version="1.1"; type="cran"; sha256="0n699y18ia2yqpk78mszgggy7jz5dybwsi2y56kdyblddcmz1yv7"; depends=[ ]; };
CDM = derive { name="CDM"; version="4.2-12"; type="cran"; sha256="18ix2l3mlk9vzv7iks16mdi4h0194bfjcvsxmya5219dfmw5vqfz"; depends=[mvtnorm Rcpp psych MASS polycor sfsmisc plyr WrightMap lattice Rcpp RcppArmadillo ]; };
CDNmoney = derive { name="CDNmoney"; version="2012.4-2"; type="cran"; sha256="1isbvfq0lygs75y1hn3klqms8q7g1xbkcr8fgj75h1c99d4khvm6"; depends=[ ]; };
CDVine = derive { name="CDVine"; version="1.2"; type="cran"; sha256="1qfjbzdfz2dydkfw3b0jjma4csn62177j5sgzh6rszf0nifsi97g"; depends=[MASS mvtnorm igraph ]; };
CEC = derive { name="CEC"; version="0.9.3"; type="cran"; sha256="05cgd281p0hxkni4nqb0d4l71aah3f3s6jxdnzgw8lqxaxz4194i"; depends=[ ]; };
CEGO = derive { name="CEGO"; version="1.0.1108"; type="cran"; sha256="0klj9g656rnfqhj36r4v8y6mv4cazlzyrvws6yqa0r61abfbxy68"; depends=[MASS DEoptim ]; };
CEoptim = derive { name="CEoptim"; version="1.0"; type="cran"; sha256="1mrv2vhrwd7hvw67ys08nilbn3f1fp3bsvlbc8ggwyl3lw957fi9"; depends=[MASS msm ]; };
CFAssay = derive { name="CFAssay"; version="1.0.0"; type="bioc"; sha256="1j1x06fn516454d6drfmmznazifbpxnkna1j2q64lcjc0rlrwl6y"; depends=[ ]; };
CFC = derive { name="CFC"; version="0.7.0"; type="cran"; sha256="1sl0gsx4gcbcf7bc6xf84g3lx58zraj2h51riacch2iyxl1ygspq"; depends=[abind ]; };
CGEN = derive { name="CGEN"; version="3.0.1"; type="bioc"; sha256="1w06wk31wycbvs4xmb5qxxv2frprfa7rlxv5g3h0pbpi79w1s6f7"; depends=[survival mvtnorm ]; };
CGHbase = derive { name="CGHbase"; version="1.26.0"; type="bioc"; sha256="16i8x78wmph5pi9bbijcblnrmq9d89y9wp44xisq12bd4n4f6a7r"; depends=[Biobase marray ]; };
CGHcall = derive { name="CGHcall"; version="2.28.0"; type="bioc"; sha256="0v11d5y6l520jvrp3srbwwcl8llw5wf8yc2kmld5rznxbmbca70j"; depends=[impute DNAcopy Biobase CGHbase snowfall ]; };
CGHnormaliter = derive { name="CGHnormaliter"; version="1.20.0"; type="bioc"; sha256="1dkqp42a3nb7pxn15s893n0qh8jjw7scnhxh15ddjq04wa4wcprw"; depends=[CGHcall CGHbase Biobase CGHbase CGHcall ]; };
CGHregions = derive { name="CGHregions"; version="1.24.0"; type="bioc"; sha256="0c4df9sn1yx3zw0jpccxbbhnk9466zy2alkmrm3sk1cnfy867263"; depends=[Biobase CGHbase ]; };
CGP = derive { name="CGP"; version="2.0-2"; type="cran"; sha256="1mggv3c8525vbdfdc3yhpp4vm4zzdvbwyxim29zj0lzwjf9fkgqk"; depends=[ ]; };
CHAT = derive { name="CHAT"; version="1.1"; type="cran"; sha256="1hl4xr4lkvb7r36gcbgax6ipqc3rsvn1r03w7fk9gf9bbyg7bkhg"; depends=[DNAcopy DPpackage ]; };
CHCN = derive { name="CHCN"; version="1.5"; type="cran"; sha256="18n8f002w0p0l1s5mrrsyjddn10kdbb6b7jx1v9h1m81ifdbv0xb"; depends=[bitops RCurl ]; };
CHNOSZ = derive { name="CHNOSZ"; version="1.0.5"; type="cran"; sha256="19kh4fnf6myn072hrjcibw7bhm4qbjp039vdqjq1qx3bmz28an1k"; depends=[ ]; };
CHsharp = derive { name="CHsharp"; version="0.3"; type="cran"; sha256="0aa9v6yih6qmqsmc8zsl8k1wqsp3sp2bfwri3d37k06vfj7gwbh0"; depends=[scatterplot3d KernSmooth ]; };
CIDnetworks = derive { name="CIDnetworks"; version="0.8.1"; type="cran"; sha256="0k75mdlvm0rccag42pnhsni1kihpqsnj5bsrwlj7hdf7n8k1xb77"; depends=[mvtnorm msm Rcpp igraph numDeriv pbivnorm MASS Rcpp ]; };
CIFsmry = derive { name="CIFsmry"; version="1.0.1"; type="cran"; sha256="118vyiiy4iqn86n9xf84n5hrwrhzhr1mdsmyg9sm6qq6dm7zg6la"; depends=[ ]; };
CINID = derive { name="CINID"; version="1.2"; type="cran"; sha256="0pkgzi2j0045p10kjvnq8f4j1agzrqfw0czvvfrzj9yjfpj8xc99"; depends=[ ]; };
CINOEDV = derive { name="CINOEDV"; version="2.0"; type="cran"; sha256="0fjpxahc55zd972p3hlw9fk4dq8hpq715xff8p98kfh29dvw9mnz"; depends=[R_matlab igraph ggplot2 reshape2 ]; };
CITAN = derive { name="CITAN"; version="2014.12-1"; type="cran"; sha256="0hiccsg49zgcdm5iwj2vzyqhwyfw6h5fd2gasy6hlakjp102mvy2"; depends=[agop RSQLite RGtk2 hash stringi DBI ]; };
CLAG = derive { name="CLAG"; version="2.18.1"; type="cran"; sha256="0y8m6m01vw3rxwrmxvwhpiy6dd2snr0lhb026l1494y43hhqi3wy"; depends=[ ]; };
CLME = derive { name="CLME"; version="2.0-2"; type="cran"; sha256="11krgxn3fvbwknmiz2jyidpbb0svf4frvk99spd7i53m615sai91"; depends=[MASS lme4 shiny isotone stringr prettyR ]; };
CLSOCP = derive { name="CLSOCP"; version="1.0"; type="cran"; sha256="0rkwq9rl2ph4h5zwb2i3yphjyzxmh6b6k23a8gcczycx6xdq4yhw"; depends=[Matrix ]; };
CMA = derive { name="CMA"; version="1.24.0"; type="bioc"; sha256="02c243b50zg3n1qz526zv66zff75iw58n27dvxp0cxxb8nnibdxk"; depends=[Biobase ]; };
CMC = derive { name="CMC"; version="1.0"; type="cran"; sha256="1r9a5k79fyw01yiwxq02327hpn4l1v2lp0958jj9217wxmhn3pr5"; depends=[ ]; };
CMF = derive { name="CMF"; version="1.0"; type="cran"; sha256="0hvqcbmg2vd0i1rjb1m1bkrbv2vkj1siank1v8w0n5b6881cyz7q"; depends=[Rcpp Rcpp ]; };
CMPControl = derive { name="CMPControl"; version="1.0"; type="cran"; sha256="0cp29cibiydawsl0cq433l9abdivr16b431zlrh45wzr5kzfcs0v"; depends=[compoisson ]; };
CNAnorm = derive { name="CNAnorm"; version="1.12.0"; type="bioc"; sha256="0fvgrk37g8k940fxhbwi3m5l3vm4dpiswlyac8jgkhzdab8zkigd"; depends=[DNAcopy ]; };
CNEr = derive { name="CNEr"; version="1.2.0"; type="bioc"; sha256="1zsgpdx1jy32cgpd7sdgdn5j5jcl8rnhbaz084p426if6irb8q8c"; depends=[Biostrings RSQLite GenomeInfoDb GenomicRanges rtracklayer XVector DBI GenomicAlignments S4Vectors IRanges S4Vectors IRanges XVector ]; };
CNOGpro = derive { name="CNOGpro"; version="1.1"; type="cran"; sha256="1frsmhfqrlg1vsa06cabqmrzngq4p5gqwyb9qgnsgg81a9ybm6l8"; depends=[seqinr ]; };
CNORdt = derive { name="CNORdt"; version="1.8.0"; type="bioc"; sha256="0sx1d94z09d3r409v7dykli3fj0j37j1cslm7mdhh0bp9bi1fzfz"; depends=[CellNOptR abind ]; };
CNORfeeder = derive { name="CNORfeeder"; version="1.6.0"; type="bioc"; sha256="1yzypx0pkyga4qhi11ngr2riq4rbj35lw5hy3pv82a5bwfi2vwxk"; depends=[CellNOptR graph ]; };
CNORfuzzy = derive { name="CNORfuzzy"; version="1.8.0"; type="bioc"; sha256="0srg848n3cf10sp8v9cclrxpfn1zhjlb7n1ix2v0q9p3darsw15f"; depends=[CellNOptR nloptr ]; };
CNORode = derive { name="CNORode"; version="1.8.1"; type="bioc"; sha256="1dhdcsqw73c3a7jm7341zf91xb08f40fjy38qppjyfyjfaibyxj4"; depends=[CellNOptR genalg ]; };
CNTools = derive { name="CNTools"; version="1.22.0"; type="bioc"; sha256="0hjd1qldnxsfwlc28g522lqf4ain9ad2pk03dhhnz046sddibv76"; depends=[genefilter ]; };
CNVassoc = derive { name="CNVassoc"; version="2.1"; type="cran"; sha256="0gwyhipkvvnivdahr9mkj1b8j9wzg6g8mcsvk5rq28xdzrskz0i8"; depends=[CNVassocData mixdist mclust survival ]; };
CNVassocData = derive { name="CNVassocData"; version="1.0"; type="cran"; sha256="17r3b1w9i9v6llawnjnrjns6jkd82m2cn9c90aif8j0bf4dmgdli"; depends=[ ]; };
CNVrd2 = derive { name="CNVrd2"; version="1.4.0"; type="bioc"; sha256="0m7632gq9j5y1vc5w2scbsrwga9n3cl8mvp8z4lw3j81qmilsc1c"; depends=[VariantAnnotation rjags ggplot2 gridExtra DNAcopy IRanges Rsamtools ]; };
CNVtools = derive { name="CNVtools"; version="1.60.0"; type="bioc"; sha256="17igkk3c2vb66yvsq4x9aanxwp977jzagxx8q0wgphdgv4sggbvb"; depends=[survival ]; };
CNprep = derive { name="CNprep"; version="2.0"; type="cran"; sha256="08dpjikx3ldqzw2kwb12q0kbw15qzl09srjdfs0sz9si0x6bfxs6"; depends=[mclust rlecuyer ]; };
COBRA = derive { name="COBRA"; version="0.99.4"; type="cran"; sha256="1r1cw12d7c148pcgcg08bfsr1q1s736kfpyyss6b4d7ny7wgmqy4"; depends=[ ]; };
COHCAP = derive { name="COHCAP"; version="1.4.0"; type="bioc"; sha256="1fv3zrp3d4lk7qd7wn52i54z89v7ldsakzy7jhdj6adyf1cm6rgf"; depends=[WriteXLS ]; };
COMMUNAL = derive { name="COMMUNAL"; version="1.0"; type="cran"; sha256="0smza4q0gnhskyq3fxcrs2hq3lxkyp5xf3zd6zi92962lg6s3w3n"; depends=[cluster clValid fpc rgl ]; };
COMPASS = derive { name="COMPASS"; version="1.4.0"; type="bioc"; sha256="0gp77dfwgdvy7p9sr80ylpynfjq0yyrp20lzzp07sygvaaygs2aq"; depends=[Rcpp data_table RColorBrewer scales plyr knitr abind clue Rcpp ]; };
COMPoissonReg = derive { name="COMPoissonReg"; version="0.3.4"; type="cran"; sha256="1mf2q7phc2bn700yp7i2i6ccj6lrvh8b2dmibqihh76a85j1ycrq"; depends=[ ]; };
COP = derive { name="COP"; version="1.0-2"; type="cran"; sha256="1gynknplvx97hjhi7adsgq9r9lqismch1q1pqvgmz0x1wkg4jj40"; depends=[dr MASS ]; };
COPASutils = derive { name="COPASutils"; version="0.1.6"; type="cran"; sha256="0vi7x14ma3i4gabdb04byr4ba0209lklj3d5ql2f2vaxyb4a1hj9"; depends=[ggplot2 reshape2 dplyr kernlab stringr knitr ]; };
COPDSexualDimorphism = derive { name="COPDSexualDimorphism"; version="1.2.0"; type="bioc"; sha256="02lsl2965ixhy1707qkhmc8rcdpq1qpyvbv09j4hkg20ymsrh4b8"; depends=[RColorBrewer beeswarm limma GenomicRanges gplots gtools ]; };
CORE = derive { name="CORE"; version="3.0"; type="cran"; sha256="0wq9i7nscnzqiqz6zh6hglm7924261bw169q3x6l9i6jgqhvn32d"; depends=[ ]; };
CORElearn = derive { name="CORElearn"; version="0.9.45"; type="cran"; sha256="0j2lhzikh96ky4n52x0rwhknx5zdk9h78x9ygzfpr6p9x80w850f"; depends=[cluster rpart ]; };
CORM = derive { name="CORM"; version="1.0.2"; type="cran"; sha256="0g5plafx2h1ija8jd6rxvy8qsrqprfbwbi1kq1p4jdr9miha20nv"; depends=[cluster limma ]; };
CORREP = derive { name="CORREP"; version="1.32.0"; type="bioc"; sha256="0g2w9hzmdiwlal49x7cx1zvy8f5b52dc91xwqh61sh9sfn454423"; depends=[e1071 ]; };
COSINE = derive { name="COSINE"; version="2.1"; type="cran"; sha256="10ypj849pmvhx117ph3k1jqa62nc4sdmv8665yahds7mh0ymhpjj"; depends=[MASS genalg ]; };
COSNet = derive { name="COSNet"; version="1.0.0"; type="bioc"; sha256="1d08y0mpvgpvwr08yjjh4v0phankm6b55m66m61qbb1xb0ix1rnz"; depends=[ ]; };
COUNT = derive { name="COUNT"; version="1.3.2"; type="cran"; sha256="1lb67gwznva5p046f4gjjisip5a12icp7d2g1ipizixw99c5lll8"; depends=[msme sandwich MASS ]; };
CP = derive { name="CP"; version="1.5"; type="cran"; sha256="0hzp4h7bhhxn336kkq27phplk7idwk27jjsp6zimwl8fq3ylh0dr"; depends=[survival ]; };
CPE = derive { name="CPE"; version="1.4.4"; type="cran"; sha256="09sqp2a0j43jr9ya9piv8575rwd5fdvwmiz4chv75r3mw8p128mn"; depends=[survival rms ]; };
CPHshape = derive { name="CPHshape"; version="1.0.1"; type="cran"; sha256="05krqcd4spgghp3ihv1zfql6ikd64vkqnrjghjvfki3hi3zi5k7h"; depends=[ ]; };
CPMCGLM = derive { name="CPMCGLM"; version="1.1"; type="cran"; sha256="1w8yp37vxz2cl0yqdzpyxdfq2scz2h9i4crjzjmjzpzffi45f06s"; depends=[mvtnorm plyr ]; };
CR = derive { name="CR"; version="1.0"; type="cran"; sha256="0smb2i560dwbxg3mp1svfxmaiw193pd3klwqq0i27czf07k1xfvj"; depends=[ ]; };
CRAC = derive { name="CRAC"; version="1.0"; type="cran"; sha256="0vnqmmmwakx5jnzqp20dng35p7rvmz3ypm2m7bs41m8nhh2wq1xa"; depends=[ ]; };
CRF = derive { name="CRF"; version="0.3-8"; type="cran"; sha256="0w9wfjlx6hvd07k0iszfyip0vn0ca5ax2d5g7hsg6pm2isnzap8a"; depends=[Rglpk Matrix ]; };
CRISPRseek = derive { name="CRISPRseek"; version="1.4.2"; type="bioc"; sha256="1x4wgvlqighycadr8rf70pvdk0fpnix78zkfqqbnvmw6sb0r28dk"; depends=[BiocGenerics Biostrings BSgenome seqinr ]; };
CRImage = derive { name="CRImage"; version="1.14.0"; type="bioc"; sha256="118m3157izfjm5i2kail3cphys0cm1xnm7lj3s8j8k1wilq7y7fz"; depends=[EBImage DNAcopy aCGH MASS e1071 foreach sgeostat ]; };
CRM = derive { name="CRM"; version="1.1.1"; type="cran"; sha256="09h6xvqc2h2gxhdhc7592z93cnw16l549pn9i26ml0f0n20hljmf"; depends=[ ]; };
CRTSize = derive { name="CRTSize"; version="1.0"; type="cran"; sha256="1d45zx26bf0zk0piham69gvb8djqf48g6iisbldv0ds3s2hhcsin"; depends=[ ]; };
CSAR = derive { name="CSAR"; version="1.18.0"; type="bioc"; sha256="1kzry6ixb6fr5468y8mi31m1anw42nk6xx844xyiavwd61547kx0"; depends=[S4Vectors IRanges GenomeInfoDb GenomicRanges ]; };
CSS = derive { name="CSS"; version="1.0.2"; type="cran"; sha256="0p0c3gfj6p58hd4398kkpjg7rhx6wh5z6qddpqnvbm24acq7nrvh"; depends=[XML stringr ]; };
CSSP = derive { name="CSSP"; version="1.5.1"; type="bioc"; sha256="06n5jhk1yr4ihb3hc888fyzr803hzjig4xzkdqq67m1rfnv51w3r"; depends=[ ]; };
CTT = derive { name="CTT"; version="2.1"; type="cran"; sha256="0v8k54x9pib6hq3nz3m80g1a3p003f7bn8wnj9swwvacc90d6n44"; depends=[ ]; };
CUMP = derive { name="CUMP"; version="1.0"; type="cran"; sha256="0dbpgm75nbd4h8rf3ca5n4mgdn3qm4yyf2d48vlihakzw6rqbpka"; depends=[ ]; };
CVST = derive { name="CVST"; version="0.2-1"; type="cran"; sha256="17xacyi8cf37rr2xswx96qy7pwkaqq394awdlswykz3qlyzx4zx2"; depends=[kernlab Matrix ]; };
CVThresh = derive { name="CVThresh"; version="1.1.1"; type="cran"; sha256="19d7pslzj8r3z5gn3cplpz2h2ayz6k1nrfx3s2b7a8w1il3vmi69"; depends=[wavethresh EbayesThresh ]; };
CVTuningCov = derive { name="CVTuningCov"; version="1.0"; type="cran"; sha256="1bwzis82lqwcqp2djy4bnd3vvjr47krlv3pdc5msh12wcs0xhs7n"; depends=[ ]; };
CVcalibration = derive { name="CVcalibration"; version="1.0-1"; type="cran"; sha256="0ca582fnysrldlzxc3pihsph9pvdgygdh7sfzgxvr5fc3z1jbjzb"; depends=[ ]; };
CaDENCE = derive { name="CaDENCE"; version="1.2.2"; type="cran"; sha256="1rbwm3s63dxd366bs7pdxl0zpv7svsfr3ayznach9bjjrnjk3z3g"; depends=[pso ]; };
Cairo = derive { name="Cairo"; version="1.5-6"; type="cran"; sha256="0x5xd2xq5q8a3kzmz7f9bawg3j131rhyb3s7w34acg7rd79l1935"; depends=[ ]; };
CancerMutationAnalysis = derive { name="CancerMutationAnalysis"; version="1.10.0"; type="bioc"; sha256="0azqwgy95nqfs1i8biwfn8dbqmmdhqcw4r2f91q9njfrbnrgsgpy"; depends=[qvalue AnnotationDbi limma ]; };
CarletonStats = derive { name="CarletonStats"; version="1.1"; type="cran"; sha256="18pd1hi8bnbv0sdixw746xvdg9szvng422yj12mk0k50v60403xg"; depends=[ ]; };
CatDyn = derive { name="CatDyn"; version="1.1-0"; type="cran"; sha256="0bdixcf1iwbmjd2axi6csrzms25ghdj4r6223qhk2b54wlmbzaiz"; depends=[optimx BB ]; };
CateSelection = derive { name="CateSelection"; version="1.0"; type="cran"; sha256="194lk6anrb05gaarwdg8lj5wm6k61b4r702cja3nf3z91i8paqi7"; depends=[ ]; };
Category = derive { name="Category"; version="2.32.0"; type="bioc"; sha256="1cyphjvymyg530qkrjmxib63k5a1dd2wv8irj56ygifv8rzfib13"; depends=[Matrix BiocGenerics AnnotationDbi Biobase BiocGenerics graph Biobase AnnotationDbi RBGL GSEABase genefilter annotate ]; };
CausalFX = derive { name="CausalFX"; version="1.0.1"; type="cran"; sha256="0v0diqq9fa1v9n3v5m5shvwlgmj91cbbb78243rwib1h3pyacihf"; depends=[igraph rcdd rje ]; };
CausalGAM = derive { name="CausalGAM"; version="0.1-3"; type="cran"; sha256="0g68m2kxixwr7rx65r57m1n0qa161igc428zh9rj91fg6h4pdq4w"; depends=[gam ]; };
Causata = derive { name="Causata"; version="4.2-0"; type="cran"; sha256="04lndjy4rdf063z75zv42b000z06ffnr91pv2sql1ks6w60zmh1m"; depends=[XML R_utils rjson RMySQL RCurl stringr yaml boot foreach data_table glmnet ggplot2 ]; };
CePa = derive { name="CePa"; version="0.5"; type="cran"; sha256="1y2q72j8bqx509i62a2x9j40rj5bkpgx4z6fwj05ibazc1441asd"; depends=[igraph snow ]; };
CellNOptR = derive { name="CellNOptR"; version="1.12.0"; type="bioc"; sha256="1wfd0xavib58mnv6bnrsaznvmq370i7lnd565n7sk5cy09fwvnlh"; depends=[RBGL graph hash ggplot2 RCurl Rgraphviz XML ]; };
CellularAutomaton = derive { name="CellularAutomaton"; version="1.1-1"; type="cran"; sha256="0kmw2ic161xwalqa63hznic4n4hdz20hsilf2awlcldg7m9si1zd"; depends=[R_oo R_methodsS3 ]; };
CensRegMod = derive { name="CensRegMod"; version="1.0"; type="cran"; sha256="0qqwkxn8knhcjb6mph7mp7mma56zxslbvkfgfajq2lq4gbg901y4"; depends=[ ]; };
CerioliOutlierDetection = derive { name="CerioliOutlierDetection"; version="1.0.8"; type="cran"; sha256="0n67y7ah496wck9hlrphya9k753gk44v7zgfz4s2a5ii49739zqi"; depends=[robustbase ]; };
CexoR = derive { name="CexoR"; version="1.4.0"; type="bioc"; sha256="1mp2xx2bjscirc9w54ix7ha20ysmhm0p51d7281fr3mibd5p2zny"; depends=[S4Vectors IRanges Rsamtools GenomeInfoDb GenomicRanges rtracklayer idr ]; };
CfEstimateQuantiles = derive { name="CfEstimateQuantiles"; version="1.0"; type="cran"; sha256="1qf85pnl81r0ym1mmsrhbshwi4h1iv19a2wjnghbylpjaslgxp6i"; depends=[ ]; };
ChAMP = derive { name="ChAMP"; version="1.4.1"; type="bioc"; sha256="136al7yx68gnw43rsglwndhvbjvl139zvj27hjrmzn0h24d1sx73"; depends=[minfi sva limma RPMM DNAcopy preprocessCore impute marray wateRmelon plyr ]; };
ChIPQC = derive { name="ChIPQC"; version="1.2.2"; type="bioc"; sha256="07jgq5056c23lxi974pgg41nr93hhxz8ia8cbz9i9zn0jqwrrr0k"; depends=[ggplot2 DiffBind GenomicRanges BiocGenerics S4Vectors IRanges Rsamtools GenomicAlignments chipseq gtools BiocParallel reshape2 Nozzle_R1 Biobase ]; };
ChIPXpress = derive { name="ChIPXpress"; version="1.8.0"; type="bioc"; sha256="17qdklr99vxx9npa03svslysisfraxx5z3s8cd0zgjg4b00q2bdb"; depends=[Biobase GEOquery frma affy bigmemory biganalytics ]; };
ChIPpeakAnno = derive { name="ChIPpeakAnno"; version="2.16.4"; type="bioc"; sha256="1321agyc1z14dqm9fjqbjbrbla0ykziqjx4k4v2smxp75xsxn3dk"; depends=[VennDiagram biomaRt IRanges Biostrings BiocGenerics BSgenome GenomicFeatures AnnotationDbi limma multtest ]; };
ChIPseeker = derive { name="ChIPseeker"; version="1.2.6"; type="bioc"; sha256="07hgig4x64cnlq297zr6vcawvhrbj47qc26fqp14nl080w11rf9s"; depends=[BiocGenerics AnnotationDbi data_table IRanges GenomeInfoDb GenomicRanges GenomicFeatures ggplot2 gplots gtools plotrix plyr RColorBrewer rtracklayer S4Vectors ]; };
ChIPseqR = derive { name="ChIPseqR"; version="1.20.0"; type="bioc"; sha256="0fbcwv59mhmkqrfa3f3drfwwygkdbbxmxf3pf7v4d633qziwi6fb"; depends=[BiocGenerics S4Vectors ShortRead Biostrings fBasics GenomicRanges HilbertVis IRanges ShortRead timsac ]; };
ChIPsim = derive { name="ChIPsim"; version="1.20.0"; type="bioc"; sha256="1iw8r5qc3bjhldxa553yp5y4gv3g6x5lfwr4hbd4waydas01ncjf"; depends=[Biostrings IRanges XVector Biostrings ShortRead ]; };
ChainLadder = derive { name="ChainLadder"; version="0.2.0"; type="cran"; sha256="03gwavmimh4isrc6gpn72m52sqx1aj0prshzsb0531g45qxmvw9x"; depends=[systemfit statmod Matrix actuar Hmisc reshape2 MASS lattice tweedie ]; };
ChargeTransport = derive { name="ChargeTransport"; version="1.0.2"; type="cran"; sha256="0mq06ckp3yyj5g1z2sla79fiqdk2nlbclm618frhqcgmq93h0vha"; depends=[ ]; };
CheckDigit = derive { name="CheckDigit"; version="0.1-1"; type="cran"; sha256="0091q9f77a0n701n668zaghi6b2k3n2jlb1y91nghijkv32a7d0j"; depends=[ ]; };
ChemmineOB = derive { name="ChemmineOB"; version="1.4.1"; type="bioc"; sha256="0yygn5p0dwj3zfdmipkqlpm1w9kd8i4pdb17xwcwaz5k7z1v4jzr"; depends=[BiocGenerics zlibbioc Rcpp BH Rcpp ]; };
ChemmineR = derive { name="ChemmineR"; version="2.18.1"; type="bioc"; sha256="09vrv0bxmhhh40n4lpwmfk6imwbsxp2aanla3b3l9zia0w6r1h7k"; depends=[rjson RCurl DBI digest BiocGenerics Rcpp Rcpp ]; };
ChemoSpec = derive { name="ChemoSpec"; version="4.0.1"; type="cran"; sha256="08z85g0r38xh57h3f4hdcg8wlaklpqmxvjla1562f3lxbqm1r9k1"; depends=[plyr rgl ]; };
ChemometricsWithR = derive { name="ChemometricsWithR"; version="0.1.8"; type="cran"; sha256="084da2hx6agryw7bv6img10pqmsdz2mpihbrj6j081lammrik4fj"; depends=[ChemometricsWithRData MASS pls ]; };
ChemometricsWithRData = derive { name="ChemometricsWithRData"; version="0.1.3"; type="cran"; sha256="14l1y4md8hxq8gvip5vgg07vcr0d9yyhm5ckhzk8zwprdabn9a10"; depends=[ ]; };
ChoiceModelR = derive { name="ChoiceModelR"; version="1.2"; type="cran"; sha256="0dkp3354gvrn44010s8fjbmkpgn1hpl4xbfs5xslql8sk8rw0n2c"; depends=[ ]; };
ChromHeatMap = derive { name="ChromHeatMap"; version="1.20.0"; type="bioc"; sha256="0a66gh4xkw4f8xnh1ak1masy9k94dvnz3h5wfd06p8yx0pfycyrm"; depends=[BiocGenerics annotate AnnotationDbi Biobase IRanges rtracklayer ]; };
CircE = derive { name="CircE"; version="1.1"; type="cran"; sha256="14bja3zv9wg389m6khmsy3q12hhnfcp49rvrmw47y6fh5m7ihrz2"; depends=[ ]; };
CircNNTSR = derive { name="CircNNTSR"; version="2.1"; type="cran"; sha256="1rl17kw6bl5xf7pgsc4im12i2kqz4a3b11vzzlb6wfl5yck6iff5"; depends=[ ]; };
CircStats = derive { name="CircStats"; version="0.2-4"; type="cran"; sha256="1f2pf1ppp843raa82s2qxm3xlcv6zpi578zc4pl0d7qyxqnh603s"; depends=[MASS boot ]; };
CityPlot = derive { name="CityPlot"; version="2.0"; type="cran"; sha256="0lskgxmagqjglvpq39hgbygkf4qp28i2bj6b4m2av1s3pzb4465g"; depends=[ ]; };
Ckmeans_1d_dp = derive { name="Ckmeans.1d.dp"; version="3.3.1"; type="cran"; sha256="0gzwcg6f3p1vr30lyniqiq4893kjxri4y2vjzh6qrldnay42kqf9"; depends=[ ]; };
Claddis = derive { name="Claddis"; version="0.1"; type="cran"; sha256="1dxsz62x856lpapw5xpvvr2qpyj3j93m9dn07m0bjbpmx0y0bm9c"; depends=[gdata ape phytools strap ]; };
ClassifyR = derive { name="ClassifyR"; version="1.0.18"; type="bioc"; sha256="1l5pqfqsjny1caxdglfi5qn85r0m52mr7ks9m98rkqgk10d1nclk"; depends=[Biobase BiocParallel locfit ROCR ]; };
ClickClust = derive { name="ClickClust"; version="1.1.4"; type="cran"; sha256="17r8jzhzwqa5h04bxdcyv31jhk6c709sx5m1z53jh3yf9zmkilvi"; depends=[ ]; };
ClimClass = derive { name="ClimClass"; version="1.0"; type="cran"; sha256="07jl8vwqyyj4q2hav8qbg69yjs73s3kbms5bd9hqs1y938rrp2l5"; depends=[geosphere ggplot2 reshape2 ]; };
Clomial = derive { name="Clomial"; version="1.2.0"; type="bioc"; sha256="0gfb3v9fvvf96qr1x3d59icsmx7mhns71fbz62bc3dr2434msa5p"; depends=[matrixStats permute ]; };
Clonality = derive { name="Clonality"; version="1.14.0"; type="bioc"; sha256="1vk0cn197xp64wdl7ff9xrac5x4rgx6b759a22jaaxc13vl38807"; depends=[DNAcopy DNAcopy ]; };
ClueR = derive { name="ClueR"; version="1.0"; type="cran"; sha256="1ak8pgbzm5xrk7pjnkbiqdwyvvyvrm6k6h50ycc86w3zy7fnqhds"; depends=[e1071 ]; };
ClustMMDD = derive { name="ClustMMDD"; version="1.0.1"; type="cran"; sha256="0pzascdiadhvx4xjxa6kjw5kkmj3izphz2f86jnimyn5fid7cl02"; depends=[Rcpp Rcpp ]; };
ClustOfVar = derive { name="ClustOfVar"; version="0.8"; type="cran"; sha256="17y8q2g4yjxs2jl1s8n5svxi021nlm0phs1g5hcnfxzpadq84wbs"; depends=[ ]; };
ClustVarLV = derive { name="ClustVarLV"; version="1.3.2"; type="cran"; sha256="0lnrpvfkhsmjjaimxqjrvwv4wrh6mxl6ifr9dj1kfkmnparyp6fp"; depends=[Rcpp Rcpp ]; };
CoCiteStats = derive { name="CoCiteStats"; version="1.38.0"; type="bioc"; sha256="1l7hvz1054yd43ix67vqkyfxirnpy073xphqll9lyjqdk1zkaxy0"; depends=[AnnotationDbi ]; };
CoClust = derive { name="CoClust"; version="0.3-1"; type="cran"; sha256="00i0dghd35s91kkkxj1ywa5i93752mfa5527ifclw4xxxshppva8"; depends=[copula gtools ]; };
CoGAPS = derive { name="CoGAPS"; version="2.0.0"; type="bioc"; sha256="0hqrqf3sajf9fnwpas4hd0a6zdr2w882j9n8iwxylcas4iq9p0ya"; depends=[Rcpp RColorBrewer gplots Rcpp BH ]; };
CoImp = derive { name="CoImp"; version="0.2-3"; type="cran"; sha256="04n0drx98hi8hmlb5xwl87ylv03j1ld04vp9d8s5sphvm9bbx690"; depends=[copula nnet gtools locfit ]; };
CoRegNet = derive { name="CoRegNet"; version="1.1.7"; type="bioc"; sha256="0dmm3qy8c0p7yjnhad0gi6vv08l3fw29zwy2sydrxf1x43wjjn3g"; depends=[igraph shiny arules ]; };
CoinMinD = derive { name="CoinMinD"; version="1.1"; type="cran"; sha256="0invnbj5589wbs0k2w5aq9qak7axc3s0g9nw85c48lnl0v95s91i"; depends=[MCMCpack ]; };
CollocInfer = derive { name="CollocInfer"; version="1.0.1"; type="cran"; sha256="0wfk3qw28msz3wqm5xmivjgi18kqv1s6w76vh71zq777d6a7al6i"; depends=[fda deSolve MASS Matrix spam ]; };
CombMSC = derive { name="CombMSC"; version="1.4.2"; type="cran"; sha256="1wkawxisn9alpwrymja8dla8n25z2fhai3l2xhin0b914y2kai09"; depends=[ ]; };
CombinS = derive { name="CombinS"; version="1.1"; type="cran"; sha256="18wanir5vqk5i65hd6gr2za1xd26yfa0c3c029dbxsrsczwmb9xi"; depends=[ ]; };
CombinePValue = derive { name="CombinePValue"; version="1.0"; type="cran"; sha256="0mlngyz2nq7s39javnnjbb5db93c5sg9daw2szng83mbyfza4hv2"; depends=[ ]; };
CommonJavaJars = derive { name="CommonJavaJars"; version="1.0-5"; type="cran"; sha256="0kwf504g1izyy7hxss21dgz26w0spxibdlacrjdh7q10z799hfhh"; depends=[ ]; };
CommonTrend = derive { name="CommonTrend"; version="0.7-1"; type="cran"; sha256="088pg2hy2g2jgs84xawrnsf7gpvrpqjsimkx7g0i5r5fmkx169f9"; depends=[MASS urca ]; };
CommunityCorrelogram = derive { name="CommunityCorrelogram"; version="1.0"; type="cran"; sha256="1wkrm5lil595sc4ih3qsf4sgvfipzlav0n7339ixqw9zxm2pg4nj"; depends=[vegan ]; };
Comp2ROC = derive { name="Comp2ROC"; version="1.1"; type="cran"; sha256="0vhpw6k9barcx5fl3kw3r7152mcrlpr127i5b70bx64g8g9ffs1v"; depends=[ROCR boot ]; };
CompGLM = derive { name="CompGLM"; version="1.0"; type="cran"; sha256="04bjal92r0m7is5ygqpd0mdz3fb3pwcr7rc3mbxg9sg57nff3kf5"; depends=[Rcpp Rcpp ]; };
CompGO = derive { name="CompGO"; version="1.2.0"; type="bioc"; sha256="1y21ha0dxg4gnwdkpsx051p9i3dsgp65yzzzbs3qzkrqf7qldccr"; depends=[RDAVIDWebService rtracklayer Rgraphviz ggplot2 GenomicFeatures pcaMethods reshape2 pathview ]; };
CompLognormal = derive { name="CompLognormal"; version="3.0"; type="cran"; sha256="1dhgr9l713l2n889bpa47lbg2qab0fz0r15qa928c0b9nz688ddm"; depends=[numDeriv ]; };
CompQuadForm = derive { name="CompQuadForm"; version="1.4.1"; type="cran"; sha256="1kv4bdkwidkjw0hgn2krv42p9v1a03p47g0p03lja3flhfbmiifj"; depends=[ ]; };
CompRandFld = derive { name="CompRandFld"; version="1.0.3-4"; type="cran"; sha256="1a3j5j50fz3f8vkvdmfccv5hn00spk08xanadqxpdy8pn925gqqb"; depends=[ ]; };
CompareTests = derive { name="CompareTests"; version="1.0"; type="cran"; sha256="098axl20jid35pqvgiwk6h91waafigwks6n5f4pg7xxx1fifks4f"; depends=[ ]; };
Compind = derive { name="Compind"; version="1.0"; type="cran"; sha256="13gfsbjaciign8cswsibdj9a4rwj5afwrk4g1x4fyihfhnm4qx7m"; depends=[Benchmarking psych boot Hmisc MASS GPArotation lpSolve nonparaeff ]; };
Compounding = derive { name="Compounding"; version="1.0.2"; type="cran"; sha256="1xlb3ylwjv70850agir0mx79kcvs43h0n1sm22zcny3509s2r7lf"; depends=[hypergeo ]; };
ConConPiWiFun = derive { name="ConConPiWiFun"; version="0.4.4"; type="cran"; sha256="1dq9nlg04xs2n9g62y4gbl8ay4vsa25d7d7dra7q8zq6a561hzz5"; depends=[Rcpp Rcpp ]; };
ConSpline = derive { name="ConSpline"; version="1.0"; type="cran"; sha256="04zwnnp8rmzacfl9skd1lybqwxja0527h4xwcx5ki2z8c0zvvpi8"; depends=[coneproj ]; };
Conake = derive { name="Conake"; version="1.0"; type="cran"; sha256="1rj1rv8r53516jqhwp9xqqwjxh4gx1w47c0bw59f87wiy5pbchpf"; depends=[ ]; };
CondReg = derive { name="CondReg"; version="0.20"; type="cran"; sha256="1ffnrjfjcb66i9nyvidkcn4k9pcj4r7xanjwzcxcrj2qm39apkqx"; depends=[ ]; };
ConjointChecks = derive { name="ConjointChecks"; version="0.0.9"; type="cran"; sha256="097mhiz8zjmmkiiapr3zfx7v35xirg57nqp1swd72dixaa23nhr1"; depends=[ ]; };
ConnMatTools = derive { name="ConnMatTools"; version="0.1.5"; type="cran"; sha256="02cv2rlfp9shwqc9nwb8278akmwv7yvviwl23jglzsyh721dpqkr"; depends=[ ]; };
ConsensusClusterPlus = derive { name="ConsensusClusterPlus"; version="1.20.0"; type="bioc"; sha256="14ga3qamsj0h871k79nzmfq0462vir501d2pngs8fj0rh699n552"; depends=[Biobase cluster ]; };
ConvCalendar = derive { name="ConvCalendar"; version="1.2"; type="cran"; sha256="0yq9a42gw3pxxwvpbj6zz5a5zl7g5vkswq3mjjv5r28zwa3v05vc"; depends=[ ]; };
ConvergenceConcepts = derive { name="ConvergenceConcepts"; version="1.1"; type="cran"; sha256="0878fz33jxh5cf72lv0lga48wq2hqa4wz6m59111k59pzrsli344"; depends=[tkrplot lattice ]; };
Copula_Markov = derive { name="Copula.Markov"; version="1.0"; type="cran"; sha256="028rmpihyz9xr4r305lbcbb0y22jw1szmhw5iznv5zma507grbl3"; depends=[ ]; };
CopulaREMADA = derive { name="CopulaREMADA"; version="0.5-1"; type="cran"; sha256="1lrqx07986f7cv0ws1dd9p0dza0qkc67p8mp7rdq58b9f1h7yk2r"; depends=[statmod ]; };
CopulaRegression = derive { name="CopulaRegression"; version="0.1-5"; type="cran"; sha256="0dd1n7b23yww36718khi6a5kgy8qjpkrh0k433c265653mf1siq8"; depends=[MASS VineCopula ]; };
CopyDetect = derive { name="CopyDetect"; version="1.1"; type="cran"; sha256="0h9bf7ay5yr6dwk7q28b6xxfzy6smljkq6qwjkzfscy5hnmwxkpa"; depends=[irtoys ]; };
CopyNumber450k = derive { name="CopyNumber450k"; version="1.2.0"; type="bioc"; sha256="181cydyzq9dym0jz6arn9nqgnzdp4gfhy51d27fw55zwnrhxlwv7"; depends=[Biobase minfi DNAcopy preprocessCore BiocGenerics ]; };
CorMut = derive { name="CorMut"; version="1.8.0"; type="bioc"; sha256="1i7r4dwvs927dv1n3wa89wizjwj6pibsgry1zzhdifchi6gkyva8"; depends=[seqinr igraph ]; };
CorReg = derive { name="CorReg"; version="1.0"; type="cran"; sha256="061lb443wydlrgrnrpi9ibrwa0xw328wcyhsx7lndzjrni9mhcbp"; depends=[Rcpp lars Rmixmod elasticnet corrplot Matrix ridge rpart MASS mvtnorm mclust Rcpp RcppEigen ]; };
Cormotif = derive { name="Cormotif"; version="1.12.0"; type="bioc"; sha256="0xmac8m4i2x9d3gd1scxawiz6y8fqg92irs8j3ni81cijn9gbaxl"; depends=[affy limma affy ]; };
CorrBin = derive { name="CorrBin"; version="1.5"; type="cran"; sha256="1kg8kms76z127j2vmf7v162n0sh2jqylw4i7c35x5sig4q22m9gy"; depends=[boot combinat geepack dirmult mvtnorm ]; };
CorrMixed = derive { name="CorrMixed"; version="0.1-11"; type="cran"; sha256="18n70yx6yysvcn3wsf1zmnp4z2hs3783mr1n0pjp2ph5yd9xk4mg"; depends=[nlme psych ]; };
Correlplot = derive { name="Correlplot"; version="1.0-2"; type="cran"; sha256="0prxnbi7ga5d23i0i4qpynfb3zrsgjxam47km6nsj1prakdkrq7w"; depends=[calibrate xtable ]; };
CosmoPhotoz = derive { name="CosmoPhotoz"; version="0.1"; type="cran"; sha256="04girid6wvgyrk8ha81mdqjx2mmzifz57l1hzcgrdnzmjmm3vlmp"; depends=[ggplot2 ggthemes arm COUNT gridExtra pcaPP mvtnorm shiny ]; };
CountsEPPM = derive { name="CountsEPPM"; version="2.0"; type="cran"; sha256="0bwd2jc8g62xpvnnq759cxhjvip94abbj63yk6n1awlh5hb4ni3b"; depends=[Formula expm numDeriv ]; };
CovSel = derive { name="CovSel"; version="1.1"; type="cran"; sha256="13dh97857h3r684yw1bzyr1rkpk8l7sshgy9hvg5y95csgai2qhw"; depends=[MASS dr np boot cubature ]; };
CoverageView = derive { name="CoverageView"; version="1.2.0"; type="bioc"; sha256="09scvmd78cck922m3n8lvmgim2k8i376b5n2cwp0fmifwzwaxiqx"; depends=[Rsamtools rtracklayer IRanges GenomicRanges GenomicAlignments ]; };
CoxBoost = derive { name="CoxBoost"; version="1.4"; type="cran"; sha256="1bxkanc8zr4g3abn4ds5wqibv65flvm4y648fs9s0l4vc9vmyshg"; depends=[survival Matrix prodlim ]; };
CoxRidge = derive { name="CoxRidge"; version="0.9.2"; type="cran"; sha256="0p65mg4hzdgks03k1lj90yj6qbk50s94rwvcwzkb5xxxwrijd10r"; depends=[survival ]; };
Coxnet = derive { name="Coxnet"; version="0.1-1"; type="cran"; sha256="07ivs47lj0l84mk4r7bvzncvddspq4yl19aibii5pvjmzfzdgymp"; depends=[Matrix Rcpp Rcpp RcppEigen ]; };
CpGFilter = derive { name="CpGFilter"; version="1.0"; type="cran"; sha256="07426xlmx0ya3pi1y5c24zr58wr024m38y036h9gz26pw7bpawy2"; depends=[ ]; };
CpGassoc = derive { name="CpGassoc"; version="2.50"; type="cran"; sha256="052mzkcp7510dm12winmwpxz6dvy54aziff0mn3nzy0xbk5v1fw4"; depends=[nlme ]; };
Cprob = derive { name="Cprob"; version="1.2.4"; type="cran"; sha256="0zird0l0kx2amrp4qjvlagw55pk9jrx0536gq7bvajj8avyvyykr"; depends=[prodlim tpr geepack lgtdl lattice ]; };
CreditMetrics = derive { name="CreditMetrics"; version="0.0-2"; type="cran"; sha256="16g3xw8r6axqwqv2f0bbqmwicgyx7nwzff59dz967iqna1wh3spi"; depends=[ ]; };
Crossover = derive { name="Crossover"; version="0.1-14"; type="cran"; sha256="0d35am446z1pj7iz2zk1fvmp3xn5nhz3pgj7rwhmj77ad8vy8p8b"; depends=[rJava CommonJavaJars JavaGD ggplot2 MASS crossdes xtable Matrix multcomp digest Rcpp RcppArmadillo ]; };
CrypticIBDcheck = derive { name="CrypticIBDcheck"; version="0.3-1"; type="cran"; sha256="1lrpwgvsif1wnp19agh8fs3nhlb7prr3hhqg28fi4ikdd1l2j3r4"; depends=[rJPSGCS car ellipse chopsticks ]; };
Cubist = derive { name="Cubist"; version="0.0.18"; type="cran"; sha256="176k9l7vrxamahvw346aysj19j7il9a2v6ka6dzmk0qq7hf3w9ka"; depends=[lattice reshape2 ]; };
D2C = derive { name="D2C"; version="1.2.1"; type="cran"; sha256="0qhq27978id0plyz9mgdi0r1sr3ixnvqm8w6hp5c2wjd1yhhh12s"; depends=[randomForest gRbase lazy RBGL MASS corpcor Rgraphviz foreach ]; };
DAAG = derive { name="DAAG"; version="1.20"; type="cran"; sha256="05jlsrs0frk9ky20h17c5vj9d4j28c9n0a1jww5lssacimn1d4x5"; depends=[lattice latticeExtra ]; };
DAAGbio = derive { name="DAAGbio"; version="0.62"; type="cran"; sha256="18m4vq8vv0yi79na62nrm0cy1nlk7bg0xbddzxv5gpkmzi1i6m9s"; depends=[limma ]; };
DAAGxtras = derive { name="DAAGxtras"; version="0.8-4"; type="cran"; sha256="18lg13mbyharidj5j7ncx8s7d72v2hcnqr00vilhf3djk2mjq7xn"; depends=[ ]; };
DAGGER = derive { name="DAGGER"; version="1.4"; type="cran"; sha256="0b2hzv001xhch7pqgb53lfpdcjwg5lj33i6pb884l1kx92svjfr7"; depends=[Rglpk quadprog Matrix ]; };
DAISIE = derive { name="DAISIE"; version="1.0"; type="cran"; sha256="0s26fc6gx9fg47k3wx11iw72b1hbawb0p7ixqz420ca48x6n95nd"; depends=[deSolve ]; };
DAKS = derive { name="DAKS"; version="2.1-2"; type="cran"; sha256="1817s7xd4h2zzaagmnw423qaxpa5fmxi3fh4h9hm2ra9w7nh6ljj"; depends=[relations sets ]; };
DALY = derive { name="DALY"; version="1.4.0"; type="cran"; sha256="1gx4q24149q1ipsrinswrm37z1nf4swgq188zsc1xifmw9l28v11"; depends=[ ]; };
DAMOCLES = derive { name="DAMOCLES"; version="1.1"; type="cran"; sha256="07z8mynhqnk1zcvm84w09xzkiy2dfxwhmnpi6gaddr3p0waql4gj"; depends=[geiger caper ape deSolve matrixStats expm picante ]; };
DAMisc = derive { name="DAMisc"; version="1.3"; type="cran"; sha256="0d6fkg0c5a2jx1khv013lmahx5clyzab9w2dsi5zwxnf0jz5m8fc"; depends=[car effects lattice sm MASS nnet pscl gdata xtable ]; };
DART = derive { name="DART"; version="1.12.0"; type="bioc"; sha256="0nq43b2lld40720139wjx9pkmjdbkiwmcgaakdd7k3i0vqpriarw"; depends=[igraph ]; };
DASiR = derive { name="DASiR"; version="1.6.0"; type="bioc"; sha256="0k19nlw4wf1fiwgnm3l2y6mmmwqigh62nd2iqjchj4v7g3vd134w"; depends=[IRanges GenomicRanges XML Biostrings ]; };
DATforDCEMRI = derive { name="DATforDCEMRI"; version="0.55"; type="cran"; sha256="0v26a1gi8l21ga5nqcnyfaa7gc8zxq6wk95b96ajgpdybb0l9s53"; depends=[xtable akima R_oo R_methodsS3 matlab lattice locfit ]; };
DAVIDQuery = derive { name="DAVIDQuery"; version="1.26.0"; type="bioc"; sha256="1ms5gqx2rf8k4cdwbjdfhyymdr59fyz6xmykgp398scl6kmgys6f"; depends=[RCurl ]; };
DBChIP = derive { name="DBChIP"; version="1.10.0"; type="bioc"; sha256="0d36sqwzrcpm9i24f7qc8lbkgxcrhilx2ic8czhp3lk81p5wa9qn"; depends=[edgeR DESeq ]; };
DBFTest = derive { name="DBFTest"; version="1.0"; type="cran"; sha256="0h83ic16z0lg7grjh4jbrxf672qchqv4zzypm2b1mhmzl01jn1wg"; depends=[ ]; };
DBGSA = derive { name="DBGSA"; version="1.2"; type="cran"; sha256="04zqh9y3nqcdzs5jn8aaq5idy9zl450ikvl788xs860wlg692qv2"; depends=[fdrtool ]; };
DBI = derive { name="DBI"; version="0.3.1"; type="cran"; sha256="0xj5baxwnhl23rd5nskhjvranrwrc68f3xlyrklglipi41bm69hw"; depends=[ ]; };
DBKGrad = derive { name="DBKGrad"; version="1.6"; type="cran"; sha256="0207zx0v1x3zhfbs0h1ssxc1b683k111f90k8ybhknb147104knr"; depends=[minpack_lm SDD TSA lattice ]; };
DCGL = derive { name="DCGL"; version="2.1.2"; type="cran"; sha256="1dhkdvdglpsr0fzrfrrr6q76jhwxgrcjsiqn56s082y7v366xvs4"; depends=[igraph limma ]; };
DCL = derive { name="DCL"; version="0.1.0"; type="cran"; sha256="1ls3x3v0wmddfy7ii7509cglb28l1ix1zaicdc6mhwin0rpp2rx3"; depends=[lattice latticeExtra ]; };
DCluster = derive { name="DCluster"; version="0.2-7"; type="cran"; sha256="008nyry64s5g80narcc58273v0jhqzfgwynka6mh7jgi7qsqnxjd"; depends=[boot spdep MASS ]; };
DDD = derive { name="DDD"; version="2.7"; type="cran"; sha256="06nnfn84vhfix8ks08y3kar2cpm63fqghf9y2dhgrnb4midpk5ig"; depends=[deSolve ape ade4 ]; };
DDHFm = derive { name="DDHFm"; version="1.1.1"; type="cran"; sha256="03zs2zbrhjcb321baghva7b8y61c8p9z6bfj2vg9cvadpb0260nk"; depends=[ ]; };
DDIwR = derive { name="DDIwR"; version="0.2-0"; type="cran"; sha256="0dqbldl5c6b8i5q3yk0hwd12lp8z9j4ilnmsqrkj69fv7mys9q3k"; depends=[XML foreign ]; };
DECIDE = derive { name="DECIDE"; version="1.2"; type="cran"; sha256="18kn2pm9r0ims2k1jfsfzh258wwxz0xg86rsbwgq6szh0azlq3qy"; depends=[ ]; };
DECIPHER = derive { name="DECIPHER"; version="1.12.0"; type="bioc"; sha256="0fxgzwyx8z3xygkvw6divadymxgfanmm1clcxzr6j3inicqmcd9k"; depends=[Biostrings RSQLite S4Vectors IRanges XVector Biostrings RSQLite S4Vectors IRanges XVector ]; };
DEDS = derive { name="DEDS"; version="1.40.0"; type="bioc"; sha256="1lzkcj2nil2d4aqwzi25s9y46p5rs2hs7is98iqphq49vw1xqxv5"; depends=[ ]; };
DEEPR = derive { name="DEEPR"; version="0.1"; type="cran"; sha256="0q8970q3gpjxwxdf2bkhpnqrxpm00w27b20a9sn9vv314rn1n7s8"; depends=[dirmult ]; };
DEGraph = derive { name="DEGraph"; version="1.18.0"; type="bioc"; sha256="02f3wq0lpv6mwl1xbhggywwldf8ib34vll2fdgcyyxnw2y3z534y"; depends=[R_utils graph KEGGgraph lattice mvtnorm R_methodsS3 RBGL Rgraphviz rrcov NCIgraph ]; };
DEGreport = derive { name="DEGreport"; version="1.0.0"; type="bioc"; sha256="1fki0qc7ln3ivcwkb3ra4hf8xwvfpbrlarzqy8yf2rxw9bi6fi9d"; depends=[rjags quantreg plyr ggplot2 Nozzle_R1 coda edgeR ]; };
DEGseq = derive { name="DEGseq"; version="1.20.0"; type="bioc"; sha256="0ndb1kdbhjab6c2q44rc171877g3xqcq3zs1n789b7y55m95qpdc"; depends=[qvalue samr ]; };
DEMEtics = derive { name="DEMEtics"; version="0.8-7"; type="cran"; sha256="1s59qim60d4gp5rxjacdbmxdbpdm7cy9samn088w8fs0q232vjjx"; depends=[ ]; };
DESeq = derive { name="DESeq"; version="1.18.0"; type="bioc"; sha256="10q9ag2na6pxrxzh01y1j9sp3vw8h769lr986n35mmxxq40n50nc"; depends=[BiocGenerics Biobase locfit lattice genefilter geneplotter MASS RColorBrewer ]; };
DESeq2 = derive { name="DESeq2"; version="1.6.3"; type="bioc"; sha256="1mc2ciyps16vsg3h7cxcl49k7n4rgbmal8qb3bqwa12jj5nnjpi0"; depends=[S4Vectors IRanges GenomicRanges Rcpp RcppArmadillo BiocGenerics Biobase BiocParallel genefilter locfit geneplotter ggplot2 Hmisc Rcpp RcppArmadillo ]; };
DESnowball = derive { name="DESnowball"; version="1.0"; type="cran"; sha256="012kdnxmzap6afc3ffkcvk1mazlkp286av6g9fwz2wcbf5mh9n1m"; depends=[clue combinat MASS cluster ]; };
DEXSeq = derive { name="DEXSeq"; version="1.12.2"; type="bioc"; sha256="0c2avg8likbs7mv6q7srwgf7qjlc2vk0qr0jbq97z0vjnb3h68fm"; depends=[Biobase GenomicRanges IRanges DESeq2 BiocParallel BiocGenerics biomaRt hwriter stringr Rsamtools statmod geneplotter genefilter RColorBrewer ]; };
DEoptim = derive { name="DEoptim"; version="2.2-3"; type="cran"; sha256="0pcs7kkhad139c3nhmg7bkac1av4siknfg59lpknwwrsxbz208dg"; depends=[ ]; };
DEoptimR = derive { name="DEoptimR"; version="1.0-2"; type="cran"; sha256="00viy7x3br3094az635lmjydm826d48vv2f14rwmdhqmv03066kq"; depends=[ ]; };
DFIT = derive { name="DFIT"; version="1.0-2"; type="cran"; sha256="1kn3av6pnkmf9703yp3cn0zbdzjzxrlm6nbbcg7lwv9550jw2c4n"; depends=[simex mvtnorm ggplot2 ]; };
DFP = derive { name="DFP"; version="1.24.0"; type="bioc"; sha256="1v0bvrjmzyxn1jc3fp1fzxa2pyxxmchb74vcq63j2gpnb2w35p52"; depends=[Biobase ]; };
DIFlasso = derive { name="DIFlasso"; version="1.0-1"; type="cran"; sha256="048d5x9nzksphsdk9lwfagl165bb40r0pvjq2ihvhqvxspgpar4b"; depends=[grplasso penalized miscTools ]; };
DIFtree = derive { name="DIFtree"; version="1.0.0"; type="cran"; sha256="08s6ba44517xq783fysksb1h53zkqsk7zakaibi1c2npq1gzny9p"; depends=[penalized plotrix ]; };
DIME = derive { name="DIME"; version="1.2"; type="cran"; sha256="11l6mk6i3kqphrnq4iwk4b0ridbbpg2pr4pyqaqbsb06ng899xw0"; depends=[ ]; };
DIRECT = derive { name="DIRECT"; version="1.0"; type="cran"; sha256="129bx45zmd6h7j6ilbzj2hjg4bcdc08dvm2igggi8ajndl1l5q9j"; depends=[ ]; };
DLMtool = derive { name="DLMtool"; version="1.35"; type="cran"; sha256="1qcc5q35a68m468ip1mhij2g0qzz5fhcjzax11a8n2fl9x2s9d57"; depends=[snowfall boot MASS ]; };
DMR = derive { name="DMR"; version="2.0"; type="cran"; sha256="1kal3bvhwqs00b6p6kl0ja35pcz9v9y569148qfhy94m319fcpzm"; depends=[magic ]; };
DMRcate = derive { name="DMRcate"; version="1.2.0"; type="bioc"; sha256="1klpsiwl2srip3dwlvdry1kjn5cpx6mmhakxrz0k7z07dy1c60zk"; depends=[limma minfi ]; };
DMRforPairs = derive { name="DMRforPairs"; version="1.2.0"; type="bioc"; sha256="1asmwfph7aw8a8s9aj5pgzqdkfh9lnd5kv3y21jjm7vcmd5snd4h"; depends=[Gviz R2HTML GenomicRanges ]; };
DMwR = derive { name="DMwR"; version="0.4.1"; type="cran"; sha256="1qrykl9zdvgm4c801iix5rxmhk9vbwnrq9cnc58ms5jf34hnmbcf"; depends=[lattice xts quantmod zoo abind rpart class ROCR ]; };
DNAcopy = derive { name="DNAcopy"; version="1.40.0"; type="bioc"; sha256="109dwb43f7hxzkyygirabrnm3nd7ibzk228k1mvlpz55n7w8v98y"; depends=[ ]; };
DNAprofiles = derive { name="DNAprofiles"; version="0.3.1"; type="cran"; sha256="0chsndrmanb2swmhfan9iz1bzz3jsvk24n7j9fnjxibckmn2fdpv"; depends=[RcppProgress Rcpp bit Rcpp RcppProgress ]; };
DNAtools = derive { name="DNAtools"; version="0.1-21"; type="cran"; sha256="1ncx2rmxb0ip804x6xznfv8brjpp518fhnm1653mlrsl3hpzrh88"; depends=[Rsolnp multicool Rcpp Rcpp ]; };
DNMF = derive { name="DNMF"; version="1.0"; type="cran"; sha256="0s484hzzvvkqdh4s5cb6znz26wx07f9k7y940ghx3dkdc7rb0hrx"; depends=[ ]; };
DNaseR = derive { name="DNaseR"; version="1.4.0"; type="bioc"; sha256="189g6ww5361i0jzicb4qnvjdbrw3n9wgw749awmr1ai6igp7mg9g"; depends=[BiocGenerics S4Vectors IRanges GenomeInfoDb GenomicRanges Rsamtools ]; };
DOBAD = derive { name="DOBAD"; version="1.0.4"; type="cran"; sha256="1hslwgs4q05xm29my5cq6g3vvjc0arvdmlx734wardj9dy29p1v5"; depends=[numDeriv lattice ]; };
DOQTL = derive { name="DOQTL"; version="1.0.0"; type="bioc"; sha256="12sxw204hxw59pcxgilhz9x5k0wqpn1cyds1ih6bf9497da3vbab"; depends=[annotate annotationTools biomaRt Biobase BiocGenerics corpcor GenomicRanges hwriter IRanges mclust QTLRel Rsamtools RUnit XML ]; };
DOSE = derive { name="DOSE"; version="2.4.0"; type="bioc"; sha256="0swyzrx1aapnqszzwavl0insw6ml8hrvscvqmpwr72cssclq0p3d"; depends=[plyr qvalue AnnotationDbi igraph scales reshape2 GOSemSim ggplot2 ]; };
DOvalidation = derive { name="DOvalidation"; version="0.1.0"; type="cran"; sha256="0vm4sxbchkj2hk91xnzj6lpj05jg2zcinlbcamy0x1lrbjffn9zk"; depends=[ ]; };
DPpackage = derive { name="DPpackage"; version="1.1-6"; type="cran"; sha256="01qdl6cp6wkddl9fwwpxwvyhb7lpjxis6wnbm2s288y2n9wi4j24"; depends=[MASS nlme survival ]; };
DPw = derive { name="DPw"; version="1.1.3"; type="cran"; sha256="1cw9qig5z2nfp2b3k4ng5hpar9izd3d6jihj93mkc0rqcli2wzp1"; depends=[fOptions ]; };
DSBayes = derive { name="DSBayes"; version="1.1"; type="cran"; sha256="0iv4l11dww45qg8x6xcf82f9rcz8bcb9w1mj7c7ha9glv5sfb25v"; depends=[BB ]; };
DSL = derive { name="DSL"; version="0.1-5"; type="cran"; sha256="0k320cmim9mvi5cmr6964h9i2jbskh76xws3p6zsfakk63ndg3rr"; depends=[ ]; };
DSS = derive { name="DSS"; version="2.4.1"; type="bioc"; sha256="0lm8miyzg2cyc1p18qvv6g63wmk7d25q6igsk8p8p663y7jkm43s"; depends=[Biobase bsseq edgeR ]; };
DSpat = derive { name="DSpat"; version="0.1.6"; type="cran"; sha256="1v6dahrp8q7fx0yrwgh6lk3ll2l8lzy146r28vkhz08ab8hiw431"; depends=[spatstat RandomFields rgeos mgcv sp ]; };
DSsim = derive { name="DSsim"; version="1.0.3"; type="cran"; sha256="01kkpzs0prcq43y4nmyaw39bgjabr99xxs2hn3fmb4ka46xj0bfb"; depends=[shapefiles splancs mrds mgcv ]; };
DStree = derive { name="DStree"; version="1.0"; type="cran"; sha256="14wba25ylmsyrndh007kl377dv4r34wr1555yxl6kyxrs4yg3jir"; depends=[rpart pec Ecdat rpart_plot survival Rcpp Rcpp ]; };
DSviaDRM = derive { name="DSviaDRM"; version="1.0"; type="cran"; sha256="1hj2pgnldrpgapwwz1kf4k6mvyzwdvb1i6czd7sbimsx5hafwps8"; depends=[igraph ppcor ]; };
DTA = derive { name="DTA"; version="2.12.1"; type="bioc"; sha256="0rbwx2853388fvshrf8sz48ilcdrs4062isavaq5dwvma484jrdk"; depends=[LSD scatterplot3d ]; };
DTComPair = derive { name="DTComPair"; version="1.0.3"; type="cran"; sha256="1af2293ckkpz0gjcibgzzvz37852cav4wa4girpc87yn3p4ajlri"; depends=[gee PropCIs ]; };
DTDA = derive { name="DTDA"; version="2.1-1"; type="cran"; sha256="0hi2qjcwd6zrzx87mdn1kns5f2h6jh7sz9jpgbi0p0i80xg8jnn3"; depends=[ ]; };
DTK = derive { name="DTK"; version="3.5"; type="cran"; sha256="0nxcvx25by2nfi47samzpfrd65qpgvcgd5hnq9psx83gv502g55l"; depends=[ ]; };
DTMCPack = derive { name="DTMCPack"; version="0.1-2"; type="cran"; sha256="0bibas5cf06qq834x9q2l2fyh6q9wrg07k8cn6almcyirzax6811"; depends=[ ]; };
DTR = derive { name="DTR"; version="1.6"; type="cran"; sha256="186qgrx9alzmj1vdy2yvfqs5xgidmwddm0zgg041s5q992cih36g"; depends=[survival ggplot2 gridExtra aod proto ]; };
DVHmetrics = derive { name="DVHmetrics"; version="0.3"; type="cran"; sha256="1ndrzd5q12kabpk3yj95s24kn7ri61w1h4aa50zw9qb12f5dzc98"; depends=[ggplot2 reshape2 shiny KernSmooth markdown ]; };
Daim = derive { name="Daim"; version="1.1.0"; type="cran"; sha256="19s0p3a4db89i169n2jz7lf8r7pdmrksw7m3cp9n275b5h8yjimx"; depends=[rms ]; };
DandEFA = derive { name="DandEFA"; version="1.5"; type="cran"; sha256="0d82rjkgqf4w7qg7irlqvzzav1f23i2gmygkbf8jycaa6xhli80d"; depends=[gplots polycor ]; };
Dark = derive { name="Dark"; version="0.9.4"; type="cran"; sha256="0paw34zhbi8k6pjgykxxqhpjgl8qr340dv091r9931q4mm215j2n"; depends=[ ]; };
DatABEL = derive { name="DatABEL"; version="0.9-6"; type="cran"; sha256="1w0w3gwacqrbqjdcngdp44d2gb16pq9grq2f8j2bhbxc4nkx12n1"; depends=[ ]; };
DataCombine = derive { name="DataCombine"; version="0.2.9"; type="cran"; sha256="1yvpv28fwkifiiyzj121dhzwzp06fncms5jbwpvc3nkq1bpzm2mk"; depends=[data_table dplyr ]; };
Davies = derive { name="Davies"; version="1.1-8"; type="cran"; sha256="1wp7ifbs4vqfrn4vwh09lc53yiagpww91m5mxmcr62mjbw8q7zhr"; depends=[ ]; };
DeconRNASeq = derive { name="DeconRNASeq"; version="1.8.0"; type="bioc"; sha256="0bk8q1dp0hnrkcymgimbymlz3v7s5bgzx59m51rcypypyhdnc3gi"; depends=[limSolve pcaMethods ggplot2 ]; };
Deducer = derive { name="Deducer"; version="0.7-7"; type="cran"; sha256="1x97rz92v1hx30fdmgd1lnzydgygjp6zh20v082qymvh997l1zzd"; depends=[ggplot2 JGR car MASS rJava e1071 scales plyr foreign multcomp effects ]; };
DeducerExtras = derive { name="DeducerExtras"; version="1.7"; type="cran"; sha256="0sngsq31469a74y7nhskl82fwy2i0ga68m9g6b1xyhxz1a8kgvlg"; depends=[Deducer irr rJava ]; };
DeducerPlugInExample = derive { name="DeducerPlugInExample"; version="0.2-0"; type="cran"; sha256="03aw7wr957xzw920ybyzxnck5kx0q2xpcrpq8jh2afyzszy6hzbi"; depends=[Deducer ]; };
DeducerPlugInScaling = derive { name="DeducerPlugInScaling"; version="0.1-0"; type="cran"; sha256="1qg11vi4szznchh54p9345jbmrfzfr9z5l3x5xz4m86myjkys1mb"; depends=[Deducer psych GPArotation mvnormtest irr klaR ]; };
DeducerSpatial = derive { name="DeducerSpatial"; version="0.7"; type="cran"; sha256="0133qk3yjcifyha7c4pqr5s0hmbci72bzgil2r0sxjmrljs3q727"; depends=[JavaGD Deducer sp maptools OpenStreetMap scales rgdal UScensus2010 Hmisc ]; };
DeducerSurvival = derive { name="DeducerSurvival"; version="0.1-0"; type="cran"; sha256="03qk3y4pibvrxbnxbm5rlksw807dvbilip1jbpn1r7k02ibzq676"; depends=[Deducer ]; };
DeducerText = derive { name="DeducerText"; version="0.1-2"; type="cran"; sha256="0if2p9j74wa5rva4iv0i8iax22grl9j7lqcqzqlywjgqwnlzxa05"; depends=[Deducer tm wordcloud RColorBrewer SnowballC ]; };
Delaporte = derive { name="Delaporte"; version="2.2-2"; type="cran"; sha256="1smx8vbi1kvfij00aq0fzj03sxagnzn9vfws0f5973bp3q72x86q"; depends=[Rcpp Rcpp ]; };
Demerelate = derive { name="Demerelate"; version="0.8-1"; type="cran"; sha256="1qngwlzzpd2cmij5ldrmhcn12s9yxd0rargc5vzvkrwcqpkgylkn"; depends=[Formula fts sfsmisc vegan mlogit ]; };
DendSer = derive { name="DendSer"; version="1.0.1"; type="cran"; sha256="0id6pqx54zjg5bcc7qbxiigx3wyic771xn9n0hbm7yhybz6p3gz9"; depends=[gclus seriation ]; };
Density_T_HoldOut = derive { name="Density.T.HoldOut"; version="2.00"; type="cran"; sha256="0kh5nns1kqyiqqfsgvxhx774i2mf4gcim8fp5jjyq577x4679r31"; depends=[histogram ]; };
DepthProc = derive { name="DepthProc"; version="1.0.3"; type="cran"; sha256="0xil3pl33224sizn1wy9x3lcngw017qjl22hfqzss9iy73cmxqnc"; depends=[ggplot2 Rcpp rrcov MASS np lattice sm geometry colorspace Rcpp RcppArmadillo ]; };
Deriv = derive { name="Deriv"; version="3.4"; type="cran"; sha256="03fawwlcc3lxp7y3labbhvhpzcp9yfxhbwq7bq8av1fvq92l4xi6"; depends=[ ]; };
DescTools = derive { name="DescTools"; version="0.99.11"; type="cran"; sha256="0ccqgx6w7x55h5pd76hjyq79g0cdyw2m0w1h55kw4chqj0ibqizy"; depends=[manipulate boot mvtnorm foreign ]; };
DescribeDisplay = derive { name="DescribeDisplay"; version="0.2.4"; type="cran"; sha256="13npxq1314n4n08j6hbmij7qinl1xrxrgc5hxpbbpbd16d75c7iw"; depends=[proto reshape2 ggplot2 plyr scales GGally ]; };
DetMCD = derive { name="DetMCD"; version="0.0.2"; type="cran"; sha256="0z4zs0k8c8gsd2fry984p06l3p17fdyfky8fv9kvypk7xdg52whc"; depends=[robustbase Rcpp RcppEigen ]; };
DetSel = derive { name="DetSel"; version="1.0.2"; type="cran"; sha256="0igkccclmjwzk7sl414zlhiykym0qwaz5p76wf4i7yrpjgk7mhl9"; depends=[ash ]; };
Devore7 = derive { name="Devore7"; version="0.7.6"; type="cran"; sha256="1m18p8h9vv4v0aq2fkjyj39vzb8a09azbbczhfiv4y88w540i8nw"; depends=[MASS lattice ]; };
DiagTest3Grp = derive { name="DiagTest3Grp"; version="1.6"; type="cran"; sha256="04dxyyqv333rkjf2vlfpal59m7klhw6y7qilym6nw78qb1kqqys7"; depends=[car KernSmooth gplots ]; };
DiagrammeR = derive { name="DiagrammeR"; version="0.6"; type="cran"; sha256="021i1nvw5airli3392rwz9vq1zxwm2pdlw1y6wqw4968g8yc0k9f"; depends=[htmlwidgets rstudioapi ]; };
DiceDesign = derive { name="DiceDesign"; version="1.6"; type="cran"; sha256="1djq7clga3cvpgfycs3zjj106213yhfj9909sqrni70nj1nwdpj9"; depends=[ ]; };
DiceEval = derive { name="DiceEval"; version="1.3"; type="cran"; sha256="1vp9zwd09cwl3c8066jr9d3w4yic70fvd40r7hsj2y8d0bhiwl82"; depends=[DiceKriging ]; };
DiceKriging = derive { name="DiceKriging"; version="1.5.5"; type="cran"; sha256="035kbk633v4kfb44wiyb556sayl73c24fc1w09r3f33shqgidzjm"; depends=[ ]; };
DiceOptim = derive { name="DiceOptim"; version="1.5"; type="cran"; sha256="0ajqn5p7sl9rdj35wy45vmmzxl2d97jgz5wdq6ghdzxq523vfkz3"; depends=[DiceKriging rgenoud MASS lhs mnormt ]; };
DiceView = derive { name="DiceView"; version="1.3-1"; type="cran"; sha256="0c7i1jy13d5bj822q1rp0d7gmmfjd00jaah34pnj8fzwyrq404z9"; depends=[DiceKriging DiceEval rgl ]; };
DiffBind = derive { name="DiffBind"; version="1.12.3"; type="bioc"; sha256="0rm1jgzrw5ik0pxryf7vrq715d0gvxfiid1amf9wk2s4vqxj2shj"; depends=[GenomicRanges limma GenomicAlignments RColorBrewer amap edgeR gplots IRanges zlibbioc lattice S4Vectors Rsamtools ]; };
DiffCorr = derive { name="DiffCorr"; version="0.4.1"; type="cran"; sha256="1kxp9dbiww086rmvmjvfhbk7jl36dkj88qwii6zg57llf7l5l4hm"; depends=[pcaMethods igraph fdrtool multtest ]; };
Digiroo2 = derive { name="Digiroo2"; version="0.6"; type="cran"; sha256="1b1ahhqz5largjadlk5n6nw2183c05k28mksb1wm26y0lps0vdgr"; depends=[maptools spatstat spdep ]; };
DirichletMultinomial = derive { name="DirichletMultinomial"; version="1.8.0"; type="bioc"; sha256="10hip99fxyl9pb2kp810j5cr59i2xmn1x60ansgjdr0xcbp0791w"; depends=[S4Vectors IRanges ]; };
DirichletReg = derive { name="DirichletReg"; version="0.6-2"; type="cran"; sha256="08qfykyahyq54l9zm7g1yzmk2biz4xqq3qpxw0py4xazq719slk8"; depends=[Formula rgl maxLik ]; };
Disake = derive { name="Disake"; version="1.5"; type="cran"; sha256="1fw45fmnir6h34jw8917mhyz6cgzbq4ywyyf51qxhm68wgzy9h17"; depends=[ ]; };
DiscML = derive { name="DiscML"; version="1.0.1"; type="cran"; sha256="0qkh0yak1kmzxxx0cqb47zgrj8v2s1d5danpibwwg43j138sb73l"; depends=[ape ]; };
DiscreteInverseWeibull = derive { name="DiscreteInverseWeibull"; version="1.0.1"; type="cran"; sha256="0w0s2fixpcmcwids35xx91hll9rf9qbi7155sp90dxd3vr8c939v"; depends=[Rsolnp ]; };
DiscreteLaplace = derive { name="DiscreteLaplace"; version="1.0"; type="cran"; sha256="1mwqvlhgswqp697zjl6yjzqbgazycwwz6dfdvx8s72hdmnlqqr9r"; depends=[ ]; };
DiscreteWeibull = derive { name="DiscreteWeibull"; version="1.0"; type="cran"; sha256="0v8za4arqarf20jrw38dzcjxdwfdpn0ss7p5yxbwhylnj7qz207w"; depends=[Rsolnp ]; };
DiscriMiner = derive { name="DiscriMiner"; version="0.1-29"; type="cran"; sha256="1ii8aa4dwfk991qdnpmkva20wvs5fqcna9030c799ybf11qpdass"; depends=[ ]; };
Distance = derive { name="Distance"; version="0.9.3"; type="cran"; sha256="054z9pi8m8gjpax3s2hajvaik4yvfpy8qc4gmpl9bqncrk594pbv"; depends=[mrds ]; };
DistatisR = derive { name="DistatisR"; version="1.0"; type="cran"; sha256="1il00v26q68h5dd5c9lm2jblgn8hs6n0457r13mlw6r7pcj0158j"; depends=[prettyGraphs car ]; };
DistributionUtils = derive { name="DistributionUtils"; version="0.5-1"; type="cran"; sha256="0gw531wfrjx1sxh17qh48dwbxnibgr0viga07vsp8nay7l02jap9"; depends=[RUnit ]; };
DivE = derive { name="DivE"; version="1.0"; type="cran"; sha256="1ixkk8kd3ri78ykq178izib0vwppnbiwbpc1139rcl8f5giiwcdh"; depends=[deSolve FME rgeos sp ]; };
DivMelt = derive { name="DivMelt"; version="1.0.3"; type="cran"; sha256="03vkz8d283l3zgqg7bh5dg3bss27pxv4qih7zwspwyjk81nw3xmr"; depends=[glmnet ]; };
DiversitySampler = derive { name="DiversitySampler"; version="2.1"; type="cran"; sha256="1sfx7craykb82ncphvdj19mzc0kwzafhxlk9jcxkskygrlwsxfgg"; depends=[ ]; };
DnE = derive { name="DnE"; version="2.1.0"; type="cran"; sha256="02cbfb3m9xf24wkgqc06k3k0rx7qlqh4ma43khg6fpvif6yyahrn"; depends=[ ]; };
DoE_base = derive { name="DoE.base"; version="0.27"; type="cran"; sha256="0nh0hs4g8cl3h7p84ddag1qk4rdyw5wb13qnvw23r12q0f1p6y3l"; depends=[conf_design vcd combinat MASS ]; };
DoE_wrapper = derive { name="DoE.wrapper"; version="0.8-10"; type="cran"; sha256="12q3arfm76x9j8qnrmw07jh904qdqz59ga1zk8m3n17prr11vrgb"; depends=[FrF2 DoE_base rsm lhs DiceDesign AlgDesign ]; };
Dodge = derive { name="Dodge"; version="0.8"; type="cran"; sha256="1vnvqb2qvl6c13s48pyfn1g6yfhc60ql3vn7yh2zymxcsr1gxgcw"; depends=[ ]; };
Dominance = derive { name="Dominance"; version="1.0.0"; type="cran"; sha256="0xcmslzfdcy826vcnlybhdyym5kqkrdqidq6jn10s4jic7jk8nl3"; depends=[igraph chron gdata ]; };
DoseFinding = derive { name="DoseFinding"; version="0.9-12"; type="cran"; sha256="126xhq1ckry65g312cqvs9bdcl2ws34k6xnq7n9dcgi8jiizz46d"; depends=[lattice mvtnorm ]; };
DoubleCone = derive { name="DoubleCone"; version="1.0"; type="cran"; sha256="1pba9ypp0n3i2k3ji1x8j7h548pfam9z99hxylcjcxnnvc7xs2fw"; depends=[coneproj Matrix MASS ]; };
DoubleExpSeq = derive { name="DoubleExpSeq"; version="1.0"; type="cran"; sha256="0y797iqmxihrsp8lhy84p5hlyw3ckpklv0pgcqv4h39a6cpglbvd"; depends=[numDeriv ]; };
DriverNet = derive { name="DriverNet"; version="1.6.0"; type="bioc"; sha256="00rccsf3zvyghx9a1gjs9smd5cf927rwx1fghnq5a9kkwg21sp5m"; depends=[ ]; };
DrugVsDisease = derive { name="DrugVsDisease"; version="2.6.0"; type="bioc"; sha256="1b5214gknp4dsgg1gc229kln89nlvddx2d202jaiqdgw9j0gyn4s"; depends=[affy limma biomaRt ArrayExpress GEOquery qvalue annotate RUnit BiocGenerics xtable ]; };
DunnettTests = derive { name="DunnettTests"; version="2.0"; type="cran"; sha256="1sf0bdxays10n8jh2qy85fv7p593x58d4pas9dwlvvah0bddhggg"; depends=[mvtnorm ]; };
DupChecker = derive { name="DupChecker"; version="1.4.0"; type="bioc"; sha256="0k5yyi3hnz08x5fy7vhp0glhcjdp2mlgkvqmqw78w12af0pynpjf"; depends=[R_utils RCurl ]; };
DynClust = derive { name="DynClust"; version="3.13"; type="cran"; sha256="020zl2yljp47r03rcbzrbdmwk482xx27awwzv4kdrbchbzwhxqgm"; depends=[ ]; };
DynDoc = derive { name="DynDoc"; version="1.44.0"; type="bioc"; sha256="14vx87r20ccf08wx3a42rg2dg0ydbprwxsk24j5bmjxqkm45pmxc"; depends=[ ]; };
DynNom = derive { name="DynNom"; version="1.0.1"; type="cran"; sha256="0gdy3kqj63khm74cdjhfmlnd06ard97h1598rkqwm7c3cng7b98c"; depends=[ggplot2 stargazer shiny compare ]; };
DynamicDistribution = derive { name="DynamicDistribution"; version="1.1"; type="cran"; sha256="1s78hpj2pxjs4vixin1i816qjbn3wk7b8rd2zdjp4d4rbxifcqf5"; depends=[ ]; };
EBEN = derive { name="EBEN"; version="1.1.1"; type="cran"; sha256="12nh96avcx4rrbmlr1q046i5ymrsnqvf0ra5ynh58akajfx7wy49"; depends=[ ]; };
EBImage = derive { name="EBImage"; version="4.8.3"; type="bioc"; sha256="1lzbn2i8ikqghp5jnb3a0k2in3b9f4ck4imlk6l6ddi6szprmrrs"; depends=[BiocGenerics abind tiff jpeg png locfit ]; };
EBMAforecast = derive { name="EBMAforecast"; version="0.42"; type="cran"; sha256="161l6jxbzli2g5lcmlp74z320rsvsi80pxk1vc1ypa1hgwz3q80x"; depends=[separationplot ensembleBMA plyr Hmisc abind ]; };
EBS = derive { name="EBS"; version="3.0"; type="cran"; sha256="0nrqglbfr7wagd4xrk5jx0kficjgvk7wqwzqrbs589dkll24sn5b"; depends=[MASS ]; };
EBSeq = derive { name="EBSeq"; version="1.6.0"; type="bioc"; sha256="0k6azzbyxxaqblv326i0ykm414qhwsrr69k1l3dfbwvrh17giamv"; depends=[blockmodeling gplots ]; };
EBSeqHMM = derive { name="EBSeqHMM"; version="1.0.0"; type="bioc"; sha256="13nfj4ka0plli2yd69jmvy1qsqcprn0xbzqmr264v15msl94vqyx"; depends=[EBSeq ]; };
EBarrays = derive { name="EBarrays"; version="2.30.0"; type="bioc"; sha256="1v32rzzx9brv3c0kl7zmxa09ah954nd1rynljm2l21h0swlrrr64"; depends=[Biobase lattice Biobase cluster lattice ]; };
EBcoexpress = derive { name="EBcoexpress"; version="1.10.0"; type="bioc"; sha256="0w684g7v2r55br4n9lb9r0sdm9p0z7v4cb38fy7nin8rcipkqh0r"; depends=[EBarrays mclust minqa ]; };
EBglmnet = derive { name="EBglmnet"; version="3.6"; type="cran"; sha256="0qjwk5y9bghidha4i937nc0kl1jz4d8g2br6ij8651lf2byj9s1a"; depends=[ ]; };
EDASeq = derive { name="EDASeq"; version="2.0.0"; type="bioc"; sha256="1q0n1p7ba6kp7gq1fhvjg0bdwb34dxn0xvxqajh36xx34f1ksiv6"; depends=[Biobase ShortRead BiocGenerics IRanges DESeq aroma_light Rsamtools ]; };
EDDA = derive { name="EDDA"; version="1.5.3"; type="bioc"; sha256="0syhwhqbpvazy6vnpkjx99m752fwdzkaqyq98kwx4pjikpw6j2zr"; depends=[Rcpp ROCR DESeq baySeq snow edgeR ROCR DESeq baySeq snow edgeR Rcpp ]; };
EDISON = derive { name="EDISON"; version="1.1"; type="cran"; sha256="09xw4p4hwj8djq143wfdcqhr2mhwynj4ixj3ma7crhqidgal169p"; depends=[corpcor MASS ]; };
EDR = derive { name="EDR"; version="0.6-5.1"; type="cran"; sha256="10ldygd1ymc4s9gqhhnpipggsiv4rwbgajvdk4mykkg3zmz7cbpm"; depends=[ ]; };
EFDR = derive { name="EFDR"; version="0.1.1"; type="cran"; sha256="0jgznwrd40g9xmvhrd7b441g79x41ppfdn6vbsbzc0k5ym1wzb1p"; depends=[Matrix foreach doParallel waveslim gstat tidyr dplyr sp ]; };
EGRET = derive { name="EGRET"; version="2.2.0"; type="cran"; sha256="1a3bvmshmxrnaijl9pklfia0ab94rzn22ywjh9gwn268qai52zjy"; depends=[dataRetrieval survival fields lubridate ]; };
EIAdata = derive { name="EIAdata"; version="0.0.3"; type="cran"; sha256="12jgw3vi2fminwa4lszczdr4j4svn2k024462sgj1sn07a4a4z2s"; depends=[XML plyr xts zoo ]; };
EILA = derive { name="EILA"; version="0.1-2"; type="cran"; sha256="0wxl9k4fa0f7jadw3lvn97iwy7n2d02m8wvm9slnhr2n8r8sx3hb"; depends=[class quantreg ]; };
EL = derive { name="EL"; version="1.0"; type="cran"; sha256="13r7vjy2608h8jph8kwy69rnkg98b2v69117nrl728r3ayc46a18"; depends=[ ]; };
ELBOW = derive { name="ELBOW"; version="1.2.0"; type="bioc"; sha256="0k2iaa5v2pr2h6vfa5r7lrqkvxsaq6hf4zi2si4n2qivm29s3hby"; depends=[ ]; };
ELT = derive { name="ELT"; version="1.3"; type="cran"; sha256="0q6gc3npwxqq0hz1ardssv5wfxjnx93pi4l1viqsb0wp2kkfq3w6"; depends=[locfit lattice latticeExtra xlsx ]; };
ELYP = derive { name="ELYP"; version="0.7-2"; type="cran"; sha256="1aji3b9mixhzc6zv7qksacx328drpi0q7pgv3gi6iazira7lybdy"; depends=[survival ]; };
EMA = derive { name="EMA"; version="1.4.4"; type="cran"; sha256="1hqkan9k6ps4qckjrhsgxzham106fm38m5rgayz8i2ji3spvbfca"; depends=[siggenes affy multtest survival xtable gcrma heatmap_plus biomaRt GSA MASS FactoMineR cluster AnnotationDbi ]; };
EMC = derive { name="EMC"; version="1.3"; type="cran"; sha256="0sdpxf229z3j67mr9s7z4adzvvphgvynna09xkkpdj21mpml23p6"; depends=[mvtnorm MASS ]; };
EMCC = derive { name="EMCC"; version="1.2"; type="cran"; sha256="1qff8yvw7iqdsrqkvwb7m14xh7gcnjcrf8gw00g4j6aq0h0cgk2z"; depends=[MASS mclust EMC ]; };
EMCluster = derive { name="EMCluster"; version="0.2-4"; type="cran"; sha256="0m5cl5mrg6q0ixfpjj1jwd7l5hcldc33lr7n6xgy7p9nlr52mimz"; depends=[MASS ]; };
EMD = derive { name="EMD"; version="1.5.7"; type="cran"; sha256="0m2g7akg9h964d6qr1mj20h9pcb2fcmala3skhl0qpy8qz01w5ck"; depends=[fields locfit ]; };
EMJumpDiffusion = derive { name="EMJumpDiffusion"; version="1.4.1"; type="cran"; sha256="10lw6717yq9vlywn5ilsl0d99fpx3zvc87vf7s0zxswhs81h7x1w"; depends=[ ]; };
EMMAgeo = derive { name="EMMAgeo"; version="0.9.1"; type="cran"; sha256="1rxbb666gh9g35m4jqa6y1zjp82s62ha6n92fkjvkk9wm25w6imr"; depends=[GPArotation limSolve shape ]; };
EMMIXcontrasts = derive { name="EMMIXcontrasts"; version="1.0.0"; type="cran"; sha256="1q7bwf7kkpraj38lz5s1lhhghp7a5lzyj5b9x8024g6rh2qlwp7v"; depends=[ ]; };
EMMIXskew = derive { name="EMMIXskew"; version="1.0.1"; type="cran"; sha256="16jkq0a9k1gf6gia8r65nwa2lh8zny4jmnq51g2rcqm44s5ylqbh"; depends=[lattice mvtnorm KernSmooth ]; };
EMMIXuskew = derive { name="EMMIXuskew"; version="0.11-6"; type="cran"; sha256="0japf0l0sj84jna7b5kirp6pgqa4c923ldwphb16ch2xxrgk5n5k"; depends=[MASS ]; };
EMMREML = derive { name="EMMREML"; version="3.0"; type="cran"; sha256="0y37ydssn6m2q78v2aympfjr6z2hcn5y3dlgv4pj5g414fikb825"; depends=[Matrix ]; };
EMP = derive { name="EMP"; version="2.0.1"; type="cran"; sha256="1zdy05jfhcgj6415pnm079v8xjg90n3akp1rwq65jbqdar38zj4y"; depends=[ROCR ]; };
EMT = derive { name="EMT"; version="1.1"; type="cran"; sha256="0m3av1x3jcp3hxnzrfb128kch9gy2zlr6wpy96c5c8kgbngndmph"; depends=[ ]; };
EMVC = derive { name="EMVC"; version="0.1"; type="cran"; sha256="1725zrvq419yj0gd79h8bm56lv2mmk296wq3wapivcy6xn0j97jh"; depends=[ ]; };
ENMeval = derive { name="ENMeval"; version="0.1.1"; type="cran"; sha256="0g1h8dklv6rv73wwpx3vhbpnwply5lpq8x9jvl7r018x9gcvvb9m"; depends=[dismo raster rJava ]; };
ENVISIONQuery = derive { name="ENVISIONQuery"; version="1.14.0"; type="bioc"; sha256="1xhcvmw9px4kyg3p7wc08jrin0qkw7xi20jjy34fd6almnmk7mfd"; depends=[rJava XML ]; };
ENiRG = derive { name="ENiRG"; version="0.1"; type="cran"; sha256="1cnl1mjl5y1rc6fv7c9jw2lkm898l3flfrj3idx9v1brjzyx5xlf"; depends=[ade4 raster R_utils sp spgrass6 gdata fgui miniGUI ]; };
ENmisc = derive { name="ENmisc"; version="1.2-7"; type="cran"; sha256="07rix4nbwx3a4p2fif4wxbm0nh0qr7wbs7nfx2fblafxfzhh6jc7"; depends=[Hmisc vcd RColorBrewer ]; };
EQL = derive { name="EQL"; version="1.0-0"; type="cran"; sha256="0lxfiizkvsfls1km1zr9v980191af6qjrxwcqsa2n6ygzcb17dp5"; depends=[ttutils lattice ]; };
ERP = derive { name="ERP"; version="1.0.1"; type="cran"; sha256="0wy1p7pp9dvc3krylskb627rmfqaj11qvia97m88x05ydqx1fwmr"; depends=[fdrtool mnormt ]; };
ES = derive { name="ES"; version="1.0"; type="cran"; sha256="1rapwf6kryr6allzbjk6wmxpj9idd3xlnh87rwbh6196xb7rp8lv"; depends=[ ]; };
ESEA = derive { name="ESEA"; version="1.0"; type="cran"; sha256="06r5lki32mxkznj6yxvlz0ikqcxm3jbaralv4qp9xrw6dy6yyg27"; depends=[igraph XML parmigene ]; };
ESG = derive { name="ESG"; version="0.1"; type="cran"; sha256="1jw6239asv6lwxrz5v0r5pzg6v500bqxg8361sh4jj67rsrc7g9m"; depends=[ ]; };
ESGtoolkit = derive { name="ESGtoolkit"; version="0.1"; type="cran"; sha256="0r09arhsvamdyahini5yhgc43msdxwvn45l57xbfszahsnr3b3aq"; depends=[CDVine ggplot2 gridExtra reshape2 ycinterextra Rcpp Rcpp ]; };
ETAS = derive { name="ETAS"; version="0.0-1"; type="cran"; sha256="1p38ay3vnca8b8wszm66whxap8k58c004l1nlsk7zkynyia0im6c"; depends=[spatstat ]; };
ETC = derive { name="ETC"; version="1.3"; type="cran"; sha256="1nvb9n0my7h1kq996mk91canxi6vxy3mzhrshrvm13ixvl48lkkh"; depends=[mvtnorm ]; };
ETLUtils = derive { name="ETLUtils"; version="1.3"; type="cran"; sha256="13xq9i9fr34kx1nym7nr02gynshzm4jjn4qzx6ydg044b7xl57jp"; depends=[ff bit ]; };
EW = derive { name="EW"; version="1.1"; type="cran"; sha256="0wc3v9qisiikvlp28xhlgsxb92fhkm6vslia6d0vpihyai0p1h1g"; depends=[ ]; };
EWGoF = derive { name="EWGoF"; version="2.0"; type="cran"; sha256="07kpzaqfd7ihpmh2y5806mz5h64dcajia5v36pp9myl04fvpjapp"; depends=[Rcpp maxLik miscTools Rcpp ]; };
EasyABC = derive { name="EasyABC"; version="1.4"; type="cran"; sha256="0v3i7vlx2pnfkcqxka4g7ss8k8zphyx3vq5l0c1b433qp0fnjwf3"; depends=[abc pls mnormt MASS lhs ]; };
EasyHTMLReport = derive { name="EasyHTMLReport"; version="0.1.1"; type="cran"; sha256="1hgg8i7py7bx48cldyc7yydf0bggmbj3fx3kwiv9jh1x5wyh929z"; depends=[base64enc markdown knitr ggplot2 scales xtable reshape2 ]; };
EasyMARK = derive { name="EasyMARK"; version="1.0"; type="cran"; sha256="10slkblbyxq98c3sxgs194dnkx996khfcpxj6jhz355dp35z7c9d"; depends=[MASS stringr rjags coda foreach doParallel random ]; };
EasyStrata = derive { name="EasyStrata"; version="8.6"; type="cran"; sha256="0agmap9lmqbpfw8ijwxmjkcqjvc1ng0jsadkqpfz71a963nkqdcl"; depends=[Cairo plotrix ]; };
EasyqpcR = derive { name="EasyqpcR"; version="1.8.0"; type="bioc"; sha256="0ql9mj94yb0cpk0gwnhrlsc0xr6i7psral26vgp7zrzx5iw6zg9d"; depends=[plyr matrixStats plotrix gWidgetsRGtk2 ]; };
EbayesThresh = derive { name="EbayesThresh"; version="1.3.2"; type="cran"; sha256="0n7cr917jrvmgwfqki7shvz9g9zpmbz9z8hm5ax7s8nnfzphrh4g"; depends=[ ]; };
Ecdat = derive { name="Ecdat"; version="0.2-7"; type="cran"; sha256="1z9mxx3mvn3vi5drxlzss7gs7vpzg7shinl529bx4jpxqpci90jy"; depends=[Ecfun ]; };
Ecfun = derive { name="Ecfun"; version="0.1-4"; type="cran"; sha256="0h3351pcahrn578lz1pcb7h3chmh0vmwbn9iqll98vibck847gai"; depends=[fda gdata RCurl XML tis jpeg MASS TeachingDemos stringi ]; };
EcoGenetics = derive { name="EcoGenetics"; version="1.2.0"; type="cran"; sha256="090vcbl8gl23335rga1126w6jqvql62kk9wxlfpjz4q11czgdclq"; depends=[adegenet ggplot2 hierfstat party raster rgdal rkt SoDA sp vegan ]; };
EcoHydRology = derive { name="EcoHydRology"; version="0.4.12"; type="cran"; sha256="03dzdw79s0cnnd7mv6wfxw374yf66dlcmj10xh6sh5i352697xp1"; depends=[operators topmodel DEoptim XML ]; };
EcoSimR = derive { name="EcoSimR"; version="0.1.0"; type="cran"; sha256="13ni3vdfahqjyb9xrv7fmnbj5m5n3jwfh1bl9r0bvhi5w72kb7rj"; depends=[MASS ]; };
EcoTroph = derive { name="EcoTroph"; version="1.6"; type="cran"; sha256="0zi6g0ra107s47r32mm9h6r1wll3avi0mpjmhcr0nj9y48nv14w3"; depends=[XML ]; };
EcoVirtual = derive { name="EcoVirtual"; version="0.1"; type="cran"; sha256="1c815kxljk4qhw0zs28w16ggasfyyyb6aggffx1m1q21s63h6c8h"; depends=[ ]; };
EffectLiteR = derive { name="EffectLiteR"; version="0.3-3"; type="cran"; sha256="14v5samvkzpiy0gq6lq1vs5jqi084sq1if2sih0lk57qxz2647qh"; depends=[lavaan shiny foreign ggplot2 nnet survey lavaan_survey car ]; };
EffectStars = derive { name="EffectStars"; version="1.5"; type="cran"; sha256="0j2jxxxpcsrsjzszz4mfk3892ain3qkswa1dkpsmfsk4zs06g0s4"; depends=[VGAM ]; };
EffectTreat = derive { name="EffectTreat"; version="0.1-11"; type="cran"; sha256="1ps3jac3wc1v325maf4vx9jkirxbc1dfflr218xbzbgrj0zx9diz"; depends=[ ]; };
EffectsRelBaseline = derive { name="EffectsRelBaseline"; version="0.5"; type="cran"; sha256="1dsnakcrgmlx44599ii92wvhxbxrh0hij59709wsskx1x1152zvh"; depends=[ ]; };
ElemStatLearn = derive { name="ElemStatLearn"; version="2012.04-0"; type="cran"; sha256="107x2mybadqgw03j3yq8ibq3ljs4fpx90chvsirpylqhv77wsabl"; depends=[ ]; };
EloRating = derive { name="EloRating"; version="0.43"; type="cran"; sha256="0gzpi4qjiqn0lzjwy37pkz6fg7dkp2hv2dfqgzfk32wsj0bswgab"; depends=[zoo ]; };
ElstonStewart = derive { name="ElstonStewart"; version="1.1"; type="cran"; sha256="1y2g4x3fhi78c2406bk8r8c3x9zhx8ya3qlbnypdm65j0minixsn"; depends=[kinship2 digest ]; };
EnQuireR = derive { name="EnQuireR"; version="0.10"; type="cran"; sha256="00kyclcr8da79lwpqa1vzkwn6pgf197h2biackwgphb0byhi8ssx"; depends=[FactoMineR SensoMineR Rcmdr MASS ]; };
EngrExpt = derive { name="EngrExpt"; version="0.1-8"; type="cran"; sha256="0zclvckj2i7j4kfs58hcjcl722vl2y6dcnjz238cjfgwv279gqhp"; depends=[lattice ]; };
EnrichmentBrowser = derive { name="EnrichmentBrowser"; version="1.0.3"; type="bioc"; sha256="03jq5w9hlgcc7yl2305jw6hlnrlpwg6mg131zya1cxzxrs12gv8b"; depends=[Biobase KEGGgraph KEGGREST MASS RColorBrewer Rgraphviz SPIA graph limma mixtools neaGUI qvalue safe stringr ]; };
EnsembleBase = derive { name="EnsembleBase"; version="0.7.1"; type="cran"; sha256="1yc5afim7zprxvnk5r2m0wwrl15b8sifxnh00b1x7qnzyz4glfl2"; depends=[kknn gbm nnet e1071 randomForest doParallel foreach ]; };
EnsembleCV = derive { name="EnsembleCV"; version="0.7.1"; type="cran"; sha256="14mvwfjbhsrq9q7k5ph5sf9zriazgfby376v1zjm82r93y4samsf"; depends=[EnsembleBase ]; };
EnsemblePCReg = derive { name="EnsemblePCReg"; version="0.6"; type="cran"; sha256="0amswx7x08hpfvsrkjyfz3adkfshl7d1knyvk9nrnrrpy65rilc3"; depends=[EnsembleBase ]; };
EnsemblePenReg = derive { name="EnsemblePenReg"; version="0.6"; type="cran"; sha256="0fjp50jbnbhvyd7srvhy0ipysm192d8ikg9yra2vch33zrid2xbm"; depends=[EnsembleBase glmnet ]; };
EntropyEstimation = derive { name="EntropyEstimation"; version="1.2"; type="cran"; sha256="13kb83lfpkw6yq687j0ci23yn5c9dqjibybyyaplk6jixy08lrvy"; depends=[ ]; };
EntropyExplorer = derive { name="EntropyExplorer"; version="1.0"; type="cran"; sha256="0daj7g209nk8lsalk51kf8kkr6lbnnlzf7xd2mmv1axm7y5rppl2"; depends=[ ]; };
EnvNicheR = derive { name="EnvNicheR"; version="1.0"; type="cran"; sha256="1vw21gsdrx8gkf1rf8cnazv8l9ddcdmy2gckyf33fz7z2mbzgbkk"; depends=[ ]; };
EnvStats = derive { name="EnvStats"; version="2.0.0"; type="cran"; sha256="1yjm1lm9hsq5gw6j8wqxxgc72p7c6prr5fx8vk9v6bb2hgf2bm8i"; depends=[MASS ]; };
EnviroStat = derive { name="EnviroStat"; version="0.4-0"; type="cran"; sha256="05sa63z6yzny2ncxpm5d3x0bx8snkn0x5pzpj2a7y6rwf6al5q4r"; depends=[MASS ]; };
Epi = derive { name="Epi"; version="1.1.67"; type="cran"; sha256="12wbzv21whjnzlyqacgqmsgrjbkgj2495y9fwvav5mr21yfrjds3"; depends=[ ]; };
EpiContactTrace = derive { name="EpiContactTrace"; version="0.8.8"; type="cran"; sha256="1vlr2xxnyq1i6ky39g8j3pf3m5775bmhii7vpskb0x7nnq161yzb"; depends=[Rcpp plyr R2HTML Rcpp ]; };
EpiDynamics = derive { name="EpiDynamics"; version="0.2"; type="cran"; sha256="1hqbfysvw2ln8z3as6lfcjlhkzccksngwh2vm25zsgy93gxw3mcc"; depends=[deSolve reshape2 ggplot2 ]; };
EpiEstim = derive { name="EpiEstim"; version="1.1-2"; type="cran"; sha256="0r56iglhkrqvlsf3gbahd544h944fmbyn6jdc113rhjscf6dl605"; depends=[ ]; };
EpiModel = derive { name="EpiModel"; version="1.1.6"; type="cran"; sha256="0h3bbvk9qyhc0jml2jd21dahi1v00alar67jkzpwnavvmcgd8a3s"; depends=[deSolve network networkDynamic tergm doParallel ergm foreach RColorBrewer statnet_common ]; };
Eplot = derive { name="Eplot"; version="1.0"; type="cran"; sha256="1glmkjjj432z9g4gi56pgvfrm5w86iplirnd5hm4s99qci2hgc64"; depends=[ ]; };
EstCRM = derive { name="EstCRM"; version="1.3"; type="cran"; sha256="0fmnlh0pnprskq01iq3rfassyxq7fywiprvqw0xdlh8yxl3w2c9n"; depends=[Hmisc lattice ]; };
EstSimPDMP = derive { name="EstSimPDMP"; version="1.2"; type="cran"; sha256="05gp0gdix4d98111sky8y88p33qr5w4vffkp6mg9klggn37kdj8j"; depends=[ ]; };
EvCombR = derive { name="EvCombR"; version="0.1-2"; type="cran"; sha256="1f5idjaza91npf64hvcnpgnr72mpb7y6kf91dp57xy9m14k7jx5g"; depends=[ ]; };
EvalEst = derive { name="EvalEst"; version="2015.4-2"; type="cran"; sha256="1jkis39iz3zvi5yfd0arvw7bym6naq45f5cravywg8c37n9v967x"; depends=[tfplot dse setRNG tframe ]; };
Evapotranspiration = derive { name="Evapotranspiration"; version="1.5"; type="cran"; sha256="181s9wwil07740n79gz2ar9c1bjxy45v4fyxxkqjmdfly72la542"; depends=[zoo ]; };
EvoRAG = derive { name="EvoRAG"; version="2.0"; type="cran"; sha256="0gb269mpl2hbx1cqakv3qicpyrlfb4k8a3a7whhg90masbgmh8f6"; depends=[ ]; };
ExPosition = derive { name="ExPosition"; version="2.8.19"; type="cran"; sha256="04s9kk8x6khvnryg6lqdwnyn79860dzrjk8a9jyxgzp94rgalnnz"; depends=[prettyGraphs ]; };
Exact = derive { name="Exact"; version="1.5"; type="cran"; sha256="14469wfm5g28ajlpcrqkmvhbqps8wvrh5lsi0rcrwbwybfv435vn"; depends=[ ]; };
ExactCIdiff = derive { name="ExactCIdiff"; version="1.3"; type="cran"; sha256="1vayq8x7gk1fnr1jrlscg6rb58wncriybw4m1z0glfgzr259103y"; depends=[ ]; };
ExactPath = derive { name="ExactPath"; version="1.0"; type="cran"; sha256="0ngvalmgdswf73q0jr4psg0ihnb7qwkamm6h64l01k5rmgd5nm16"; depends=[ncvreg lars ]; };
ExceedanceTools = derive { name="ExceedanceTools"; version="1.2.2"; type="cran"; sha256="084sc6pggfbcyavhfnd5whyigw7dyjhb4cxmxi0kh2jiam5k8v5b"; depends=[splancs SpatialTools ]; };
ExiMiR = derive { name="ExiMiR"; version="2.8.0"; type="bioc"; sha256="19ghy4l1zcz3jfrcdzmlpwml2if618j2i5b0m8iw7ww7n1mapmvw"; depends=[Biobase affy limma affyio Biobase preprocessCore ]; };
ExomeDepth = derive { name="ExomeDepth"; version="1.1.4"; type="cran"; sha256="0a4y6y1zi1jn1g14f3wsl2pfbmp58afwkvrk7x7s1wp16vwgq0xb"; depends=[Biostrings IRanges Rsamtools GenomicRanges aod VGAM GenomicAlignments ]; };
ExpDes = derive { name="ExpDes"; version="1.1.2"; type="cran"; sha256="0qfigbx06b3p04x5v7wban139mp8hg8x77x6nzwa4v6dr226qbkv"; depends=[ ]; };
ExpDes_pt = derive { name="ExpDes.pt"; version="1.1.2"; type="cran"; sha256="0khw2jhg2vxcivgr20ybvrsqhd8l8bir5xjmr4m44za9nhap43bz"; depends=[ ]; };
ExpressionView = derive { name="ExpressionView"; version="1.18.0"; type="bioc"; sha256="1kw2gdflfnqs4pkyjk1qjxdk1xafl7qx4vwjb7fd1c26wk28b6xh"; depends=[caTools bitops isa2 eisa AnnotationDbi isa2 eisa AnnotationDbi ]; };
ExtremeBounds = derive { name="ExtremeBounds"; version="0.1.5"; type="cran"; sha256="1fsrp2dm1bdg5p0qsi2wa8qxrlq065jlazsxzixpjsni910mrb2k"; depends=[Formula ]; };
FACTscorer = derive { name="FACTscorer"; version="0.1.0"; type="cran"; sha256="1gbfpm5szi6w8iyp7ywpqrmdq0wrv5axj29sj9gxjwmjfh5qgqjx"; depends=[ ]; };
FADA = derive { name="FADA"; version="1.2"; type="cran"; sha256="1wpjqvhhgvirzcvl8r23iaw63wr8rys19mjy71mn24wg3zwnc2qz"; depends=[MASS elasticnet sparseLDA sda glmnet mnormt crossval ]; };
FAMILY = derive { name="FAMILY"; version="0.1.18"; type="cran"; sha256="1f1s0p721sl27b9xp2wrdyx03kv1bdin4wfknmw1k0nnc94dcnp2"; depends=[pheatmap pROC ]; };
FAMT = derive { name="FAMT"; version="2.5"; type="cran"; sha256="0mn85yy9zmiklfwqjbhbhzbawwp2yqrm9pvm8jhasn9c3kw1pcp2"; depends=[mnormt impute ]; };
FAOSTAT = derive { name="FAOSTAT"; version="1.9"; type="cran"; sha256="0gff60vlv35m5sjmz7glbdrd6ijy6n32a9xd26z2ix839qgywvqj"; depends=[RJSONIO plyr data_table MASS classInt ggplot2 labeling scales ]; };
FAdist = derive { name="FAdist"; version="2.1"; type="cran"; sha256="1y66ymg0k6kmyq4bclwwlqkp8brkq925ajpp0jqqn39f749c2kji"; depends=[ ]; };
FAiR = derive { name="FAiR"; version="0.4-15"; type="cran"; sha256="18nj95fiy3j7kf4nzf692dxja3msnaaj5csg745bnajb48l606wz"; depends=[rgenoud gWidgetsRGtk2 rrcov Matrix ]; };
FAmle = derive { name="FAmle"; version="1.3.3"; type="cran"; sha256="125m2hvl603avg9h9x5gfb7l9clpg7p0ir8fdypxyjiqggdr8hxa"; depends=[mvtnorm ]; };
FAwR = derive { name="FAwR"; version="1.1.0"; type="cran"; sha256="0566h9fgnnk8xankqkpvcshf8acr46lz84sf2pzlmasgvwh7xp19"; depends=[MASS lattice glpkAPI ]; };
FBFsearch = derive { name="FBFsearch"; version="1.0"; type="cran"; sha256="1nxfhll9gx9l6hzpcihlz880qxr0fyv5rjghk0xgp8xn4r5wxw11"; depends=[Rcpp RcppArmadillo Rcpp RcppArmadillo ]; };
FBN = derive { name="FBN"; version="1.5.1"; type="cran"; sha256="0723krsddfi4cy2i3vd6pi483qjxniychnsi9r8nw7dm052nb4sf"; depends=[ ]; };
FCMapper = derive { name="FCMapper"; version="1.0"; type="cran"; sha256="1wp5byx68067fnc0sl5zwvw2wllaqdbcy4g2gbzmlqwli0jz2dsk"; depends=[igraph ]; };
FD = derive { name="FD"; version="1.0-12"; type="cran"; sha256="0xdpciq14i8rh7v6mw174hip64r7mrzhx7gwri3vp9y7a1380sbi"; depends=[ade4 ape geometry vegan ]; };
FDGcopulas = derive { name="FDGcopulas"; version="1.0"; type="cran"; sha256="1i86ns4hq74y0gnxfschshjlc6if3js0disjb4bwfizaclwbw3as"; depends=[Rcpp numDeriv randtoolbox Rcpp ]; };
FDRreg = derive { name="FDRreg"; version="0.1"; type="cran"; sha256="17hppvyncbmyqpi7sin9qsrgffrnx8xjcla2ra6y0sqzam1145y4"; depends=[fda Rcpp mosaic Rcpp RcppArmadillo ]; };
FDboost = derive { name="FDboost"; version="0.0-8"; type="cran"; sha256="1xvyndbfd0df6ld7r6f6ajr7i6aql26n9j5ncn6rw5gm0f64s1lq"; depends=[mboost Matrix mgcv zoo MASS ]; };
FEM = derive { name="FEM"; version="1.0.0"; type="bioc"; sha256="019iw3rgzym59332pw941lw8n7hnk9arc237d3y1ayrwgxh73b3r"; depends=[Matrix igraph marray corrplot impute limma graph BiocGenerics ]; };
FFD = derive { name="FFD"; version="1.0-6"; type="cran"; sha256="19yqb45qj54fmjkqfjbcqsx3wz6fk8inrqif9ds93xjkm6aaiqgp"; depends=[tkrplot R2HTML ]; };
FField = derive { name="FField"; version="0.1.0"; type="cran"; sha256="05q16v2vv64qhbnf2l66dwzmvgzyaq8vxwwdabp534bw7z7zpi8q"; depends=[ ]; };
FGN = derive { name="FGN"; version="2.0-12"; type="cran"; sha256="0jxawb4wm1vcp0131mdnc0r24dw8sd29ih0fc2wh6ahy7mxzajqn"; depends=[akima ltsa ]; };
FGNet = derive { name="FGNet"; version="3.0.7"; type="bioc"; sha256="05kxjizcimfyjcjqpzgxlnj5lssbiq05bq5q64h7xxyyia3913n8"; depends=[igraph hwriter R_utils XML plotrix reshape2 RColorBrewer png ]; };
FGSG = derive { name="FGSG"; version="1.0.2"; type="cran"; sha256="1r3sjhzf9gcnbcx6rqr1s555z8lcwm3fxl096md2jji336ijlk79"; depends=[ ]; };
FGalgorithm = derive { name="FGalgorithm"; version="1.0"; type="cran"; sha256="1dq6yyb3l6c9fzvk9gs6pb240xb5hvc6fh8p3qd3c91b3m289mcc"; depends=[ ]; };
FHtest = derive { name="FHtest"; version="1.1"; type="cran"; sha256="0yqy3lvxjhk7biqfikxqlgs9zsy1vlld9pqxhgxmq04gbnjn2jfk"; depends=[Icens interval MLEcens MASS KMsurv ]; };
FI = derive { name="FI"; version="1.0"; type="cran"; sha256="17qzl8qvxklpqrzsmvw4wq3lyqz3zkidr7ihxc4vdzmmz69pyh2f"; depends=[ ]; };
FITSio = derive { name="FITSio"; version="2.0-0"; type="cran"; sha256="1gf3i1q9g81gydag2gj1wsy6wi5jj2v4j3lyrnh1n2g4kxd6s3cp"; depends=[ ]; };
FKF = derive { name="FKF"; version="0.1.3"; type="cran"; sha256="01ibihca39zng4wrvhq8h28bmb2rnsjm21xy22b85kpn3mbnh7f1"; depends=[RUnit ]; };
FLIM = derive { name="FLIM"; version="1.2"; type="cran"; sha256="180az4zwmfcglmvismyacmh7ri4qg8jvhlisqpway0z5z6fsda6r"; depends=[zoo MASS ]; };
FLLat = derive { name="FLLat"; version="1.1"; type="cran"; sha256="1h2nfx7gb66hjdfkdm6im6n8c1fjdz9csg39pckb47c0khl3g9r0"; depends=[gplots ]; };
FLR = derive { name="FLR"; version="1.0"; type="cran"; sha256="0k50vi73qj7sjps0s6b2hq1cmpa4qr2vwkpd2wv2w1hhhrj8lm0n"; depends=[combinat ]; };
FLSSS = derive { name="FLSSS"; version="3.1"; type="cran"; sha256="0cyrjq1b0s7x0dz3x2kvd7pr8v4lyw1324ik4rnbj9hv9mf1g0af"; depends=[Rcpp Rcpp ]; };
FME = derive { name="FME"; version="1.3.2"; type="cran"; sha256="1sjnsc8jbylb2bln5ic24s5bany3clzn44lqnymhsy81x88396ff"; depends=[deSolve rootSolve coda minpack_lm MASS ]; };
FMStable = derive { name="FMStable"; version="0.1-2"; type="cran"; sha256="00viigpqfbqc4hyl9cwicbwqf2ksjak28qrqaa16jhbqz93j4fck"; depends=[ ]; };
FNN = derive { name="FNN"; version="1.1"; type="cran"; sha256="1kncmiaraq1mrykb9fj3fsxswabk3l71fnp1vks0x9aay5xfk8mj"; depends=[ ]; };
FPDclustering = derive { name="FPDclustering"; version="1.0"; type="cran"; sha256="078vvpn9lwza45l9k53m3yzhrkkyakm1ynm93x5yld4fgkrd3c33"; depends=[ThreeWay ]; };
FRACTION = derive { name="FRACTION"; version="1.0"; type="cran"; sha256="0g25dzsbharsq8bzfka96zccaqppdclax24mz5m080ddg4y8zj49"; depends=[ ]; };
FRAPO = derive { name="FRAPO"; version="0.3-8"; type="cran"; sha256="1wqayyai8pdm1vq6qvpd10qpd882cyjb0y0jl582fxd3a2ic7n14"; depends=[quadprog Rglpk timeSeries ]; };
FRB = derive { name="FRB"; version="1.8"; type="cran"; sha256="13rp4gqldx84mngrdv5fa9xamkng7b3kgy30ywykcx46gmrym6ps"; depends=[corpcor rrcov ]; };
FRCC = derive { name="FRCC"; version="1.0"; type="cran"; sha256="1g1rsdqsvwf7wc16dj16y6r0347j8jsv5l1pxvj1h0579zinaf2b"; depends=[CCP MASS calibrate corpcor ]; };
FREQ = derive { name="FREQ"; version="1.0"; type="cran"; sha256="01nra30pbnqdd63pa87lcws3hnhhzybcjvx2jqyxjghn6khz47j0"; depends=[ ]; };
FRESA_CAD = derive { name="FRESA.CAD"; version="2.0.2"; type="cran"; sha256="1clnv18d6f747725ayksas3c2hng1bkb4zss44avfqh9q1y0z1iy"; depends=[Rcpp stringr miscTools Hmisc pROC Rcpp RcppArmadillo ]; };
FRGEpistasis = derive { name="FRGEpistasis"; version="1.2.0"; type="bioc"; sha256="00d1q06rkvbblajiqjyv87vsa3g1mzg4km2z0548g503k961cp8d"; depends=[MASS fda ]; };
FSInteract = derive { name="FSInteract"; version="0.1.1"; type="cran"; sha256="0hlmz0sc4l9vmb4b2y3j95gh39m1jqrp9bvqsjjqdr0ly1lb7mvm"; depends=[Rcpp Matrix Rcpp ]; };
FSelector = derive { name="FSelector"; version="0.20"; type="cran"; sha256="0gbnm48x5myhxxw8gz7ck9sl41nj5rxq4gwifqk3l4kiqphywlpi"; depends=[randomForest RWeka digest entropy ]; };
FTICRMS = derive { name="FTICRMS"; version="0.8"; type="cran"; sha256="0kv02mdmwflhqdrkhzb55si5qnqqgdadgyabqc2hwr6iccn7aq8c"; depends=[Matrix lattice ]; };
FWDselect = derive { name="FWDselect"; version="2.0"; type="cran"; sha256="12hhb2vysg3c9fzh56xy3kwhwbgcn1yx4afhlpydnavp3aclrqrg"; depends=[cvTools mgcv ]; };
FacPad = derive { name="FacPad"; version="3.0"; type="cran"; sha256="0h7knzin0rfk25li127zwjsyz223w7nx959cs328p6b2azhgn59b"; depends=[Rlab MASS ]; };
FactMixtAnalysis = derive { name="FactMixtAnalysis"; version="1.0"; type="cran"; sha256="1l4wfp39b7g38vdk6jpd5zq08sjhsg0s71f662aca2rj6l3a2x3r"; depends=[MASS mvtnorm ]; };
FactoClass = derive { name="FactoClass"; version="1.1.1"; type="cran"; sha256="0m5108g2nhdwqqmkn04l1x0kx32ikkhcz6gki0hpj9hlzrkya5w6"; depends=[ade4 xtable ]; };
FactoMineR = derive { name="FactoMineR"; version="1.29"; type="cran"; sha256="08pyp8z9xhy9f1mrcgdm13xqrca63xhpyarkq5fg7hv0ncs68s1h"; depends=[MASS ellipse lattice cluster scatterplot3d leaps flashClust ]; };
Factoshiny = derive { name="Factoshiny"; version="1.0"; type="cran"; sha256="0r8xnnmf2c0nhddgzwsfb86ajpirkr1788phhcjdap1w9k67nsy9"; depends=[FactoMineR shiny ]; };
Fahrmeir = derive { name="Fahrmeir"; version="2012.04-0"; type="cran"; sha256="1axx6r4g6gj1inih41i2az4y0d3jq9x1a6nyj8k7wp51z4z2nbmk"; depends=[ ]; };
Familias = derive { name="Familias"; version="2.2"; type="cran"; sha256="1nhjxn3f063gvi4jvwb8r4fap7f1zbcvb6qa30153yh31yprljls"; depends=[kinship2 paramlink ]; };
FastHCS = derive { name="FastHCS"; version="0.0.5"; type="cran"; sha256="02ds9syqh8wpjrqibdv3kqxcyijclm572daqrj262b4b6211v46x"; depends=[matrixStats robustbase Rcpp RcppEigen ]; };
FastImputation = derive { name="FastImputation"; version="1.2"; type="cran"; sha256="04bz623kcanxcl9z8zl6m7m47pk0szcjrjlgs5v1yl3jnq9m2n7g"; depends=[ ]; };
FastKNN = derive { name="FastKNN"; version="0.0.1"; type="cran"; sha256="1iz8ybzkvbyqwb00s7cp1zvy9xlmyjid441mf62dq08a0zncnyss"; depends=[pdist assertthat ]; };
FastPCS = derive { name="FastPCS"; version="0.1.2"; type="cran"; sha256="1lqb6g65vna2p7kc2y4kc5piy3280nlxl41bdkxkng2icmq14l58"; depends=[matrixStats Rcpp RcppEigen ]; };
FastRCS = derive { name="FastRCS"; version="0.0.6"; type="cran"; sha256="0wjsh37jas8hcb9554ijvwj0k8dx96fjf88bzgy7nbim2byiy8p8"; depends=[matrixStats Rcpp RcppEigen ]; };
FastRWeb = derive { name="FastRWeb"; version="1.1-0"; type="cran"; sha256="1hiabi7ibp69n5wi5x4kwznxhc2i7dxdrqf1fm6ppv7ix0wkjs07"; depends=[Cairo ]; };
FatTailsR = derive { name="FatTailsR"; version="1.0-3"; type="cran"; sha256="0r9n18qlr70p6y4v1xv1lxi1lzm9qp29qy4w51chllqjn15kmv7l"; depends=[minpack_lm ]; };
FeaLect = derive { name="FeaLect"; version="1.10"; type="cran"; sha256="1r7rgcadrqjhxn2g2w16axygsck82fprxg7l14ai11bn4b7h4pmb"; depends=[lars rms ]; };
FeatureHashing = derive { name="FeatureHashing"; version="0.9"; type="cran"; sha256="1xbzmyah22kjrkd7ln1pjzwyn5w0zmhdhs9w1a3p8rjxrwmx6ssf"; depends=[Rcpp Matrix digest magrittr Rcpp digest BH ]; };
FedData = derive { name="FedData"; version="1.1.0"; type="cran"; sha256="0s5blfhlizl4lv22lxjhqrwrf10mxgy2cd5z4a9xg05k419q7alr"; depends=[sp rgdal raster RCurl rgeos igraph data_table devtools soilDB ]; };
FeedbackTS = derive { name="FeedbackTS"; version="1.3.1"; type="cran"; sha256="1zx64wbl5pzqn69bjhshd3nayxx4wlg7n1zwv7ilh68raxfxnbbx"; depends=[maps mapdata proj4 geoR sp ]; };
FieldSim = derive { name="FieldSim"; version="3.2.1"; type="cran"; sha256="1snz2wja3lsgxys0mdlrjjvk5575cyd64mjipafibwcs97bva5x1"; depends=[rgl RColorBrewer ]; };
FinAsym = derive { name="FinAsym"; version="1.0"; type="cran"; sha256="0v15ydz4sq9djwcdcfp90mk8l951rry7h91d7asgg53mddbxjj6f"; depends=[ ]; };
FinCal = derive { name="FinCal"; version="0.6"; type="cran"; sha256="0slw5s7gilmv0j8iwhz27lss2gbrj2l8zqv7bqywr1yf0hw2nxn7"; depends=[ggplot2 reshape2 scales RCurl ]; };
FinCovRegularization = derive { name="FinCovRegularization"; version="1.0.0"; type="cran"; sha256="0da7asm4mvbd4wvqll5gdvckb10ccfx7gy141xbxyaixdhgi6zl4"; depends=[quadprog ]; };
FinTS = derive { name="FinTS"; version="0.4-5"; type="cran"; sha256="16m57h6rk4344aalfwaz7hsyis30c1dirsyx8ih661ihgqn1ai1r"; depends=[zoo ]; };
FinancialInstrument = derive { name="FinancialInstrument"; version="1.2.0"; type="cran"; sha256="0lx8gqmnapyizlg0qdcjy8xrkpbhj0f7nc95l86a6xy82hz62dzb"; depends=[quantmod zoo xts TTR ]; };
FindAllRoots = derive { name="FindAllRoots"; version="1.0"; type="cran"; sha256="0n4wfm21qj5zn06jqnzxa0w9mfn18dqi6hk1jjqa56dxqw1k7vw0"; depends=[ ]; };
FindIt = derive { name="FindIt"; version="0.5"; type="cran"; sha256="0bj4al4b7na3w5y783nqyd2wc1pmwfmgf2p4q6n7vqbzqghy0a3q"; depends=[glmnet lars Matrix ]; };
FindMinIC = derive { name="FindMinIC"; version="1.6"; type="cran"; sha256="0vlr56nw32msvz8bljrw82nzrnazncs6nz7zisidffm2v3najkar"; depends=[nlme sets ]; };
FisHiCal = derive { name="FisHiCal"; version="1.1"; type="cran"; sha256="1dds629jlja3vw2l010n1334yh3z10nijqksr0q98ckd2yrwg2rf"; depends=[igraph RcppArmadillo Rcpp RcppArmadillo ]; };
FisherEM = derive { name="FisherEM"; version="1.4"; type="cran"; sha256="1lhkyyk82i6alxyiqrvy5fx60f8vab0y62zmw5fjaq6h0vczqn3s"; depends=[MASS elasticnet ]; };
FitAR = derive { name="FitAR"; version="1.94"; type="cran"; sha256="1mkk3kvfq4v0pdabnhbwrk31ji2mv2v6ns16xsvvr1qyg2fnx6hq"; depends=[lattice leaps ltsa bestglm lattice leaps ltsa ]; };
FitARMA = derive { name="FitARMA"; version="1.6"; type="cran"; sha256="1r9mqrqkm4wh3nd6v9wmpj23gw21i4p89p6z4c7639kn4f590ldk"; depends=[FitAR ]; };
FlexParamCurve = derive { name="FlexParamCurve"; version="1.5-2"; type="cran"; sha256="1r8iacjnpbkpqwp58dz724g1cpnmll4b1mkxnsdj3h9iq1rbi7bq"; depends=[nlme ]; };
FluOMatic = derive { name="FluOMatic"; version="1.0"; type="cran"; sha256="06hww6viynisnfiphvghv4iqf1gk2snb8aksignaw8pnlkixnsg7"; depends=[ ]; };
Flury = derive { name="Flury"; version="0.1-3"; type="cran"; sha256="105fv9azjkd8bsb9b8ba3gpy3pjnyyyp753qhrd11byp3d0bbxy0"; depends=[ ]; };
ForIT = derive { name="ForIT"; version="1.0"; type="cran"; sha256="0mi2cw09mbc54s8qwcwxin2na1gfyi60cdssy2ncynma7alq3733"; depends=[ ]; };
ForImp = derive { name="ForImp"; version="1.0.3"; type="cran"; sha256="0ai4i6q233sdsi8xilpbkxjqdf4pxw93clkdkhcxal6q43rnf7vd"; depends=[homals sampling mvtnorm ]; };
ForeCA = derive { name="ForeCA"; version="0.2.2"; type="cran"; sha256="1iszhiqn0vg3l2c8cgshk8qir0dqml4jsl942hdsmjm6raxlb6n9"; depends=[ifultools MASS sapa ]; };
FormalSeries = derive { name="FormalSeries"; version="1.0"; type="cran"; sha256="09m4ifinasww0xfprs29xsrqhxxkw9zffb3919xnkkjkwp0nax4v"; depends=[ ]; };
Formula = derive { name="Formula"; version="1.2-1"; type="cran"; sha256="02in5325zzrqbhlygx6s0dinj6ymw845q70y56frqacv25ayzcax"; depends=[ ]; };
ForwardSearch = derive { name="ForwardSearch"; version="1.0"; type="cran"; sha256="0yd47832piqxzjxgl7bc8pn0c8f7vbgsm9z6894rzyi615kjl70b"; depends=[robustbase ]; };
FourCSeq = derive { name="FourCSeq"; version="1.0.0"; type="bioc"; sha256="11f340ri3s3qjqpf4vjngrz1vrpilkyg69cn09kpfs5vvh6y7wii"; depends=[GenomicRanges ggplot2 DESeq2 DESeq2 Biobase Biostrings GenomicRanges Rsamtools ggbio reshape2 rtracklayer fda GenomicAlignments gtools Matrix ]; };
FourScores = derive { name="FourScores"; version="1.0"; type="cran"; sha256="0d21mrl9bzsvhljv7ymiyck508smp66w9qivrb2rp0p803h9yibm"; depends=[ ]; };
FrF2 = derive { name="FrF2"; version="1.7-1"; type="cran"; sha256="0i9hfx7n0g866imdsmalqzs8v95vx08cz97hi8311v1wc3pqsn1j"; depends=[DoE_base sfsmisc BsMD scatterplot3d igraph ]; };
FrF2_catlg128 = derive { name="FrF2.catlg128"; version="1.2-1"; type="cran"; sha256="0i4m5zb9dazpvmnp8wh3k51bm0vykh4gncnhdg71mfk4hzrfpdac"; depends=[FrF2 ]; };
Frames2 = derive { name="Frames2"; version="0.1.1"; type="cran"; sha256="004h3w5bfnbbxa8yczlcd8m0bc9xq91dg5ph6yql28ivibw24q1l"; depends=[sampling ]; };
FreeSortR = derive { name="FreeSortR"; version="1.1"; type="cran"; sha256="03z5wmr88gr6raa2cg7w4j6y5vgxr3g8b8axzhbd7jipswr5x1jf"; depends=[smacof vegan ellipse ]; };
FunChisq = derive { name="FunChisq"; version="2.0.2"; type="cran"; sha256="0j767iwf1hr7r532hdkrl9q2xiz997gd3rc7aca18fj743w6ras9"; depends=[Rcpp BH Rcpp RcppClassic ]; };
FunCluster = derive { name="FunCluster"; version="1.09"; type="cran"; sha256="0i73asn1w4s6ydf2ddn5wpr0mwbbxzgmaly1pslarzkx71wk03fz"; depends=[Hmisc cluster ]; };
FuncMap = derive { name="FuncMap"; version="1.0-3"; type="cran"; sha256="0bhx7y1n75r3jwf5mkx2i2bqfjgzxgsw58nwhfl48ldibgx7h1qs"; depends=[mvbutils ]; };
FunciSNP = derive { name="FunciSNP"; version="1.8.0"; type="bioc"; sha256="0ns1c2zsdkrgzq3a6mdd057h13sgh175sbvadibz06gj22008ka6"; depends=[ggplot2 AnnotationDbi IRanges Rsamtools rtracklayer ChIPpeakAnno GenomicRanges VariantAnnotation plyr snpStats ggplot2 reshape scales ]; };
Funclustering = derive { name="Funclustering"; version="1.0.1"; type="cran"; sha256="0i6g98mfgdyc9hdzvviynrgqhkzicp8y6s0scqy3ifgk9h1k79dw"; depends=[fda Rcpp Rcpp RcppEigen ]; };
FunctionalNetworks = derive { name="FunctionalNetworks"; version="1.0.0"; type="cran"; sha256="071hjgiccbrf1gxrh7niw2w1p6vgc77qvrildi59xhk53qcwzqdp"; depends=[Biobase ]; };
FusedPCA = derive { name="FusedPCA"; version="0.2"; type="cran"; sha256="0z4kvm6mn11fmc8w62aky2binjdcgrw4ij5vg65sb55da9s8d2kd"; depends=[genlasso ]; };
FuzzyNumbers = derive { name="FuzzyNumbers"; version="0.4-1"; type="cran"; sha256="15i0chp43y8xfyzkjrbljmdvgjjx9w1l5ayhvavk9y85pwb147b8"; depends=[ ]; };
FuzzyStatProb = derive { name="FuzzyStatProb"; version="2.0"; type="cran"; sha256="06s45w18airrrs5ppy325idv4yi6nf69nrs18gha55kb2xvjq3km"; depends=[MultinomialCI FuzzyNumbers DEoptim ]; };
FuzzyToolkitUoN = derive { name="FuzzyToolkitUoN"; version="1.0"; type="cran"; sha256="104s45mmlam67vwpshhpns2mgwvmhnbj8w1918jyk2r5mqibwz06"; depends=[ ]; };
G1DBN = derive { name="G1DBN"; version="3.1.1"; type="cran"; sha256="015rw3bpz32a8254janddgg1ip947qgcvmiwx5r3v7g8n854bwxn"; depends=[MASS igraph ]; };
G2Sd = derive { name="G2Sd"; version="2.1.3"; type="cran"; sha256="02j30mfrzi4q3a387i0cr4khj2hzf7jrlyj06qc8bwlhz0f4l35m"; depends=[shiny xlsx rJava xlsxjars reshape2 ggplot2 ]; };
GA = derive { name="GA"; version="2.2"; type="cran"; sha256="1pk80jwzvpmi61df0y331qvl8jkdizblg93s7gaspkbzy50wyfkp"; depends=[foreach iterators ]; };
GA4Stratification = derive { name="GA4Stratification"; version="1.0"; type="cran"; sha256="0li23mrxjx72fir16j3q06fa32cicck4pfc30n0dy2lysf81m9gs"; depends=[ ]; };
GABi = derive { name="GABi"; version="0.1"; type="cran"; sha256="1zmiaqbd1jrpiz9hk16s8rggcpl3xyyhjkkdliymx2p42vy5b5mf"; depends=[hash ]; };
GAD = derive { name="GAD"; version="1.1.1"; type="cran"; sha256="0lyrw0d7i7yn1wkqlbf3rg3dnijfwsjn3kdbsg19hmvwq6qpsak2"; depends=[matrixStats R_methodsS3 ]; };
GAIPE = derive { name="GAIPE"; version="1.0"; type="cran"; sha256="04iarbwxrhn48bk329wxis7ifzndi67kpjx6dcakawkh3g2mzsfz"; depends=[ ]; };
GAMBoost = derive { name="GAMBoost"; version="1.2-3"; type="cran"; sha256="0450h9zf12r524lxk1lrv9imvvkk6fmyd3chnxp18nnvys7215pv"; depends=[Matrix ]; };
GANPA = derive { name="GANPA"; version="1.0"; type="cran"; sha256="0ia8djv46jm397nxjrm9yc5gacf1r4z0ckiliz57cbrqwh7z2wpa"; depends=[GANPAdata ]; };
GANPAdata = derive { name="GANPAdata"; version="1.0"; type="cran"; sha256="0mhdadl7zgsacn59ym42magg3214k1xhabwn78fv7kgccszcgc86"; depends=[ ]; };
GAR = derive { name="GAR"; version="1.0"; type="cran"; sha256="1278rdln23pl5ay87nb6w15ywdh6ls8hx8k0nb48ab4ysjqf6r04"; depends=[httr jsonlite ]; };
GAabbreviate = derive { name="GAabbreviate"; version="1.0"; type="cran"; sha256="0c9407i6dq7psw744fpkf190as99fssd9n9k0xbvwif10agm278l"; depends=[GA psych ]; };
GB2 = derive { name="GB2"; version="2.1"; type="cran"; sha256="06rcck97pdm1rsb02cy0jd9fknv0mz5jwk364gsaahdk56ddk18a"; depends=[cubature hypergeo laeken numDeriv survey ]; };
GCAI_bias = derive { name="GCAI.bias"; version="1.0"; type="cran"; sha256="10092mwpmfbcga0n39a0i6g8xxch8xiwg15cckipw6yxjyx0sivc"; depends=[ ]; };
GCD = derive { name="GCD"; version="3.0.5"; type="cran"; sha256="1ami5xw5xx464pxr9y1z9bb3dvj46vx3wrbh19w4g7sk8yjvh5nl"; depends=[ ]; };
GCPM = derive { name="GCPM"; version="1.1.1"; type="cran"; sha256="1wm7nmqj88j1pd2s1lvi6z1fizm3q3cl7vbzp88vbhpij4rnk4jl"; depends=[Rcpp RcppProgress Rcpp RcppProgress ]; };
GDAdata = derive { name="GDAdata"; version="0.93"; type="cran"; sha256="13ks97i289rc4i7gpqrifwbj0m9rx8csjhnfg8mad10qmjwz7p8b"; depends=[ ]; };
GDAtools = derive { name="GDAtools"; version="1.3"; type="cran"; sha256="1av29mllix0az4n85vxh1344j6jmy103hd78ibjwxalm620rp7ns"; depends=[FactoMineR ]; };
GDELTtools = derive { name="GDELTtools"; version="1.2"; type="cran"; sha256="1rx6kjh7kmyycqapvbizcxkcfp09qvqv7k8f25v333sxkacpz6p5"; depends=[plyr TimeWarp ]; };
GENE_E = derive { name="GENE.E"; version="1.6.0"; type="bioc"; sha256="0g7ghg5mksaazivgb8m2faizcbpzkddh35417f8qi6hbl8a7kpja"; depends=[rhdf5 RCurl rhdf5 RCurl ]; };
GENEAread = derive { name="GENEAread"; version="1.1.1"; type="cran"; sha256="0c3d76yl8dqclk8zhhgrd6bv6b599vkpbyg3hjspb6npdw6zs6k8"; depends=[bitops ]; };
GENLIB = derive { name="GENLIB"; version="1.0.4"; type="cran"; sha256="1gl8qsgm9iy57rlajgc47lfxah52jsg7lpj131a6813kj0c639l7"; depends=[Rcpp kinship2 bootstrap Matrix lattice quadprog foreach doParallel Rcpp ]; };
GEOmap = derive { name="GEOmap"; version="2.3-5"; type="cran"; sha256="11sxlijfcswxmry6p9pb4g6prrql0qnqcqc21f72a0jp3k3670nc"; depends=[RPMG splancs fields ]; };
GEOmetadb = derive { name="GEOmetadb"; version="1.26.1"; type="bioc"; sha256="10n56xlx61j6rjzz6g3079s9jv3n0ra5l83q63qpg7g563ddihmk"; depends=[GEOquery RSQLite ]; };
GEOquery = derive { name="GEOquery"; version="2.32.0"; type="bioc"; sha256="079f5c6gxms014jqyc41g174qic9ka08j9jk4jlynf7a689hf8v4"; depends=[Biobase XML RCurl ]; };
GEOsubmission = derive { name="GEOsubmission"; version="1.18.0"; type="bioc"; sha256="12zk2izm1gliky5lpfzs31ymnv73sal6f2vi15lppfcxklj2zsmx"; depends=[affy Biobase ]; };
GESTr = derive { name="GESTr"; version="0.1"; type="cran"; sha256="1q12l2vcq6bcyybnknrmfbm6rpzcmxgq2vyj33xwhkmm9g2ii9k6"; depends=[mclust gtools ]; };
GEVStableGarch = derive { name="GEVStableGarch"; version="1.0"; type="cran"; sha256="007s7lbfpp1bqnyg08rwarsmkxlx16p4is1k3736fmnri9sfp7z6"; depends=[fGarch fExtremes stabledist skewt Rsolnp ]; };
GEVcdn = derive { name="GEVcdn"; version="1.1.3"; type="cran"; sha256="13p6hkdybs8s2i363z2a65yijqarwj9swvy22ljk61shf2nzbk80"; depends=[VGAM ]; };
GEWIST = derive { name="GEWIST"; version="1.10.0"; type="bioc"; sha256="1lh7d2fz1nnadl01iyrflpja04xzl01j1zzpsavmj5m7g8d6l525"; depends=[car ]; };
GExMap = derive { name="GExMap"; version="1.1.3"; type="cran"; sha256="1a6i2z9ndgia4v96nkr77cjqnbgxigqbqlibg82gwa0a6pl7r7nz"; depends=[Biobase multtest ]; };
GGBase = derive { name="GGBase"; version="3.28.0"; type="bioc"; sha256="05y237f0azkgv8xgl357gf7j8024hjq0padz8wv1slw6p8frsqb8"; depends=[snpStats limma genefilter Biobase BiocGenerics Matrix AnnotationDbi digest GenomicRanges ]; };
GGEBiplotGUI = derive { name="GGEBiplotGUI"; version="1.0-8"; type="cran"; sha256="0bkagsm9mkcghc2q46cc86kjajzgjbq9588v0v2bp71qw8m97mbh"; depends=[rgl tkrplot ]; };
GGIR = derive { name="GGIR"; version="1.1-5"; type="cran"; sha256="0lanza1i7bqa0z745hbxkkyjhf6jy578jjva6nbisbbfsrbf7ydj"; depends=[ ]; };
GGMselect = derive { name="GGMselect"; version="0.1-9"; type="cran"; sha256="18l98v6hv0sjhany275lsbdjwclx3abqfi924n9qlcnap1rvsfwz"; depends=[mvtnorm lars gtools ]; };
GGally = derive { name="GGally"; version="0.5.0"; type="cran"; sha256="00ix8qafi71l7vhj6268f9srqbgr9iw1qk0202y59mhfrj6c6f5i"; depends=[ggplot2 gtable plyr reshape stringr ]; };
GGtools = derive { name="GGtools"; version="5.2.0"; type="bioc"; sha256="0ikx3xsx11pdqi1245xqsj3y0r64ry0qbvgdrvv5cjhlgf172qgw"; depends=[GGBase data_table BiocGenerics snpStats ff Rsamtools AnnotationDbi Biobase bit VariantAnnotation hexbin rtracklayer Gviz S4Vectors IRanges GenomeInfoDb GenomicRanges iterators Biostrings ROCR biglm ggplot2 reshape2 ]; };
GHQp = derive { name="GHQp"; version="1.0"; type="cran"; sha256="0qpcpwv7rz67qhz1p5k2im02jvs7l8z9sa6ypz13hig5fzm8j9bp"; depends=[statmod ]; };
GIGrvg = derive { name="GIGrvg"; version="0.3"; type="cran"; sha256="014srgh79g8y9fcj979v3md9qqx9i6b6fx6lw0r0qdrg4v6bvr76"; depends=[ ]; };
GISTools = derive { name="GISTools"; version="0.7-4"; type="cran"; sha256="06alb5d2k4qj344i9cpgm3lz9m68rkmjqfx5k2hzn7z458xjrlxs"; depends=[maptools sp RColorBrewer MASS rgeos ]; };
GLAD = derive { name="GLAD"; version="2.30.0"; type="bioc"; sha256="1wlf2mxay26j9lbnizj2fbs7rhq0qpqrsxm3gzn8dabs01qhm109"; depends=[ ]; };
GLDEX = derive { name="GLDEX"; version="2.0.0.2"; type="cran"; sha256="16vy50jgk9b57h9f48097m17zrla6ksmi3wm4z2yadfg81sg8721"; depends=[cluster ]; };
GLDreg = derive { name="GLDreg"; version="1.0.2"; type="cran"; sha256="179qjcsfgzcw39gmmwlz9h608cq865kz2lvh76dwgyyn519l3y8g"; depends=[GLDEX ]; };
GLSME = derive { name="GLSME"; version="1.0.2"; type="cran"; sha256="1zdqrji8x0f3wjl8bhpbnwdfklihv3ii20iz2y2gsm53yzw7dlwq"; depends=[mvtnorm corpcor ]; };
GMCM = derive { name="GMCM"; version="1.2.1"; type="cran"; sha256="1s45xmbx64h3sb10py8n444jpxcgsz4pc36cz3zinfq55amf8r6r"; depends=[Rcpp Rcpp RcppArmadillo ]; };
GMD = derive { name="GMD"; version="0.3.3"; type="cran"; sha256="0hdya8ai210wxnkfra9bzyswk3gib5fm53fs61rh0nsmg3ysdga6"; depends=[gplots ]; };
GMDH = derive { name="GMDH"; version="1.0"; type="cran"; sha256="194bx1gg0d50fq9002ga8lwx288csfk5vfr1qwkn886wiw97wl9n"; depends=[MASS ]; };
GMMBoost = derive { name="GMMBoost"; version="1.1.2"; type="cran"; sha256="01q165vkdiv4qh96lha0g2g94jpnzdclbby6q43ghh9j1yrd4qzj"; depends=[minqa magic ]; };
GNE = derive { name="GNE"; version="0.99-0"; type="cran"; sha256="1iwlh1mx8z24hgry78i5sqfrbqqp4946x1jxh6h7z1vxs7qfpq0v"; depends=[alabama nleqslv BB SQUAREM ]; };
GOFunction = derive { name="GOFunction"; version="1.14.0"; type="bioc"; sha256="1p7hfg9apyks9l8swc55x89b556fwf3g259pl4r62yf035jdiw1k"; depends=[Biobase graph Rgraphviz AnnotationDbi SparseM Biobase graph Rgraphviz AnnotationDbi SparseM ]; };
GOGANPA = derive { name="GOGANPA"; version="1.0"; type="cran"; sha256="1xbir21zvr5hv2y6nndzpsrpmnr7glrc7y6xgcyb856wx46ajan9"; depends=[GANPA WGCNA ]; };
GOSemSim = derive { name="GOSemSim"; version="1.24.1"; type="bioc"; sha256="12qf8ahfchkqs0f37y0hz5yng24myr7svls6s72z9xbmcrzrzmj6"; depends=[Rcpp AnnotationDbi Rcpp ]; };
GOSim = derive { name="GOSim"; version="1.8.0"; type="bioc"; sha256="1kkj2mg9d4w8kzcy468drk95lvbknjsib68d1v165g0wvbm2hqxw"; depends=[annotate igraph AnnotationDbi topGO cluster flexmix RBGL graph Matrix corpcor Rcpp Rcpp ]; };
GOTHiC = derive { name="GOTHiC"; version="1.2.2"; type="bioc"; sha256="17lqkd6yi6pzd2q1jaq1fg8qy4shqrn7pj8l8lw92cib2sbhbrgs"; depends=[GenomicRanges Biostrings BSgenome data_table BiocGenerics S4Vectors IRanges ShortRead rtracklayer ggplot2 ]; };
GOexpress = derive { name="GOexpress"; version="1.0.1"; type="bioc"; sha256="0yxgcpy6z5dgd3hkgcikbbq30rx682n0arqic8dns5mg6mns428p"; depends=[Biobase biomaRt stringr ggplot2 RColorBrewer gplots VennDiagram randomForest ]; };
GOplot = derive { name="GOplot"; version="1.0"; type="cran"; sha256="15ix1lcbxf63bmxvjsy7y2nz55wf539xii8rb7lf788jplh47gb6"; depends=[ggplot2 ggdendro gridExtra RColorBrewer ]; };
GOstats = derive { name="GOstats"; version="2.32.0"; type="bioc"; sha256="12yxqavqvxq5b53fr79czlxmnz9mwbchqcmsmgdvzqdca4kh6b0l"; depends=[Biobase Category graph AnnotationDbi Biobase Category RBGL annotate graph AnnotationForge ]; };
GOsummaries = derive { name="GOsummaries"; version="2.0.0"; type="bioc"; sha256="0gikgj4hxy9qrbyy3282x896fch5q67gdi8d2havqqrzi65mfgxa"; depends=[ggplot2 Rcpp plyr gProfileR reshape2 limma gtable Rcpp ]; };
GPArotation = derive { name="GPArotation"; version="2014.11-1"; type="cran"; sha256="15jh5qqqwx47ara6glilzha87rnih0hs5fsz0jjqwv6wr1gw26rm"; depends=[ ]; };
GPC = derive { name="GPC"; version="0.1"; type="cran"; sha256="1naqy5g6a0z65wssfic5s7cw9v0zjckk526nian3l98ci22sz0j7"; depends=[randtoolbox orthopolynom ks lars ]; };
GPCSIV = derive { name="GPCSIV"; version="0.1.0"; type="cran"; sha256="118l792mwd54xsi3g8afg3vc6wds8j6fyaz3mwmq04mlcyblym4l"; depends=[scatterplot3d sqldf ]; };
GPFDA = derive { name="GPFDA"; version="2.2"; type="cran"; sha256="1xqk03g8b8hi1vdqh6a9wml8ln0ad6lmy14z8k8c4wdc5kbzdr0b"; depends=[fda_usc spam fda MASS ]; };
GPLTR = derive { name="GPLTR"; version="1.1"; type="cran"; sha256="0yp4b3ddvcd6s7rjpbmszl3a0x8qq6s138jjkm135yvbgp1jk5jz"; depends=[rpart ]; };
GPareto = derive { name="GPareto"; version="1.0.0"; type="cran"; sha256="0mzrl4xs7f5rkx0m4lkqy1456dnsa232hprmbg3bpris1rla780b"; depends=[DiceKriging emoa Rcpp rgenoud pbivnorm pso randtoolbox KrigInv MASS Rcpp ]; };
GPfit = derive { name="GPfit"; version="1.0-0"; type="cran"; sha256="0g0g343ncqsqh88qq9qrf4xv5n3sa980kqbvklcx534dmn6a7n2i"; depends=[lhs lattice ]; };
GPlab = derive { name="GPlab"; version="0.1.0"; type="cran"; sha256="05lp5hm5f9pwqcw88x2206babb8yd0nw5smsd6j555qikx8nv88i"; depends=[Rcpp testthat MASS numDeriv Rcpp ]; };
GPseq = derive { name="GPseq"; version="0.5"; type="cran"; sha256="0k5xif44qk2ppvcyja16xshmfciq1h84l1w6d8dfkyryfajbc8ai"; depends=[ ]; };
GPvam = derive { name="GPvam"; version="3.0-2"; type="cran"; sha256="160j0zwbcmvzvia1b5p5midf395xfv1frk2w6w3v2zpbn8h6pdz5"; depends=[Rcpp RcppArmadillo Matrix numDeriv Rcpp RcppArmadillo ]; };
GRENITS = derive { name="GRENITS"; version="1.18.0"; type="bioc"; sha256="1wx8y472jkvszkb0rf944mzb1dzcwqxbf8qwgzmm07s6hcwyi6xg"; depends=[Rcpp RcppArmadillo ggplot2 reshape2 Rcpp RcppArmadillo ]; };
GRTo = derive { name="GRTo"; version="1.2"; type="cran"; sha256="0x65g8a39vrb8m3hqajxi0ksmdavz0p6mlamqprkdn9p6ikf5c73"; depends=[bootstrap ]; };
GRaF = derive { name="GRaF"; version="0.1-12"; type="cran"; sha256="1d7mr2z49v6ch4jbzh0dj2yjy2c5p51ws38xfz233sjz475snajr"; depends=[dismo ]; };
GSA = derive { name="GSA"; version="1.03"; type="cran"; sha256="1h1sbpn1rrdh44w4fx2avc7x24ba40mvpd8b2x5wfrc7a294zf6z"; depends=[ ]; };
GSAR = derive { name="GSAR"; version="1.0.0"; type="bioc"; sha256="1pfm6d2av87kq17f1b7gz4fg8krvf237vdap5b6bv7n3lbh2d7p5"; depends=[igraph ]; };
GSAgm = derive { name="GSAgm"; version="1.0"; type="cran"; sha256="18bhk67rpss6gg1ncaj0nrz0wbfxv7kvy1cxria083vi60z0vwbb"; depends=[survival edgeR ]; };
GSCA = derive { name="GSCA"; version="1.4.0"; type="bioc"; sha256="0j1n99w7d293kfrc6g96lkvi624d6v85993hfysbcx9nksajkcdw"; depends=[shiny sp gplots ggplot2 reshape2 RColorBrewer rhdf5 rgl shinyRGL ]; };
GSE = derive { name="GSE"; version="3.1"; type="cran"; sha256="08xr7w6dsmgs3l8ayihadcvwy0xdzn78fllxa42sk7nfz6waadr3"; depends=[Rcpp MASS ggplot2 Rcpp RcppArmadillo ]; };
GSEABase = derive { name="GSEABase"; version="1.28.0"; type="bioc"; sha256="1g602vlaw4fxg87w8dczidij58r9fwn3ql68cd51ar5kbz9cr65s"; depends=[BiocGenerics Biobase annotate graph AnnotationDbi XML ]; };
GSEAlm = derive { name="GSEAlm"; version="1.26.0"; type="bioc"; sha256="12qfpwzqd09w25nqi98551vspigzmxzvvbp0bl68zbl937c971v2"; depends=[Biobase ]; };
GSIF = derive { name="GSIF"; version="0.4-6"; type="cran"; sha256="00m5djgc443678nwnmvgqv070g67pbvp1ci1x8gp7van8knjn5zq"; depends=[sp RSAGA dismo rgdal raster aqp plotKML gstat plyr ]; };
GSM = derive { name="GSM"; version="1.3.1"; type="cran"; sha256="1ay6znw31qnhz5k6fa0aiccr2xxmnj7v3vzrvlk6y5v5smlvybd0"; depends=[gtools ]; };
GSRI = derive { name="GSRI"; version="2.14.0"; type="bioc"; sha256="1fsm4zrcqbm14ls3sm8wmbxzmnsn1vn64kl9kkfgijvj0jw92qzs"; depends=[fdrtool genefilter Biobase GSEABase les ]; };
GSReg = derive { name="GSReg"; version="1.0.0"; type="bioc"; sha256="13yxchr44vcfzhmm69xgjhf326n0arjla5qvib3arqa0vs3b10qn"; depends=[ ]; };
GSVA = derive { name="GSVA"; version="1.14.1"; type="bioc"; sha256="1i8v09yd8ikyicmdcszvinifzp44irkqrz1n58wyhhq6iz32gl87"; depends=[BiocGenerics Biobase GSEABase ]; };
GUIDE = derive { name="GUIDE"; version="1.0.9"; type="cran"; sha256="1y0y6rwv1khd9bdaz5rl9nmxiangx0jckgihg16wb6hx6kf8kzc1"; depends=[rpanel tkrplot ]; };
GUILDS = derive { name="GUILDS"; version="1.2.1"; type="cran"; sha256="1z90qjgrx16yk956phbifcr7jd3w59h7akzz7p6g5ymrcjzih4qf"; depends=[Rcpp pracma subplex Rcpp ]; };
GUIProfiler = derive { name="GUIProfiler"; version="0.1.2"; type="cran"; sha256="1k56clda6xr649xfacnigi3c2s7ih1whchwcfqm7aa2d44vv3axz"; depends=[Nozzle_R1 MASS ]; };
GUTS = derive { name="GUTS"; version="0.9.3"; type="cran"; sha256="0gyi5vlr1r35qn3gj788lh9xrb7dz03r57hxk11x8w72kv415pih"; depends=[Rcpp Rcpp ]; };
GUniFrac = derive { name="GUniFrac"; version="1.0"; type="cran"; sha256="0xr68yv3h2lwn7sxy8l5p9g1z3q9hihg9jamsyl70jj9b2ic80jn"; depends=[vegan ape ]; };
GWAF = derive { name="GWAF"; version="2.2"; type="cran"; sha256="11lk1dy24y1d0biihy2aypdvlx569lw1pfjs51m54rhgpwzkw6yd"; depends=[geepack coxme lme4 ]; };
GWASExactHW = derive { name="GWASExactHW"; version="1.01"; type="cran"; sha256="19qmk8h7kxmn9kzw0x4xns5p3qqz27xkqq4q6zmh4jzizd0fsl78"; depends=[ ]; };
GWASTools = derive { name="GWASTools"; version="1.12.2"; type="bioc"; sha256="06g3wbnr70dw7bgbiid4qcjnvvzdvc0vn3mc3i757h8sdd8ina5x"; depends=[Biobase ncdf gdsfmt DBI RSQLite GWASExactHW DNAcopy survival sandwich lmtest quantsmooth ]; };
GWG = derive { name="GWG"; version="1.0"; type="cran"; sha256="1va0cd229dhhi1lmrkpwapcm96hrdmxilrmba02xnl7ikhisw0my"; depends=[ ]; };
GWLelast = derive { name="GWLelast"; version="1.1"; type="cran"; sha256="0c3mcvmvxvgibja6rb8j2mhmmjny825wgvi1dw0pz8pq1kg1q0ay"; depends=[doParallel geosphere sp spgwr glmnet foreach ]; };
GWRM = derive { name="GWRM"; version="2.0"; type="cran"; sha256="1dfrwxr12dn6i39mv6i3j6k341f9rvd76skh0350jn6zx1cdkj9k"; depends=[SuppDists ]; };
GWmodel = derive { name="GWmodel"; version="1.2-5"; type="cran"; sha256="14pp1hy4bqr6kg9fy9nchjm6kb3l85f58rl2449b7wv7vsk3yfvk"; depends=[maptools robustbase sp ]; };
GWsignif = derive { name="GWsignif"; version="1.0"; type="cran"; sha256="04663qgy3xmijrx8m1s5ql7zj70mgsd58dl08ci742l1fzmfya5f"; depends=[ ]; };
GaDiFPT = derive { name="GaDiFPT"; version="1.0"; type="cran"; sha256="15fnj1w30h0zdj032f3js0bbb1qlyk4b54a4aclykwzicqdgalkg"; depends=[ ]; };
GameTheory = derive { name="GameTheory"; version="1.0"; type="cran"; sha256="07v2qhnhczid814isnz4ywf624sds6jxxzayl8mzlnjv5qnk59z8"; depends=[lpSolveAPI combinat gtools ineq kappalab ]; };
Gammareg = derive { name="Gammareg"; version="1.0"; type="cran"; sha256="1a5wibnbd8jg0v8577n1x9kc358qpd4jz7l8h7r541sdpprm6wb0"; depends=[ ]; };
GenABEL = derive { name="GenABEL"; version="1.8-0"; type="cran"; sha256="0sd497qvik70iwv7wc8r50rhc5wx153pm8vif738wwqqp43chks3"; depends=[MASS GenABEL_data ]; };
GenABEL_data = derive { name="GenABEL.data"; version="1.0.0"; type="cran"; sha256="0p66fb0gynjx3mnfvnlz45cbn6xf49gwx9mfyxf584xfcggxaa1c"; depends=[ ]; };
GenBinomApps = derive { name="GenBinomApps"; version="1.0-2"; type="cran"; sha256="1ps1rq8cjlwh658mysdh3xbn5fihanzcwxb38xvg4031vnwv80in"; depends=[ ]; };
GenForImp = derive { name="GenForImp"; version="1.0"; type="cran"; sha256="1wcvi52fclcm6kknbjh4r9bpkc2rg8nk6cddnf5j8zqbvrwf4k5x"; depends=[mvtnorm sn ]; };
GenKern = derive { name="GenKern"; version="1.2-60"; type="cran"; sha256="12qmd9ydizl7h178ndn25i4xscjnrssl5k7bifwv94m0wrgj4x6c"; depends=[KernSmooth ]; };
GenOrd = derive { name="GenOrd"; version="1.3.0"; type="cran"; sha256="07ll15fqcfvrbsd8psbvn9569hcmvghwadzb3h9qxh6pxnl9i5qd"; depends=[mvtnorm Matrix MASS ]; };
GenSA = derive { name="GenSA"; version="1.1.5"; type="cran"; sha256="10fkb30p3ncswlq4f9jknfhrrsi4v3lkn2nlnpb2yhrqai538wij"; depends=[ ]; };
GenWin = derive { name="GenWin"; version="0.1"; type="cran"; sha256="0jm537i4jn3azdpvd50y9p0fssfx2ym2n36d3zgnfd32gqckz3s4"; depends=[pspline ]; };
GeneAnswers = derive { name="GeneAnswers"; version="2.8.0"; type="bioc"; sha256="04hb6ja695c1jn7w47rdbz15qvl74ddq7wvkqxlbz7n670n5vqh3"; depends=[igraph RCurl annotate Biobase XML RSQLite MASS Heatplus RColorBrewer RBGL annotate downloader ]; };
GeneCycle = derive { name="GeneCycle"; version="1.1.2"; type="cran"; sha256="1ghdzdddbv6cnxqd08amy4c4s5jsxa637r828ygffk6z76xjr6b6"; depends=[MASS longitudinal fdrtool ]; };
GeneExpressionSignature = derive { name="GeneExpressionSignature"; version="1.12.0"; type="bioc"; sha256="04wmgsxbv2gzp0f9bnr3zqmjhjj9ph96jjmvkjldq88ryq8zwlbm"; depends=[Biobase PGSEA ]; };
GeneF = derive { name="GeneF"; version="1.0"; type="cran"; sha256="0bizf47944b2zv9ayxb9rhrqx0ilz2xlvkw7x5vbg7l67y2g2l4d"; depends=[ ]; };
GeneFeST = derive { name="GeneFeST"; version="1.0.1"; type="cran"; sha256="0qgzjzhwf3nigfi09maywg9zkjxiicwiwiyqfcdk9gsvmp6mr4qn"; depends=[BASIX ]; };
GeneGA = derive { name="GeneGA"; version="1.16.0"; type="bioc"; sha256="18l3mpvadw02gclggx7288jpaim0rkz6h9j3wy6351bj0h1ki4s6"; depends=[seqinr hash ]; };
GeneMeta = derive { name="GeneMeta"; version="1.38.0"; type="bioc"; sha256="18lrszvq7a18ndgn1ylgf14xaz9sck3s0f7hhfakgjmm43yg9m2j"; depends=[Biobase genefilter Biobase ]; };
GeneNet = derive { name="GeneNet"; version="1.2.12"; type="cran"; sha256="0z94ws95nvk7jx5fnrwb81925y14fash1g5pd1mmkkj8njq9kk4l"; depends=[corpcor longitudinal fdrtool igraph ]; };
GeneNetworkBuilder = derive { name="GeneNetworkBuilder"; version="1.8.0"; type="bioc"; sha256="068y7ak8w62nj3p55cs5kljzfq74m06g7nrbclqjx9jbsa3lpc12"; depends=[Rcpp graph plyr graph Rcpp ]; };
GeneOverlap = derive { name="GeneOverlap"; version="1.2.0"; type="bioc"; sha256="0yjbclrb1vkpf4jckwggpp4mmq7vh5z0maqy9rswk98a5ybd25lk"; depends=[RColorBrewer gplots ]; };
GeneReg = derive { name="GeneReg"; version="1.1.2"; type="cran"; sha256="081qc66mb17dwk886x9l2z4imklxnfs02yqql0ri9c47bpsga7wp"; depends=[igraph ]; };
GeneRegionScan = derive { name="GeneRegionScan"; version="1.22.0"; type="bioc"; sha256="0x50d1a7h6npkxvwsxl7dv47ww5a0w5frj833hni1j65z62v7h32"; depends=[Biobase Biostrings Biobase affxparser RColorBrewer Biostrings ]; };
GeneSelectMMD = derive { name="GeneSelectMMD"; version="2.10.0"; type="bioc"; sha256="0n5sa8zz804qkx3rayvw23xf7g96ynavm1jrvka18vcf9jaymy96"; depends=[Biobase Biobase MASS survival limma ]; };
GeneSelector = derive { name="GeneSelector"; version="2.16.0"; type="bioc"; sha256="1prkrn9fjxbklp5mck6fi310y98b79fa7nj1h1s858lcddkm53l5"; depends=[Biobase multtest siggenes samr limma ]; };
Geneland = derive { name="Geneland"; version="4.0.5"; type="cran"; sha256="1v2m8v4sy95rajjw8m9bg4yal5ay7x1k5kqjxrivm45ad546ykwh"; depends=[RandomFields fields ]; };
GeneralizedHyperbolic = derive { name="GeneralizedHyperbolic"; version="0.8-1"; type="cran"; sha256="0rx07z5npawvsah2lhhkryzpj19sg0sl0w410gmff985ksdn285m"; depends=[DistributionUtils RUnit ]; };
GeneticSubsetter = derive { name="GeneticSubsetter"; version="0.5"; type="cran"; sha256="1j04qbnx6j39w16ks3v05hr99lsdsy8sp8af2cfg2mqwk4dy3kx2"; depends=[rrBLUP ]; };
GeneticTools = derive { name="GeneticTools"; version="0.3.1"; type="cran"; sha256="033dwg94ns4mz2ixgn180h6qd783gm492p9qs2nf8498cb4ycg9m"; depends=[gMWT snpStats Rcpp plotrix Rcpp RcppArmadillo ]; };
GeneticsDesign = derive { name="GeneticsDesign"; version="1.34.0"; type="bioc"; sha256="1ixz68hn11dn83c1dnryj9jaad6gwbnnvn2478njsl9sqca5x1hj"; depends=[gmodels gtools mvtnorm ]; };
GeneticsPed = derive { name="GeneticsPed"; version="1.28.0"; type="bioc"; sha256="1qw6agvkjm9b747lbvqw24y8gflp4bhkasp2vjizjyjf8jy0br7j"; depends=[MASS gdata genetics ]; };
GenoView = derive { name="GenoView"; version="1.0.0"; type="bioc"; sha256="116q5k2byizpd6fax7l0nvlh8fablnmjjphm8kjf5clzc5dqlnyz"; depends=[gridExtra GenomicRanges ggbio ggplot2 biovizBase ]; };
GenomeGraphs = derive { name="GenomeGraphs"; version="1.26.0"; type="bioc"; sha256="0l7gx0fn29wyac0vjsw1wh5j2232ngbzyhb7ihnq8hh1krhsml4s"; depends=[biomaRt ]; };
GenomeInfoDb = derive { name="GenomeInfoDb"; version="1.2.5"; type="bioc"; sha256="1rmxk4wyjgycdqc3f7pnyjcz7n1j8w8wkik2qcq50xka4wh2sw0k"; depends=[BiocGenerics S4Vectors IRanges BiocGenerics S4Vectors ]; };
GenomicAlignments = derive { name="GenomicAlignments"; version="1.2.2"; type="bioc"; sha256="00kk1gq6iiig9746j9h8ac2l4dvwz824pjy0hs7w5kwysq0szjxz"; depends=[BiocGenerics S4Vectors IRanges GenomeInfoDb GenomicRanges Biostrings Rsamtools BiocGenerics S4Vectors IRanges GenomicRanges Biostrings Rsamtools BiocParallel S4Vectors IRanges ]; };
GenomicFeatures = derive { name="GenomicFeatures"; version="1.18.7"; type="bioc"; sha256="0rxll1qvw43gmk0x5hknlmjr3wdnjyc6s6lif60yj1qk1y66ijpx"; depends=[BiocGenerics S4Vectors IRanges GenomeInfoDb GenomicRanges AnnotationDbi DBI RSQLite Biostrings rtracklayer biomaRt RCurl Biobase ]; };
GenomicFiles = derive { name="GenomicFiles"; version="1.2.1"; type="bioc"; sha256="0jwj30ppknsgsac3750d3b7f7fp5m3g9px8ghlkvb1chw1x0lhrw"; depends=[BiocGenerics Rsamtools GenomicRanges rtracklayer BiocParallel GenomicAlignments IRanges ]; };
GenomicInteractions = derive { name="GenomicInteractions"; version="1.0.3"; type="bioc"; sha256="0hczqam6isn1rw4xn4dxzgvrg11kwzs6ysy5i3xxyzyf23yqjbwf"; depends=[Rsamtools GenomicRanges IRanges data_table stringr rtracklayer ggplot2 gridExtra igraph plotrix ]; };
GenomicRanges = derive { name="GenomicRanges"; version="1.18.4"; type="bioc"; sha256="1aaa1wqcyk7jsi4nzg6kyh3awwzi323qnj1ibg2zfqzj9lv6ixqz"; depends=[BiocGenerics S4Vectors IRanges GenomeInfoDb XVector S4Vectors IRanges ]; };
GenomicTuples = derive { name="GenomicTuples"; version="1.0.0"; type="bioc"; sha256="15pwq8zsr20ygy1mwm2q3siljkj51h8cr61n8jcphd8h29xjvhjk"; depends=[GenomicRanges GenomeInfoDb Rcpp BiocGenerics S4Vectors Biobase Rcpp ]; };
Genominator = derive { name="Genominator"; version="1.20.0"; type="bioc"; sha256="1a9zw05asmrl848yii4bkszj2lsh6jank095g8zcp1yrncdgszi1"; depends=[RSQLite DBI BiocGenerics IRanges GenomeGraphs ]; };
GeoDE = derive { name="GeoDE"; version="1.0"; type="cran"; sha256="0wawkzj0344pprm8g884d7by8v74iw96b109rgm7anal48fl30im"; depends=[Matrix MASS ]; };
GeoGenetix = derive { name="GeoGenetix"; version="0.0.2"; type="cran"; sha256="0rrc8rdf6whpd830s2g9ybz82jcd0il9kkfrjh3xza3b86fasdvg"; depends=[RandomFields ]; };
GeoLight = derive { name="GeoLight"; version="1.03"; type="cran"; sha256="0l2p4rcmk33dj31xy06652mn05d2dhnny3xpzcf12kxyflpipdgr"; depends=[maps changepoint ]; };
GeoXp = derive { name="GeoXp"; version="1.6.2"; type="cran"; sha256="18wdmdwb79ipdjdii068dz9f55b5ldxn95g5q6jcxsqwp0wldvw8"; depends=[quantreg rgl spdep KernSmooth rgeos robustbase splancs ]; };
GetR = derive { name="GetR"; version="0.1"; type="cran"; sha256="1b2wirhz4nhvmf863czwb8z8b42ilsyjjrg9rc4nd9b7nz50bmjg"; depends=[party ]; };
GetoptLong = derive { name="GetoptLong"; version="0.1.0"; type="cran"; sha256="1r86bffsj6s8d71wngspqvfv0gyrrpihf225b4v3c69c05n36qm1"; depends=[rjson GlobalOptions ]; };
GhcnDaily = derive { name="GhcnDaily"; version="1.5"; type="cran"; sha256="1gln1giid5n5b9mxidh90l8ahvcgx968zak2lxr2f9c32pnrpmnp"; depends=[R_utils R_oo R_methodsS3 abind ncdf ]; };
GibbsACOV = derive { name="GibbsACOV"; version="1.1"; type="cran"; sha256="1ikcdsf72sn1zgk527zmxw3zjhx0yvkal6dv001cgkv202842kll"; depends=[MASS ]; };
GillespieSSA = derive { name="GillespieSSA"; version="0.5-4"; type="cran"; sha256="0bs16g8vm9yrv74g94lj8fdfmf1rjj0f04lcnaya7gyak3jhk36q"; depends=[ ]; };
Giza = derive { name="Giza"; version="1.0"; type="cran"; sha256="13nkm8mk1v7s85kmp6psvnr1v97vi0gid8rsqyq3x6046pyl5z6v"; depends=[reshape lattice lattice ]; };
GlobalAncova = derive { name="GlobalAncova"; version="3.34.0"; type="bioc"; sha256="1k8b3p1g7igqynvhq4jpvzcx739q6fk05zahrdxcipi7r58y9f61"; depends=[corpcor globaltest annotate AnnotationDbi ]; };
GlobalDeviance = derive { name="GlobalDeviance"; version="0.4"; type="cran"; sha256="0s318arq2kmn8fh0rd5hd1h9wmadr9q8yw8ramsjzvdc41bxqq1a"; depends=[snowfall ]; };
GlobalFit = derive { name="GlobalFit"; version="1.0"; type="cran"; sha256="0cx4jpr5yhjdqbvnswqjwx7542mnmk73dy99klwg8bsz0c36ii5k"; depends=[sybil ]; };
GlobalOptions = derive { name="GlobalOptions"; version="0.0.6"; type="cran"; sha256="0g10zf3hn4ns7faffqzc9xbscz9p84vcqhlg4jp9jl063ma2pvqm"; depends=[ ]; };
Gmisc = derive { name="Gmisc"; version="1.1"; type="cran"; sha256="1dcnnsjxap50zfx984rxgksjcvqgbb9zxxd03186h4669slh1d0d"; depends=[Rcpp htmlTable lattice Hmisc forestplot abind knitr magrittr Rcpp ]; };
GoFKernel = derive { name="GoFKernel"; version="2.0-5"; type="cran"; sha256="030gcj608nkalscjqs2ad73pwhk4gp5gl1lvm4mc9b39jhki0r70"; depends=[KernSmooth ]; };
Gotoh = derive { name="Gotoh"; version="0.9"; type="cran"; sha256="0ii8siraqymyzhjq45yax8i4hcjmqh9r62838yqyzv2rjbmb06dm"; depends=[Rcpp Rcpp ]; };
GrammR = derive { name="GrammR"; version="1.0.1"; type="cran"; sha256="1dhq4srzxbdbym89dy4gh0c4jjfkljxdnriv4v0yh9g688my1gvn"; depends=[gWidgets RGtk2 gWidgetsRGtk2 MASS cluster rgl GUniFrac ape ]; };
GraphAT = derive { name="GraphAT"; version="1.38.0"; type="bioc"; sha256="18zy8d1b5q6v6sx0gpgzbyhwf8h87c5vf4i2zagsjn6k26v12f7g"; depends=[graph graph MCMCpack ]; };
GraphAlignment = derive { name="GraphAlignment"; version="1.30.0"; type="bioc"; sha256="0rr4kq3r5wlh8mgn0raggdhc3j59x9k3qnzllm6khhp053gjr32f"; depends=[ ]; };
GraphPAC = derive { name="GraphPAC"; version="1.8.0"; type="bioc"; sha256="0pgxnhbqq919rawcbpjdy8xd5q22rb34grbfnhq8m0lwd8an9hzr"; depends=[iPAC igraph TSP RMallow ]; };
GraphPCA = derive { name="GraphPCA"; version="1.0"; type="cran"; sha256="17ipcp7nh47lfs9jy1aybpz4r172zj5yyrdrgmd6wa7hax8yv8gg"; depends=[ggplot2 FactoMineR scatterplot3d scales ]; };
GrapheR = derive { name="GrapheR"; version="1.9-84"; type="cran"; sha256="1wwks2a4vzhj1rcspizp1vadl6kvrqr8s4zd6pghj02nd266znk9"; depends=[ ]; };
GrassmannOptim = derive { name="GrassmannOptim"; version="2.0"; type="cran"; sha256="05r5zg4kf3xd6pp56bl8ldchdxvspxkdfd33b623hndjhn4lj2lq"; depends=[Matrix ]; };
Grid2Polygons = derive { name="Grid2Polygons"; version="0.1-5"; type="cran"; sha256="18hgyx8a75allldsc2ih5i1p7ajkwj2x020cfd2hp18zrc4qyp5n"; depends=[sp rgeos ]; };
GriegSmith = derive { name="GriegSmith"; version="1.0"; type="cran"; sha256="1a7gnaig1wvxpph7d8c37kx51dznzk0457fzf7alw95iwpyb4z7j"; depends=[spatstat ]; };
GroupSeq = derive { name="GroupSeq"; version="1.3.2"; type="cran"; sha256="16n06jw7f97jhafgl9sfvd163v1walhlpmai1hmhiwjvv341sp13"; depends=[ ]; };
GuardianR = derive { name="GuardianR"; version="0.5"; type="cran"; sha256="0m5arxz4ih84zg8sf2wy2kg38adraa098gb52vwz93dzdm1dhslw"; depends=[RCurl RJSONIO ]; };
Guerry = derive { name="Guerry"; version="1.6-1"; type="cran"; sha256="1hpp49w2kd1npsd709cwg125pw6mrqxfv2nn3lcs1mg2r49ki2bl"; depends=[ ]; };
Gviz = derive { name="Gviz"; version="1.10.11"; type="bioc"; sha256="0mfwb230xh77a0qkfp6207sack9g3aksw9mrpyhyk35pfzrh4k8m"; depends=[BiocGenerics S4Vectors IRanges GenomeInfoDb GenomicRanges XVector rtracklayer lattice RColorBrewer biomaRt AnnotationDbi Biobase GenomicFeatures BSgenome Biostrings biovizBase Rsamtools latticeExtra matrixStats GenomicAlignments ]; };
GxM = derive { name="GxM"; version="1.1"; type="cran"; sha256="02rv8qb46ylk22iqn9cgh63vkyrg9a8nr1d0d3j5hqhi0wyhc41r"; depends=[Rcpp minqa nlme ]; };
HAC = derive { name="HAC"; version="1.0-3"; type="cran"; sha256="084i123fj5vnhn08fa1qzbk93khsi3r60s52d6pqkqvzbxc572jr"; depends=[copula numDeriv ]; };
HAP_ROR = derive { name="HAP.ROR"; version="1.0"; type="cran"; sha256="1id9amz1cc2l2vnpp0ikbhf8ghbgzqd1b9dfivnyglg7996c3gbg"; depends=[hash ape ]; };
HAPim = derive { name="HAPim"; version="1.3"; type="cran"; sha256="03qy0pxazv3gdq3fck7171ixilb9zi1dwnvc4v7d726g0lvn80pg"; depends=[ ]; };
HBSTM = derive { name="HBSTM"; version="1.0.1"; type="cran"; sha256="0bx7dxcfj46k4kqpqb39w4qkm4hvr1ka8d8rws445vkyl31kr0q6"; depends=[MASS fBasics maps ]; };
HCsnip = derive { name="HCsnip"; version="1.6.0"; type="bioc"; sha256="0fc7fn3v2zz6p94n14wj5xamq5c49bdinkrgkm5q9rpdd55hzyah"; depends=[survival coin fpc clusterRepro impute randomForestSRC sm sigaR Biobase ]; };
HDMD = derive { name="HDMD"; version="1.2"; type="cran"; sha256="0na0z08fdf47ghfl2r3fp9qg5pi99kvp7liymwxym2wglkwl4chq"; depends=[psych MASS ]; };
HDPenReg = derive { name="HDPenReg"; version="0.91"; type="cran"; sha256="0q63pm39ivka64f7rhad6bv0yr1b2b3241ln8gqfnal25qw31w82"; depends=[rtkpp rtkpp ]; };
HDTD = derive { name="HDTD"; version="1.0.0"; type="bioc"; sha256="16mgcb512q4r49a0jxa24k7cs1ivzaq0638m3xfl8qp64mhycd4n"; depends=[ ]; };
HDclassif = derive { name="HDclassif"; version="1.2.3"; type="cran"; sha256="1ss30cjq352cr3v5blpdywycfv2ik200mvj54y8qihc811mash6h"; depends=[MASS ]; };
HDtweedie = derive { name="HDtweedie"; version="1.1"; type="cran"; sha256="14awd7sws0464f68f5xwnv1xvr0xflvx2z2zzcfj1csvk3af0zzj"; depends=[ ]; };
HEAT = derive { name="HEAT"; version="1.2"; type="cran"; sha256="1qifqd06ifl0f5l44mkxapnkwhpm0b82yq6dhfw4f8yhb27wd0z2"; depends=[ ]; };
HELP = derive { name="HELP"; version="1.24.0"; type="bioc"; sha256="02gwdasbkh2gwc2cr1jhsb5w1i4jwfgdrdfgi5a7c76k37wy7m09"; depends=[Biobase ]; };
HEM = derive { name="HEM"; version="1.38.0"; type="bioc"; sha256="0hmibyl9jbagr2w1lcy7vcbxbbnqh5r03ya39c0x6sanh9mswbf2"; depends=[Biobase ]; };
HGNChelper = derive { name="HGNChelper"; version="0.3.1"; type="cran"; sha256="0vidw7gdvr0i4l175ic5ya8q2x2jj0v2vc7fagzrp2mcy7fn1y6a"; depends=[ ]; };
HH = derive { name="HH"; version="3.1-15"; type="cran"; sha256="030yfg1vx4ns0v2623axi1n6jdfi520fsjvln196gjw7dzdsm1gh"; depends=[lattice latticeExtra multcomp gridExtra reshape2 leaps vcd colorspace RColorBrewer Rcmdr shiny ]; };
HHG = derive { name="HHG"; version="1.4"; type="cran"; sha256="048jbwhrbgp1pv2j6sw234ykdn7bgpa49slwh3p5547nl2cwjysg"; depends=[ ]; };
HI = derive { name="HI"; version="0.4"; type="cran"; sha256="0i7y4zcdr6wcjy43lz9h8glzpdv0pz7livr95xb1j4p8zafykday"; depends=[ ]; };
HIV_LifeTables = derive { name="HIV.LifeTables"; version="0.1"; type="cran"; sha256="0qa5n9w5d5l1kr4827a34581q380xmpyzmmhhl300z1jwr0j94df"; depends=[ ]; };
HIest = derive { name="HIest"; version="2.0"; type="cran"; sha256="0ik55kxhzjyg6z6072iz9nfaj7x1nvf91l1kysgvkjccr6jf3y86"; depends=[nnet ]; };
HK80 = derive { name="HK80"; version="0.0.1"; type="cran"; sha256="1qhknrqpspxrdxzf5kakans94db58bbhgpblvpwcyw4jrjmm0ng7"; depends=[ ]; };
HLMdiag = derive { name="HLMdiag"; version="0.2.5"; type="cran"; sha256="1yim9m5q1m112aj7zhsw345l32bdj7lbw2mqpcxhjzv1lcknm5lq"; depends=[lme4 ggplot2 plyr reshape2 MASS Matrix Rcpp Rcpp RcppArmadillo ]; };
HLSM = derive { name="HLSM"; version="0.4"; type="cran"; sha256="115215fiaib6ndvzb3gn80l636ddxp0dxrnph8pnh16b3b6q2jnk"; depends=[MASS coda ]; };
HMM = derive { name="HMM"; version="1.0"; type="cran"; sha256="0z0hcqfixx1l2a6d3lpy5hmh0n4gjgs0jnck441akpp3vh37glzw"; depends=[ ]; };
HMMCont = derive { name="HMMCont"; version="1.0"; type="cran"; sha256="1drni4f72x83sprn65wnhw0pv1q8lfkgmxdr9h4rwv1accril85x"; depends=[ ]; };
HMMcopy = derive { name="HMMcopy"; version="1.8.0"; type="bioc"; sha256="1wh3ha3yk79ci1amna3wcm5nmwq1dsvz6qgf72xcnx3x5d6f5v49"; depends=[IRanges geneplotter ]; };
HMMpa = derive { name="HMMpa"; version="1.0"; type="cran"; sha256="14r2axg42by49qm6avgv7g3xnc29bxlrni5fhc5vdz0wygkcrqhn"; depends=[ ]; };
HMP = derive { name="HMP"; version="1.3.1"; type="cran"; sha256="1r39mq8j071khza37ck7w4kvk1di71hhn5m4wnx9dak7nlcq2nwx"; depends=[MCMCpack dirmult ]; };
HMPTrees = derive { name="HMPTrees"; version="1.2"; type="cran"; sha256="0agp8w7rzr1byj01di89r3qy1vb9inb2zgys78mg8jnk7axi925l"; depends=[ape ]; };
HMR = derive { name="HMR"; version="0.4.1"; type="cran"; sha256="1acaph5q6vgi4c7liv7xsc3crhp23nib5q44aszxhramky0gvaqr"; depends=[ ]; };
HPbayes = derive { name="HPbayes"; version="0.1"; type="cran"; sha256="1kpqnv7ymf95sgb0ik7npc4qfkzc1zb483vwnjpba4f42jhf508y"; depends=[MASS mvtnorm corpcor numDeriv boot ]; };
HSAUR = derive { name="HSAUR"; version="1.3-6"; type="cran"; sha256="1872diskd9yz76x0z6yjg6dn1dxh479ybnja8vcly9fr8jb0kqqj"; depends=[ ]; };
HSAUR2 = derive { name="HSAUR2"; version="1.1-13"; type="cran"; sha256="13b14m2cknicahvprkn3kmjk1sir7a10vkaq63niinfirw603fa9"; depends=[ ]; };
HSAUR3 = derive { name="HSAUR3"; version="1.0-4"; type="cran"; sha256="1m2nqvm0ma5rmwwn27nzzyjzq8c0awsrrjjrnyaj50bcnmg0x0k6"; depends=[ ]; };
HSROC = derive { name="HSROC"; version="2.1.8"; type="cran"; sha256="056g6iygrddmpmg5nnilqrlw2xavmcc9q07z942vc2nivw06h346"; depends=[lattice coda MASS MCMCpack ]; };
HSSVD = derive { name="HSSVD"; version="1.2"; type="cran"; sha256="1k7ga397grl0r4p0ipjgw5xlafb2528rpww67bw7mmy01w87a1cc"; depends=[bcv ]; };
HTMLUtils = derive { name="HTMLUtils"; version="0.1.7"; type="cran"; sha256="05y505jazzahnd6jsp3plqz8hd75991hhhcpcdn8093rinb1f8l1"; depends=[R2HTML ]; };
HTSCluster = derive { name="HTSCluster"; version="2.0.4"; type="cran"; sha256="1kvq118hqxc81n88g4bq10lh84dydrqqhzig246wf3f97ajvq7y0"; depends=[capushe edgeR poisson_glm_mix plotrix ]; };
HTSFilter = derive { name="HTSFilter"; version="1.6.0"; type="bioc"; sha256="0wmag2q92364fs36y1hjxkkvi0ng408sphra5rk728g5panqh4j6"; depends=[Biobase DESeq edgeR DESeq2 GenomicRanges IRanges ]; };
HTSanalyzeR = derive { name="HTSanalyzeR"; version="2.18.0"; type="bioc"; sha256="1gvqzcy6zv984kl29w8vwz6sajz4azk8navlk0vq47crady1x1wq"; depends=[igraph graph igraph GSEABase BioNet cellHTS2 AnnotationDbi biomaRt RankProd ]; };
HTSeqGenie = derive { name="HTSeqGenie"; version="3.16.1"; type="bioc"; sha256="0zciancr64d37a9akcr6hkha5f2wkb88jn0grpgs2gdji130pfa0"; depends=[gmapR ShortRead VariantAnnotation BiocGenerics IRanges GenomicRanges Rsamtools Biostrings chipseq hwriter Cairo GenomicFeatures BiocParallel rtracklayer GenomicAlignments VariantTools ]; };
HTqPCR = derive { name="HTqPCR"; version="1.20.0"; type="bioc"; sha256="0z3872svkx86jjygcsqyh7z6a5i5rhrslyn3i2hxixwhscn5kib7"; depends=[Biobase RColorBrewer limma affy Biobase gplots limma RColorBrewer ]; };
HUM = derive { name="HUM"; version="1.0"; type="cran"; sha256="1bq74l88jvscmq9ihv5wn06w2wng073ybvqb2bdx2dmiqlpv6jw2"; depends=[gtools Rcpp rgl Rcpp ]; };
HW_pval = derive { name="HW.pval"; version="1.0"; type="cran"; sha256="14nmyqw2d9cmn64789yc54fmiqanh6n1dizp7vj94h7b0jwq63yy"; depends=[ ]; };
HWEBayes = derive { name="HWEBayes"; version="1.4"; type="cran"; sha256="1rbffx6pn031a278ps9aqxcaq8yi73s5kf60za143ysbfxv9dphw"; depends=[MCMCpack mvtnorm ]; };
HWEintrinsic = derive { name="HWEintrinsic"; version="1.2.1"; type="cran"; sha256="1sg5lrc6kl5rr6f5awp100qpd1679745kixasiddiggzd8fhgb7q"; depends=[ ]; };
HWxtest = derive { name="HWxtest"; version="1.0.5"; type="cran"; sha256="01pvi87g5sfglbdv38ik9f47fah3gs7d75d6kgn5xkjb6b2af9d7"; depends=[ ]; };
HadoopStreaming = derive { name="HadoopStreaming"; version="0.2"; type="cran"; sha256="1l9msaizjvnsj1jrpghj4g057qifdgg6vbqhfxhn1fiqdqi2056q"; depends=[getopt ]; };
HandTill2001 = derive { name="HandTill2001"; version="0.2-9"; type="cran"; sha256="1j4ivxarm3k9sj05824lv6b03apyabpciv4mp253vv0yzjcp2bzf"; depends=[ ]; };
Hankel = derive { name="Hankel"; version="0.0-1"; type="cran"; sha256="0g3b0ji8hw29k0wxxvlnbcm0z91p4vbajbrhm6cqbccjq85lg4si"; depends=[ ]; };
HapEstXXR = derive { name="HapEstXXR"; version="0.1-7"; type="cran"; sha256="1jarb0465yymb08r8dr0mn6qlwbf0y0c4ipvxvcfwlvqalbp2kd6"; depends=[survival ]; };
Haplin = derive { name="Haplin"; version="5.5"; type="cran"; sha256="12wkj5x1s920xs0xzhxk0dswmwan7x20fw5sj6cx29n013h1gkam"; depends=[GenABEL DatABEL mgcv MASS SuppDists snow ]; };
HaploSim = derive { name="HaploSim"; version="1.8.4"; type="cran"; sha256="0794f76hc9qvjmay7c61cmzycqafljs0g0hliq9xfrw4f23gq3sa"; depends=[ ]; };
HardyWeinberg = derive { name="HardyWeinberg"; version="1.5.5"; type="cran"; sha256="1kz12301bi2880i9ds7wvc6yb5hvrs3fr5689fm1yygkqfq8zc56"; depends=[mice ]; };
HarmonicRegression = derive { name="HarmonicRegression"; version="1.0"; type="cran"; sha256="0inz3l610wl0ibqjyrhfbmwmcfzcmcfhixai4lpkbfsyx93z2i4d"; depends=[ ]; };
Harshlight = derive { name="Harshlight"; version="1.38.0"; type="bioc"; sha256="02q2kyad3613z77sycq0w69lc8jl1a8s99a5lcpir0dviw9brhzc"; depends=[affy altcdfenvs Biobase ]; };
Heatplus = derive { name="Heatplus"; version="2.12.0"; type="bioc"; sha256="0hnf9ybrj24nr2hybh4lnxv9lxazzhkz53kd8r3xh2irwvf6mpnq"; depends=[ ]; };
HelpersMG = derive { name="HelpersMG"; version="1.1"; type="cran"; sha256="0pk8bcad9dnza803cq1428qlgb74vzq0vzx2q6f2j2hwmfpn13dx"; depends=[coda ]; };
HiClimR = derive { name="HiClimR"; version="1.2.0"; type="cran"; sha256="10ick0311nc4zcqswlk3lhi9k5bv96nicqxqcq706cmlfk0qd0c7"; depends=[ ]; };
HiCseg = derive { name="HiCseg"; version="1.1"; type="cran"; sha256="19581k3g71wrznyqrp4hmspqyzcbcfbc48xgjlq13zmqii45hcn6"; depends=[ ]; };
HiDimDA = derive { name="HiDimDA"; version="0.2-3"; type="cran"; sha256="0pk7hf8cnwv22p5cbpsh5wd94i1an87ddv80qycgypx4wi0v57hh"; depends=[ ]; };
HiDimMaxStable = derive { name="HiDimMaxStable"; version="0.1.1"; type="cran"; sha256="0gscdjm48yyf8h3bn6xjbjlfc1hwbbh5j6v64c0z3d04h9q35c24"; depends=[copula mnormt partitions maxLik mnormpow VGAM ]; };
HiLMM = derive { name="HiLMM"; version="1.1"; type="cran"; sha256="09135cwi6kqrvzdlivm86q1dqn6cbbi6nspdm0c2s700jl49pl5z"; depends=[ ]; };
HiPLARM = derive { name="HiPLARM"; version="0.1"; type="cran"; sha256="0af68gfmc89nn1chmqay6ix0zygcp1hmylj02i7l6rx6vb06qw6w"; depends=[Matrix ]; };
HiTC = derive { name="HiTC"; version="1.10.0"; type="bioc"; sha256="0brb21jh98a1518hkn7ni93qjcibfi4p2x407xrvfkbb9vdwmk5h"; depends=[IRanges GenomicRanges Biostrings rtracklayer RColorBrewer Matrix ]; };
HiddenMarkov = derive { name="HiddenMarkov"; version="1.8-3"; type="cran"; sha256="1bgkzj9lmv0rbi5a77brw7w69k2w611jh3d851lfqnwx6gxgzkmc"; depends=[ ]; };
HierO = derive { name="HierO"; version="0.2"; type="cran"; sha256="1lqj5grjly4kzxl7wb192aagz2kdvpnjdan2kcg5yxwvg1xcvwv1"; depends=[rneos RCurl bitops XML tcltk2 ]; };
HighDimOut = derive { name="HighDimOut"; version="1.0.0"; type="cran"; sha256="0r7mazwq4fsz547d3nyavmqya7144lg3fkl5f7amrp48l9h85vx2"; depends=[foreach DMwR plyr proxy FNN ggplot2 ]; };
HilbertVis = derive { name="HilbertVis"; version="1.24.0"; type="bioc"; sha256="06qsmfy0p4m1x4w9az0cw1fh8fr59kzc6sskkzihb2kl51vbjfcz"; depends=[lattice ]; };
HilbertVisGUI = derive { name="HilbertVisGUI"; version="1.24.0"; type="bioc"; sha256="14488b09kvap9m6xh93vrbi3d1wla1246sa0siamxvhpvsnl4gs0"; depends=[HilbertVis ]; };
HistDAWass = derive { name="HistDAWass"; version="0.1.2"; type="cran"; sha256="16c4b9nfl6rbca7zifb2q3c5x60rmj32913hw1f79xs9ffdrnkwr"; depends=[FactoMineR class ggplot2 histogram ]; };
HistData = derive { name="HistData"; version="0.7-5"; type="cran"; sha256="17s64hfs7r77p0wjzpbgz9wp3gjzbly2d0v784f9m2bka8gj6xhr"; depends=[ ]; };
HistogramTools = derive { name="HistogramTools"; version="0.3.1"; type="cran"; sha256="0cc3saly5q2kn1gr2mam7g901ddcipmlrn1m0amgrnbkakby2320"; depends=[Hmisc ash stringr ]; };
HiveR = derive { name="HiveR"; version="0.2-28"; type="cran"; sha256="1zz1cg7cf4yyv1bymqlyh50nzj5lgdv4clzm0l2vladcxzjvgk8c"; depends=[RColorBrewer plyr jpeg png rgl xtable tkrgl ]; };
Hmisc = derive { name="Hmisc"; version="3.16-0"; type="cran"; sha256="03d372bld4mikyrvmfw00ljiz6jf7szkmhrlgxs5vqk3v81kkp2f"; depends=[lattice survival Formula ggplot2 proto scales latticeExtra cluster rpart nnet acepack foreign gtable gridExtra ]; };
Holidays = derive { name="Holidays"; version="1.0-6"; type="cran"; sha256="031vddjf7s3pirv041y2mw694db63gjajlbczmmya8b1zp2f3vzk"; depends=[TimeWarp ]; };
HomoPolymer = derive { name="HomoPolymer"; version="1.0"; type="cran"; sha256="1bxc33dx9y9rr9aii4vn9d1j9v5pd4c0xayfdldz8d9m2010xr4a"; depends=[RGtk2 MenuCollection deSolve ]; };
HotDeckImputation = derive { name="HotDeckImputation"; version="1.0.0"; type="cran"; sha256="0zb02wcpq09lr7lr4wcgrbw9x7jcvhi34g7f4s6h88zz7xg9daw5"; depends=[Rglpk ]; };
Hotelling = derive { name="Hotelling"; version="1.0-2"; type="cran"; sha256="0dzsqnn4c4av23qjnmacwc78i0xg355p1xwfmgipr04ivym0mqn0"; depends=[corpcor ]; };
HyPhy = derive { name="HyPhy"; version="1.0"; type="cran"; sha256="0994ymv7sswbp8qw3pay34s926cflw2hq2gnchw7rknybvlsrinq"; depends=[ape R_utils ]; };
HybridMC = derive { name="HybridMC"; version="0.2"; type="cran"; sha256="1wgzfyk0scwq9s2sdmc91fj7r4d7zlgwgnj6mdiia8w88ja8kzqy"; depends=[coda ]; };
HybridMTest = derive { name="HybridMTest"; version="1.10.0"; type="bioc"; sha256="0c4ikl59b7wwygj4xyvcdla3xq5jpfbyvsl9n53fdxk1f5lhr7f1"; depends=[Biobase fdrtool MASS survival ]; };
HydroMe = derive { name="HydroMe"; version="2.0"; type="cran"; sha256="1a1d3lay94mzwk8n22l650h3p133npdf4aj63zgrdw4760p54rqf"; depends=[nlme minpack_lm ]; };
HyperbolicDist = derive { name="HyperbolicDist"; version="0.6-2"; type="cran"; sha256="1wgqbx9ascyk6gw1dmvfz6hljvbh49gb9shr9qgf22qbq83waiva"; depends=[ ]; };
IASD = derive { name="IASD"; version="1.0.7"; type="cran"; sha256="0a25sd82fxnmz3f4iaxhc69cdfb7xmh7wi79wv11sbw9cv2pl7kr"; depends=[ ]; };
IAT = derive { name="IAT"; version="0.2"; type="cran"; sha256="0byivq2298sjvpsz5z1w7r31h6z2jqpip40z8r2alygbgwwa48pd"; depends=[data_table ggplot2 ]; };
IBDLabels = derive { name="IBDLabels"; version="1.1"; type="cran"; sha256="1m9fd058yjxva6hin7i72i2nl285wfm0jkdn5xcng27yqlijyrm9"; depends=[ ]; };
IBDhaploRtools = derive { name="IBDhaploRtools"; version="1.8"; type="cran"; sha256="1754239pdil6b383mpzyi8zb9l9hzg15dwgn5246v97g1y3mlp5r"; depends=[ ]; };
IBDsim = derive { name="IBDsim"; version="0.9-4"; type="cran"; sha256="0cpabz7mnhsrmjrgb23zs5anjrkhwc2005b2inl6p93l47i81fps"; depends=[paramlink ]; };
IBHM = derive { name="IBHM"; version="1.1-11"; type="cran"; sha256="1m0zxlybcak2v5c4spgaa39ngb2hryak4xd875jryk1dcnk9c702"; depends=[DEoptim cmaes Rcpp Rcpp ]; };
IBrokers = derive { name="IBrokers"; version="0.9-12"; type="cran"; sha256="0mhh4kgwrncrcysvnvah6xc7fhx5ywjzn258cs9xj9kzns0jblk6"; depends=[xts zoo ]; };
IC2 = derive { name="IC2"; version="1.0-1"; type="cran"; sha256="03jjb62msxjxdg9l3zd1ns0d2w37hkxy5pnjgaywxw3vfk4zwfj9"; depends=[ ]; };
ICAFF = derive { name="ICAFF"; version="1.0.1"; type="cran"; sha256="0zazx4nv81s75appg10aayks04mx6m5n9yf5hqrbxh3yj68vzxfy"; depends=[ ]; };
ICC = derive { name="ICC"; version="2.2.1"; type="cran"; sha256="1xl8x8ddbrk8ma57mybmmv9m096wlpbas7hsmd2c6qzcrlz6i7wa"; depends=[ ]; };
ICE = derive { name="ICE"; version="0.69"; type="cran"; sha256="04p8lakaha28mdh965w0ppyxfrz5ssi1n9xifvsbn3ihdra67rip"; depends=[KernSmooth ]; };
ICEbox = derive { name="ICEbox"; version="1.0"; type="cran"; sha256="1m3p0b93ksrcsp45m4gszcz01cwbfpj4ldar6l0q3c9lmyqsznx8"; depends=[sfsmisc ]; };
ICEinfer = derive { name="ICEinfer"; version="1.0-1"; type="cran"; sha256="0gjgr1r33w6d5ra0njh15lj46lw6v751yl8iqrdf4a5pazs7w3lm"; depends=[lattice ]; };
ICGE = derive { name="ICGE"; version="0.3"; type="cran"; sha256="0xin7zml1nbygyi08hhg3wwr2jr1zcsvrlgia89zp4xanxlzgaqa"; depends=[MASS cluster ]; };
ICS = derive { name="ICS"; version="1.2-4"; type="cran"; sha256="1sfm9ymrrl72jzg8gsdw6v4q20i4s2w4syyr7brlvan136khpqyn"; depends=[mvtnorm survey ]; };
ICSNP = derive { name="ICSNP"; version="1.0-9"; type="cran"; sha256="0kisk7wk0zjsr47hgrmz5c8f2ljsl7x4549a1rwzsfkjz8901qka"; depends=[mvtnorm ICS ]; };
ICsurv = derive { name="ICsurv"; version="1.0"; type="cran"; sha256="1mbndpy3x5731c9y955wscy76jrxlgv33bf6ldqp65cwyvdgxl86"; depends=[MASS matrixcalc ]; };
IDPSurvival = derive { name="IDPSurvival"; version="1.0"; type="cran"; sha256="1v1w0i74b065b4qc302xbdl5df7qx9z8jmbc9cn46fqm1hh2b6d7"; depends=[Rsolnp gtools survival ]; };
IDPmisc = derive { name="IDPmisc"; version="1.1.17"; type="cran"; sha256="0nbwdyg9javjjfvljwbp2jl0c6414c11zb2pirmm5pmimaq9vv0q"; depends=[lattice ]; };
IFP = derive { name="IFP"; version="0.1.2"; type="cran"; sha256="1sgjyxjfw3i1k02wy2lc7w9gnrs5g4wnp8kd78ks77f9j0sah2j8"; depends=[haplo_stats coda ]; };
IM = derive { name="IM"; version="1.0"; type="cran"; sha256="1f1vr5zfqnanc5xmmlfkjkvxwbyyysi3mcvkg95p8r687a7zl0cx"; depends=[png jpeg bmp ]; };
IMIS = derive { name="IMIS"; version="0.1"; type="cran"; sha256="09zb48vdj0i3vf8vxrs07xwb9ji27vp2fyvmg6jfq631licsryc2"; depends=[mvtnorm ]; };
IMPCdata = derive { name="IMPCdata"; version="1.0.0"; type="bioc"; sha256="0ga6l0xza2cdl6i5nimqnvm804vmhb9lcn5aizzlcsn575m3nhy5"; depends=[rjson ]; };
INLABMA = derive { name="INLABMA"; version="0.1-6"; type="cran"; sha256="0rij3y89yyj25xz8r9n8cnq7rg9b7hf0n9nxxrrnm86w3n4r66in"; depends=[sp Matrix spdep ]; };
INPower = derive { name="INPower"; version="1.2.0"; type="bioc"; sha256="0i83nympny2pr2jvxmdhl8wiafamq4dnzpn1np50j0zkgmnjvvny"; depends=[mvtnorm ]; };
IPMpack = derive { name="IPMpack"; version="2.1"; type="cran"; sha256="08b79g5a9maxnxladvc2x2dgcmm427i8p6hhgda3mw2h5qmch2q3"; depends=[Matrix MASS nlme ]; };
IPPD = derive { name="IPPD"; version="1.14.0"; type="bioc"; sha256="14yx5rwwihjwx8rpsgkkgmc3bz6pzc91pa0qq8cz1czscj5srca9"; depends=[MASS Matrix XML digest bitops ]; };
IPSUR = derive { name="IPSUR"; version="1.5"; type="cran"; sha256="0brh3dx7m1rilvr1ig6vbi7p13bfbblgvs8fc114f08d90fczwnq"; depends=[ ]; };
IQCC = derive { name="IQCC"; version="0.6"; type="cran"; sha256="0gsnkdl4cfxzq6pm9g4i1g23mxg108j3is4x69id1xn2plf92m04"; depends=[qcc MASS micEcon miscTools ]; };
IRTShiny = derive { name="IRTShiny"; version="1.0"; type="cran"; sha256="1gjfqjqk7izl23b96g758dn6pb784ayb8yjjlryyrwga6mgsqdik"; depends=[shiny shinyAce beeswarm CTT ltm ]; };
IRanges = derive { name="IRanges"; version="2.0.1"; type="bioc"; sha256="1f9xki5b0ypp01ns3y54b21ypi7lk6gdb2368zz6ky3hjnwgq9kc"; depends=[BiocGenerics S4Vectors S4Vectors ]; };
ISBF = derive { name="ISBF"; version="0.2.1"; type="cran"; sha256="12mk4d0m5rk4m5bskkkng5j6a9dzh8l1d74wh8lnamq7kf9ai9if"; depends=[ ]; };
ISDA_R = derive { name="ISDA.R"; version="1.0"; type="cran"; sha256="0w6p2iy6s7fy8pw2cf4b5zhqcgjjwd5bkax1aqflaaj4ppmfx64v"; depends=[scatterplot3d ]; };
ISLR = derive { name="ISLR"; version="1.0"; type="cran"; sha256="0gmhvsivhpq3x8a240lgcbv1qzdgf6wxms4svak1501clc87xc6x"; depends=[ ]; };
ISOcodes = derive { name="ISOcodes"; version="2015.04.04"; type="cran"; sha256="1mg7mifcqh0g0ra4f1skng6fyp2rhfv2xd9m7nyih39inzdjkcdf"; depends=[ ]; };
ISOpureR = derive { name="ISOpureR"; version="1.0.8"; type="cran"; sha256="0jjamyj4rf078rfa2qqrn4i55025sc5968lq95yadbw0izxb51i8"; depends=[Rcpp Rcpp RcppEigen ]; };
ISOweek = derive { name="ISOweek"; version="0.6-2"; type="cran"; sha256="1f1h8pgjaa14cvaj8ldl87b4vslxwvyfj46m0hkylwp73sv3g2mm"; depends=[stringr ]; };
ISwR = derive { name="ISwR"; version="2.0-6"; type="cran"; sha256="1ms4lm1skfqaq4mnm03kvjb7kaxdzv72s6i77zp7z17gzfa40c9h"; depends=[ ]; };
ITALICS = derive { name="ITALICS"; version="2.26.0"; type="bioc"; sha256="12h0c89q2f4iq3pma2z8c3kzy63mpzcxdpbj3jmsmdzlr34p2rca"; depends=[GLAD oligo affxparser affxparser DBI GLAD oligo oligoClasses ]; };
IUPS = derive { name="IUPS"; version="1.0"; type="cran"; sha256="01pv03ink668fi2vxqybli0kgva13gxhqfdxkwz6qk5rnpzwvf5w"; depends=[R2jags Matching boot ]; };
Iboot = derive { name="Iboot"; version="0.1-1"; type="cran"; sha256="1fahh86kgv2axj2qg14n87v888sc0kb567s6zr3fh5zv361phwkq"; depends=[ ]; };
Icens = derive { name="Icens"; version="1.38.0"; type="bioc"; sha256="02pzhwwhp7l9iv20h928df82c1h647lpdqcdxi8wsfqqayzhb27n"; depends=[survival ]; };
IdMappingAnalysis = derive { name="IdMappingAnalysis"; version="1.10.0"; type="bioc"; sha256="0jdx6xqwv8kx3jb391nzv2qv77qj8vjhx815fgfr09k3nlh9j46l"; depends=[R_oo rChoiceDialogs boot mclust RColorBrewer Biobase ]; };
IdMappingRetrieval = derive { name="IdMappingRetrieval"; version="1.12.0"; type="bioc"; sha256="05pdmfqb7dk8bd6y09jxaazhwvds62mhbfpwc3rhsv4lzbgkjz47"; depends=[R_oo XML RCurl rChoiceDialogs ENVISIONQuery biomaRt ENVISIONQuery DAVIDQuery AffyCompatible R_methodsS3 R_oo ]; };
IdeoViz = derive { name="IdeoViz"; version="1.0.0"; type="bioc"; sha256="1641pzxprp5izrh3vlryzwvkxaq2rv58ahb75gwi34ma6qf2v37r"; depends=[Biobase IRanges GenomicRanges RColorBrewer rtracklayer GenomeInfoDb ]; };
IgorR = derive { name="IgorR"; version="0.7.1"; type="cran"; sha256="1ahj1ckzjffsskicdy2b70pzx5cn2r0s22yg1ajwiyy4ykwcg4pk"; depends=[bitops ]; };
Imap = derive { name="Imap"; version="1.32"; type="cran"; sha256="0b4w0mw9ljw6zxwvi0qzb08yq9n169lzgkdcwizrd07x9k9xjxs7"; depends=[ ]; };
ImpactIV = derive { name="ImpactIV"; version="1.0"; type="cran"; sha256="1bb6gw1h15hscr71hy779k2x5ywzx63ylim3hby02d7fnnj46p58"; depends=[nnet ]; };
InPosition = derive { name="InPosition"; version="0.12.7"; type="cran"; sha256="1f7xb2kxikmja4cq7s1aiwhdq27zc6hghjbliqqpm8ci8860lb8p"; depends=[prettyGraphs ExPosition ]; };
IndependenceTests = derive { name="IndependenceTests"; version="0.2"; type="cran"; sha256="04qfh2mg9xkfnvp6k7w1ip4rb663p3pzww9lyprcjvr3hcac7gqa"; depends=[xtable ]; };
InfDim = derive { name="InfDim"; version="1.0"; type="cran"; sha256="0rh3ch0m015xjkxy08vf9pc6q7azjc6sgicd2j6cwh611pqq39wq"; depends=[ ]; };
InferenceSMR = derive { name="InferenceSMR"; version="1.0"; type="cran"; sha256="13d3v8kyk6br33659jgql6j1nqmnd8zszqrwfw2x3khkiqzgdmhk"; depends=[survival ]; };
IntLik = derive { name="IntLik"; version="1.0"; type="cran"; sha256="13ww5bsbf1vnpaip0w53rw99a8hxzziibj7j66cm31jmi8l6fznf"; depends=[maxLik ]; };
InterVA4 = derive { name="InterVA4"; version="1.5"; type="cran"; sha256="0w2klq9dara941d4xz85qrq8dcp7vpc6rrz2k9ry01rsnpdzzybh"; depends=[ ]; };
Interact = derive { name="Interact"; version="1.1"; type="cran"; sha256="1g9zhafdpr7j410bi8p03d8x9f8m3n329x8v01yk15f65fp7pl1d"; depends=[ ]; };
InteractiveIGraph = derive { name="InteractiveIGraph"; version="1.0.6.1"; type="cran"; sha256="0srxlp77xqq0vw2phfv7zcnqswi2i5nzkpqbpa5limqx00jd12zy"; depends=[igraph ]; };
Interatrix = derive { name="Interatrix"; version="1.0"; type="cran"; sha256="1lkkjckxc0fc8hg1livgzrgphqwcp53cib0r0vii5jp4zkcna595"; depends=[MASS tkrplot ]; };
Interpol = derive { name="Interpol"; version="1.3.1"; type="cran"; sha256="1598lnnrcxihxysdljphqxig15fd8z7linw9byjmqypwcpk6r5jn"; depends=[ ]; };
Interpol_T = derive { name="Interpol.T"; version="2.1.1"; type="cran"; sha256="1fbsl1ypkc65y6c0p32gpi2a2aal8jg02mclz7ri57hf4c1k09gz"; depends=[date chron ]; };
InvariantCausalPrediction = derive { name="InvariantCausalPrediction"; version="0.3-2"; type="cran"; sha256="09s6jwcb6wyi6p1nqxvyfvv4140fq6svfv7w681nk8g57xlgc1h1"; depends=[glmnet mboost jointDiag ]; };
InventorymodelPackage = derive { name="InventorymodelPackage"; version="1.0.2"; type="cran"; sha256="1w35idsagl9v93ci3qmal3xbf11sy6h1k7xnv25c59ivfnpjpkva"; depends=[e1071 ]; };
IsingFit = derive { name="IsingFit"; version="0.3.0"; type="cran"; sha256="0imgj3g6sankzmycjkzzz3bgai3jjycgsinhs5zy9k4vgqjg27d6"; depends=[qgraph Matrix glmnet ]; };
IsingSampler = derive { name="IsingSampler"; version="0.2"; type="cran"; sha256="16vwb5pcqjvvsk9wsgj10mzhgh72iz1q6n8nmkva6y1l7xv54c8w"; depends=[Rcpp plyr magrittr nnet Rcpp ]; };
Iso = derive { name="Iso"; version="0.0-15"; type="cran"; sha256="18ig772xxsbj1vhrv7b20hrglnnz742s1mjzhwx02bpjhica4a46"; depends=[ ]; };
IsoCI = derive { name="IsoCI"; version="1.1"; type="cran"; sha256="0r7ksfic6p2v95c953s4gbzzclk4ldxysm8szb8xba1w0nx2izil"; depends=[KernSmooth ]; };
IsoGene = derive { name="IsoGene"; version="1.0-23"; type="cran"; sha256="18sl1qki2dn4ldycpqazj23zcibs3zqwp355q24nwr802xx3y4a6"; depends=[Iso xtable Biobase affy ff ]; };
IsoGeneGUI = derive { name="IsoGeneGUI"; version="2.0.0"; type="bioc"; sha256="0jprrffb88rc59ycsf3vk1jcvnprgh17cfymqaws88w0sqb5n7y7"; depends=[Rcpp tkrplot multtest relimp gdata geneplotter RColorBrewer Iso IsoGene ORCME ORIClust orQA goric xlsx ff Biobase ]; };
IsotopeR = derive { name="IsotopeR"; version="0.4.7"; type="cran"; sha256="18gwmh4nprj4z0ar1w8npj2ymxihw5ydwa33g25mimjk8y2cs0x5"; depends=[coda fgui runjags ]; };
JADE = derive { name="JADE"; version="1.9-92"; type="cran"; sha256="0ki3jpz4npjikn3jjb7ppiyx0flhxx3p8aghjxlm3klhkm0k6ix4"; depends=[clue ]; };
JAGUAR = derive { name="JAGUAR"; version="2.0"; type="cran"; sha256="1c9pyg9jph95161g6zz0jlv5hlyvr9z960by7x3pv7plfkppjy7m"; depends=[Rcpp plyr lme4 doParallel Rcpp ]; };
JASPAR = derive { name="JASPAR"; version="0.0.1"; type="cran"; sha256="0wiyn7cz45hwy9zkvacx28zdrg78q6715cg4r9xgcb39q25s0dcy"; depends=[gtools ]; };
JBTools = derive { name="JBTools"; version="0.7.2.6"; type="cran"; sha256="1wpkv8841kzpw2iqacp6k0y182lsvfl1ri54aq1hg4ypb51b8ibb"; depends=[foreach gplots colorspace plotrix ]; };
JGL = derive { name="JGL"; version="2.3"; type="cran"; sha256="1351iq547ln06nklrgx192dqlfnn03hkwj3hrliqzfbmsls098qc"; depends=[igraph ]; };
JGR = derive { name="JGR"; version="1.7-16"; type="cran"; sha256="0iv659mjsv7apzpzvmq23w514h6yq50hi70ym7jrv948qrzh64pg"; depends=[rJava JavaGD iplots ]; };
JM = derive { name="JM"; version="1.3-0"; type="cran"; sha256="0yn33dvy9kp7xaxlqk11f86qaichdcxpmq04gpnbcs8w8cdjjz3m"; depends=[MASS nlme survival ]; };
JMbayes = derive { name="JMbayes"; version="0.7-2"; type="cran"; sha256="087brgljj158my1xc0vmbjkh4hqr0509zf8j4fq1b9lj52z7rdl5"; depends=[MASS nlme survival ]; };
JMdesign = derive { name="JMdesign"; version="1.1"; type="cran"; sha256="0w5nzhp82g0k7j5704fif16sf95rpckd76jjz9fbd71pp2d80vlh"; depends=[ ]; };
JOP = derive { name="JOP"; version="3.6"; type="cran"; sha256="1kpb1dy2vm4jgzd3h0qgdw53nfp2qi74hgq5l5inxx4aayncclk7"; depends=[Rsolnp dglm ]; };
JPSurv = derive { name="JPSurv"; version="1.0.1"; type="cran"; sha256="11hfji0nyfmw1d7y2cijpp7ivlv5s9k8g771kmgwy14wflkyf7g2"; depends=[ ]; };
JavaGD = derive { name="JavaGD"; version="0.6-1"; type="cran"; sha256="13n6xzbbjgd0bpwv2xgm3dlscg87wh32q6fcq50kk6byp6yv05sc"; depends=[ ]; };
Jmisc = derive { name="Jmisc"; version="0.3.1"; type="cran"; sha256="1szn29dng54l2xmrm6pg3d5rmwdc1ks23vsnsmplnr5rx7yj002s"; depends=[ ]; };
JoSAE = derive { name="JoSAE"; version="0.2.2"; type="cran"; sha256="1ag4qg9cfcg8i2xz79bza2qlw3azw33h7k2ip5nlfkfpd33l9w05"; depends=[nlme ]; };
Johnson = derive { name="Johnson"; version="1.4"; type="cran"; sha256="12ajcfz5mwxvimv8nq683a2x3590gz0gnyviviyzf5x066a4q0lj"; depends=[ ]; };
JohnsonDistribution = derive { name="JohnsonDistribution"; version="0.24"; type="cran"; sha256="00211pa2wn4bsfj6wfl9q9g123cp8iz3kxc17pw9q65j9an4sr0m"; depends=[ ]; };
JointRegBC = derive { name="JointRegBC"; version="0.1.1"; type="cran"; sha256="0w7ygs3pvlqkkb2x20kv20kda3gz7cn6zgrkg30nhjxp318d76ab"; depends=[nlme MASS survival ]; };
Julia = derive { name="Julia"; version="1.1"; type="cran"; sha256="0i1n150d89pkds7qyr0xycz6h07zikb2y07d5fcpaqs4446a8prg"; depends=[ ]; };
KANT = derive { name="KANT"; version="2.0"; type="cran"; sha256="169j72pmdkcj6hv8qgmc02aps0ppvvl1vnr1hzrb1gsf7zj7bs3y"; depends=[affy Biobase ]; };
KATforDCEMRI = derive { name="KATforDCEMRI"; version="0.740"; type="cran"; sha256="1k8fihd9m26k14rvc5d5x0d9xc3mh8d49hs64p55np1acqfhg2sy"; depends=[locfit R_matlab matlab ]; };
KCsmart = derive { name="KCsmart"; version="2.24.0"; type="bioc"; sha256="1p248qq36csg015k0grnrgyrbzbyclvfp52p9x3fd0zcw05lqi27"; depends=[siggenes multtest KernSmooth BiocGenerics ]; };
KEGGREST = derive { name="KEGGREST"; version="1.6.4"; type="bioc"; sha256="1mz0yd2wa55hawmj961phmdcha8hs1q2cxg8sxadbk09k37msgcn"; depends=[httr png Biostrings ]; };
KEGGgraph = derive { name="KEGGgraph"; version="1.24.0"; type="bioc"; sha256="15h6mphrx39rvp07qj11b4kys9wx6xlma4z350lic8b9ab3ci4wg"; depends=[XML graph XML graph ]; };
KEGGprofile = derive { name="KEGGprofile"; version="1.8.2"; type="bioc"; sha256="0wv9s0n8yby88b40l0a6v0vkgplqg6qm12ni45afs1vslfw4d28r"; depends=[AnnotationDbi png TeachingDemos XML KEGGREST biomaRt ]; };
KFAS = derive { name="KFAS"; version="1.1.1"; type="cran"; sha256="16r86kcx5av11j1p0dad8qvcj4dszh3kvcy8zp7kaw247kjvr3pv"; depends=[ ]; };
KFKSDS = derive { name="KFKSDS"; version="1.6"; type="cran"; sha256="1g11f936p554bfxlm4slxhfxki5vqkks1mrbqw4w83v2rcb50f8d"; depends=[ ]; };
KMDA = derive { name="KMDA"; version="1.0"; type="cran"; sha256="0x4kjjdd59wvgg699vrj99wqg3s1qbkbskis1c34xv9b8bzcv94j"; depends=[ ]; };
KMsurv = derive { name="KMsurv"; version="0.1-5"; type="cran"; sha256="0hi5vvk584rl70gbrr75w9hc775xmbxnaig0dd6hlpi4071pnqjm"; depends=[ ]; };
KODAMA = derive { name="KODAMA"; version="0.0.1"; type="cran"; sha256="199l6y5b98ags5p7jf150v0i0kcdxlsr2q0rgdpz9ra1hw1cjsfb"; depends=[e1071 plsgenomics class ]; };
KOGMWU = derive { name="KOGMWU"; version="1.0"; type="cran"; sha256="0nk7vbppimrf01wnxsg2wjpagjrzs6gh3a6jlqy9bdfh0j4fm0kn"; depends=[pheatmap ]; };
KRLS = derive { name="KRLS"; version="0.3-7"; type="cran"; sha256="0dx4b68xx3saqlkbpvvrhxjscl7jr5phwqvjywxsp4qxlr3ysl79"; depends=[ ]; };
KappaGUI = derive { name="KappaGUI"; version="1.2"; type="cran"; sha256="014d3lshq3avrncd8ydjpn59zalq46v29jrlz3g76wzr96xf5ckr"; depends=[irr ]; };
KappaV = derive { name="KappaV"; version="0.3"; type="cran"; sha256="13mmfb8ijpgvzfj20andqb662950lp9g25k5b26r5ba65p7nhva7"; depends=[PresenceAbsence maptools rgeos sp ]; };
Kendall = derive { name="Kendall"; version="2.2"; type="cran"; sha256="0z2yr3x2nvdm81w2imb61hxwcbmg14kfb2bxgh3wmkmv3wfjwkwn"; depends=[boot ]; };
KernSmooth = derive { name="KernSmooth"; version="2.23-14"; type="cran"; sha256="1dl22pncdlrlysmny0q89yg1s6iafdh75dh31l2hjy16gzlrbhk0"; depends=[ ]; };
KernSmoothIRT = derive { name="KernSmoothIRT"; version="6.1"; type="cran"; sha256="1hq4sykddh9sg24qrnccii89nqxmq7hnldhn8wl6y62aj0h1nrqm"; depends=[Rcpp plotrix rgl Rcpp ]; };
Kernelheaping = derive { name="Kernelheaping"; version="0.5"; type="cran"; sha256="02hvb1w7z04nn44czxkkg7g1c1fyq0ki0v4shrpi5akwaac30dgj"; depends=[plyr evmix MASS corpcor ]; };
Kmisc = derive { name="Kmisc"; version="0.5.0"; type="cran"; sha256="0pbj3gf0bxkzczl6k4vgnxdss2wmsffqvcf73zjwvzvr8ibi5d95"; depends=[Rcpp data_table lattice knitr markdown Rcpp ]; };
KoNLP = derive { name="KoNLP"; version="0.76.9"; type="cran"; sha256="1q72irl4izb7f5bb99plpqnmpfdq4x4ymp4wm2bsyfjcxm649ya8"; depends=[rJava stringr hash tau Sejong ]; };
Kpart = derive { name="Kpart"; version="1.1"; type="cran"; sha256="1cyml48i1jvwy4xzymijwraqpnssnkrd81q3m7nyjd5m2czjvihv"; depends=[leaps ]; };
KrigInv = derive { name="KrigInv"; version="1.3.1"; type="cran"; sha256="0fcfv2vl572l8qp1ilhjai6zrw15bf1z41qm7xlfspfbj611ga7k"; depends=[DiceKriging pbivnorm rgenoud randtoolbox ]; };
L1pack = derive { name="L1pack"; version="0.3"; type="cran"; sha256="0lhixnfb2ga830z91z51r970l5s5qpavbwcmk1pi80180n11kv4i"; depends=[ ]; };
LARF = derive { name="LARF"; version="1.3"; type="cran"; sha256="0crg89d377wkga0bc42y8bfk6chg06afchhgnab6q4dirwv9360q"; depends=[ ]; };
LBE = derive { name="LBE"; version="1.34.0"; type="bioc"; sha256="0archkaxwiljxp6bsgkils6b66gm9wrvkd2w0nlh712qz7plp1a6"; depends=[ ]; };
LCA = derive { name="LCA"; version="0.1"; type="cran"; sha256="14nhx2fs18558zljnw56mdz3qx30v394llhzswxhznjfiiqc9z5h"; depends=[ ]; };
LCAextend = derive { name="LCAextend"; version="1.2"; type="cran"; sha256="1y9azq9v42a3z5fq6gj8js89qblb2z93k4mg4jmw0wgkyv6mysfc"; depends=[boot mvtnorm rms kinship2 ]; };
LCFdata = derive { name="LCFdata"; version="2.0"; type="cran"; sha256="1x3vbr6hdviqvd6dxn1kb449g0q5zkfmjsmr5nxd2g82p69lv3xm"; depends=[ ]; };
LDAvis = derive { name="LDAvis"; version="0.2"; type="cran"; sha256="18fbnk5qd7icn3mgwwb3ld3c9n3j1z4ydc2pg2zizkrahhqxdswi"; depends=[proxy RJSONIO ]; };
LDOD = derive { name="LDOD"; version="1.0"; type="cran"; sha256="0mf2sy01yv57mqicrz08a17m6crigklx6fmw9zpxv7g85qw1iq4v"; depends=[Rsolnp Rmpfr ]; };
LDPD = derive { name="LDPD"; version="1.1.2"; type="cran"; sha256="1khdx8vwlpliyjc4sxcdiywbxl8lc9f5s3457vcip1j8dv537lbm"; depends=[MASS nleqslv ]; };
LDRTools = derive { name="LDRTools"; version="0.1"; type="cran"; sha256="1cr0v6qsdldy89p44lhr6hisqaz99qzab32kd1srdnnwnwl1q2y4"; depends=[ ]; };
LDcorSV = derive { name="LDcorSV"; version="1.3.1"; type="cran"; sha256="0i4npl90mkj8vry6ckq8bc4ydbl44vxichgsxyn80r6k9i71yl67"; depends=[MASS ]; };
LDheatmap = derive { name="LDheatmap"; version="0.99-1"; type="cran"; sha256="1bj42chw1xyf8yg6cfv9p4yzsggng7zy6wrw6q22559pwm6c6vr0"; depends=[genetics ]; };
LDtests = derive { name="LDtests"; version="1.0"; type="cran"; sha256="1jwqr7zlp9hv7vw8xp80xvrwbdv796wjgr914v393wfa07j5wbd1"; depends=[ ]; };
LEAPFrOG = derive { name="LEAPFrOG"; version="1.0.7"; type="cran"; sha256="0z9ahkk4qzc45h1r806frv9cd84vvshvn5mr84gx7qdxljfkfq6h"; depends=[alabama MASS ]; };
LGS = derive { name="LGS"; version="0.91"; type="cran"; sha256="0rzj1shapyg7hyzsb9v81dirwihd7bz9s861l75g3yl3p4qm8sg7"; depends=[ ]; };
LICORS = derive { name="LICORS"; version="0.2.0"; type="cran"; sha256="0p9y21k1mj1v397jpb5g6jiw7rpzbyfwr4kv2rp3lyxyasy2ykf0"; depends=[RColorBrewer mvtnorm zoo FNN fields locfit Matrix ]; };
LICurvature = derive { name="LICurvature"; version="0.1.1"; type="cran"; sha256="09hqar4kvksd816ya6jg349r0v6z2m2109hq6j4k1d2vchab4lni"; depends=[MASS ]; };
LIHNPSD = derive { name="LIHNPSD"; version="0.2.1"; type="cran"; sha256="08ils29vvaq6abkgxbh028vwjw6l6h10cirbnwr65s458zvh4xqv"; depends=[sn moments BB Bolstad2 optimx Rmpfr ]; };
LIM = derive { name="LIM"; version="1.4.6"; type="cran"; sha256="03x1gnm06bw1wrzc01110bjzd2mvjdzbc2mbrazh22jrmb32w5d8"; depends=[limSolve diagram ]; };
LINselect = derive { name="LINselect"; version="0.0-1"; type="cran"; sha256="1n6nsspdp1ig8v9bclyga072hxqj2hb9n1smrqia8jrma07yaydl"; depends=[ ]; };
LIStest = derive { name="LIStest"; version="2.1"; type="cran"; sha256="1gk253v3f1jcr4z5ps8nrqf1n7isjhbynxsi9jq729w7h725806a"; depends=[ ]; };
LLSR = derive { name="LLSR"; version="0.0.1.9225"; type="cran"; sha256="0jn1svnzn89d55hal64fadhv5bmrc37g4qz3pmcd196s5frvyhai"; depends=[rootSolve XLConnect digest ]; };
LMERConvenienceFunctions = derive { name="LMERConvenienceFunctions"; version="2.10"; type="cran"; sha256="08jz0i7sv7gn3bqckphbmnx0kc6yjnfvi06iyf7pcdzjaybxhj06"; depends=[Matrix lme4 LCFdata rgl fields mgcv ]; };
LMGene = derive { name="LMGene"; version="2.22.0"; type="bioc"; sha256="1vl0zyfl6vispk7cll0xfpblabmz71jj07k4csckl64x2imqz199"; depends=[Biobase multtest survival affy ]; };
LMest = derive { name="LMest"; version="2.1"; type="cran"; sha256="1jbwbmamgxbbipzdpjmr7l9csydx55by4zd9h13lnaibdxr4xn5q"; depends=[MASS MultiLCIRT ]; };
LOGICOIL = derive { name="LOGICOIL"; version="0.99.0"; type="cran"; sha256="1wgg7kigzzk5ghjn3hkjf1bb8d6mvjfmkwq64phri5jpxd742ps9"; depends=[nnet ]; };
LOST = derive { name="LOST"; version="1.1"; type="cran"; sha256="19ar85dykbz0jlzbhlm3pcpffj4cizc6sj3gn93qdvpxkp64jfq9"; depends=[gdata shapes e1071 pcaMethods MASS miscTools ]; };
LPCM = derive { name="LPCM"; version="0.44-8"; type="cran"; sha256="14627wk5azxm3y3a0qfy4qz57nxbdcasnv7djpqhk2gxf5smq19k"; depends=[ ]; };
LPE = derive { name="LPE"; version="1.40.0"; type="bioc"; sha256="181zknwrassnw0iqphqlr9bw2pnzpk05ch4almzj1pcp5l52i5sc"; depends=[ ]; };
LPEadj = derive { name="LPEadj"; version="1.26.0"; type="bioc"; sha256="0pbq1a5rqwyv1s5bncrymiw1dqf0mwippmc4gn1qzjk609myis8x"; depends=[LPE LPE ]; };
LPS = derive { name="LPS"; version="1.0.10"; type="cran"; sha256="0gf3jmhfki01z8fm5xdx59gxvhgzqd10x2iwa8369iz9dvwbjk8j"; depends=[ ]; };
LPStimeSeries = derive { name="LPStimeSeries"; version="1.0-5"; type="cran"; sha256="0jmcy8076w4bzfnxaq2m3s60c1wdmywkwzfyrc19wdm8idf666wh"; depends=[RColorBrewer ]; };
LPTime = derive { name="LPTime"; version="1.0-2"; type="cran"; sha256="08lb6884kj9pg12mzx67fdnqb86x5s6yzb72hh3nrz50awj1f8nn"; depends=[orthopolynom ]; };
LPmerge = derive { name="LPmerge"; version="1.6"; type="cran"; sha256="0xc06s2p7n151lzrp0dcrrxk8zmd816dc7qbnbcail5c1bhvdqhd"; depends=[Rglpk Matrix ]; };
LS2W = derive { name="LS2W"; version="1.3-3"; type="cran"; sha256="0pdsv7ld0j116rh94m5y1i2mwrzc80fqxmc6ykc51i1sj6ws3i5k"; depends=[wavethresh ]; };
LS2Wstat = derive { name="LS2Wstat"; version="2.0-3"; type="cran"; sha256="0wkh1a6xbp3qg5favxsj166jcgdza16zki675gswxckana6s4is7"; depends=[LS2W matrixStats geoR RandomFields spdep ]; };
LSAfun = derive { name="LSAfun"; version="0.4"; type="cran"; sha256="178lbk5f2vjcpxand15l1dlqf77zkxap22i9lid5db1bmqh9rpk9"; depends=[lsa rgl ]; };
LSC = derive { name="LSC"; version="0.1.5"; type="cran"; sha256="1nlnwqb24sbgvl96azh8a833ij5xknjr2wr8shs59lm2n63a3ql9"; depends=[LICORS RColorBrewer fields gam Matrix ]; };
LSD = derive { name="LSD"; version="3.0"; type="cran"; sha256="069p33aw6iwikp82b7b8wa77wlyjqwr4hcwvrgaxgwqdgn6jjg3k"; depends=[ ]; };
LSMonteCarlo = derive { name="LSMonteCarlo"; version="1.0"; type="cran"; sha256="0w5042phkba5dw92r67ppp2s4khjpw5mm701dh9dya9lhj88bz6s"; depends=[mvtnorm fBasics ]; };
LTPDvar = derive { name="LTPDvar"; version="1.1"; type="cran"; sha256="0zb3ffz5vw1zabgzhpcw1mzfqh4g7r0sq4iy31nzyv8smdwddqzw"; depends=[ ]; };
LTR = derive { name="LTR"; version="1.0.0"; type="cran"; sha256="15g5hbrwhab80sarbjgwzvsn6c4fl18h014kz5fpzf0n1rijybik"; depends=[ ]; };
LVMMCOR = derive { name="LVMMCOR"; version="0.01.1"; type="cran"; sha256="1lq4hqcg0qkywdr4a22m1fr3m97749mm6n2jzdj9i7jrf0agc1fs"; depends=[nlme MASS ]; };
LVQTools = derive { name="LVQTools"; version="1.2"; type="cran"; sha256="06mninrrr49xsh00gfsp0vc418r6pdvq3m6sbnj0ywdyki106mni"; depends=[ ]; };
LVSmiRNA = derive { name="LVSmiRNA"; version="1.16.0"; type="bioc"; sha256="0s70fkxx4ghhz2d8ammp22brs0066hq2sxwc8fhczs206fvj0x7m"; depends=[BiocGenerics MASS Biobase quantreg limma affy SparseM vsn ]; };
LaF = derive { name="LaF"; version="0.6.2"; type="cran"; sha256="180xsqilpkql8my0dimsxj1kpmb3jl19l6bz8li8m63zii4xmwmp"; depends=[Rcpp Rcpp ]; };
Lahman = derive { name="Lahman"; version="3.0-1"; type="cran"; sha256="0w7vp3vjxhigyyqmmka4bw5v4pp5z3jzmf0krq8biwzrpx5qp86x"; depends=[ ]; };
LakeMetabolizer = derive { name="LakeMetabolizer"; version="1.3.1"; type="cran"; sha256="1k764w8f30jfz1xkq9xjm9rwfdll5kp7jv3zc4932ck8cgqam3jv"; depends=[rLakeAnalyzer plyr ]; };
Lambda4 = derive { name="Lambda4"; version="3.0"; type="cran"; sha256="04ikkflfr0nmy1gr3gfldlh2v8mpl82k1wwnzp57d2kn75m9vbxz"; depends=[ ]; };
LambertW = derive { name="LambertW"; version="0.5.1"; type="cran"; sha256="0mhw748nkikaq96azps7yyzkz5glibhb8rh6f748vj9lrq3wa5mn"; depends=[moments MASS gsl ]; };
Laterality = derive { name="Laterality"; version="0.9.3"; type="cran"; sha256="0pl5bfbkzhgxjjzzh99s6rh4jsq0pbcgc902i0z2lmmivgs5qmd6"; depends=[ade4 ]; };
LatticeKrig = derive { name="LatticeKrig"; version="3.4"; type="cran"; sha256="0qa16sxzj40nk4kmzcb7n4xxn7bqlkx7ar66qpqvh2dvcvi1d70d"; depends=[spam fields ]; };
LeLogicielR = derive { name="LeLogicielR"; version="1.2"; type="cran"; sha256="0h52pzrksi1mn55mnxbfi61hl7x61cnkhp450slfrk68f6kp30x6"; depends=[xtable RColorBrewer gdata IndependenceTests ]; };
LeafAngle = derive { name="LeafAngle"; version="1.2-1"; type="cran"; sha256="0g3i5300f3rvjz7g7z8s5n8xdcsp41gf1vnr4g36m1likddfpxlx"; depends=[ ]; };
LeafArea = derive { name="LeafArea"; version="0.1.0"; type="cran"; sha256="0gl31iv1pqb9w352h70y4x57dgfs4v15391fyhsc221803hk2fdn"; depends=[ ]; };
LearnBayes = derive { name="LearnBayes"; version="2.15"; type="cran"; sha256="0cz2rgqy1cmdz2h1qbdvfqxmmdzmg2z1scdlxr7k385anha13ja5"; depends=[ ]; };
LiblineaR = derive { name="LiblineaR"; version="1.94-2"; type="cran"; sha256="11q3xydd4navpfcy9yx0fld8ixb6nvnkc7qxwrhvackiy810q86i"; depends=[ ]; };
LifeTables = derive { name="LifeTables"; version="0.2"; type="cran"; sha256="1n4mqypxm0rbi77ykpr6bpzxfxvq8mm9bmfvcqz7k3ajb78cdr0d"; depends=[mclust ]; };
LinCal = derive { name="LinCal"; version="1.0"; type="cran"; sha256="1xr9jnna20hh78dh9wjg70jm8fhaxvdwql894kdp0y5h4pchkdph"; depends=[ ]; };
LinRegInteractive = derive { name="LinRegInteractive"; version="0.3-1"; type="cran"; sha256="0w7s3i6i2wnydh88l8lnzrh6w5zqkcwvms91iizis0mwd9af2jdl"; depends=[rpanel xtable ]; };
LindenmayeR = derive { name="LindenmayeR"; version="0.1.4"; type="cran"; sha256="05aq7qmzb7a6kw24pwlg78ch17y945ggrxqn7l2rypn1vfm0br9x"; depends=[stringr ]; };
LinearizedSVR = derive { name="LinearizedSVR"; version="1.3"; type="cran"; sha256="0h3xmlnd5x37r5hdhcz90z5n1hsbr2ci3m939i89p1x9644i2l5g"; depends=[kernlab LiblineaR expectreg ]; };
LiquidAssociation = derive { name="LiquidAssociation"; version="1.20.0"; type="bioc"; sha256="0i5bbcyasykxqxsd7i0slx1dhlk9v21v74zsj99n8z6rbds0ggzc"; depends=[geepack Biobase ]; };
Lmoments = derive { name="Lmoments"; version="1.1-6"; type="cran"; sha256="0jffnlamll5mwxrfqrb1qr8kjcn40y57kzd10kkm98vzfjcwg4y4"; depends=[ ]; };
LocFDRPois = derive { name="LocFDRPois"; version="1.0.0"; type="cran"; sha256="0zzdp9wgwr6wn3grimghpj4vq34x37c8bqg8acfzlzih8frqal3r"; depends=[dplyr ggplot2 ]; };
Lock5Data = derive { name="Lock5Data"; version="2.6"; type="cran"; sha256="0ckaac00ck5vyv0gv25l1zhgkm3char6ks1p4fl3vdl5gdyrc1pp"; depends=[ ]; };
LogConcDEAD = derive { name="LogConcDEAD"; version="1.5-9"; type="cran"; sha256="135vkp70q6gn75ds43aq08y13vrsgsgykssmnhrh6545i86vmhhi"; depends=[MASS mvtnorm ]; };
LogicForest = derive { name="LogicForest"; version="2.1.0"; type="cran"; sha256="0zdyyi6wka0568414f1kw91rx04y76n1k11wxd4r8svb5wybjhp5"; depends=[LogicReg CircStats gtools plotrix ]; };
LogicReg = derive { name="LogicReg"; version="1.5.6"; type="cran"; sha256="1izsdv8vcfv7lqq6i5kzawvrdbqizp2pvf5kv198cmav0g0p4ijd"; depends=[survival ]; };
LogisticDx = derive { name="LogisticDx"; version="0.1"; type="cran"; sha256="1w530panmbwf4qplzzj02q9g2lfzrkawxy66ibwdd14z9bwjdclj"; depends=[multcomp data_table pROC car gRbase rms statmod speedglm ]; };
LogitNet = derive { name="LogitNet"; version="0.1-1"; type="cran"; sha256="08xi5rpbqkc1b3qj24blv3l0r68wcqbsbjcqxiypm75f3c2irc4i"; depends=[ ]; };
LogrankA = derive { name="LogrankA"; version="1.0"; type="cran"; sha256="005zkpzi8h03qvqlpkygrf9xv4q77klafkfxw47x04jvkhklwigb"; depends=[ ]; };
LoopAnalyst = derive { name="LoopAnalyst"; version="1.2-3"; type="cran"; sha256="0xbiy1xa2c6acfrzh6p9pa6wrds8ipskxq0f86ia9g5zkp1rjk2j"; depends=[nlme ]; };
LowRankQP = derive { name="LowRankQP"; version="1.0.2"; type="cran"; sha256="0is7v4cy4w1g3wn4wa32iqv4awd1nwvfcb71b3yk5wj59lpm8gs3"; depends=[ ]; };
Luminescence = derive { name="Luminescence"; version="0.4.4"; type="cran"; sha256="0b7a55aqishi6jwxlpkbakfr38brjd4c61n4mcbsg6nwg7qiz1v7"; depends=[XML shape rgl matrixStats raster zoo bbmle data_table Rcpp minpack_lm Rcpp ]; };
M3 = derive { name="M3"; version="0.3"; type="cran"; sha256="1l40alk166lshckqp72k5zmsgm7s5mgyzxlp11l64mgncjwkw2r3"; depends=[ncdf4 rgdal maps mapdata ]; };
M3D = derive { name="M3D"; version="1.1.4"; type="bioc"; sha256="0q8b7k40hcd0yb8c5y8wm88azvdj5w3cpmi3x4x5axjid2qx0ms3"; depends=[GenomicRanges IRanges BiSeq ]; };
MADAM = derive { name="MADAM"; version="1.2.2"; type="cran"; sha256="09w5liqa3mpkbyvkwlabcgyg2b4316qpzq7pbpl0wxl74bsh76vq"; depends=[ ]; };
MAINT_Data = derive { name="MAINT.Data"; version="0.4"; type="cran"; sha256="0338q1yh7b0mbnmh3rbli8vq0fzxyx4qxx0143p615ahsf68jw1c"; depends=[ ]; };
MAIT = derive { name="MAIT"; version="1.0.0"; type="bioc"; sha256="10m59b0l3wsmpwmswbpnx91hf3pl69nq0b2j1iwj03qp7khx6xsk"; depends=[CAMERA Rcpp pls e1071 class MASS plsgenomics agricolae xcms caret ]; };
MALDIquant = derive { name="MALDIquant"; version="1.11"; type="cran"; sha256="1jnpmv44j9zry64wvnv37hcda61570hypnv16z99arjazpi4nzmn"; depends=[ ]; };
MALDIquantForeign = derive { name="MALDIquantForeign"; version="0.9"; type="cran"; sha256="0bs6frqz462hrad16kjvbmq2s66bv3kpriav4hdz5a4klra389gl"; depends=[MALDIquant base64enc digest downloader readBrukerFlexData readMzXmlData XML ]; };
MAMA = derive { name="MAMA"; version="2.2.1"; type="cran"; sha256="1dcyfir6jv28jzvphiqrjns3jh2zg2201iwcvjzbmddl2isk9h0i"; depends=[genefilter metaMA xtable multtest gtools GeneMeta MergeMaid GeneMeta xtable metaArray ]; };
MAMS = derive { name="MAMS"; version="0.4"; type="cran"; sha256="0v4sa8cyjdkg7lrznl7jv8xqm6qf67jf946fd6ymbd0wpd7gxrgp"; depends=[mvtnorm ]; };
MAMSE = derive { name="MAMSE"; version="0.1-3"; type="cran"; sha256="06q6raqbyi9zwg3wzaygqmfs3di55fh4bln3vscdw95kma4hz9km"; depends=[ ]; };
MANOR = derive { name="MANOR"; version="1.38.0"; type="bioc"; sha256="18vvi17zjb034s7w73acy59fpb39kskpzkspwh0q3cggvypaccq9"; depends=[GLAD GLAD ]; };
MAPA = derive { name="MAPA"; version="1.9"; type="cran"; sha256="1i143x2l6fq4vl8l8cagai580yqv446pdw4gw5qzxp85hgvm8bvg"; depends=[forecast ]; };
MAPLES = derive { name="MAPLES"; version="1.0"; type="cran"; sha256="0hzsh7z1k7qazpxjqbm9842zgdpl51irg7yfd119a7b2sd3a8li9"; depends=[mgcv ]; };
MAR1 = derive { name="MAR1"; version="1.0"; type="cran"; sha256="1r6j890icl5h3m2876sakmwr3c65513xnsj68sy0y0q7xj3a039l"; depends=[leaps bestglm ]; };
MARSS = derive { name="MARSS"; version="3.9"; type="cran"; sha256="0vn8axzz0nqdcl3w00waghz68z8pvfm764w11kxxigvjpw2plj31"; depends=[nlme mvtnorm KFAS ]; };
MASS = derive { name="MASS"; version="7.3-40"; type="cran"; sha256="05mmbhswp5dqjd2c6v9w1z1710sm46d53j3prq8maj6bc9qr634y"; depends=[ ]; };
MASSTIMATE = derive { name="MASSTIMATE"; version="1.2"; type="cran"; sha256="1j9l8b5d518ag9ivzr1z4dd2m23y2ia1wdshx1krmshn8xsd6lwp"; depends=[ ]; };
MAT = derive { name="MAT"; version="2.2"; type="cran"; sha256="093axw2zp4i3f6s9621zwibcxrracp77xrc0q5q0m4yv3m35x908"; depends=[Rcpp Rcpp RcppArmadillo ]; };
MATTOOLS = derive { name="MATTOOLS"; version="1.1"; type="cran"; sha256="1nzrkm3a08rpsd9vplyf33rrkadlrd0ln70k95qxj98ndh2v97px"; depends=[ ]; };
MAVIS = derive { name="MAVIS"; version="1.1"; type="cran"; sha256="1nbvm6nfwymim63xvfqpvyk1w5fv6cwfh6cl2089myimid22ws1l"; depends=[shiny shinyAce metafor MAc MAd quantreg ggplot2 compute_es SCMA SCRT shinyBS ]; };
MAVTgsa = derive { name="MAVTgsa"; version="1.3"; type="cran"; sha256="0rzal9nsi8y873cbf6hrdyzyxnpd4r1yr9fj66cn0s1c8g93ls0y"; depends=[corpcor foreach multcomp randomForest MASS ]; };
MAc = derive { name="MAc"; version="1.1"; type="cran"; sha256="1lshi5rb8l2mpd302wskhlk5vz1wjidvbss9y69l63zjqdwjs7ch"; depends=[ ]; };
MAclinical = derive { name="MAclinical"; version="1.0-5"; type="cran"; sha256="1g0ka1kqww2xim8rp5rznkzn0a541zvf841s3lbphfh9k3y3ixs3"; depends=[party plsgenomics st e1071 ]; };
MAd = derive { name="MAd"; version="0.8-2"; type="cran"; sha256="0mhys27rmzb0kal4jr8j2y44z4qq46fw260sxl8da9qqvplcwq1p"; depends=[ ]; };
MBA = derive { name="MBA"; version="0.0-8"; type="cran"; sha256="09rs1861fz41dgicgh4f95v4zafh1jfxhqar1plpqqdx8z1gpxfl"; depends=[sp BH ]; };
MBASED = derive { name="MBASED"; version="1.0.0"; type="bioc"; sha256="1j0g5qlncvba7rylic4bh1hx19kddxwvjg455fkw5iigpsgny5cc"; depends=[RUnit BiocGenerics BiocParallel GenomicRanges ]; };
MBAmethyl = derive { name="MBAmethyl"; version="1.0.0"; type="bioc"; sha256="1ahxiajqafaw8p9fw8v9f7g7vcf6h6cj2mpxznc0vbv9wdz1a2l9"; depends=[ ]; };
MBCB = derive { name="MBCB"; version="1.20.0"; type="bioc"; sha256="19s52g3ck475rdghcmbnk852ki3f050bcb286jz812zia1859px5"; depends=[tcltk2 preprocessCore ]; };
MBCluster_Seq = derive { name="MBCluster.Seq"; version="1.0"; type="cran"; sha256="0xbi2r0g0gzsy05qrq1ljr5f5s3glwxj204vk2f1lgwdx3fd116m"; depends=[ ]; };
MBESS = derive { name="MBESS"; version="3.3.3"; type="cran"; sha256="12jsrxwdprrahqbk0i0js7lja81ydy385xmijlqk0slppd72dd9c"; depends=[ ]; };
MBI = derive { name="MBI"; version="1.0"; type="cran"; sha256="1lb0sjwa6x360n9a9pagz6yhxh37gxq1fk0f5c3i2sd56ny9jpns"; depends=[ ]; };
MBmca = derive { name="MBmca"; version="0.0.3-5"; type="cran"; sha256="0p7ddpsy4hwkfwyyszidi33qpdg4xllny7g9x24gk782p7kjfgq9"; depends=[robustbase chipPCR ]; };
MC2toPath = derive { name="MC2toPath"; version="0.0.16"; type="cran"; sha256="0jdn9wpxavn2wrml907v23mfxr62wwjdh7487ihjj59g434ry7wh"; depends=[RNetCDF ]; };
MCAPS = derive { name="MCAPS"; version="0.3-2"; type="cran"; sha256="1jvxl9xi102pcs3swxlx4jk76i7i4fll88c92k7m379ik3r36alb"; depends=[stashR ]; };
MCAvariants = derive { name="MCAvariants"; version="1.0"; type="cran"; sha256="08c5qpklilj41agi5nzm4f5w41pdxk98i1wc1ahhnawc3n2cdbjz"; depends=[ ]; };
MCDA = derive { name="MCDA"; version="0.0.8"; type="cran"; sha256="0zpjbshvv88dvqf6a6yw9zhzzh2j90b9yx8yg7q52c3l7a9lks6w"; depends=[Rglpk Kendall glpkAPI ]; };
MCL = derive { name="MCL"; version="1.0"; type="cran"; sha256="1w36h4vhd525h57pz6ik3abbsrvxnkcqypl2aj1ijb6wm7nfp4ri"; depends=[expm ]; };
MCMC_OTU = derive { name="MCMC.OTU"; version="1.0.8"; type="cran"; sha256="1bdmvwxkm162m3237bgf42dm5kp3q0giwf0avrkla8qd834gqch0"; depends=[MCMCglmm ggplot2 ]; };
MCMC_qpcr = derive { name="MCMC.qpcr"; version="1.1.7"; type="cran"; sha256="0hqbl38r2acvwmxkx7j6lab6an90ykia4bffjmy9a319l0dps5l4"; depends=[MCMCglmm ggplot2 coda ]; };
MCMC4Extremes = derive { name="MCMC4Extremes"; version="1.0"; type="cran"; sha256="1ib3rllvqjni9xg3634ankrr66f1lj376kl3xhfwnwbfsbi4a8pw"; depends=[evir ]; };
MCMCglmm = derive { name="MCMCglmm"; version="2.21"; type="cran"; sha256="1mjjp65w7pg2kxrx2qf0lh1kdi9d21xxj7s39zhi3q8ixw35h95r"; depends=[Matrix coda ape corpcor tensorA ]; };
MCMCpack = derive { name="MCMCpack"; version="1.3-3"; type="cran"; sha256="0s1j3047qp2fkwdix9galm05lp7jk7qxyic6lwpbd70hmj8ggs76"; depends=[coda MASS ]; };
MCPAN = derive { name="MCPAN"; version="1.1-15"; type="cran"; sha256="0811wrbp0nf4nj8kvq62ks8yksabib8r1a0gx3nr3v6avfnv08w1"; depends=[mvtnorm multcomp ]; };
MCPMod = derive { name="MCPMod"; version="1.0-8"; type="cran"; sha256="1kkak9x66dmannhxfdp6cybbjh2g43p03kyp7a4x1az7h4bnc92f"; depends=[mvtnorm lattice ]; };
MCPerm = derive { name="MCPerm"; version="1.1.4"; type="cran"; sha256="0g65vzn43k6qrsglxd2kz245f662gl3c2gdz6qvvxa96v6q9lhh1"; depends=[metafor ]; };
MCRestimate = derive { name="MCRestimate"; version="2.22.0"; type="bioc"; sha256="0brkdxqdh631wpa1sr5qxkj0g9g6l8b7257ayndjjj48p30nprj5"; depends=[e1071 pamr randomForest RColorBrewer Biobase ]; };
MCS = derive { name="MCS"; version="0.1.1"; type="cran"; sha256="0fxc5ri4ci3r5w1hdicqm1j0g6fwrl3wng7qwc2c0isagrn3vp4n"; depends=[ ]; };
MCTM = derive { name="MCTM"; version="1.0"; type="cran"; sha256="14xjfskyrqi0m58lkwjfjpss5j7wy3ajr148n526czrrpccg108j"; depends=[ ]; };
MChtest = derive { name="MChtest"; version="1.0-2"; type="cran"; sha256="01lflilrp42m236cznn6qgzvv5v9fzpx6wcfxp3q545bw2xmbdvj"; depends=[ ]; };
MConjoint = derive { name="MConjoint"; version="0.1"; type="cran"; sha256="02yik28mhvd4rfqwrprdbdjx9c49ds55fh042bsjajs2ip467w5c"; depends=[ ]; };
MDM = derive { name="MDM"; version="1.3"; type="cran"; sha256="1bvjhl243rf19829ly1qc20ik937hb82lq23aiysj7ya55z8hdpf"; depends=[nnet ]; };
MDPtoolbox = derive { name="MDPtoolbox"; version="4.0.2"; type="cran"; sha256="04w0y5ib23l7nhj1947hwvfk6lpwwc11amqpyw1w53yj794g97wz"; depends=[Matrix linprog ]; };
MDR = derive { name="MDR"; version="1.2"; type="cran"; sha256="0g2fvvcwagml6635va87nc0ijzy0pypx5aqzz7mf5w13j0wpm24y"; depends=[lattice ]; };
MEDIPS = derive { name="MEDIPS"; version="1.16.0"; type="bioc"; sha256="035jj91wh1j3qzyhi487lwr939z6f88nprs60m0w117082926l32"; depends=[BSgenome DNAcopy Biostrings BSgenome Rsamtools gtools IRanges GenomicRanges edgeR GenomicFeatures DNAcopy biomaRt rtracklayer ]; };
MEDME = derive { name="MEDME"; version="1.26.0"; type="bioc"; sha256="0bl8g35y1z7zq8cyq3hy0npgbr015wiw0dbqwfw57n0kckmmk9vc"; depends=[Biostrings MASS drc ]; };
MEET = derive { name="MEET"; version="5.1.1"; type="cran"; sha256="02xz2zkwqaf1wck9a3h1j6z8dasw4j0zqa88jg6h10wqzcrlp9ba"; depends=[seqinr pcaMethods Matrix ROCR Hmisc KernSmooth seqLogo ]; };
MEIGOR = derive { name="MEIGOR"; version="1.0.0"; type="bioc"; sha256="06dc7v3j39jglpm65nc6b5jf827mz8cjd6fnmbaqdk99kcripqdg"; depends=[Rsolnp snowfall CNORode deSolve ]; };
MEMSS = derive { name="MEMSS"; version="0.9-2"; type="cran"; sha256="0wyw8yjs4miwgwdfcnfbzvkxrgv5r3jlg3cg8q2vy7s69wvhksmy"; depends=[lme4 ]; };
MESS = derive { name="MESS"; version="0.3-2"; type="cran"; sha256="0x518awi2mxjh3vq69n1jv4d4dxjxhqfx1py48dijgd6w674d3q8"; depends=[geepack glmnet Matrix kinship2 mvtnorm ]; };
MExPosition = derive { name="MExPosition"; version="2.0.3"; type="cran"; sha256="1l27wp0psfvlkk79fhb8ypf8awardjljg1f37yj42friy9pdfksz"; depends=[prettyGraphs ExPosition ]; };
MF = derive { name="MF"; version="4.3.2"; type="cran"; sha256="1arnhyqf1cjvngygcpqk2g4d52949rhkjmclbaskyxcrvp62qln0"; depends=[ ]; };
MFDA = derive { name="MFDA"; version="1.1-4"; type="cran"; sha256="0zf21al8ivmsxlf1i7kc01w0jx3s6650a034cdynz7axnxx28ncx"; depends=[gss mvtnorm ]; };
MFHD = derive { name="MFHD"; version="0.0.1"; type="cran"; sha256="0gb8y297y1x03wy46530psmlawyv4z5dydilk36qcmadlk1wx02k"; depends=[fda_usc deldir depth depthTools matrixStats ]; };
MGFM = derive { name="MGFM"; version="1.0.0"; type="bioc"; sha256="0qv0851jlpn9xydgf3x0mxdhgbw50adfqqw3gf9sny83rx0vxy4z"; depends=[AnnotationDbi annotate ]; };
MGL = derive { name="MGL"; version="1.1"; type="cran"; sha256="17xkrq0wzq1gfa6k1lgf34l4ibwjk6j9rnig3l403zpykmf2ffs6"; depends=[ ]; };
MGRASTer = derive { name="MGRASTer"; version="0.9"; type="cran"; sha256="0jmf2900r56v60981sabflkhid3yrqd9xd7crb56vgfl1qkva9zp"; depends=[ ]; };
MGSDA = derive { name="MGSDA"; version="1.1"; type="cran"; sha256="09z066sfjvx7awxc86gfw066wlz6svj7nxkhlas63a7zfbkiz7hl"; depends=[glmnet MASS ]; };
MHadaptive = derive { name="MHadaptive"; version="1.1-8"; type="cran"; sha256="1w3bm82v8ahxrf0vqn0pznv7dqn212drinkz8y5kr1flx423l9ws"; depends=[MASS ]; };
MIICD = derive { name="MIICD"; version="2.1"; type="cran"; sha256="1lh3pbpxn7lbs68741ydw264qn9rap7kmcw49vnjvvzdp7hf24in"; depends=[survival MASS mstate ]; };
MIIVsem = derive { name="MIIVsem"; version="0.1"; type="cran"; sha256="098ybi5xdz7vvgd4vczqxm54gaq6cjsg0lxk319bx3z0da1a0bx5"; depends=[lavaan ]; };
MILC = derive { name="MILC"; version="1.0"; type="cran"; sha256="14xsiw5al6kixwvf3ph0dlm8s13gsbqvzb92da6ng3x4iiyb1g0w"; depends=[ ]; };
MIMOSA = derive { name="MIMOSA"; version="1.2.0"; type="bioc"; sha256="1lyxl39cjb58vi7pfzdsxcyw0f4llabax3866pfdalpqh1d8p9yr"; depends=[MASS plyr reshape Biobase ggplot2 Formula data_table pracma MCMCpack coda modeest testthat Rcpp scales Rcpp RcppArmadillo ]; };
MIPHENO = derive { name="MIPHENO"; version="1.2"; type="cran"; sha256="0hcaq66biv4izszdhqkgxgz91mgkjk1yrwq27fx07a2zmzj44sfv"; depends=[doBy gdata ]; };
MImix = derive { name="MImix"; version="1.0"; type="cran"; sha256="033gxr0z2xba0pgckiigblb1xa94wrfmpgv3j122cdynjch44j4r"; depends=[ ]; };
MInt = derive { name="MInt"; version="1.0.1"; type="cran"; sha256="1nk02baainxk7z083yyajxrnadg2y1dnhr51fianibvph1pjjkl6"; depends=[glasso trust MASS testthat ]; };
MKLE = derive { name="MKLE"; version="0.05"; type="cran"; sha256="00hcihjn3xfkzy0lvb70hl2acjkwk6s3y7l4gprix24shnblvxzi"; depends=[ ]; };
MKmisc = derive { name="MKmisc"; version="0.98"; type="cran"; sha256="0ng6n1x2x1bg60byhpk212pihh7hirbjr4s89lzrwj854z93bv5l"; depends=[RColorBrewer robustbase ]; };
MLCM = derive { name="MLCM"; version="0.4.1"; type="cran"; sha256="1g6lmw75qdiq0fshxr3sqwm1a3y4928chxkggnfwwxp8hqw4r6px"; depends=[ ]; };
MLDS = derive { name="MLDS"; version="0.4.3"; type="cran"; sha256="1vql92y2dy1ba5l5xdysqzkzvkrr4bhclmjabn49c8qb2xc2rl40"; depends=[MASS ]; };
MLEcens = derive { name="MLEcens"; version="0.1-4"; type="cran"; sha256="0zlmrcjraypscgs2v0w4s4hm7qccsmaz4hjsgqpn0058vx622945"; depends=[ ]; };
MLInterfaces = derive { name="MLInterfaces"; version="1.46.0"; type="bioc"; sha256="0hc9z07ajda5qhsa20ddalpp1aj9j1hsy59jvam3jdby5hkklin5"; depends=[Biobase annotate cluster gdata pls sfsmisc MASS rpart rda genefilter ]; };
MLP = derive { name="MLP"; version="1.14.0"; type="bioc"; sha256="0n5gp4qf6x1ahzbigqjabrv8d090byv87vx7wk0al7534lm9c5g7"; depends=[AnnotationDbi affy plotrix gplots gmodels gdata gtools ]; };
MLRMPA = derive { name="MLRMPA"; version="1.0"; type="cran"; sha256="0gfbi70b15ivv76l3i0zlm14cq398nlny40aci3vqxxd0m2lyyx5"; depends=[ClustOfVar ]; };
MLSeq = derive { name="MLSeq"; version="1.2.0"; type="bioc"; sha256="0kdrlijq4cah7jdqw3fymkv21wp32ra85vv2y71m8m111bf91cm0"; depends=[caret DESeq2 Biobase limma randomForest edgeR ]; };
MLmetrics = derive { name="MLmetrics"; version="1.0.0"; type="cran"; sha256="05j8hwcvfrsslib5k4w3xwkllb3rxdxazsld26zpjf3dc643ag9a"; depends=[ ]; };
MM = derive { name="MM"; version="1.6-2"; type="cran"; sha256="1z7i8ggd54qjmlxw9ks686hqgm272lwwhgw2s00d9946rxhb3ffi"; depends=[magic partitions emulator Oarray ]; };
MMDiff = derive { name="MMDiff"; version="1.6.0"; type="bioc"; sha256="0rif1y2i6s91qn6220q3avrddgicsmlsxhh8rls0ri9gsl4f16b7"; depends=[GenomicRanges DiffBind GMD Rsamtools GenomicRanges IRanges Biobase ]; };
MMIX = derive { name="MMIX"; version="1.2"; type="cran"; sha256="02c74qp48ixqh5cjp2006zgg4xz4bgxxq3csyhjl219if19kmj5m"; depends=[ ]; };
MMMS = derive { name="MMMS"; version="0.1"; type="cran"; sha256="1a71vs3k16j14zgqfd4v92dq9swrb44n9zww8na6di82nla8afck"; depends=[survival glmnet ]; };
MMS = derive { name="MMS"; version="3.00"; type="cran"; sha256="06909912v2hr52s8k0a0830lbmdh05dcd7k47vydhbwq3rzf3ahg"; depends=[glmnet Matrix mht ]; };
MNM = derive { name="MNM"; version="1.0-1"; type="cran"; sha256="0fy43jfd7wak2rfdv5hdq7zc0zsxnbz9p69g6sla0zliibafg0q6"; depends=[ICSNP SpatialNP ellipse ICS ]; };
MNP = derive { name="MNP"; version="2.6-4"; type="cran"; sha256="068lssg565dw673dm8f5k6dbxl2vblnszg8wibzy3ijf96hp03cw"; depends=[MASS ]; };
MOCCA = derive { name="MOCCA"; version="1.2"; type="cran"; sha256="04smpzn9x64w1vpw4szqa7dwnaak1ls6gpg7fgajs68mv5zivffa"; depends=[cclust clv ]; };
MODISTools = derive { name="MODISTools"; version="0.94.6"; type="cran"; sha256="0jzs2dvhq48zjzb2rj6yxws8i2h7w2k00vg7xg5riad4v9j9jk0c"; depends=[RCurl XML ]; };
MOJOV = derive { name="MOJOV"; version="1.0.1"; type="cran"; sha256="11mcqxw83z4xx29s34v4rsbb3zvyhlb2lmvf97b77n455gsy5hab"; depends=[aod survey saws lattice ]; };
MOrder = derive { name="MOrder"; version="0.1"; type="cran"; sha256="1vhy20xyvfc18f04hvlb1jm2n0caaz8ysy13w2rra5i4kjdvz52i"; depends=[ ]; };
MPAgenomics = derive { name="MPAgenomics"; version="1.1.2"; type="cran"; sha256="1gwglzkip54si6i23y8s5hhkzrwmhvfyvsian9593ixy4kqlm2bz"; depends=[R_utils changepoint glmnet cghseg HDPenReg spikeslab ]; };
MPDiR = derive { name="MPDiR"; version="0.1-16"; type="cran"; sha256="10g4dnysjnzf106qibqqcrxz3xw2nfh4ck1n1dlciwahr0f80j13"; depends=[ ]; };
MPFE = derive { name="MPFE"; version="1.0.0"; type="bioc"; sha256="0lgzcdzasf50r0aj3lgbifq2yqyppbr1q9zgaahc84gg0dybcbyn"; depends=[ ]; };
MPINet = derive { name="MPINet"; version="1.0"; type="cran"; sha256="1zw3piqhhpagg5qahc2xahxxfdwdk8w94aass1virlpl0f52ik8s"; depends=[BiasedUrn mgcv ]; };
MPSEM = derive { name="MPSEM"; version="0.2-6"; type="cran"; sha256="1vmdjnhxl8v7xw71kd1m66vhgaa1q0vvifd67v8fmii0i0i5i35y"; depends=[ape MASS ]; };
MPTinR = derive { name="MPTinR"; version="1.8.0"; type="cran"; sha256="0nxiicjdq41bbpfwgzlczm1zrgdilx29nyspvs8m1lx58br1hh8i"; depends=[numDeriv Brobdingnag Rcpp Rcpp RcppEigen ]; };
MPV = derive { name="MPV"; version="1.38"; type="cran"; sha256="1w3b0lszqmsz0yqvaz56x08xmy1m5ngl9m6p2pg9pjv13k8dv190"; depends=[ ]; };
MRCE = derive { name="MRCE"; version="2.0"; type="cran"; sha256="0fnd7ykcxi04pv1af5zbmavsp577vkw6pcrh011na5pzy2xrc49z"; depends=[QUIC ]; };
MRCV = derive { name="MRCV"; version="0.3-3"; type="cran"; sha256="0m29mpsd3kackwrawvahi22j0aghfb12x9j18xk4x1w4bkpiscmf"; depends=[tables ]; };
MRH = derive { name="MRH"; version="2.0"; type="cran"; sha256="0d6zfhyy8a0pjrr74lj0mcagh49pjh15yp4wa7g7j4qv8wfw5pkv"; depends=[survival KMsurv coda ]; };
MRIaggr = derive { name="MRIaggr"; version="1.1.2"; type="cran"; sha256="0z410xkfyaqfrdiwkw29z7l6n15hdwd4dwbjn211sj6s90fa4q2w"; depends=[Rcpp Rcpp RcppArmadillo ]; };
MRMR = derive { name="MRMR"; version="0.1.3"; type="cran"; sha256="1b3a4bkpcncl4sh7d81nk6b2dzhzqn9zhqdxv31jgippsqm2s3k2"; depends=[reshape2 ggplot2 lubridate lmtest plyr ]; };
MRSP = derive { name="MRSP"; version="0.4.3"; type="cran"; sha256="0zv22xiq3qh9x3r2ckkvq1vv0vkcirh8y87053bqvw1m20j7q1by"; depends=[matrixcalc Formula ]; };
MRsurv = derive { name="MRsurv"; version="0.2"; type="cran"; sha256="148myzk6r8whkpv1yv59dmdlr2n8vdwmaww165aw696xfjxwq550"; depends=[survival mvtnorm ]; };
MRwarping = derive { name="MRwarping"; version="1.0"; type="cran"; sha256="13bcs7rlm4irx7yzdnib558w9014a4chh9xwc010m6pxvxv36qnv"; depends=[boa SemiPar ]; };
MSBVAR = derive { name="MSBVAR"; version="0.9-2"; type="cran"; sha256="1p6n8vbrlqqq1vbqvxnn0ffmnr462gslb1jkaf4vcrndbln5cclq"; depends=[KernSmooth xtable coda bit mvtnorm lattice ]; };
MSG = derive { name="MSG"; version="0.2.2"; type="cran"; sha256="18siw81pa02yg0zs40pavwm88yz7kfi60fislmjpwnl2207a6fhf"; depends=[RColorBrewer ]; };
MSGFgui = derive { name="MSGFgui"; version="1.0.2"; type="bioc"; sha256="1qklwy9wc81la49fjj8kmwds9d6ydnkgbgb4r3lzyr8k5g4v75ik"; depends=[mzR shiny mzID MSGFplus shinyFiles xlsx ]; };
MSGFplus = derive { name="MSGFplus"; version="1.0.5"; type="bioc"; sha256="0h0m0rnfr5lyaskrrmdqcv8182hi8gl7nmnqk3fs61a23rf3i8sk"; depends=[mzID ]; };
MSIseq = derive { name="MSIseq"; version="0.99.1"; type="cran"; sha256="1wg0j0qr2g2lhhw57cvlawd5hik0bmqb66ynxgn62sgx1nkj3g74"; depends=[IRanges RWeka rJava R_utils ]; };
MSQC = derive { name="MSQC"; version="1.0.1"; type="cran"; sha256="1vs9kygjg9f4sr1m80hdn03gdhbdqfjamqxhbs9zha8smjrsgisw"; depends=[rgl ]; };
MST = derive { name="MST"; version="1.0"; type="cran"; sha256="142xhg7fpf27ba9gi3dxbmpcpmz56dks0rp4ybqpcxiq3z7wacxp"; depends=[survival MASS ]; };
MSeasy = derive { name="MSeasy"; version="5.3.3"; type="cran"; sha256="191mvg1imxfjlnd808ypn4lsjx7n6ydf16flax79hv01z7rcjylh"; depends=[amap clValid cluster fpc mzR xcms ]; };
MSeasyTkGUI = derive { name="MSeasyTkGUI"; version="5.3.3"; type="cran"; sha256="0ihz8vr2wbgy88bzssilgvlhkbr13jznfjvnqy73wpchqgwy0wy6"; depends=[MSeasy ]; };
MSnID = derive { name="MSnID"; version="1.0.1"; type="bioc"; sha256="02grqlsqcgv1ricx7wyd4l72s35w1k92m80kkjm4afhx6aqv9wsf"; depends=[Rcpp MSnbase mzID R_cache foreach doParallel reshape2 iterators data_table Biobase mzR ]; };
MSnbase = derive { name="MSnbase"; version="1.14.2"; type="bioc"; sha256="1sxkdp41qdih3vz7zakqmws33yhpsggcg30w6sl7p23lmixbkqrl"; depends=[BiocGenerics Biobase mzR BiocParallel plyr IRanges preprocessCore vsn reshape2 affy impute pcaMethods mzID MALDIquant digest lattice ggplot2 ]; };
MSstats = derive { name="MSstats"; version="2.4.0"; type="bioc"; sha256="0srlcd2k1h23zj3h5g73b3rdbi2hg0mna35mvvv4l4i7k603dxsp"; depends=[Rcpp MSnbase reshape lme4 marray limma gplots ggplot2 preprocessCore ]; };
MSwM = derive { name="MSwM"; version="1.2"; type="cran"; sha256="01l23ia20y3nchykha4vz6sa757zmbvgx2315cacxfcqk9rgs08c"; depends=[nlme ]; };
MTS = derive { name="MTS"; version="0.33"; type="cran"; sha256="0i7kpgsw56vvgrdgddn83i9lzjlb72z4llffqai29qq0m1i7hm65"; depends=[Rcpp fGarch mvtnorm Rcpp ]; };
MTurkR = derive { name="MTurkR"; version="0.6"; type="cran"; sha256="0kmi1x9xsqwi7llgwmkmnkn2hir5r9nryhqh8lrh41fwps4la9x8"; depends=[RCurl digest XML ]; };
MUCflights = derive { name="MUCflights"; version="0.0-3"; type="cran"; sha256="03ksvv5nyzlqiml1nz405r3yqb2cl35kpm1h61zcv2nqq8cxqshs"; depends=[XML geosphere sp RSQLite NightDay ]; };
MVA = derive { name="MVA"; version="1.0-5"; type="cran"; sha256="18x075hjqhrjwxivvrixgs6yc67il3n5p1m7v2wymcf8h2mkki91"; depends=[HSAUR2 ]; };
MVB = derive { name="MVB"; version="1.1"; type="cran"; sha256="0an8b594rknlcz6zxjva6br8f34sgwdi2jil3xh1xzb5fa55dw0f"; depends=[Rcpp RcppArmadillo Rcpp RcppArmadillo ]; };
MVCClass = derive { name="MVCClass"; version="1.40.0"; type="bioc"; sha256="1ix9yb97wbhi6577p2kp84c13g8rmikzbqcdc9vd6bp61f3bf484"; depends=[ ]; };
MVN = derive { name="MVN"; version="3.9"; type="cran"; sha256="1l6bib1gl5nj7p1dk6mbmflp9p5sgm405q3l53pqmq09jm55flh6"; depends=[nortest moments MASS robustbase mvoutlier plyr psych ]; };
MVR = derive { name="MVR"; version="1.20.0"; type="cran"; sha256="1wwzws9116ck14g6xd1svmwc9wkr8piwb24bddnzri388p8qkgb4"; depends=[statmod ]; };
MVar_pt = derive { name="MVar.pt"; version="1.0"; type="cran"; sha256="0wzc2r5psla8khyrkd7p8y23cxyn5bsy8vxglh2p3mpayfzi8k2a"; depends=[ ]; };
MXM = derive { name="MXM"; version="0.3"; type="cran"; sha256="14kw4shc0jp6jrs8afimy13jssah0agwa3p5ay2py1zfid43k63y"; depends=[gRbase Biobase VGAM MASS pcalg survival ]; };
MaXact = derive { name="MaXact"; version="0.2.1"; type="cran"; sha256="1n7af7kg54jbr09qk2a8gb9cjh25cnxzj2snscpn8sr8cmcrij0i"; depends=[mnormt ]; };
Maeswrap = derive { name="Maeswrap"; version="1.4.11"; type="cran"; sha256="15i36xj2bdzhly78614077s8k2z75a1gmzl2crsfgvhyyjdax8r7"; depends=[rgl lattice geometry ]; };
MantelCorr = derive { name="MantelCorr"; version="1.36.0"; type="bioc"; sha256="1a5m54ljsfgrpbhj9n3yz67s10pspl050a5sjrkq2cvx0hyk4wwg"; depends=[ ]; };
ManyTests = derive { name="ManyTests"; version="1.1"; type="cran"; sha256="11xk3j2q7w6b6ljmp7b8gni0khpmpvcvzwxypy0w8ihi2gaczsxj"; depends=[ ]; };
Map2NCBI = derive { name="Map2NCBI"; version="1.0"; type="cran"; sha256="02cgmayrhkyji0cwr6n0f439njq29mzna7sgzkq6ml45njm9m5nh"; depends=[ ]; };
MapGAM = derive { name="MapGAM"; version="0.7-5"; type="cran"; sha256="0bpswdi7iic7hsqrwcxwv27n4095m292nv5db6d4mj9gvp13h7i7"; depends=[sp gam maptools ]; };
MareyMap = derive { name="MareyMap"; version="1.2"; type="cran"; sha256="1l7s1ffl9bg1zx5nyb1r3dba188mxiaprdda3gqm2cr1f33jmr51"; depends=[tkrplot ]; };
MarkowitzR = derive { name="MarkowitzR"; version="0.1502"; type="cran"; sha256="0srrmzr4msn04w5f6s6qs51db8jccpfj10sighsv1l7d056n2xjn"; depends=[matrixcalc sandwich gtools ]; };
MassArray = derive { name="MassArray"; version="1.18.0"; type="bioc"; sha256="0lmyfjrak3fm2zmc0k1db4yyb38xzzichb1if3lda6v0wlq86yxn"; depends=[ ]; };
MassSpecWavelet = derive { name="MassSpecWavelet"; version="1.32.0"; type="bioc"; sha256="16xfcdrsy2c68kib1yicqllzydn8l143n1zxrpzw1zrj32zwdd04"; depends=[waveslim ]; };
MasterBayes = derive { name="MasterBayes"; version="2.52"; type="cran"; sha256="12ka2l4x6psij7wzbb98lwx5shgwzn5v44qfpiw1i6g236yp0mhm"; depends=[coda genetics gtools kinship2 ]; };
MatchIt = derive { name="MatchIt"; version="2.4-21"; type="cran"; sha256="02kii2143i8zywxlf049l841b1y4hqjwkr1cnyv6b8b7y7lz2m5v"; depends=[MASS ]; };
Matching = derive { name="Matching"; version="4.8-3.4"; type="cran"; sha256="04m647342j4yi74ds7ddwnyrf58qdy7k3mc067k3p779qavq2ka1"; depends=[MASS ]; };
MatchingFrontier = derive { name="MatchingFrontier"; version="1.0.0"; type="cran"; sha256="1djlkx7ph8p60n2m191xq9i01c2by4vpmjj25mbxy5izxm5123aa"; depends=[MASS igraph segmented ]; };
Matrix = derive { name="Matrix"; version="1.2-0"; type="cran"; sha256="0ywz213p6cpwnklxd81hzdyxjzagaj6cn32ycc5rcnhxy30d7kk5"; depends=[lattice ]; };
MatrixEQTL = derive { name="MatrixEQTL"; version="2.1.1"; type="cran"; sha256="1bvfhzhvm1psgq51kpjcpp7bidaxcrxdigmv6abfi3jk5kyzn5ik"; depends=[ ]; };
MatrixModels = derive { name="MatrixModels"; version="0.4-0"; type="cran"; sha256="1jcjsyha0xmz264g1haj7x8zpzjmp1m0jl39h5bf8r45hhlaxcsa"; depends=[Matrix ]; };
MaxPro = derive { name="MaxPro"; version="3.1-2"; type="cran"; sha256="1y2g8a8yvzb24dj0z82nzfr6ylplb9sbi2dmj7f3pb4s3yr5zm8y"; depends=[nloptr ]; };
MazamaSpatialUtils = derive { name="MazamaSpatialUtils"; version="0.2.4"; type="cran"; sha256="04ljjzcqfgy136wviz92gdavqzjhbai1v69nj4kg6vc6nwvkhnbx"; depends=[dplyr rgdal rgeos rvest sp stringr ]; };
McParre = derive { name="McParre"; version="1.0.1"; type="cran"; sha256="16bfca867drbknzc6bylg8paa8p72l23wgjpyvy4pd9z6lpgmhdy"; depends=[MASS ]; };
McSpatial = derive { name="McSpatial"; version="2.0"; type="cran"; sha256="18nmdzhszqcb5z9g8r9whxgsa0w3g7fk7852sgbahzyw750k95n4"; depends=[lattice locfit maptools quantreg RANN SparseM ]; };
Mcomp = derive { name="Mcomp"; version="2.05"; type="cran"; sha256="0wggj0h0qxjwym1vz1gk9iwnwia4lpjlk6n46l6hinsdax3g221y"; depends=[tseries forecast ]; };
MeSHDbi = derive { name="MeSHDbi"; version="1.2.7"; type="bioc"; sha256="159lx1xgpyn9mj40fnfnz13qjahs18xsvsyj9crfbh5y5q8d308z"; depends=[AnnotationDbi RSQLite Biobase ]; };
MeasurementError_cor = derive { name="MeasurementError.cor"; version="1.38.0"; type="bioc"; sha256="1q5y46sjd4gbb9sckhkjjj6kb4df511f9822dbibdccav9y9pfgq"; depends=[ ]; };
MedOr = derive { name="MedOr"; version="0.1"; type="cran"; sha256="1rwc14s16lnzgb78ac2017hv9pss7zw7nw3y7vrvq1qx4fgiw6f8"; depends=[ ]; };
MenuCollection = derive { name="MenuCollection"; version="1.2"; type="cran"; sha256="0v3flicfnln9qld150yk3rfldvsr4dllhq80l02n1lq6px38nf2s"; depends=[RGtk2 RGtk2Extras gplots ]; };
MergeGUI = derive { name="MergeGUI"; version="0.2-1"; type="cran"; sha256="1hx03qv5jyjjmqdvylc3kz5dl5qsdqwlirjbrnxrw7grkgkhygap"; depends=[gWidgetsRGtk2 ggplot2 cairoDevice rpart ]; };
MergeMaid = derive { name="MergeMaid"; version="2.38.0"; type="bioc"; sha256="0y3qa7hw9c74x7q1j5nmy21xp7rp5bgkgngc4yk3kkd8z8ik2kvi"; depends=[survival Biobase MASS ]; };
MetABEL = derive { name="MetABEL"; version="0.2-0"; type="cran"; sha256="0rqjv85mgswrbbp8b8ip6cdmz0cvfy9lm5mcr8a7h38rzgx3g3i3"; depends=[ ]; };
MetFns = derive { name="MetFns"; version="1.0"; type="cran"; sha256="03kx8cr4c6mgjincf87m305fhryh1c42hdzr1ljl63affnlp7nfp"; depends=[astroFns plotrix ]; };
MetNorm = derive { name="MetNorm"; version="0.1"; type="cran"; sha256="0vfi3k0yp2dz47gwj1n1avs3ji0a2nlrrljz5d0l66zfh4474jb4"; depends=[ ]; };
MetSizeR = derive { name="MetSizeR"; version="1.1"; type="cran"; sha256="11hdmpvnszr6pn9ihb3zjy9miksz1fs4piry153z4dic8pjydkax"; depends=[mvtnorm MetabolAnalyze cairoDevice gWidgets gWidgetsRGtk2 ]; };
MetStaT = derive { name="MetStaT"; version="1.0"; type="cran"; sha256="0400gx6i8xlkm51da98ap91c3hgrkgfgxswn0plaxfry3625khkp"; depends=[MASS abind pls ]; };
MetaDE = derive { name="MetaDE"; version="1.0.5"; type="cran"; sha256="1ijg64bri5jn2d3d13q1gvvfyqmbh6gn0lk6dkihixf0jwvjdyqi"; depends=[survival impute Biobase combinat ]; };
MetaLandSim = derive { name="MetaLandSim"; version="0.2"; type="cran"; sha256="0lb058kcqpylw27hlmkxmpndsiw71g865fgapw6d599brgi91a8i"; depends=[spatstat sp Biobase e1071 fgui googleVis maptools rgeos spgrass6 raster ]; };
MetaPCA = derive { name="MetaPCA"; version="0.1.4"; type="cran"; sha256="14g4v3hyxnds4l2q36mpz282yqg8ahgdw3b0qmj0xg17krrf5l2s"; depends=[foreach ]; };
MetaQC = derive { name="MetaQC"; version="0.1.13"; type="cran"; sha256="11595ggjr46z6xiwmhiyx1sydaq68l18y7mgdwxsg81g03ck9x1r"; depends=[proto foreach iterators ]; };
MetaSKAT = derive { name="MetaSKAT"; version="0.40"; type="cran"; sha256="1jxs32hvsw6wzci9f1rc7sw1dfyazdm2d57wcmhkggfg3hkdn1vv"; depends=[SKAT ]; };
Metab = derive { name="Metab"; version="1.0.0"; type="bioc"; sha256="0rlr1dckg07qd76cfsdyjna0phjcbcqsqdbbciyv774cb7fhca0j"; depends=[xcms svDialogs pander ]; };
MetabolAnalyze = derive { name="MetabolAnalyze"; version="1.3"; type="cran"; sha256="0cl76x6imx4a95wd74xx5s8i2vg8wq3inqgakvgzmkwxad6qhrqp"; depends=[mclust mvtnorm ellipse gtools gplots ]; };
Metatron = derive { name="Metatron"; version="0.1-1"; type="cran"; sha256="0apz2k3za19px1bcg4ls0axaljrpxnqhs86b6s862c370sspc1x8"; depends=[lme4 mpt Matrix ]; };
Meth27QC = derive { name="Meth27QC"; version="1.1"; type="cran"; sha256="0ad30svs2kjzmmyvcm0jmv64iyq7slp1x1xl35h2rv1b6zbd4658"; depends=[gplots ]; };
MethComp = derive { name="MethComp"; version="1.22.2"; type="cran"; sha256="0f9l36d00x054yqgbw0dckc7ldlgap6vnbb03n6n5yz47xxg0ic3"; depends=[nlme ]; };
Methplot = derive { name="Methplot"; version="1.0"; type="cran"; sha256="0aaqss9zfn55qi45jffxkksnkw510npjnkygafx49vl77bkagqh5"; depends=[ggplot2 reshape ]; };
MethylAid = derive { name="MethylAid"; version="1.0.2"; type="bioc"; sha256="0rsv93k3j61q237sh65b69k3d81abd7zq7nxvklwkyyhyyp25p7c"; depends=[matrixStats BiocParallel shiny ggplot2 RColorBrewer minfi ]; };
MethylMix = derive { name="MethylMix"; version="1.0.0"; type="bioc"; sha256="0yqgsh7y6qxlvq3d7j8ywdxflmrr2p6pfdlgblmfydcg64hv3c49"; depends=[foreach doParallel RColorBrewer optimx RPMM ]; };
MethylSeekR = derive { name="MethylSeekR"; version="1.6.0"; type="bioc"; sha256="1dlrnmraslmr51zvfdbssizgc7h4kldb480vvaak3kzqs3k1lsfv"; depends=[rtracklayer mhsmm IRanges BSgenome GenomicRanges geneplotter ]; };
Metrics = derive { name="Metrics"; version="0.1.1"; type="cran"; sha256="1yqhlsmhh9sl7qngl85b7qb980s54h13wwznpakyvvwlar64yqrw"; depends=[ ]; };
MfUSampler = derive { name="MfUSampler"; version="0.9.1"; type="cran"; sha256="0fw1jw2ljsxmvnaayn7zdrrsnbbkkb5n9nm396321p36bqkf1pk3"; depends=[ars ]; };
Mfuzz = derive { name="Mfuzz"; version="2.26.0"; type="bioc"; sha256="1x1jz0x6l38ssil5zassxa6dvm4m4fq904vdhjnivqhl2akcabvh"; depends=[Biobase e1071 tkWidgets ]; };
MiChip = derive { name="MiChip"; version="1.20.0"; type="bioc"; sha256="17cjxg487fhb2fv3cj9fkswbdv9fflnj530kksxckmx759pzv5xb"; depends=[Biobase Biobase ]; };
MiPP = derive { name="MiPP"; version="1.38.0"; type="bioc"; sha256="1m3c6x412hzhkf1i8w708qj099ag9sikvsdll1n9gp174asg5idn"; depends=[Biobase e1071 MASS ]; };
MiRaGE = derive { name="MiRaGE"; version="1.8.0"; type="bioc"; sha256="1kcjlja6bmgkwx8l1mywf3n36a9gwx04gzppb3x89hrkrhip95m9"; depends=[Biobase AnnotationDbi BiocGenerics ]; };
MiST = derive { name="MiST"; version="1.0"; type="cran"; sha256="0gqln792gixqfh201xciaygmxbafa0wyv5gpbg9w5zkbbv44wrfk"; depends=[CompQuadForm ]; };
MicSim = derive { name="MicSim"; version="1.0.8"; type="cran"; sha256="0i9vyim7wfnaf1zcs1vz6yc7xkr1hzhqcccbcvg15vkzhr23f8lg"; depends=[chron snowfall rlecuyer ]; };
MicroDatosEs = derive { name="MicroDatosEs"; version="0.6.3.1"; type="cran"; sha256="17ka9bdic8vdr0aabmgm216zm9a8jppxll042b5ric4vzplah17d"; depends=[memisc Hmisc ]; };
MicroStrategyR = derive { name="MicroStrategyR"; version="1.0-1"; type="cran"; sha256="0a6bk0wnwx8zy9081n7wb12lidgckrhn350r0q5m6aa82l6l8ihi"; depends=[gWidgetsRGtk2 ]; };
MigClim = derive { name="MigClim"; version="1.6"; type="cran"; sha256="171pnalidyw0v2fcjdc3kyrq5kg035kwj5xl8zwgn3hlanpaljvp"; depends=[SDMTools raster ]; };
MindOnStats = derive { name="MindOnStats"; version="0.11"; type="cran"; sha256="13995v4n0hfb53w02jk81pl7nazkvqwwv87y1sr99jr9ppzc08mz"; depends=[ ]; };
MineICA = derive { name="MineICA"; version="1.6.0"; type="bioc"; sha256="08qy899p44j4kgrwllyvqp6wd1z1gzq9krm46n2i84kdkz5vqy1i"; depends=[Biobase plyr ggplot2 scales foreach xtable biomaRt gtools GOstats cluster marray mclust RColorBrewer colorspace igraph Rgraphviz graph annotate Hmisc fastICA JADE AnnotationDbi lumi fpc ]; };
Miney = derive { name="Miney"; version="0.1"; type="cran"; sha256="0sgln0653rgglinr8rns5s2az0lgyp9slmynyhhhs265grkhrfj0"; depends=[ ]; };
MinimumDistance = derive { name="MinimumDistance"; version="1.10.2"; type="bioc"; sha256="1c8skic7m2hiyccbg2iclrlgq8h3ra3d23j9b4iliwhpjqip1y8j"; depends=[oligoClasses S4Vectors VanillaICE Biobase DNAcopy BiocGenerics ff foreach matrixStats IRanges lattice GenomicRanges GenomeInfoDb data_table ]; };
Mirsynergy = derive { name="Mirsynergy"; version="1.2.0"; type="bioc"; sha256="00y510f0c4w9cmaymm5l59j0yjiv9jwcv5ihds83c5x2hpivzv84"; depends=[igraph ggplot2 gridExtra Matrix RColorBrewer reshape scales ]; };
MissMech = derive { name="MissMech"; version="1.0.2"; type="cran"; sha256="1b7i1balfl1cqr3l4l4wxlahk2gmawzv9rhyibwzf0yp60cb1sv9"; depends=[ ]; };
MissingDataGUI = derive { name="MissingDataGUI"; version="0.2-2"; type="cran"; sha256="07a3y8l0r7a0f7zmp5pg2aqkf7hyk8cf562x3m8b38w96vir4vr0"; depends=[gWidgetsRGtk2 ggplot2 GGally cairoDevice reshape ]; };
MitISEM = derive { name="MitISEM"; version="1.0"; type="cran"; sha256="03305ds3rgr29z4idaxzsm83igiygna2sqd5vpixklngsrp8w341"; depends=[mvtnorm ]; };
MixAll = derive { name="MixAll"; version="1.0.2"; type="cran"; sha256="10jwiri659i2h0gkaxc41gjvff4v465syxr0nppn1qqz5910jql0"; depends=[rtkpp Rcpp rtkpp ]; };
MixGHD = derive { name="MixGHD"; version="1.5"; type="cran"; sha256="1wjjz300yr9mj5kwrpybdji0znqrh26i2jlhbjcxkn3j4frkhlh3"; depends=[MASS mclust Bessel mvtnorm ghyp numDeriv mixture ]; };
MixMAP = derive { name="MixMAP"; version="1.3.1"; type="cran"; sha256="0m6m9wi0ain7z96s6z6kmwjisfqm3al6m459y5zr2l1cdbdpxfpv"; depends=[lme4 ]; };
MixSim = derive { name="MixSim"; version="1.0-9"; type="cran"; sha256="16kg12784z82x8f1vscv9d5yakmki2m8gqr4hy9417c31xfkk3zy"; depends=[MASS ]; };
MixedTS = derive { name="MixedTS"; version="1.0.1"; type="cran"; sha256="0ljal2jxscwrv439blavf5gjxbi3k3jfqqmwblzfvc05dqgvdk0b"; depends=[MASS ]; };
MixtureInf = derive { name="MixtureInf"; version="1.0-1"; type="cran"; sha256="1cq8zzhhb6vg545n9aw1b9fhx025zy75dd6pw161svsb5776py5d"; depends=[ ]; };
MmPalateMiRNA = derive { name="MmPalateMiRNA"; version="1.16.0"; type="bioc"; sha256="0jg925daxwhr99dxp841w5z20cgpc185n0w1n8nnjwpyah950v83"; depends=[Biobase xtable limma statmod lattice vsn limma lattice Biobase ]; };
MoPS = derive { name="MoPS"; version="1.0.0"; type="bioc"; sha256="18bxh9jwdm85nb3v4sn8k55fl8hv79h80f3dy0d10vfpwjf9aabi"; depends=[Biobase ]; };
Mobilize = derive { name="Mobilize"; version="2.16-4"; type="cran"; sha256="16vdvpwspa0igb52zvzyk0if9l4wq1hm8y42572i8sh1m82wyyfs"; depends=[Ohmage ggplot2 wordcloud reshape2 ]; };
Modalclust = derive { name="Modalclust"; version="0.6"; type="cran"; sha256="16h90d30jwdrla5627rva0yf69n0zib9z5fl3k5awlqfscz4fw26"; depends=[mvtnorm zoo class ]; };
ModelGood = derive { name="ModelGood"; version="1.0.9"; type="cran"; sha256="1y99a7bgwx167pncxj00lbw3cdjj23fhhzl8r24hwnhxr984kvzl"; depends=[prodlim ]; };
ModelMap = derive { name="ModelMap"; version="3.0.15"; type="cran"; sha256="1d7qn1p4fv94bdlr6if64vxl9yknavix4gzmpg3kxwlrxaz2g8a2"; depends=[randomForest raster gbm rgdal fields HandTill2001 PresenceAbsence ]; };
Momocs = derive { name="Momocs"; version="0.2-6"; type="cran"; sha256="187w6xyswlg5nac6lbprcwvj63gka832n33vlj2ix810vqyxd0fk"; depends=[ade4 sp shapes jpeg spdep ape ]; };
MonetDB_R = derive { name="MonetDB.R"; version="0.9.7"; type="cran"; sha256="0b5agr3dl0ps7fnqw2fsgzb2ysqzvg2ymhxz3xyn08djgz6w7vkm"; depends=[DBI digest ]; };
MonoPoly = derive { name="MonoPoly"; version="0.2-8"; type="cran"; sha256="0lpqqpahpss4q9iddh2p4h6klsrjhg3v6h1wfb70vy0miyhqb93h"; depends=[quadprog ]; };
Morpho = derive { name="Morpho"; version="2.2"; type="cran"; sha256="03j121ghswr1kwq40krk3b4ycn44l9ga3bp64igknvpnqikp5qcb"; depends=[Rvcg rgl colorRamps foreach Matrix yaImpute doParallel Rcpp Rcpp RcppArmadillo ]; };
MorseGen = derive { name="MorseGen"; version="1.2"; type="cran"; sha256="1kq35n00ky70zmxb20g4mwx0hn8c5g1hw3csmd5n6892mbrri8s9"; depends=[ ]; };
MortalitySmooth = derive { name="MortalitySmooth"; version="2.3.4"; type="cran"; sha256="1clx8gb8jqvxcmfgv0b8jyvh39yrmcmwr472j9g3ymm95m4hr8fq"; depends=[svcm lattice ]; };
MotIV = derive { name="MotIV"; version="1.22.0"; type="bioc"; sha256="154k9y42r42mfbiz3pqc80789d19d9fchrdcij71hxz0r0jr1mji"; depends=[BiocGenerics IRanges Biostrings lattice rGADEM ]; };
MotifDb = derive { name="MotifDb"; version="1.8.0"; type="bioc"; sha256="0yxvv4mz4bj6iyn8whzkn59gbb0cm8nik9l8076jwa2nhmgwnkzd"; depends=[BiocGenerics S4Vectors IRanges Biostrings rtracklayer ]; };
MplusAutomation = derive { name="MplusAutomation"; version="0.6-3"; type="cran"; sha256="1zb4drqaswzwssky1bp69p3p8inqfdvxg2ji9bjrzf3vf0b5fl4p"; depends=[boot plyr gsubfn coda xtable lattice texreg ]; };
Mposterior = derive { name="Mposterior"; version="0.1.2"; type="cran"; sha256="16a7wvg41ld2bhbss480js5h12r41nl7jmc3y4jsbv1lr5py4ymy"; depends=[Rcpp Rcpp RcppArmadillo ]; };
MuFiCokriging = derive { name="MuFiCokriging"; version="1.2"; type="cran"; sha256="09p8wdmlsf21ibqyjigwdipcin3ij0naxcd035hqgfj76v20wiyv"; depends=[DiceKriging ]; };
MuMIn = derive { name="MuMIn"; version="1.13.4"; type="cran"; sha256="1zk8glw5laismhhfgkbxk05qjmzv80bkp3ib45x7i05s2mqy1yxn"; depends=[ ]; };
Mulcom = derive { name="Mulcom"; version="1.16.0"; type="bioc"; sha256="129gw95zqkfalnvslzx6k99qy7l0fgimb96ghlghdv2rj4xjhiwg"; depends=[fields Biobase ]; };
MultEq = derive { name="MultEq"; version="2.3"; type="cran"; sha256="0fshv7i97q8j7vzkxrv6f20kpqr1kp9v6pbw50g86h37l0jghj7r"; depends=[ ]; };
MultNonParam = derive { name="MultNonParam"; version="1.0"; type="cran"; sha256="0xff81wjmyw2d38r0v3n7vv0dasg9rlrc0zrdwsmfd83zpvxqj5m"; depends=[ ]; };
MultiCNVDetect = derive { name="MultiCNVDetect"; version="0.1-1"; type="cran"; sha256="0mfisblw3skm4y8phfg4wa0rdchl01wccarsq79hv63y78pfhh13"; depends=[ ]; };
MultiLCIRT = derive { name="MultiLCIRT"; version="2.9"; type="cran"; sha256="0anb041nd56rrryhv5w1pb0axxsfkqas177r6yf5h5gbc4vn3758"; depends=[MASS limSolve ]; };
MultiMed = derive { name="MultiMed"; version="1.0.0"; type="bioc"; sha256="1lhf0dj3xw52d0glqgij42qjyzqwwb1jkjcnqgc8ign22smz1bx0"; depends=[ ]; };
MultiMeta = derive { name="MultiMeta"; version="0.1"; type="cran"; sha256="0gj0wk39fqd21xjcah20jk16jlfrcjarspbjk5xv74c9k4p5gmak"; depends=[gtable mvtnorm expm ggplot2 reshape2 ]; };
MultiOrd = derive { name="MultiOrd"; version="2.1"; type="cran"; sha256="12y5cg06qyaz72gk3bi5pqkd55n72rz056y9va49znlsqph09x2x"; depends=[mvtnorm corpcor Matrix psych ]; };
MultiPhen = derive { name="MultiPhen"; version="2.0.0"; type="cran"; sha256="05w7khzyxswlsz4sxhaakbz828zrdya1y8qcsdfc6w7wgl8qpmj9"; depends=[MASS abind epitools meta HardyWeinberg RColorBrewer gplots ]; };
MultiRR = derive { name="MultiRR"; version="1.0"; type="cran"; sha256="0m2v13cygabjbsz0fwxwh03csd3yfdpzk4yfvx8lrim9m90026hz"; depends=[MASS lme4 ]; };
MultiSV = derive { name="MultiSV"; version="0.0-67"; type="cran"; sha256="0924lvkx12aqjxxz8bwqdi4h9xc2acf8aynllx0m45ip5r4gh1g2"; depends=[nlme reshape ]; };
Multiclasstesting = derive { name="Multiclasstesting"; version="1.3.9"; type="cran"; sha256="09y3gnarqv15wgmk545qrwpjwb2ilv2b2kc74cxzcb2p1lflfjzm"; depends=[ ]; };
MultinomialCI = derive { name="MultinomialCI"; version="1.0"; type="cran"; sha256="0ryi14d102kvxawls04hcw50n79jkcn29ill77lkfvj6nlzj8i5q"; depends=[ ]; };
Myrrix = derive { name="Myrrix"; version="1.1"; type="cran"; sha256="15w1dic6p983g2gajbm4pws743z68y0k2hxrdwx6ppnzn9rk07rs"; depends=[Myrrixjars rJava ]; };
Myrrixjars = derive { name="Myrrixjars"; version="1.0-1"; type="cran"; sha256="0dy82l0903pl4c31hbllscfmxrv3bd5my5b2kv5d3x5zq0x99df0"; depends=[rJava ]; };
NADA = derive { name="NADA"; version="1.5-6"; type="cran"; sha256="0y7njsvaypcarzygsqpqla20h5xmidzjmya4rbq39gg6gkc0ky27"; depends=[survival ]; };
NAM = derive { name="NAM"; version="1.3.2"; type="cran"; sha256="0rzhqs9qcry3w4q1lcfzmp4fndbmj4bm8981i7nn4cipcjfx7635"; depends=[Rcpp randomForest Rcpp ]; };
NAPPA = derive { name="NAPPA"; version="2.0.1"; type="cran"; sha256="0nn4wgl8bs7sy7v56xfif7i9az6kdz9xw7m98z1gnvl2g7damvn3"; depends=[plyr NanoStringNorm ]; };
NB = derive { name="NB"; version="0.9"; type="cran"; sha256="1gh42z7lp6g09fsfmikxqzyvqp2874cx3a6vr96w43jfwmgi2diq"; depends=[ ]; };
NBDdirichlet = derive { name="NBDdirichlet"; version="1.01"; type="cran"; sha256="07j9pcha6clrji8p4iw466hscgs6w43q0f7278xykqcdnk39gkyv"; depends=[ ]; };
NBPSeq = derive { name="NBPSeq"; version="0.3.0"; type="cran"; sha256="0l4ylxhs2k9ww21jjqs67fygk92avdchhx2y1ixzl7yr2yh1y9by"; depends=[qvalue ]; };
NCIgraph = derive { name="NCIgraph"; version="1.14.0"; type="bioc"; sha256="0d6pigamrib2q8j5zg9i84rl43q4hlg2m29q37zf6m4y1m9dffy4"; depends=[graph graph KEGGgraph RBGL RCytoscape R_methodsS3 ]; };
NCmisc = derive { name="NCmisc"; version="1.1.4"; type="cran"; sha256="0hbrad72lzp0vi0j9lvpmvdih7vijqghqng1f0hjd8fg8hjvcflg"; depends=[proftools dplyr ]; };
NEff = derive { name="NEff"; version="1.1"; type="cran"; sha256="16ys1fi28kbzg3am9vz1c5pc9x0ac47pl6za04h63lspk99yplzk"; depends=[msm bit ]; };
NGScopy = derive { name="NGScopy"; version="1.0.0"; type="bioc"; sha256="0xyr2zspg9vghc2cmrczrb2v0qjzks649vysl716ccynl9yk4ccd"; depends=[Xmisc rbamtools changepoint ]; };
NHANES = derive { name="NHANES"; version="2.0"; type="cran"; sha256="0bdsccr1g2vnisllnmj2z4sma5hdp2iqm1fpr0kmbv1dnkpmxd41"; depends=[ ]; };
NHEMOtree = derive { name="NHEMOtree"; version="1.0"; type="cran"; sha256="0ycprj2rz2fy6a7ps0bsr27iphmbfxi9pbvl8rcr6p8yagfb84mb"; depends=[partykit emoa sets rpart ]; };
NHMM = derive { name="NHMM"; version="3.5"; type="cran"; sha256="03il5y6vz5zyadydhk3qg6sd6fmsw7md9if1igyy9643mxxm1g0f"; depends=[BayesLogit msm MCMCpack MASS Rcpp Rcpp ]; };
NHPoisson = derive { name="NHPoisson"; version="3.1"; type="cran"; sha256="1gr682kxgw227yqw9w0iw9lrijsz5iszhnfk0mdhi6m1w9s28kcn"; depends=[car ]; };
NISTnls = derive { name="NISTnls"; version="0.9-13"; type="cran"; sha256="03a1c8a5dr5l5x4wbclnsh3vmx3dy7migfdzdx7d7p3s7hj3ibif"; depends=[ ]; };
NISTunits = derive { name="NISTunits"; version="1.0.0"; type="cran"; sha256="156rk3wams52lw3inf55s9v7mi5x29mmb41p8kvryimnzgi904ca"; depends=[ ]; };
NLP = derive { name="NLP"; version="0.1-7"; type="cran"; sha256="1r7m6mq7i6xcf2qxzwvwx129fq89gx6f8kxqn76iw5a5nfarq87w"; depends=[ ]; };
NLPutils = derive { name="NLPutils"; version="0.0-2"; type="cran"; sha256="1ny1q4b4pd1pl6d3lgv9zfkrw5wjd6pvhwlahj82fr1z3nq46bwb"; depends=[NLP SnowballC qdap ]; };
NLRoot = derive { name="NLRoot"; version="1.0"; type="cran"; sha256="1x8mcdgqqrhyykr12bv4hl4wbh1zw2qgpnd2yrm68kb92iy95rh4"; depends=[ ]; };
NMF = derive { name="NMF"; version="0.20.5"; type="cran"; sha256="1j91vklzi4qjlix5sn9qh86dwx6vxnla2p4ag81apkr441jkvynr"; depends=[pkgmaker registry rngtools cluster stringr digest gridBase colorspace RColorBrewer foreach doParallel ggplot2 reshape2 ]; };
NMFN = derive { name="NMFN"; version="2.0"; type="cran"; sha256="0n5fxqwyvy4c1lr0glilcz1nmwqdc9krkqgqh3nlyv23djby9np5"; depends=[ ]; };
NMOF = derive { name="NMOF"; version="0.34-2"; type="cran"; sha256="1hqq0gypry614jfc8hcagwkf6xz6z98pb9hzkl9ygykv4rfs5bms"; depends=[ ]; };
NNTbiomarker = derive { name="NNTbiomarker"; version="0.28"; type="cran"; sha256="1y9lkn12a7p1qwi10pzzidhjgkzazn6lfflihnc46phf6yzgdrs6"; depends=[shiny xtable stringr ]; };
NOISeq = derive { name="NOISeq"; version="2.8.0"; type="bioc"; sha256="04qz721khji40lr3w8bjddxkvvyr85d2z094sj64ylfkjyxzdmhf"; depends=[Biobase ]; };
NORMT3 = derive { name="NORMT3"; version="1.0-3"; type="cran"; sha256="041s0qwmksy3c7j45n4hhqhq3rv2hncm2fi5srjpwf9fcj5wxypg"; depends=[ ]; };
NORRRM = derive { name="NORRRM"; version="1.0.0"; type="cran"; sha256="06bdd5m46c8bbgmr1xkqfw72mm38pafxsvwi9p8y7znzyd0i6ag3"; depends=[ggplot2 SDMTools ]; };
NORTARA = derive { name="NORTARA"; version="1.0.0"; type="cran"; sha256="1q4dmn5q939d920spmxxw08afacs3pzhr2gzwyqa5kn8xiz4ffg8"; depends=[corpcor Matrix ]; };
NPBayesImpute = derive { name="NPBayesImpute"; version="0.5"; type="cran"; sha256="0ym227hz6g51bfn218k1g377ci66j4i2sx9zmm5n62sg1dzj3xaj"; depends=[Rcpp Rcpp ]; };
NPC = derive { name="NPC"; version="1.0.0"; type="cran"; sha256="0cx1rqbzn1bmizixf86idqyxz29yip8aq55mbi6l7bfnqp1hq105"; depends=[permute dplyr coin matlab ]; };
NPCD = derive { name="NPCD"; version="1.0-8"; type="cran"; sha256="0wpyxcq2s97iy155sz4pihcgwk8wgk56s7cgszbkz2hl6cijjcbb"; depends=[BB R_oo R_methodsS3 ]; };
NPCirc = derive { name="NPCirc"; version="2.0.1"; type="cran"; sha256="1pyckjvf4vzns9hxnhnk7cm4abllmdj3f142pvjhnilyqwndqgyc"; depends=[circular misc3d movMF plotrix rgl shape ]; };
NPHMC = derive { name="NPHMC"; version="2.2"; type="cran"; sha256="000x9y00gfkaj5lf00a55b9qx15x05yp3g3nmp8slyzsnfv66p5d"; depends=[survival smcure ]; };
NPMLEcmprsk = derive { name="NPMLEcmprsk"; version="2.1"; type="cran"; sha256="1v15ylgflbdr03pgh55fan1l6mymd1d5n6h9jhbcqahjlcsxkwq3"; depends=[ ]; };
NPMPM = derive { name="NPMPM"; version="1.0"; type="cran"; sha256="14rjj48vfj4wv1na5v181jby016afx4ak1fs0f3g1fif4kbgbdx0"; depends=[ ]; };
NPMVCP = derive { name="NPMVCP"; version="1.1"; type="cran"; sha256="13jpm46abwziq8859jhl6hg1znk3ws1q7g4vlr2jyri3qa6h22dd"; depends=[ ]; };
NPS = derive { name="NPS"; version="1.1"; type="cran"; sha256="02idja149a2sj97sks4lhsaflpifyxi6n0rjlcq9993f84szfgsi"; depends=[ ]; };
NPsimex = derive { name="NPsimex"; version="0.2-1"; type="cran"; sha256="1k9i1f5ckvzdns8f5qnm2zq7qs3wsgzsnfwdz21zmhmi6d0pwchm"; depends=[ ]; };
NSA = derive { name="NSA"; version="0.0.32"; type="cran"; sha256="0lnimyx3fpnw9zfhqm7y3ssvbpmvbmhcqy6fp83862imiwpl8i5r"; depends=[R_methodsS3 MASS matrixStats R_oo R_utils aroma_core aroma_affymetrix DNAcopy ]; };
NSM3 = derive { name="NSM3"; version="1.3"; type="cran"; sha256="0vmv7r499ig2fq2gwx78jdrflk5i55jy3vgjh87ygwlyhwj9cm8p"; depends=[combinat MASS partitions survival agricolae ash binom BSDA coin epitools fANCOVA gtools Hmisc km_ci metafor nortest np quantreg Rfit SemiPar SuppDists waveslim ]; };
NSUM = derive { name="NSUM"; version="1.0"; type="cran"; sha256="1as4g3v7qlk9wxlpwhg293980jq9gy6qay77bbcrjf481gvkkbp6"; depends=[MASS MCMCpack ]; };
NScluster = derive { name="NScluster"; version="1.0.2"; type="cran"; sha256="1bvr44qx3bzbgsdpj70dfq9azkrsywkbvwvm3lwwgpn0spk8apld"; depends=[ ]; };
NTW = derive { name="NTW"; version="1.16.0"; type="bioc"; sha256="0wflyx2vdaffk56nbik5yrbp73yvalf44v7m5y9cndxywq9713iy"; depends=[mvtnorm ]; };
NanoStringNorm = derive { name="NanoStringNorm"; version="1.1.19"; type="cran"; sha256="0nrhsg32f6381snsxivcnznl752y9jmdscrcn1j8xylwmwc0r4hj"; depends=[gdata ]; };
NarrowPeaks = derive { name="NarrowPeaks"; version="1.10.0"; type="bioc"; sha256="0d1rmvzy1cd2ivlazr1fvls4jcp81j00dpxh7mnkzla2gbjspvac"; depends=[BiocGenerics S4Vectors IRanges GenomicRanges GenomeInfoDb fda CSAR ICSNP ]; };
NbClust = derive { name="NbClust"; version="3.0"; type="cran"; sha256="1vwb48zy6ln1ddpqmfngii1i80n8qmqyxnzdp6gbaq96lakl3w3c"; depends=[ ]; };
NeatMap = derive { name="NeatMap"; version="0.3.6.2"; type="cran"; sha256="186y06zrh87q6vixl2da2d6apvcj1zkk79c95k081zj5awmryr9b"; depends=[ggplot2 rgl ]; };
NestedCohort = derive { name="NestedCohort"; version="1.1-3"; type="cran"; sha256="10hsc6zik8sz2mp6ig3xr6z3bq0c6rlvqkn11pxny17a4n02wapp"; depends=[survival MASS ]; };
NetCluster = derive { name="NetCluster"; version="0.2"; type="cran"; sha256="0aby8kfniw07jap795cwk69z83p45q5rap73zp1qbmkm3qcb31g4"; depends=[sna ]; };
NetComp = derive { name="NetComp"; version="1.6"; type="cran"; sha256="11rxpdihn575diqfvc7yvxhlr2c19fig4v4a5c6jhqyfdsd60fsv"; depends=[gdata ]; };
NetData = derive { name="NetData"; version="0.3"; type="cran"; sha256="1jf05zwy0c6gmm7kvxlwvai61bz4wpsw7cl0h4i21ipzn1rqxmqj"; depends=[ ]; };
NetIndices = derive { name="NetIndices"; version="1.4.4"; type="cran"; sha256="0ydivbri8l8zkxi18ghj9h66915scyhca8i9mcyq4b06mjfigss8"; depends=[MASS ]; };
NetPathMiner = derive { name="NetPathMiner"; version="1.2.0"; type="bioc"; sha256="04bz4y8vvciqdhmmicj93igw71hzyxq6aak88qdj5ks7ihplllbm"; depends=[igraph ]; };
NetSAM = derive { name="NetSAM"; version="1.6.0"; type="bioc"; sha256="1gqazmm9arqv8kn0lfs12r1dl8w19mivfr682rqhcvizdpczij7s"; depends=[igraph seriation graph ]; };
NetSim = derive { name="NetSim"; version="0.9"; type="cran"; sha256="07h4qwz64k8zj8c2mx23cbnhg4rqrb4nfh20xw98kspz7cisdg6d"; depends=[Rcpp Rcpp ]; };
NeuralNetTools = derive { name="NeuralNetTools"; version="1.3.1"; type="cran"; sha256="0nk2rs1rfv1lp99kfmqfcwgli92pljzrf4dgxp5q3icgpyf88kqv"; depends=[ggplot2 neuralnet nnet reshape2 RSNNS scales ]; };
Newdistns = derive { name="Newdistns"; version="2.0"; type="cran"; sha256="1jgv9jl6pvsjgjsbjvmjg8qwjx4gsmp4kd27pbqxldp0qp0q9mjf"; depends=[AdequacyModel ]; };
NightDay = derive { name="NightDay"; version="1.0.1"; type="cran"; sha256="0vkpr2jwhgghiiiaiglaj1b9pz25fcsl628c9nsp9zyl67982wz1"; depends=[maps ]; };
Nippon = derive { name="Nippon"; version="0.5.3"; type="cran"; sha256="02m591aljlaxn95k7sl8gfsviv4ywqv9mrkjf6g19kfrc9pbgjqg"; depends=[maptools ]; };
NlsyLinks = derive { name="NlsyLinks"; version="1.302"; type="cran"; sha256="0m1qvrpdfwql4jdk3nbn80llq83wavimifw630gnazwmkgkcncai"; depends=[lavaan ]; };
NominalLogisticBiplot = derive { name="NominalLogisticBiplot"; version="0.2"; type="cran"; sha256="0m9442d9i78x57gdwyl3ckwp1m6j27cam774zkb358dw5nmwxbmz"; depends=[mirt gmodels MASS ]; };
NonpModelCheck = derive { name="NonpModelCheck"; version="1.0"; type="cran"; sha256="0mgbyp651jfqyfavpv12i9kwqf0cpk2mzh9m0b5k4n759710qv8f"; depends=[dr MASS ]; };
NormPsy = derive { name="NormPsy"; version="1.0.3"; type="cran"; sha256="0lp6b7hh36ipmsv395xk671f7sczlfz5f9x0h88b2q6zvgbk081v"; depends=[lcmm ]; };
NormalGamma = derive { name="NormalGamma"; version="1.1"; type="cran"; sha256="0r3hhfscif0sx9v8f450yf119gpvf3ilpb8n3ziy4v4qf2jlcfnk"; depends=[optimx histogram ]; };
NormalLaplace = derive { name="NormalLaplace"; version="0.2-0"; type="cran"; sha256="11z568zhb7jw9ghp6wlyf26ijm25crc5pqhzw71qgvva42nsmmwn"; depends=[DistributionUtils GeneralizedHyperbolic ]; };
NormqPCR = derive { name="NormqPCR"; version="1.12.0"; type="bioc"; sha256="0g4x33bjg35bxxw1024fsp6fbfrsj16sk5ihnghgwg927jdypmn2"; depends=[RColorBrewer Biobase ReadqPCR qpcR ]; };
Nozzle_R1 = derive { name="Nozzle.R1"; version="1.1-1"; type="cran"; sha256="05sjip4sz12mwd3jcbvk342p83kdmrd4l2jrh17p18w4l7w4nn0z"; depends=[ ]; };
NuPoP = derive { name="NuPoP"; version="1.16.0"; type="bioc"; sha256="065a63fy62gqsrnzxw26fch0gs3xgilcvbc7zhcp5klyndzalr30"; depends=[ ]; };
OAIHarvester = derive { name="OAIHarvester"; version="0.1-7"; type="cran"; sha256="0wcl71y8i4s4fxpb90xg71sj6819kgl3d4gff66dan8i6y8sxmyk"; depends=[XML RCurl ]; };
OCplus = derive { name="OCplus"; version="1.40.0"; type="bioc"; sha256="09g03mrzby4rv0xkb705camnhyqgmlg7p2xzcsac5ncci05ivhc3"; depends=[akima multtest ]; };
ODB = derive { name="ODB"; version="1.1.1"; type="cran"; sha256="1hha4rkbc2zh3karkqa0vn4v0nmcd7sljcymy1nh28bx1gx2ffgs"; depends=[DBI RJDBC ]; };
ODMconverter = derive { name="ODMconverter"; version="2.1"; type="cran"; sha256="03m15vck01s6jqcpm5fl7mipki4grgywlb9mksr0l8wygmn8zkxs"; depends=[XML xlsx ]; };
OIdata = derive { name="OIdata"; version="1.0"; type="cran"; sha256="078khxrszwnrww2h0ag153bf59fnyhirxy4m56ssgr2gmfahaymf"; depends=[RCurl maps RCurl maps ]; };
OIsurv = derive { name="OIsurv"; version="0.2"; type="cran"; sha256="148mpjj5navc1vrl72y87krn4lf3awnd32z3g4qqaia404w5w7p7"; depends=[survival KMsurv ]; };
OLIN = derive { name="OLIN"; version="1.44.0"; type="bioc"; sha256="0rah35s96slcddggs56cinvv8p764r8k09i5wgz7irk6q39v21rz"; depends=[locfit marray limma marray ]; };
OLINgui = derive { name="OLINgui"; version="1.40.0"; type="bioc"; sha256="052ngldrq80qjkxjfkb68d0g5xv29s02h4n56cqjnydkhjnyfc50"; depends=[OLIN marray OLIN tkWidgets widgetTools ]; };
OLScurve = derive { name="OLScurve"; version="0.2.0"; type="cran"; sha256="1zqapfwgwy9rxnbhmlgplkphw1bdia4cyi9q6iwcppw3rjw75f1n"; depends=[lattice ]; };
ONETr = derive { name="ONETr"; version="1.0.2"; type="cran"; sha256="1b0djffn4bx6drq5j87s15dwvnjmvraxs52y4dr6micvd9hifa9a"; depends=[XML RCurl ]; };
OOmisc = derive { name="OOmisc"; version="1.2"; type="cran"; sha256="09vaxn5czsgn6wpr27lka40kzd76jzqgqxavf26ms3m9kkdf83g4"; depends=[ ]; };
OPDOE = derive { name="OPDOE"; version="1.0-9"; type="cran"; sha256="0pf8rv5wydc8pl4x57g7bk2swjabaxdgijgsigjy5wihfcb48654"; depends=[gmp mvtnorm orthopolynom nlme crossdes polynom ]; };
OPE = derive { name="OPE"; version="0.7"; type="cran"; sha256="0ld3pr94ii1pmfk99qfwgria6ki2iz2hwmn7pj3cjwprv8jkcjji"; depends=[ ]; };
OPI = derive { name="OPI"; version="2.1"; type="cran"; sha256="1pzw5b4gwf1q98547cgq7b363fn72ll0zlvcahy56wc1ci5ny3dd"; depends=[ ]; };
ORCI = derive { name="ORCI"; version="1.1"; type="cran"; sha256="0xy5lvz2scz06fphjyhqbdhp4bizmv87a8xykp9dbgx8b4ssnqgz"; depends=[BiasedUrn BlakerCI PropCIs ]; };
ORCME = derive { name="ORCME"; version="2.0.1"; type="cran"; sha256="0wr4z19alyp2cvlpg4bs8sni6nrwnhk11bbr00ycqym39alr2wjw"; depends=[Iso ]; };
ORDER2PARENT = derive { name="ORDER2PARENT"; version="1.0"; type="cran"; sha256="04c80vk6z227w6qsnfls89ig4vqyiiymdarhq1pxa0gpr8j2ssx5"; depends=[Matrix ]; };
ORIClust = derive { name="ORIClust"; version="1.0-1"; type="cran"; sha256="1biddddyls2zsg71w4innxl0ckfb80q2j9pmd56wvbc0qnbm0w3q"; depends=[ ]; };
ORMDR = derive { name="ORMDR"; version="1.3-2"; type="cran"; sha256="0y7b2aja3zvsd6lm7jal9pabcfxv16r2wh0kyzjkdfanvvgk3wmm"; depends=[ ]; };
OSAT = derive { name="OSAT"; version="1.14.0"; type="bioc"; sha256="0mm67jd79slz8d0laswiljbvc6s4iii516wfpl9mlkrfrnyymr4l"; depends=[ ]; };
OTUbase = derive { name="OTUbase"; version="1.16.0"; type="bioc"; sha256="1a4ynx9lwkphgqg9s7m5x6vs9swk4pvfrq9a222ry9mx4019v240"; depends=[S4Vectors IRanges ShortRead Biobase vegan Biostrings ]; };
OUwie = derive { name="OUwie"; version="1.45"; type="cran"; sha256="1g1315g015pcnd7g8k0vngjg7f842nq8ixhmqnj64by4vsafliva"; depends=[ape nloptr numDeriv corpcor lattice phytools phangorn ]; };
Oarray = derive { name="Oarray"; version="1.4-5"; type="cran"; sha256="1w66vqxvqyrp2h6acnbg3xy7cp6j2dgvzmqqk564kvivbn40vyy4"; depends=[ ]; };
OceanView = derive { name="OceanView"; version="1.0.3"; type="cran"; sha256="0k281r358xg599n3h4avwbhnhgcfdawf36p8k3sxwv29292npkzv"; depends=[plot3D plot3Drgl rgl shape ]; };
Ohmage = derive { name="Ohmage"; version="2.11-4"; type="cran"; sha256="14pga59ikiywyl6xnfd2d8sy323vyn88q9sf101bcwp0s0qczwzg"; depends=[RCurl RJSONIO ]; };
OjaNP = derive { name="OjaNP"; version="0.9-8"; type="cran"; sha256="010l75irgj7nl8yq6crp8d00zjgpv9wg2maw99cj0frhqxvqzbfz"; depends=[ICS ICSNP ]; };
OligoSpecificitySystem = derive { name="OligoSpecificitySystem"; version="1.3"; type="cran"; sha256="17mspf1ph2ybv046zckykfdcbrsiz40hrs6ib5mpwkfnrvsp1w7l"; depends=[tkrplot ]; };
OmicCircos = derive { name="OmicCircos"; version="1.4.0"; type="bioc"; sha256="07kyi4ag39bnpalgv1p88hy6270q0l2y5w806p9p7j1y9n5w5bmc"; depends=[GenomicRanges ]; };
OmicKriging = derive { name="OmicKriging"; version="1.3"; type="cran"; sha256="1fj131684faj75jdipmsvb8s684x72is6zz79hwb5wszklk00ind"; depends=[doParallel ROCR irlba ]; };
OncoSimulR = derive { name="OncoSimulR"; version="1.0.0"; type="bioc"; sha256="1dy8xfmh61g678hihnzjgjc5p55y41n40hp2vygx1hi19sha5fm9"; depends=[Rcpp data_table graph Rgraphviz Rcpp ]; };
Oncotree = derive { name="Oncotree"; version="0.3.3"; type="cran"; sha256="147rc9ci66lxbb91ys2ig40sgmldi15p604yysrd4ccbxpbk2zwf"; depends=[boot ]; };
OneTwoSamples = derive { name="OneTwoSamples"; version="1.0-3"; type="cran"; sha256="0019rc2f4jmbm6sinkvalvjqwi822x78aiin88kg8qbbb5ml8l89"; depends=[ ]; };
OpasnetUtils = derive { name="OpasnetUtils"; version="1.1.0"; type="cran"; sha256="1a7j96pg0v8j527m0w48k8lxwb2ynrqq1y7140bi1ciq0466azx3"; depends=[rjson RCurl reshape2 triangle httpRequest digest xtable ggplot2 rgdal sp ]; };
OpenCL = derive { name="OpenCL"; version="0.1-3"; type="cran"; sha256="0f7vis0jcp0nh808xbzc73vj7kdcjb0qqzzsh3gvgamzbjfslch8"; depends=[ ]; };
OpenMPController = derive { name="OpenMPController"; version="0.1-2"; type="cran"; sha256="1cpsbjmqql0fsjc1xv323pfkhfr9vrcv5g4j3p1qc5zn4z9pq7r6"; depends=[ ]; };
OpenMx = derive { name="OpenMx"; version="2.2.2"; type="cran"; sha256="1llh9ffgwwbdlj221plbg0bbln02zba2sbaygxixgzml9djcqb73"; depends=[digest MASS RcppEigen StanHeaders BH ]; };
OpenRepGrid = derive { name="OpenRepGrid"; version="0.1.9"; type="cran"; sha256="1s40c2yfd4a4khs0ghlbzii94x8cidg851bivanplg2s51j5jrhk"; depends=[pvclust colorspace plyr stringr abind rgl GPArotation psych XML ]; };
OpenStreetMap = derive { name="OpenStreetMap"; version="0.3.1"; type="cran"; sha256="009xiqsbgqb3lba6msyzq7ncripmvpymxynkga8pqc8npv8g7fzb"; depends=[rJava raster rgdal rJava ]; };
OptHedging = derive { name="OptHedging"; version="1.0"; type="cran"; sha256="0g7qaf5abvbcqv2h1dciwn3gwpz084ryqjjk0yabdm4ym0y38ddm"; depends=[ ]; };
OptInterim = derive { name="OptInterim"; version="3.0.1"; type="cran"; sha256="1ks24yv5jjhlvscwjppad27iass59da1mls99hlif0li9mvkbvyk"; depends=[mvtnorm clinfun ]; };
OptimalCutpoints = derive { name="OptimalCutpoints"; version="1.1-3"; type="cran"; sha256="1vrbx62080r9sgk9ipjvdrqvikp4gwidp5gi5j92hspk7cp10amg"; depends=[ ]; };
OptionPricing = derive { name="OptionPricing"; version="0.1"; type="cran"; sha256="0j98h3fn29xfv7xyp7av459v56chw99pnvmsbqvrv4g77p60f5q2"; depends=[ ]; };
OrdFacReg = derive { name="OrdFacReg"; version="1.0.5"; type="cran"; sha256="1if6ghagj2196pc73ankfrcms0snlpibgfca1c6lhj96m1waahg2"; depends=[survival eha MASS ]; };
OrdLogReg = derive { name="OrdLogReg"; version="1.1"; type="cran"; sha256="18s75pmz1g3yac2rfl41kj8sfflq298qkijnvqlybgxpq98ickxx"; depends=[LogicReg ]; };
OrdMonReg = derive { name="OrdMonReg"; version="1.0.3"; type="cran"; sha256="1xca8pvvq79j484l2rmn4nva8ncx8z51g5diljikck231y8qjqaz"; depends=[ ]; };
OrdNor = derive { name="OrdNor"; version="1.0"; type="cran"; sha256="1n6c0d4r1w3n016lzk2i5yyvawk9pgmsbzymbbyq7gx8a80iv32h"; depends=[mvtnorm corpcor Matrix GenOrd ]; };
OrderedList = derive { name="OrderedList"; version="1.38.0"; type="bioc"; sha256="1zxz154jqcm39w05cc96kik7g7s1274bm24i7v137jrcgr21yih0"; depends=[Biobase twilight Biobase twilight ]; };
OrdinalLogisticBiplot = derive { name="OrdinalLogisticBiplot"; version="0.4"; type="cran"; sha256="1axn03yrw30r2j9ss5ig9sq857y37vhrr4a7px68jc2az8mng41j"; depends=[mirt MASS NominalLogisticBiplot ]; };
OrgMassSpecR = derive { name="OrgMassSpecR"; version="0.4-4"; type="cran"; sha256="046lr0piiy5w5lxjvyw7iqqclkghmc6zqymfypkw374gk73yrm76"; depends=[ ]; };
OrganismDbi = derive { name="OrganismDbi"; version="1.8.1"; type="bioc"; sha256="0j2d3gpp49nh0igzbwjkrccqyxnwdg2i4s4gch6hkbnyj2v3bdhs"; depends=[AnnotationDbi GenomicFeatures BiocGenerics graph RBGL AnnotationDbi ]; };
OutbreakTools = derive { name="OutbreakTools"; version="0.1-13"; type="cran"; sha256="0wwb43n0vv3ihpyr1g48nf81ml7vigvlsq316nzav528i1f7jh22"; depends=[ggplot2 network knitr RColorBrewer ape reshape2 sna plyr ggmap scales rjson networkDynamic RCurl ]; };
OutlierD = derive { name="OutlierD"; version="1.30.0"; type="bioc"; sha256="0xww3z8zjyypzrbgn0knlmpa0xg05clzwwihq5fxn7kj5db7nw46"; depends=[Biobase quantreg ]; };
OutlierDC = derive { name="OutlierDC"; version="0.3-0"; type="cran"; sha256="1vm3zx4qmj9l0ddfqbksm1qyqzzqrxf93gh4kj52h68zlsfxwv41"; depends=[survival quantreg Formula ]; };
OutlierDM = derive { name="OutlierDM"; version="1.1.1"; type="cran"; sha256="0n8iq464ryc3v4wms7cdka39870w5pg29z9v8gmdsp4d9cfsx9v4"; depends=[quantreg MatrixModels outliers pcaPP ]; };
OutrankingTools = derive { name="OutrankingTools"; version="1.0"; type="cran"; sha256="0z7pslkkinn7flc4xwjg0bsfswf8ad4jv9rmglaj3fmjcx9b6wgj"; depends=[igraph ]; };
P2C2M = derive { name="P2C2M"; version="0.6"; type="cran"; sha256="00m4dmvnvbjbxxqi9ai2zd33cwlsb7ghjbswz256w5iab4c0ls02"; depends=[ape apTreeshape ggplot2 rPython stringr ]; };
PAA = derive { name="PAA"; version="1.0.0"; type="bioc"; sha256="0zsr8gd61g9imi2ns1wzz8k3zhcqrgxa6671fc8mrr5zzdlj17pd"; depends=[Rcpp e1071 limma MASS mRMRe randomForest ROCR sva Rcpp ]; };
PADOG = derive { name="PADOG"; version="1.8.0"; type="bioc"; sha256="0cjbpq55zx8xd44fk02chfi2fn7m0z3kg9nn6vls4awb3p8ih3bk"; depends=[limma AnnotationDbi Biobase nlme GSA limma AnnotationDbi Biobase nlme ]; };
PAFit = derive { name="PAFit"; version="0.7.2"; type="cran"; sha256="047ajzb9xnhxqa9v5dggznix9rd9z66g0mzanzwqb8ds5f8gm8ls"; depends=[Rcpp Rcpp ]; };
PAGI = derive { name="PAGI"; version="1.0"; type="cran"; sha256="01j1dz5ihqslpwp9yidmhw86l112l7rfkswmf03vss872mpvyp3f"; depends=[igraph ]; };
PAGWAS = derive { name="PAGWAS"; version="1.0"; type="cran"; sha256="1zwq4b0bgsskzvlapffh30ys9y4wlcfwpjqw8m2i9zabib5knx9i"; depends=[lars doMC mnormt ]; };
PANDA = derive { name="PANDA"; version="0.9.9"; type="cran"; sha256="1sf3c49v4mb3mz2imqlqdbh1iab7bc2pxpi8bmgj2jld133555ip"; depends=[cluster ]; };
PANICr = derive { name="PANICr"; version="0.0.0.5"; type="cran"; sha256="049ga5iiymqczvy51y52yk7yvv9xy0ibr64ly8ciqig84d5f4jjr"; depends=[MCMCpack ]; };
PANR = derive { name="PANR"; version="1.12.1"; type="bioc"; sha256="0k9ysn0yi7daqklsjdxkiqqp2i5ha8bx20jxfyipva0x83gvx1l1"; depends=[igraph MASS pvclust ]; };
PAPi = derive { name="PAPi"; version="1.6.1"; type="bioc"; sha256="0i7gazmpg3izfc8ha7snk3f03d2na5rxd4jddbhy84ccgc44ddb1"; depends=[svDialogs KEGGREST ]; };
PAS = derive { name="PAS"; version="1.2"; type="cran"; sha256="0q5g9j8xb9fl7r8f1w5gk5h83ll5w1r6m2gq9ilw8w8s96pm4xd8"; depends=[glmnet ]; };
PASWR = derive { name="PASWR"; version="1.1"; type="cran"; sha256="1rxymnqvflypc6m62f5vw65l8x1m2yah7r11hhpmzdq2l2sg8fci"; depends=[e1071 MASS lattice ]; };
PASWR2 = derive { name="PASWR2"; version="1.0"; type="cran"; sha256="1bxczrfxj7nlx4r0b23a7sisinb4d5nd3pj68vigbgrhqyggk87x"; depends=[ggplot2 lattice e1071 ]; };
PAWL = derive { name="PAWL"; version="0.5"; type="cran"; sha256="1sx4g4qycba2j1fm0bvhz3hk6ghhdc37rz5zi1njqxrpmbnkqg04"; depends=[mvtnorm foreach reshape ggplot2 ]; };
PAnnBuilder = derive { name="PAnnBuilder"; version="1.30.1"; type="bioc"; sha256="03qxq3wnyknxavladqvpyci0xnwh72paq8wl2ci6vjr6xrwdlb6h"; depends=[RSQLite Biobase AnnotationDbi Biobase DBI RSQLite AnnotationDbi ]; };
PBC = derive { name="PBC"; version="1.2"; type="cran"; sha256="1z08y5sn6i439811c9mq3bs78zqlzzkz0srmv4wld68bywhmwqj4"; depends=[igraph Rcpp copula Rcpp ]; };
PBD = derive { name="PBD"; version="1.0"; type="cran"; sha256="1q8ijjmcwxi8f3wgggpj4y522wmxady7f60frhlvvixhzfn2iml1"; depends=[deSolve ade4 ape DDD ]; };
PBImisc = derive { name="PBImisc"; version="0.999"; type="cran"; sha256="0igwl78wj8w6jzmk5m8y9rf4j72qrcjyhb83kz44is72ddzsyss6"; depends=[MASS lme4 Matrix ]; };
PBSadmb = derive { name="PBSadmb"; version="0.68.104"; type="cran"; sha256="01akimdsp0bkvz3a5d75yyy3ph0mff85n8qsnr59fla5b5cm4qlj"; depends=[PBSmodelling ]; };
PBSddesolve = derive { name="PBSddesolve"; version="1.11.29"; type="cran"; sha256="13vprr66hh5d19xambpyw7k7fvqxb8mj5s9ba19ls7xgypw22cmm"; depends=[ ]; };
PBSmapping = derive { name="PBSmapping"; version="2.69.76"; type="cran"; sha256="1fci7mx5m3jqy92nqfaw5w5yd5rw6f0bk5kya1v0mmvf7j715kar"; depends=[ ]; };
PBSmodelling = derive { name="PBSmodelling"; version="2.67.266"; type="cran"; sha256="0ych9k20x0m71gkdrpwv5jnx6pfsk45wwsaaamy32cmnhd3y14sq"; depends=[XML ]; };
PCAmixdata = derive { name="PCAmixdata"; version="2.2"; type="cran"; sha256="0gbmiy2mhz8lgp0pcjby4ny8a28wlx1xrsa2lknzxn4d0m2csxjn"; depends=[ ]; };
PCDSpline = derive { name="PCDSpline"; version="1.0"; type="cran"; sha256="15kmvcwvwlsr1107n7mfajvf9b1kcslnhsdx0drjjhsvq193qrqa"; depends=[nleqslv matrixcalc ]; };
PCGSE = derive { name="PCGSE"; version="0.2"; type="cran"; sha256="19bpnn1b8ihmf52zh9g9pc38130np1ki8l7wf0j5myw2cnw6fna8"; depends=[safe RMTstat MASS ]; };
PCICt = derive { name="PCICt"; version="0.5-4"; type="cran"; sha256="1g17hxs00dlnb6p0av6l7j99qy00555f80nk1i1i1x87fszp3axa"; depends=[ ]; };
PCIT = derive { name="PCIT"; version="1.5-3"; type="cran"; sha256="0gi28i2qd09pkaja4w7abcl7sz43jnk98897vc2905fnk9nks65j"; depends=[ ]; };
PCPS = derive { name="PCPS"; version="1.0.2"; type="cran"; sha256="17gjj88zq123nxg4dh2w304sh9c1c4myad2g8x31wn1z7bmawv3y"; depends=[SYNCSA vegan ape picante phylobase plotrix ]; };
PCS = derive { name="PCS"; version="1.2"; type="cran"; sha256="0488h6s1yz6fwiqf88z2vgckn6i0kwls8cazmpw3wspnaqvl2n4s"; depends=[statmod multtest ]; };
PCovR = derive { name="PCovR"; version="2.6"; type="cran"; sha256="0b1bbf6namll2afxh61qz4xz4ipzipdnfhbcqlragmyj9pisaf45"; depends=[GPArotation ThreeWay MASS Matrix ]; };
PCpheno = derive { name="PCpheno"; version="1.28.0"; type="bioc"; sha256="14lf4jhbslx64bppfk5hxj7i2brdxzrw1hcyzdy69f1sb2wlgjcp"; depends=[Category ScISI SLGI ppiStats annotate AnnotationDbi Biobase Category graph GSEABase ScISI ]; };
PDQutils = derive { name="PDQutils"; version="0.1.1"; type="cran"; sha256="0klzh7ilgs02i0cvb5j6jd65dxyg2c3yk5rc82wcjn9ixhr8ks9b"; depends=[orthopolynom moments ]; };
PDSCE = derive { name="PDSCE"; version="1.2"; type="cran"; sha256="17lc6d8ly6jbvjijpzg45dvqrzrh5s1sp415nycazgpbg9ypwr2h"; depends=[ ]; };
PECA = derive { name="PECA"; version="1.2.0"; type="bioc"; sha256="096km1yla9cbpf90fiz75zz07nnm83lnfi95k73whyh8rs10wpn4"; depends=[limma affy genefilter preprocessCore ]; };
PEIP = derive { name="PEIP"; version="1.7"; type="cran"; sha256="1bagi1kr8vd3b3r524vrk747bqmd9insny1nxj8bdvdk0a9yr949"; depends=[bvls Matrix RSEIS pracma ]; };
PEMM = derive { name="PEMM"; version="1.0"; type="cran"; sha256="18dd9hsbdrnhrrff7gpdqrw2jv44j8lg0v3lkcdpbd4pppcaq84h"; depends=[ ]; };
PERregress = derive { name="PERregress"; version="1.0-8"; type="cran"; sha256="1rhridhfgvrz14h61psfyr5ll13fvxj4b9fwrnlnc6lyqi01wjlc"; depends=[ ]; };
PET = derive { name="PET"; version="0.4.9"; type="cran"; sha256="1ijg6mfh3xrc1gjh6a4nq64psk9yh16yc8nfp7c9837xbjigqq7f"; depends=[adimpro ]; };
PF = derive { name="PF"; version="9.5"; type="cran"; sha256="1y99brdabj78s5kxyv0136s40kaaj3zya9lk4qd0kqk83z2gdawp"; depends=[xtable RColorBrewer gdata ]; };
PGICA = derive { name="PGICA"; version="1.0"; type="cran"; sha256="0qxa5hw2s3mndjvk8lb82pcbyj1kbdclx4j4xa8jq0lcj180abi9"; depends=[fastICA ]; };
PGM2 = derive { name="PGM2"; version="1.0"; type="cran"; sha256="18azh6k271p9dvc23q402pv7wrilr1yk02vqqy6qjppnvq6jxahg"; depends=[ ]; };
PGRdup = derive { name="PGRdup"; version="0.2"; type="cran"; sha256="12vxdw4093xmmpcl6ars7h03f1a21gjl5p29r5d19hp68h4hchi1"; depends=[data_table igraph stringdist stringi ]; };
PGSEA = derive { name="PGSEA"; version="1.40.0"; type="bioc"; sha256="11z4hdfddwhjdp0nf7q9k390x63ig9y110c59y3fd04ylqpc6y0b"; depends=[AnnotationDbi annaffy Biobase ]; };
PHENIX = derive { name="PHENIX"; version="1.2"; type="cran"; sha256="0fnrx2xf6q9ng9pwfxbbbzvcf6kqj12byd81x0q0vfl85h1xddws"; depends=[ppcor SuppDists ]; };
PHYLOGR = derive { name="PHYLOGR"; version="1.0.8"; type="cran"; sha256="17lmjfbwf8j68zzzhdvppyjacdsmy4zmcfj0pcjsw5j6m361hvh6"; depends=[ ]; };
PHeval = derive { name="PHeval"; version="0.5.2"; type="cran"; sha256="1q0cyq7b8d42jgiw7ra9vjdjw1zcxpyg6wgb3zgygkmd744ifggp"; depends=[survival ]; };
PICS = derive { name="PICS"; version="2.10.0"; type="bioc"; sha256="0y3i4q2ydsc0q99iij9hcs4m7y27rvqw7z0hk21p4xary24z0xzj"; depends=[BiocGenerics IRanges GenomicRanges Rsamtools GenomicAlignments ]; };
PIGE = derive { name="PIGE"; version="0.9"; type="cran"; sha256="1x8ml25mm69dvlszm9p2ycph92nxcsgd52ydj7ha0dwrrpcv2law"; depends=[snowfall ARTP xtable survival ]; };
PIGShift = derive { name="PIGShift"; version="1.0.0"; type="cran"; sha256="15cgpi7j5cs4aqdq5cy7535x8ar916d9hd109kc01njrwxp1xr96"; depends=[ape mvtnorm ]; };
PING = derive { name="PING"; version="2.10.0"; type="bioc"; sha256="1b0vygpl3vs46frjxwjdbc7dg5bllvm0kdcyw642ay7c8shbfzk4"; depends=[chipseq IRanges GenomicRanges PICS Gviz fda BSgenome BiocGenerics ]; };
PIPS = derive { name="PIPS"; version="1.0.1"; type="cran"; sha256="1c5v3s6xys9p1q32k6mpsffhi9gwsq951rh12hs76dmak862yspc"; depends=[ ]; };
PK = derive { name="PK"; version="1.3-2"; type="cran"; sha256="0162ri9wlm9inryljal48av8yxb326na94kckkigsrklfxb3wkp2"; depends=[ ]; };
PKI = derive { name="PKI"; version="0.1-1"; type="cran"; sha256="1m4q43yq8ddig15k0j9yg9hq4yz3yplqp68zl3p9g2shkam60p6w"; depends=[base64enc ]; };
PKPDmodels = derive { name="PKPDmodels"; version="0.3.2"; type="cran"; sha256="1h893civ77ahbgjnc6kq3l7rszmqmx9dlxwavldigpq3r79vd86k"; depends=[ ]; };
PKfit = derive { name="PKfit"; version="1.2.5"; type="cran"; sha256="0kym2dwb4f53xmf8dq94jz0zmpaiv8pl956j1bs3h9nhhzlaj83y"; depends=[deSolve optimx minpack_lm ]; };
PKgraph = derive { name="PKgraph"; version="1.7"; type="cran"; sha256="0g36cdv5cblqx69j48irxjc5nlw2cl3p714mlsblnd3362z1brwn"; depends=[RGtk2 gWidgetsRGtk2 cairoDevice lattice rggobi ggplot2 proto RGtk2 gWidgetsRGtk2 ]; };
PKreport = derive { name="PKreport"; version="1.5"; type="cran"; sha256="16hss9migbxpnw5f9gcw1nlvb81iyji00ylx5wd6kdwhz0ids9wj"; depends=[lattice ggplot2 ]; };
PLIS = derive { name="PLIS"; version="1.1"; type="cran"; sha256="0b81s7677wglqvv1b5lx8k2iaks09kz0wrl07245a7j2pk9nxv7p"; depends=[ ]; };
PLPE = derive { name="PLPE"; version="1.26.0"; type="bioc"; sha256="0knww741zh3yb2wr9wnncw77q7iwgcw08wfwdjpg3z0gj8jx926g"; depends=[Biobase LPE MASS ]; };
PLRModels = derive { name="PLRModels"; version="1.1"; type="cran"; sha256="0dwnzfw7a1cxz9s00kxf19jmjsc8cy6cc9q2mjqf8z7690wrg7hb"; depends=[ ]; };
PLSbiplot1 = derive { name="PLSbiplot1"; version="0.1"; type="cran"; sha256="1l8d1k913ic0qwxvrrd447p5ni3mzc6v9lv45b7vqrpzkxdci6gy"; depends=[ ]; };
PLordprob = derive { name="PLordprob"; version="1.0"; type="cran"; sha256="156lvz6vfm68hm32l5nlhq15hfacdla627d6lf8l4g34lwzdh8k8"; depends=[mnormt ]; };
PMA = derive { name="PMA"; version="1.0.9"; type="cran"; sha256="11qwgw4sgzl3xhrm468bsza83h3mfn89157nfwnrassl7qr42xkq"; depends=[plyr impute ]; };
PMCMR = derive { name="PMCMR"; version="1.1"; type="cran"; sha256="0f3882rjyxlcr183qa9y22bxh8nqp307v065aiy61ii0kizj9f70"; depends=[ ]; };
PP = derive { name="PP"; version="0.5.3"; type="cran"; sha256="17y1v2536n7ap0kvllwkmndmdjf4wgwl171c053ph45krv37mscf"; depends=[Rcpp Rcpp ]; };
PPtree = derive { name="PPtree"; version="2.3.0"; type="cran"; sha256="002qjdx52r2h90wzrf2r3kz8fv3nwx08qbp909whn6r4pbdl532v"; depends=[MASS penalizedLDA ]; };
PPtreeViz = derive { name="PPtreeViz"; version="1.0.3"; type="cran"; sha256="0m0nw6kh8ybgdih2d10b8q8q0wknrbppad8nq8jmq85sm0xrrysj"; depends=[gridExtra ggplot2 Rcpp reshape2 Rcpp RcppArmadillo ]; };
PREDA = derive { name="PREDA"; version="1.12.0"; type="bioc"; sha256="0p42nkgxxv6bj6lvvbldb5yw1bxa0vclziyyvd560j1fvh8f8qna"; depends=[Biobase lokern multtest annotate ]; };
PRISMA = derive { name="PRISMA"; version="0.2-5"; type="cran"; sha256="06z4z1rbsk5a8kpbs6ymm0m02i8dwbmv783c3l2pn4q3pf6ncmd5"; depends=[Matrix gplots ggplot2 ]; };
PROFANCY = derive { name="PROFANCY"; version="1.0"; type="cran"; sha256="11a0fpsv1hy0djv36x2i2hv2j50ryy0x7g7nn7vv76m1sl6q6r4b"; depends=[Matrix lattice igraph ]; };
PROMISE = derive { name="PROMISE"; version="1.18.0"; type="bioc"; sha256="15b34cymhcpd3qlvg0rbfp478bq37f7z6y8b96f4y6wnf6a1il54"; depends=[Biobase GSEABase Biobase GSEABase ]; };
PROTOLIDAR = derive { name="PROTOLIDAR"; version="0.1"; type="cran"; sha256="0bz3071b0wlcvh40vl3dyiiixk5avsj6kjjnvlvx264i5g08rij4"; depends=[ ]; };
PROcess = derive { name="PROcess"; version="1.42.0"; type="bioc"; sha256="18gr05ws2nvq05jwk45fmck541r7qrlcf5v9wgkgwcbbyfqyjpyr"; depends=[Icens Icens ]; };
PRROC = derive { name="PRROC"; version="1.1"; type="cran"; sha256="1v35z9inzb6x42fil8z7kfcrnfif93cj8974mfbqhhx0f9vi476a"; depends=[ ]; };
PReMiuM = derive { name="PReMiuM"; version="3.1.0"; type="cran"; sha256="0k8fffsbbdknmv1vshb72mdh7qfdqkrrh41s0ld64ziwnmp3gz23"; depends=[Rcpp ggplot2 cluster plotrix gamlss_dist Rcpp RcppEigen BH ]; };
PResiduals = derive { name="PResiduals"; version="0.2-1"; type="cran"; sha256="0my5slprmswazsxgjvpw8hjr41aqxm6j1s2dga65fvpfv5qimsw6"; depends=[MASS Formula rms sandwich actuar ]; };
PSAboot = derive { name="PSAboot"; version="1.1"; type="cran"; sha256="176sbjr906xk2ycl8653k7nch2h7ryxfisdy178k51f55qpvv4h9"; depends=[ggplot2 PSAgraphics Matching MatchIt modeltools party psych reshape2 rpart TriMatch ]; };
PSAgraphics = derive { name="PSAgraphics"; version="2.1.1"; type="cran"; sha256="05c0k94dxddyrhsnhnd4jcv6fxbbv9vdkss2hvlf3m3xc6jbwvh9"; depends=[rpart ]; };
PSCBS = derive { name="PSCBS"; version="0.44.0"; type="cran"; sha256="1bpvqn2p8pw57dpwk1mr51rsiqirk5sywrycqwbazvjr7hkiqa3d"; depends=[R_methodsS3 R_oo R_utils R_cache matrixStats DNAcopy ]; };
PSEA = derive { name="PSEA"; version="1.0.0"; type="bioc"; sha256="1ncjdvp9qdx0xiqz7m3ri9jpdcj8p7760ngcdi7f6h4lnhs94d16"; depends=[Biobase MASS ]; };
PSICQUIC = derive { name="PSICQUIC"; version="1.4.5"; type="bioc"; sha256="1b17dazaw8i0v6srxv9llh1hhmh1wq3d63sajjmqwvrwpw5i69jl"; depends=[IRanges biomaRt BiocGenerics httr RCurl ]; };
PSM = derive { name="PSM"; version="0.8-10"; type="cran"; sha256="1s60fr85xn3ynpvsbc3nw7vgz6h6jxy3yii1w6jpkw3iwl4bgn84"; depends=[MASS numDeriv deSolve ucminf ]; };
PST = derive { name="PST"; version="0.86"; type="cran"; sha256="0m6v7j36v47zdqqd3lf05w6pk0f3wfs1kix1qfvy2gj8n41jjmxf"; depends=[TraMineR RColorBrewer ]; };
PTAk = derive { name="PTAk"; version="1.2-9"; type="cran"; sha256="1wbjak8dp53601z39kkpa4ysm264x32371rbgbzmyzx89ap2c0cq"; depends=[tensor ]; };
PTE = derive { name="PTE"; version="1.0"; type="cran"; sha256="10if2hh69yysi2y82m7is74hmzw2xpxijgb8bhy1d4g9n9lqidfs"; depends=[doParallel ]; };
PVAClone = derive { name="PVAClone"; version="0.1-2"; type="cran"; sha256="0afl2il5wdcwzpyhjkgq8iz16q1086c3ndr4cjlyspgbss9h5l24"; depends=[dcmle dclone ]; };
PVR = derive { name="PVR"; version="0.2.1"; type="cran"; sha256="1p87pj9g0qlc8ja6xdj2amny9pbkaqb34x2y9nkl1nj1pkwjq2s5"; depends=[ape splancs ]; };
PWMEnrich = derive { name="PWMEnrich"; version="4.2.0"; type="bioc"; sha256="1svpl0cawfzj9749jc7sl66spb455b5ja2n2bjcp9mwns8z4s92z"; depends=[BiocGenerics Biostrings seqLogo gdata evd ]; };
PairViz = derive { name="PairViz"; version="1.2.1"; type="cran"; sha256="0mjp5p6n5azbhrm2hvb9xyqjfhd49pw9ia8k70749yc96ws1qqc7"; depends=[TSP gtools graph ]; };
PairedData = derive { name="PairedData"; version="1.0.1"; type="cran"; sha256="025h5wjsh9c78bg6gmg6p6kvv2s6d5x7fzn3mp42mlybq0ry78p0"; depends=[MASS gld mvtnorm lattice ggplot2 ]; };
Paneldata = derive { name="Paneldata"; version="1.0"; type="cran"; sha256="00hk340x5d4mnpl3k0hy1nypgj55as2j7y2pgzfk3fpn3zls5zib"; depends=[ ]; };
ParDNAcopy = derive { name="ParDNAcopy"; version="2.0"; type="cran"; sha256="017xwznhfibi8kp0ifww02c0qcq0vxs06rjww4kcp2bvdmld8kc4"; depends=[DNAcopy ]; };
ParallelForest = derive { name="ParallelForest"; version="1.1.0"; type="cran"; sha256="1xa9lfgrvzv7bvv1aaabcfk4372p8x5gxgj463h5ggf9x177lj5j"; depends=[ ]; };
ParamHelpers = derive { name="ParamHelpers"; version="1.5"; type="cran"; sha256="1ywsc96gc252i6girr2ph674wfrzjfk96l2w8512rqy9bgimr0lr"; depends=[BBmisc checkmate ]; };
ParentOffspring = derive { name="ParentOffspring"; version="1.0"; type="cran"; sha256="117g8h0k65f2cjffigl8n4x37y41rr2kz33qn2awyi876nd3mh93"; depends=[ ]; };
ParetoPosStable = derive { name="ParetoPosStable"; version="1.0.3"; type="cran"; sha256="0f3f4wn33vw1y3cjcvlk44g8z6hjkv4ws535pkcz3lgb95fl4q0n"; depends=[ADGofTest lmom ]; };
PathNet = derive { name="PathNet"; version="1.6.0"; type="bioc"; sha256="0l16vaj3f4h5x0kf4njnblnrd6pmdpjya97pw48zgi85ws64473k"; depends=[ ]; };
PatternClass = derive { name="PatternClass"; version="1.5"; type="cran"; sha256="1paw39xm2rqjnc7pnbya7gyl160kzl56nys9g0y1sa6cqycy3y5x"; depends=[SDMTools ]; };
Pbase = derive { name="Pbase"; version="0.4.0"; type="bioc"; sha256="0cin9kkdmcyasaxpn8608k5j10hqp8lkmgjwymvdw4v508ych73k"; depends=[BiocGenerics Rcpp Gviz cleaver Biobase Biostrings IRanges S4Vectors mzID mzR MSnbase Pviz ]; };
Peaks = derive { name="Peaks"; version="0.2"; type="cran"; sha256="0a173p5cdm1jnm7bwsvjpxh4dccy593g02c4qjwky1cgzy5rvin2"; depends=[ ]; };
PearsonDS = derive { name="PearsonDS"; version="0.97"; type="cran"; sha256="0bsdj4zir12zkv8yhq1z6dqjzhkb9l0f88jrr4iyclns1pcqvrvi"; depends=[ ]; };
PearsonICA = derive { name="PearsonICA"; version="1.2-4"; type="cran"; sha256="0jkbqha1nb9pf72ffki47wymsdmd50smkdhvpzvanv4y2rmqfhvg"; depends=[ ]; };
PedCNV = derive { name="PedCNV"; version="0.1"; type="cran"; sha256="09qxcjzwdgzdkbj28rzmfv7k3q2qsiapnvx3m45a835r57h5gynp"; depends=[Rcpp RcppArmadillo ggplot2 Rcpp RcppArmadillo ]; };
PepPrep = derive { name="PepPrep"; version="1.1.0"; type="cran"; sha256="1s2xn05xry50l9kf1mj6yd1dpc7yp6g3d00960hswvhznb0a4l84"; depends=[biomaRt stringr ]; };
Peptides = derive { name="Peptides"; version="1.0.4"; type="cran"; sha256="0qpppbdsz7c3dw6l5m3sxggma4xxdx0vflwlxpa0d7wynqpsn3wn"; depends=[ ]; };
PerFit = derive { name="PerFit"; version="1.3.1"; type="cran"; sha256="0zmhafr5fk3z66cp46gasgcxcza2q02821sg8zcs0vk5k80md9a7"; depends=[ltm mirt fda Hmisc irtoys MASS Matrix ]; };
PerMallows = derive { name="PerMallows"; version="1.8"; type="cran"; sha256="1p0rnphhjc0rr1zpbff71mk75lnyph994k4p5whwn2fyfzi1pn0f"; depends=[Rcpp Rcpp ]; };
PerfMeas = derive { name="PerfMeas"; version="1.2.1"; type="cran"; sha256="1x7ancmb41zd1js24rx94plgbssyc71z2bvpic6mg34xjkwdjw93"; depends=[limma graph RBGL ]; };
PerformanceAnalytics = derive { name="PerformanceAnalytics"; version="1.4.3541"; type="cran"; sha256="1czchsccsbdfjw743j6rm101q2q01pggyl8zmlva213pwm86zb3v"; depends=[xts zoo ]; };
PermAlgo = derive { name="PermAlgo"; version="1.1"; type="cran"; sha256="16fhdgr4nza9yknsbwiv8pgljfwp8hhva0crs4dbfd0w4j97n5fp"; depends=[ ]; };
PhViD = derive { name="PhViD"; version="1.0.6"; type="cran"; sha256="04vh3892fwb8pn2wmsw5449al80z5sm6avi6b67shky942dasl17"; depends=[LBE MCMCpack ]; };
PharmPow = derive { name="PharmPow"; version="1.0"; type="cran"; sha256="0gabkd8p4zsig9p697lyk8m2jxb5abjk81rpzd5ih1yk1qanhsn5"; depends=[scatterplot3d ]; };
PhaseType = derive { name="PhaseType"; version="0.1.3"; type="cran"; sha256="092dqyqfaxj8qpwxcjb5cayhnq597rfjz1xb93ps4nrczycqs0l6"; depends=[coda ggplot2 reshape ]; };
PhenStat = derive { name="PhenStat"; version="2.0.1"; type="bioc"; sha256="1qpdcch32mg7rmjbklgq7bkc6hrw20dqanl7xkglzzf1wi19pmnn"; depends=[car nlme nortest vcd limma ]; };
PhyActBedRest = derive { name="PhyActBedRest"; version="1.0"; type="cran"; sha256="0fpg17fwap12da7xka8pnd1wk6rbmw3zl099588g2r05wq3425sx"; depends=[ ]; };
PhyloMeasures = derive { name="PhyloMeasures"; version="1.1"; type="cran"; sha256="1wxm9yiplasxhqxs3qxys46k1i7n459frxxh275abczafq46l8if"; depends=[ape ]; };
PhysicalActivity = derive { name="PhysicalActivity"; version="0.1-1"; type="cran"; sha256="1aqyip7psf3pdrxkpidfldkk9naihvnc7s3n6w6vvr9h1l5mpmvc"; depends=[ ]; };
PivotalR = derive { name="PivotalR"; version="0.1.17.45"; type="cran"; sha256="13rw7y2n2hnyj2lslkb78qhj05765k9snkgdhh4dfnlgnyb19kkw"; depends=[Matrix ]; };
PlayerRatings = derive { name="PlayerRatings"; version="1.0-0"; type="cran"; sha256="0hjb05bdha00ggcpp3n4f86dxjlhzmlpwgsbbx3mhyv3qq1g32ky"; depends=[ ]; };
PlotRegionHighlighter = derive { name="PlotRegionHighlighter"; version="1.0"; type="cran"; sha256="0n1nkfr3sdaq6f5p9kgx4slrsvhpdbax3rinrkfkb1vnjj4swj77"; depends=[ ]; };
PogromcyDanych = derive { name="PogromcyDanych"; version="1.5"; type="cran"; sha256="1m6sycca44h8kdf9cd67annw6dxxwiscidzfnjrzqmqa4v6n7rsg"; depends=[dplyr SmarterPoland ]; };
PoiClaClu = derive { name="PoiClaClu"; version="1.0.2"; type="cran"; sha256="1j593sc344h9iy7if1ppihx2qd73dv32d77d8ckac43i7b2lig24"; depends=[ ]; };
PoisBinNonNor = derive { name="PoisBinNonNor"; version="1.0"; type="cran"; sha256="0a2v5iwrglg4r6zj5qbbg66638kcf45mxw2gs3qv2zpnfkabadnq"; depends=[BB corpcor Matrix mvtnorm ]; };
PoisBinOrd = derive { name="PoisBinOrd"; version="1.1"; type="cran"; sha256="151qqxd2rgh6jxzpclxxa51apiif77j122r2w23bdijkb85sqy9z"; depends=[corpcor GenOrd Matrix mvtnorm ]; };
PoisBinOrdNonNor = derive { name="PoisBinOrdNonNor"; version="1.0"; type="cran"; sha256="1x41mwvdria48cjr3dyq4d0l8v8kp3v9aayfl6jfxy6dhjwdg4vz"; depends=[Matrix corpcor MASS GenOrd BB ]; };
PoisNonNor = derive { name="PoisNonNor"; version="1.0"; type="cran"; sha256="1i00knyv5m6p9rllkc440cg2agzs36am5b5w9n90506nq36xp8qm"; depends=[BB corpcor MASS Matrix ]; };
PoisNor = derive { name="PoisNor"; version="1.0"; type="cran"; sha256="147ma6qg6nwxzp022jm5mpijhg3jz489qclr9g2mli5mhgm31f8j"; depends=[mvtnorm corpcor Matrix ]; };
PoissonSeq = derive { name="PoissonSeq"; version="1.1.2"; type="cran"; sha256="1hhx0gv06cp6hm6h36mqy411qn9x15y45crpzbyf8crfs85c6gbg"; depends=[combinat ]; };
PolyPatEx = derive { name="PolyPatEx"; version="0.9"; type="cran"; sha256="1y3jsy095kfp9ycjnj467s1y5abba7jkm83x2cajp5g2jdgp7cf6"; depends=[gtools ]; };
Polyfit = derive { name="Polyfit"; version="1.0.0"; type="bioc"; sha256="0dg48simy02fhmk49vinqn7x9cl83akr78s0zcs7v1v0ggv642qa"; depends=[DESeq ]; };
PolynomF = derive { name="PolynomF"; version="0.94"; type="cran"; sha256="006ds50ivq91v2jyhgpm5rfaipxbzsnljrki6fjplcw07g0frz71"; depends=[ ]; };
Pomic = derive { name="Pomic"; version="1.0.2"; type="cran"; sha256="1i3zsz7gc4n4vid3yi3srrv04qk1678wqyyw303pfibiyfd4m80q"; depends=[ ]; };
PopED = derive { name="PopED"; version="0.2.0"; type="cran"; sha256="00qbwabzjb4ns9y9a4gg73zxpx02xcycbm19bdk9z1mv06fkg9dj"; depends=[ggplot2 MASS mvtnorm nlme dplyr codetools ]; };
PopGenKit = derive { name="PopGenKit"; version="1.0"; type="cran"; sha256="0l4mbm0cyppgvcw2cbimrv29aiciyj00k8wfwcj5zr8sh7fgfhs4"; depends=[ ]; };
PopGenReport = derive { name="PopGenReport"; version="2.1"; type="cran"; sha256="040h7cvnh1xqlbsyg1lkfiz88421myr47r63v466bxidwb17bqg2"; depends=[knitr adegenet raster lattice RgoogleMaps gap calibrate xtable plyr dismo reshape ggplot2 R_utils ade4 pegas genetics rgdal gdistance vegan sp mmod GGally ]; };
PopGenome = derive { name="PopGenome"; version="2.1.6"; type="cran"; sha256="1wk5k5f80l7k6haiaikhgaqn67q5n7gm632i3yz3frj1ph7bwjb7"; depends=[ff ]; };
PopVar = derive { name="PopVar"; version="1.1"; type="cran"; sha256="1125yynxdg13r84wzbm2h50yqhw1if0zrkaqlcjvmavymmx0vln2"; depends=[qtl rrBLUP ]; };
PortRisk = derive { name="PortRisk"; version="1.0"; type="cran"; sha256="0vyzvi56lmdlhxpbxcxcfqa8271jv2l45w7x1kzzwl6q0wm4bjln"; depends=[zoo ]; };
PortfolioAnalytics = derive { name="PortfolioAnalytics"; version="1.0.3636"; type="cran"; sha256="0xva3ff8lz05f1jvx8hgn8rpgr658fjhf3xyh9ga1r7dii13ld50"; depends=[zoo xts foreach PerformanceAnalytics ]; };
PottsUtils = derive { name="PottsUtils"; version="0.3-2"; type="cran"; sha256="05ds0a7jq63zxr3jh66a0df0idzhis76qv6inydsjk2majadj3zv"; depends=[miscF ]; };
PoweR = derive { name="PoweR"; version="1.0.4"; type="cran"; sha256="00y0dvrsbvz8mr8mdw7fk17s5dfgm0f641qg96039y6g3hk2rn77"; depends=[Rcpp Rcpp RcppArmadillo ]; };
Power2Stage = derive { name="Power2Stage"; version="0.3-1"; type="cran"; sha256="0a5llzbhl6s71bh21ka2x50pjissl9gg7f5sskailzcmi60yz2zk"; depends=[PowerTOST ]; };
PowerTOST = derive { name="PowerTOST"; version="1.2-06"; type="cran"; sha256="1amzc0229cwydvnbw59aah52krswdx4k20n6i23vqimmxb26kc64"; depends=[mvtnorm ]; };
PracTools = derive { name="PracTools"; version="0.1"; type="cran"; sha256="0d8m326p41xqr4ndizp5x6qq5h55wgc7yinb6jsxi4xhfd2kiwq5"; depends=[ ]; };
PredictABEL = derive { name="PredictABEL"; version="1.2-2"; type="cran"; sha256="08c7j2in1wlas6nmy44s08cq86h5fizqbhsnq312dllqdzmb2h9s"; depends=[Hmisc ROCR epitools PBSmodelling ]; };
PredictiveRegression = derive { name="PredictiveRegression"; version="0.1-4"; type="cran"; sha256="15vkisj3q4hinc3d537s8inhj3wk62q67qhy050xmp9j563ainmd"; depends=[ ]; };
PresenceAbsence = derive { name="PresenceAbsence"; version="1.1.9"; type="cran"; sha256="17qn4ggkr5aqml45nkihj1j35y479ywkm1xcfkb2g8ky66jb0c0s"; depends=[ ]; };
PrevMap = derive { name="PrevMap"; version="1.1.4"; type="cran"; sha256="1m5a71s6j6x4kmqij1v7wikblk0a0l9lbskrj6q2znwj0hnbk1wy"; depends=[geoR maxLik raster pdist splancs ]; };
PrivateLR = derive { name="PrivateLR"; version="1.2-21"; type="cran"; sha256="1jwq8f0dnngj8sfbmcmxy34nkkq6yjw0mq3w1f8rasz67v3bwzp3"; depends=[ ]; };
ProCoNA = derive { name="ProCoNA"; version="1.4.1"; type="bioc"; sha256="1llkls9wbjmngz15pip92xpn2x66vhy5wl5qbc3zw44vnx2352lg"; depends=[WGCNA MSnbase flashClust BiocGenerics GOstats ]; };
ProDenICA = derive { name="ProDenICA"; version="1.0"; type="cran"; sha256="04gnsnd0xzw3bfbssdp06bar0lk305ry2c97pmwxgiz3ay88dfsj"; depends=[gam ]; };
ProbForecastGOP = derive { name="ProbForecastGOP"; version="1.3.2"; type="cran"; sha256="0fnw3g19lx4vs8vmn4qdirvybkiy2cxkhwkn9qa3phz45iixnvx4"; depends=[RandomFields fields ]; };
ProfessR = derive { name="ProfessR"; version="2.3"; type="cran"; sha256="1y88as4xjvdm2v2ms5l7c6ziq7sll6qkrpgzdd4xnbcjx7c0g9w8"; depends=[RPMG ]; };
ProfileLikelihood = derive { name="ProfileLikelihood"; version="1.1"; type="cran"; sha256="16cdp1nimhg1sd2x0qbffm7clgk54p0838y688z8lnsrjaggmb0x"; depends=[nlme MASS ]; };
ProgGUIinR = derive { name="ProgGUIinR"; version="0.0-4"; type="cran"; sha256="0srhk42ssx4i096sbs4jacqjsc1ffqjxjgvpplzshlqaby1h3795"; depends=[ggplot2 svMisc MASS ]; };
ProjectTemplate = derive { name="ProjectTemplate"; version="0.6"; type="cran"; sha256="0ijsy49gghnki5l63vg5l2awy57kbxbih618j5i5lxs44g15sa5v"; depends=[ ]; };
PropCIs = derive { name="PropCIs"; version="0.2-5"; type="cran"; sha256="0wnc5h4390w4rglr7gjh6827f5r7gdhajx1iwp5fggdlm808hgq7"; depends=[ ]; };
PropClust = derive { name="PropClust"; version="1.4-2"; type="cran"; sha256="13ac895i7ljayyqcjjmwvwar6wf1j0qssazcb5nlz8rw155qwavs"; depends=[flashClust dynamicTreeCut ]; };
PropScrRand = derive { name="PropScrRand"; version="1.1"; type="cran"; sha256="0cj62dzg4zm8d1g8h7qmviiwm93cwplppbi0p674fmmf1wy84v9s"; depends=[ ]; };
PsumtSim = derive { name="PsumtSim"; version="0.4"; type="cran"; sha256="0079kb1bgsxs4cwmn33rbbk2jgq39rdjfgz9k9hc64iyzz0i6na3"; depends=[EffectsRelBaseline boot ]; };
PtProcess = derive { name="PtProcess"; version="3.3-9"; type="cran"; sha256="1pgxi6085l6wwcn354rm8zkrm7nvjmyad6627fh5561y9ksws08k"; depends=[ ]; };
PubBias = derive { name="PubBias"; version="1.0"; type="cran"; sha256="0dr5dhfx57knrs05pbx9ngg4k2937n8gjzsgd0jfqd8dfxhy051k"; depends=[rmeta R_utils ]; };
PubMedWordcloud = derive { name="PubMedWordcloud"; version="0.3.2"; type="cran"; sha256="1xn4ygpvj6pm548yj5kjh2l8n59p2caihfpbkykvbkzgf7hq8p00"; depends=[XML stringr RCurl wordcloud tm RColorBrewer ]; };
PurBayes = derive { name="PurBayes"; version="1.3"; type="cran"; sha256="0nbm4cyrwfbwwbjbjkylr86cshaqbvbif6dkp4fag8kbcgyyx5qh"; depends=[rjags ]; };
Pviz = derive { name="Pviz"; version="1.0.0"; type="bioc"; sha256="0chiz5rfqpq90d63jbys9884jxhk5i9vb0ag4n41x1bgl65wdskd"; depends=[Gviz biovizBase Biostrings GenomicRanges IRanges data_table ]; };
PwrGSD = derive { name="PwrGSD"; version="2.000"; type="cran"; sha256="0qxvws9mfrnqw5s24qhqk6cbffjm13z7awyxdmnilazghpiq1p7s"; depends=[survival ]; };
QCA = derive { name="QCA"; version="1.1-4"; type="cran"; sha256="0wg2yfg61bmcxmkxvm9zjrnz4766f176y4gyqvfp5hsp9pp0h2lm"; depends=[lpSolve ]; };
QCA3 = derive { name="QCA3"; version="0.0-7"; type="cran"; sha256="0i9i2i633sjnzsywq51r2l7fkbd4ip217hp0vnkj78sfl7zf1270"; depends=[lpSolveAPI ]; };
QCAGUI = derive { name="QCAGUI"; version="1.9-6"; type="cran"; sha256="020ngni02j2w2ylhyidimm51d426pym2g1hg7gnpb7aplxx67n6x"; depends=[abind QCA ]; };
QCAtools = derive { name="QCAtools"; version="0.1"; type="cran"; sha256="1fcssxpyw0kfm6xgihkv4qxqmg628ahfr1bk36b9di9d29w6vgn9"; depends=[stringr QCA ggplot2 directlabels ]; };
QCGWAS = derive { name="QCGWAS"; version="1.0-8"; type="cran"; sha256="1wn1kddgfmqv326pihnavbgsbd2yxrlq5s2xgi6kbprssxvj8bk1"; depends=[ ]; };
QDNAseq = derive { name="QDNAseq"; version="1.2.4"; type="bioc"; sha256="04arnk1qvad0mh4vz7z1akddw44xjz7v761366xvww5zkjq1lx0w"; depends=[matrixStats R_utils Biobase CGHbase CGHcall DNAcopy Rsamtools ]; };
QRM = derive { name="QRM"; version="0.4-10"; type="cran"; sha256="1fkxjqyb9yqki4qwk393ra66wg5dnbr5b5sgypm8wk973crbhcj0"; depends=[gsl Matrix mvtnorm numDeriv timeSeries Rcpp mgcv Rcpp ]; };
QSARdata = derive { name="QSARdata"; version="1.3"; type="cran"; sha256="0dhldnh0jzzb4assycc0l14s45ymvha48w04jbnr34lrwgr9krh4"; depends=[ ]; };
QTLRel = derive { name="QTLRel"; version="0.2-14"; type="cran"; sha256="05x56a8fjr6xk38dphdzh77y520cr6zykjp3qlx27drk9s5z06cs"; depends=[gdata ]; };
QUALIFIER = derive { name="QUALIFIER"; version="1.10.0"; type="bioc"; sha256="00i06qcqf1ywrzg48cs1f7fjwmkb9y8bysbi9m0kn6mqg0vd98l3"; depends=[flowCore flowViz ncdfFlow flowWorkspace data_table reshape hwriter lattice flowCore flowViz flowWorkspace latticeExtra Biobase XML ]; };
QUIC = derive { name="QUIC"; version="1.1"; type="cran"; sha256="021bp9xbaih60qmss015ycblbv6d1dvb1z89y93zpqqnc2qhpv3c"; depends=[ ]; };
QZ = derive { name="QZ"; version="0.1-4"; type="cran"; sha256="1k657i1rf6ayavn0lgfvlh8am3kzypgb1jhf2by147gv103izkrz"; depends=[ ]; };
QoLR = derive { name="QoLR"; version="1.0"; type="cran"; sha256="1ah6x1fcs4l571jvgm0c257cgxhhpkzfhqimwbb9j7xbz3h55lp3"; depends=[survival zoo ]; };
QuACN = derive { name="QuACN"; version="1.8.0"; type="cran"; sha256="1597blp8gqc5djvbgpfzi8wamvy0x50wh5amxj9cy99qa0jlglxi"; depends=[graph RBGL combinat igraph ]; };
QualInt = derive { name="QualInt"; version="1.0.0"; type="cran"; sha256="1ms96m3nz54848gm9kdcydnk5kn2i8p1rgl2dwn7cqcqblfvsr4j"; depends=[survival ggplot2 ]; };
Quandl = derive { name="Quandl"; version="2.6.0"; type="cran"; sha256="1mz39sj7dxfh9p5kdq7bxlifbg9izqz04l3ilnfchva7qq1ij01q"; depends=[xts httr zoo ]; };
QuantPsyc = derive { name="QuantPsyc"; version="1.5"; type="cran"; sha256="1i9bh88r8zxndzjqsj14qw64gnvm5a9kvhjhzk3qsrvl3qzjgh93"; depends=[boot MASS ]; };
QuantifQuantile = derive { name="QuantifQuantile"; version="2.1"; type="cran"; sha256="1d3dcpri8d98mn2c0nfipp1pdr67a8h35p0y7bdil6il71h4qldm"; depends=[rgl ]; };
QuasR = derive { name="QuasR"; version="1.6.2"; type="bioc"; sha256="02jgxh73pyl5zmzbaj65a2bsmfw9csyqlkmxqxnh63g1c20b6xbl"; depends=[GenomicRanges Rbowtie zlibbioc BiocGenerics S4Vectors IRanges BiocInstaller Biobase Biostrings GenomicRanges BSgenome Rsamtools GenomicFeatures ShortRead GenomicAlignments Rsamtools ]; };
QuasiSeq = derive { name="QuasiSeq"; version="1.0-8"; type="cran"; sha256="113pxmvwwn331g5dcv2zwsvvi5jgc1v41f38sw9gms06i8x3a7q6"; depends=[edgeR mgcv pracma ]; };
Quor = derive { name="Quor"; version="0.1"; type="cran"; sha256="1ncl4pj472m881fqndcm6jzn4jkwbnzpc639c9vy5mxa4z569i1g"; depends=[combinat ]; };
R_cache = derive { name="R.cache"; version="0.10.0"; type="cran"; sha256="0y8q3w9z9cyzsg60x95kkc81ksc2d5vpdaqg5njq5bgjyw7yjqvs"; depends=[R_methodsS3 R_oo R_utils ]; };
R_devices = derive { name="R.devices"; version="2.13.0"; type="cran"; sha256="1ys4sxns2y5cgqb18scclsv99jfkyy3l9mq0jcnh76c48gpzaisp"; depends=[R_methodsS3 R_oo R_utils base64enc ]; };
R_filesets = derive { name="R.filesets"; version="2.7.1"; type="cran"; sha256="0awvjqkk5h8wzbdgn255m3gy3w5dsnlqp4wj7gzqgqm5mwg4jdyh"; depends=[R_oo R_methodsS3 R_utils R_cache digest ]; };
R_huge = derive { name="R.huge"; version="0.9.0"; type="cran"; sha256="13p558qalv60pgr24nsm6mi92ryj65rsbqa6pgdwy0snjqx12bgi"; depends=[R_methodsS3 R_oo R_utils ]; };
R_matlab = derive { name="R.matlab"; version="3.2.0"; type="cran"; sha256="1c87m6pv62ciqwpmsp8l7rkixcv04s9nkdn4yjbgyqvcslfaw26m"; depends=[R_methodsS3 R_oo R_utils ]; };
R_methodsS3 = derive { name="R.methodsS3"; version="1.7.0"; type="cran"; sha256="1dg4bbrwr8jcsqisjrrwxs942mrjq72zw8yvl2br4djdm0md8zz5"; depends=[ ]; };
R_oo = derive { name="R.oo"; version="1.19.0"; type="cran"; sha256="15rm1qb9a212bqazhcpk7m48hcp7jq8rh4yhd9c6zfyvdqszfmsb"; depends=[R_methodsS3 ]; };
R_rsp = derive { name="R.rsp"; version="0.20.0"; type="cran"; sha256="06vq9qq5hdz3hqc99q82622mab6ix7jwap20h4za6ap6gnwqs0fv"; depends=[R_methodsS3 R_oo R_utils R_cache ]; };
R_utils = derive { name="R.utils"; version="2.0.2"; type="cran"; sha256="1bqykygqbgx2wwqypvgj9siyiqa77cbchjnqw0qgg1rg8q2ldw65"; depends=[R_oo R_methodsS3 ]; };
R0 = derive { name="R0"; version="1.2-6"; type="cran"; sha256="1yvcgchxlj7hkgqkw6g8pxnracxkld1grgykkcr6wbhminbylqv8"; depends=[MASS ]; };
R1magic = derive { name="R1magic"; version="0.3.2"; type="cran"; sha256="1xfldr5y7pfdi6qljjvckknsv2wi9rnzwmqxkpgnyc96md2fvwjr"; depends=[ ]; };
R2BayesX = derive { name="R2BayesX"; version="1.0-0"; type="cran"; sha256="1p60n14gaqciskzah5haskflpms1g5lh4n57653yysa7fvmfgdhw"; depends=[BayesXsrc colorspace mgcv ]; };
R2Cuba = derive { name="R2Cuba"; version="1.0-11"; type="cran"; sha256="1kgcxqn83yskh0dv6vyz66d0z32qy55par36jj987qglpl25zmax"; depends=[ ]; };
R2G2 = derive { name="R2G2"; version="1.0-2"; type="cran"; sha256="05d5vybvsi4pyr099916nk1l8sqszs9gaj2vhsx1jxxks8981na7"; depends=[ ]; };
R2GUESS = derive { name="R2GUESS"; version="1.6"; type="cran"; sha256="1lh73zjch2jaspas065mkcsq13v6s323k4wdhvkydmvyhlgvlpcl"; depends=[fields MCMCpack mixOmics mvtnorm snowfall ]; };
R2HTML = derive { name="R2HTML"; version="2.3.1"; type="cran"; sha256="01mycvmz4xd1729kkb8nv5cl30v3qy3k4fmrlr2m1112hf5cmp59"; depends=[ ]; };
R2MLwiN = derive { name="R2MLwiN"; version="0.8-1"; type="cran"; sha256="0gkp5jvvbf9rppxirs1s7vr5nbfkrlykaph3lv20xq8cc8nz9zzx"; depends=[lattice coda Matrix foreign rbugs digest ]; };
R2OpenBUGS = derive { name="R2OpenBUGS"; version="3.2-3.1"; type="cran"; sha256="1nnyfhpqgx6wd4n039c4d42png80b2xcwalyj08bmq0cgl32cjgk"; depends=[coda boot ]; };
R2STATS = derive { name="R2STATS"; version="0.68-38"; type="cran"; sha256="1v8mvkvs4fjch0dpjidr51jk6ynnw82zhhylyccyrad9f775j2if"; depends=[proto Matrix lattice lme4 cairoDevice gWidgets gWidgetsRGtk2 RGtk2Extras MASS latticeExtra statmod ]; };
R2SWF = derive { name="R2SWF"; version="0.9"; type="cran"; sha256="0c3lkmm8wgpix3fv7dxql6zpklwbcsv1y30r26yws12fnavw4y1k"; depends=[sysfonts ]; };
R2WinBUGS = derive { name="R2WinBUGS"; version="2.1-19"; type="cran"; sha256="03bvxv46lhhnbfjq3w5ig50icncwn1bdq7lsh6w1szdk90ah2zgh"; depends=[coda boot ]; };
R2admb = derive { name="R2admb"; version="0.7.13"; type="cran"; sha256="0sjli498pz1vk5wmw65mca08mramwhzlfli2aih15xj7qzvp0nky"; depends=[coda lattice ]; };
R2jags = derive { name="R2jags"; version="0.5-6"; type="cran"; sha256="0zknl9qrypp96qz6rx7bkxg7bslvsnlhrgh749q4q566fz944n1g"; depends=[rjags abind coda R2WinBUGS ]; };
R330 = derive { name="R330"; version="1.0"; type="cran"; sha256="01sprsg7kph62abhymm8zfqr9bd6dhihrfxzgr4pzi5wj3h80bjm"; depends=[s20x leaps rgl lattice ]; };
R453Plus1Toolbox = derive { name="R453Plus1Toolbox"; version="1.16.0"; type="bioc"; sha256="1xb3jmcb6jkxg0w3i4zaqbydnim5im6l9v54kmcysknw2b7y3sxf"; depends=[Biobase Biostrings GenomicRanges BiocGenerics biomaRt BSgenome IRanges XVector R2HTML Rsamtools ShortRead VariantAnnotation xtable TeachingDemos ]; };
R4CDISC = derive { name="R4CDISC"; version="0.3"; type="cran"; sha256="0443mzkhsbrvsl7vawfpabsdqbqr9yjyyhsw1y07yncy55ylc2v5"; depends=[XML ]; };
R4CouchDB = derive { name="R4CouchDB"; version="0.7.1"; type="cran"; sha256="08s999m1kfjzabng41d5fpkag7nrdbricnw7m4jvj1ssqfnil2hj"; depends=[bitops RCurl RJSONIO ]; };
R4dfp = derive { name="R4dfp"; version="0.2-4"; type="cran"; sha256="02crzjphlq4hi2crh9lh8l0acmc1rgb3wr1x8sn56cwhq4xzqzcb"; depends=[ ]; };
R6 = derive { name="R6"; version="2.0.1"; type="cran"; sha256="0ngm3hl0q3aj067q6q0iqh729z8jx3ydvasj1jw9qrr7bzjh1jn5"; depends=[ ]; };
RAD = derive { name="RAD"; version="0.3"; type="cran"; sha256="0nmgsaykxavq2bskq5x0jvsxzsf4w2gqc0z80a59376li4vs9lpj"; depends=[mvtnorm MASS ]; };
RADami = derive { name="RADami"; version="1.0-3"; type="cran"; sha256="0rg07dsh2rlldajcj0gq5sgsl1i3qa28bsrmq88xcljg5hnr4iqn"; depends=[ape geiger Biostrings phangorn ]; };
RAM = derive { name="RAM"; version="1.2.0"; type="cran"; sha256="1xf296a2xqv9nq3m5lswnbfy023s6dp0yv8y0hr8xq0mw9mym3v3"; depends=[vegan ggplot2 gridExtra RColorBrewer gplots plyr reshape2 scales labdsv ggmap permute VennDiagram data_table FD MASS RgoogleMaps ape lattice reshape ]; };
RAMP = derive { name="RAMP"; version="1.0"; type="cran"; sha256="18cz8gvb49j1hic71dzfcl17hz5gjdcabqvq84yr1h7iqkrq95cq"; depends=[ ]; };
RAMpath = derive { name="RAMpath"; version="0.3.8"; type="cran"; sha256="1p1l6iirb314n5246kyyz0r3ja4v05xb5a6aq9k26wsb5m42x85k"; depends=[lavaan ellipse ]; };
RANN = derive { name="RANN"; version="2.5"; type="cran"; sha256="007cgqg9bybg2zlljbv5m6cmlm3r6i251018rpgjcn0xnm9sjsj7"; depends=[ ]; };
RANN_L1 = derive { name="RANN.L1"; version="2.5"; type="cran"; sha256="0sjf92hdw9jczvq1wl5syckhvik7wv0k9vrrgw4nnnsabc25v9pf"; depends=[ ]; };
RAP = derive { name="RAP"; version="1.1"; type="cran"; sha256="18dclijs72p6gxawpg8hk7n512ah4by5jfg2jnrp8mz79ajmdgir"; depends=[ ]; };
RAPIDR = derive { name="RAPIDR"; version="0.1.1"; type="cran"; sha256="14cnw4jjs5anb55zlg1yj6qc9yr51rsamigq2q7h8ypj2ggnna1d"; depends=[data_table Biostrings Rsamtools GenomicRanges GenomicAlignments PropCIs ]; };
RApiSerialize = derive { name="RApiSerialize"; version="0.1.0"; type="cran"; sha256="0gm2j8kh40imhncwwx1sx9kmraaxcxycvgwls53lcyy2ap344k9j"; depends=[ ]; };
RAppArmor = derive { name="RAppArmor"; version="1.0.1"; type="cran"; sha256="06j7ghmzw2rrlk8nsarmpk1ab2gg88qs52zpw37rhqchpyzwwkfb"; depends=[ ]; };
RArcInfo = derive { name="RArcInfo"; version="0.4-12"; type="cran"; sha256="1j1c27g2gmnxwslff4l0zivi48qxvpshmi7s9wd21cf5id0y4za4"; depends=[RColorBrewer ]; };
RAtmosphere = derive { name="RAtmosphere"; version="1.1"; type="cran"; sha256="0mk43bq28hlrjwaycsxca458k8xf00q58czgc17d8yx3kz17a5i0"; depends=[ ]; };
RBGL = derive { name="RBGL"; version="1.42.0"; type="bioc"; sha256="1a2pc0a6mmw50wznbh9qpwyfy9c0rkl41a9rsvzx85y9wlysv6fl"; depends=[graph ]; };
RBPcurve = derive { name="RBPcurve"; version="1.0-20"; type="cran"; sha256="1fk2zj16xj8n9jnydzd60crdfsigqd6xs2hq572b9r65ldiikv3z"; depends=[mlr BBmisc checkmate shape TeachingDemos ]; };
RBioinf = derive { name="RBioinf"; version="1.26.0"; type="bioc"; sha256="10mx0qqhwhqcrilyfilbrk0xfq4szgi8gp85nqsx4iipha6i1i2y"; depends=[graph ]; };
RCA = derive { name="RCA"; version="1.4.5"; type="cran"; sha256="0s200s28a6gh3dggad52dgqnf0k2jsfrqv1hbg8w2529v4s3dc5i"; depends=[igraph ]; };
RCALI = derive { name="RCALI"; version="0.2-15"; type="cran"; sha256="0w9807dyjghqy1rnv2c0k4kdjlwxzg5fk5r3rsqrmzjj4r8x9g9w"; depends=[splancs ]; };
RCASPAR = derive { name="RCASPAR"; version="1.12.0"; type="bioc"; sha256="1laj2pg2q761y7l91wdn6dm24rb22vk52ckx91r6pm13gdj3ma41"; depends=[ ]; };
RCEIM = derive { name="RCEIM"; version="0.2"; type="cran"; sha256="0l3lfx3zqxf310rhvjkn977xchxzi7cbzij3ks0nqlx55x5ica9w"; depends=[ ]; };
RCMIP5 = derive { name="RCMIP5"; version="1.1"; type="cran"; sha256="1aqcwxh2p4z7wn4p224xdiaharbr51rj51aa760rirs5s1ra7f6q"; depends=[abind dplyr reshape2 digest ]; };
RCPmod = derive { name="RCPmod"; version="1.4"; type="cran"; sha256="1psn1w8ws0n96jqvd98l0wl0l46w0691c5vm9aarql2pqnc73lw9"; depends=[numDeriv gtools ]; };
RCassandra = derive { name="RCassandra"; version="0.1-3"; type="cran"; sha256="0xa241s81cyw6lfjb522f2mlyrd0gav9yz3z5jab9hpdpgg9ri38"; depends=[ ]; };
RCircos = derive { name="RCircos"; version="1.1.2"; type="cran"; sha256="0j7ww2djnhpra13vjr6y772sg64ikdmw1z68lpp9i7d0shlc3qx9"; depends=[ ]; };
RClimMAWGEN = derive { name="RClimMAWGEN"; version="1.1"; type="cran"; sha256="0icy560llfd10mxlq0xmc6lbg6a030za9sygw1rpz8sk5j0lvb84"; depends=[climdex_pcic RMAWGEN ]; };
RColorBrewer = derive { name="RColorBrewer"; version="1.1-2"; type="cran"; sha256="1pfcl8z1pnsssfaaz9dvdckyfnnc6rcq56dhislbf571hhg7isgk"; depends=[ ]; };
RConics = derive { name="RConics"; version="1.0"; type="cran"; sha256="1lwr7hi1102gm8fi9k5ra24s0rjmnkccihhqn3byckqx6y8kq7ds"; depends=[ ]; };
RCryptsy = derive { name="RCryptsy"; version="0.2"; type="cran"; sha256="1sm6l2jbaxia53dqivii5g7pqbczvjk53c2v2vz65qz1qnrmrybj"; depends=[RJSONIO RCurl ]; };
RCurl = derive { name="RCurl"; version="1.95-4.6"; type="cran"; sha256="145li081kqa07w3bzb5zaad6jkr3zr0hcpkjwar76ybrvc4jyi4s"; depends=[bitops ]; };
RCytoscape = derive { name="RCytoscape"; version="1.16.0"; type="bioc"; sha256="0yswjdw1q5qai7a0g2ncqx166vl409kv95wc255284b1iljyd21y"; depends=[graph BiocGenerics ]; };
RDAVIDWebService = derive { name="RDAVIDWebService"; version="1.4.0"; type="bioc"; sha256="0r460vd2q4xvri9piqkdfka4wq95h12gs8py1ybkvbwdl4sxvflx"; depends=[graph GOstats ggplot2 Category RBGL rJava ]; };
RDIDQ = derive { name="RDIDQ"; version="1.0"; type="cran"; sha256="09gincmxv20srh4h82ld1ifwncaibic9b30i56zhy0w35353pxm2"; depends=[ ]; };
RDML = derive { name="RDML"; version="0.8-4"; type="cran"; sha256="0zrzi81rlxz8hrpz19g7v470fh930n5y6brn6mjq52shn0ap742m"; depends=[R6 assertthat XML plyr dplyr ]; };
RDRToolbox = derive { name="RDRToolbox"; version="1.16.0"; type="bioc"; sha256="0jiyxw1pdbsjlmkxqgxs9ib3ap8n7mrgnxccvgj854khv92lw1gq"; depends=[MASS rgl ]; };
RDS = derive { name="RDS"; version="0.7-2"; type="cran"; sha256="143pb13wg0ms9zaiilb3ylqj6r6bcy4iqbq19j57z33i1q6ll51c"; depends=[gridExtra ggplot2 igraph reshape2 scales ]; };
RDSTK = derive { name="RDSTK"; version="1.1"; type="cran"; sha256="07vfhsyah8vpvgfxfnmp5py1pxf4vvfzy8jk7zp1x2gl6dz2g7hq"; depends=[plyr rjson RCurl ]; };
RDataCanvas = derive { name="RDataCanvas"; version="0.1"; type="cran"; sha256="1aw19lmdphxwva5cs3f4fb8hllirzfkk48nqdgrarz32l11y5z5j"; depends=[jsonlite ]; };
RDieHarder = derive { name="RDieHarder"; version="0.1.3"; type="cran"; sha256="0wls7b0qfbi6hsq9xdywi4mdhim5b6mrzhvyrm9dxp9z1k7imz6m"; depends=[ ]; };
RDota = derive { name="RDota"; version="1.2"; type="cran"; sha256="1r56s4ii37szmdwgbnlw2g9576kjvyc79nvnfrsgr5mys62pbrzs"; depends=[XML ]; };
REBayes = derive { name="REBayes"; version="0.50"; type="cran"; sha256="0p4kv709r0577xq3mdw2vwla1gsjm8b9mnbsbfwm8fx3n3wfrx0p"; depends=[Rmosek Matrix SparseM ]; };
RECA = derive { name="RECA"; version="1.1"; type="cran"; sha256="1wgcd53yy4xsi7i674n4255qvvv6988r43q7n7pjqrimp04g1qd0"; depends=[ ]; };
REDCapR = derive { name="REDCapR"; version="0.7-1"; type="cran"; sha256="1r5vvl52z5gpqhq949fzwmsqvwpr74phcapkckczyznlfql4qdh1"; depends=[httr plyr stringr ]; };
REDseq = derive { name="REDseq"; version="1.12.0"; type="bioc"; sha256="0wkwkcfhqmbzxmwz7h396skirywwpdrbax8hdwmj0c4c6w612ccp"; depends=[BiocGenerics multtest Biostrings BSgenome ChIPpeakAnno BiocGenerics AnnotationDbi Biostrings ChIPpeakAnno IRanges multtest ]; };
REEMtree = derive { name="REEMtree"; version="0.90.3"; type="cran"; sha256="01sp36p12ky8vgsz6aik80w4abs70idr9sn4627lf94r92wwwsbc"; depends=[nlme rpart ]; };
REPPlab = derive { name="REPPlab"; version="0.9.1"; type="cran"; sha256="1yrw03p7rk5dbr23z343kxn7vbac8khcz4c718wq9w6sykhgv8d0"; depends=[rJava lattice ]; };
REQS = derive { name="REQS"; version="0.8-12"; type="cran"; sha256="049glqhc8h8gf425kmj92jv70917dsigpm37diby0c6hb4jrg8ka"; depends=[gtools ]; };
RESS = derive { name="RESS"; version="1.0"; type="cran"; sha256="0p6zfvakq4c02qp26l8zqcmi95na408rv6j6ibaxbcyf5vq9rhcs"; depends=[ ]; };
REST = derive { name="REST"; version="1.0.1"; type="cran"; sha256="16v89z7p9qkg7bsypf9vkrnbmb2n7gw3fqnfzbyxwj496wzxdv1x"; depends=[Rcmdr ]; };
REdaS = derive { name="REdaS"; version="0.9.2"; type="cran"; sha256="0w1b2996b0sdpxklkxylnk18dx8vgssn5avh7pnrvdqa464ci4f8"; depends=[ ]; };
RFGLS = derive { name="RFGLS"; version="1.1"; type="cran"; sha256="13ggxj74h5b2hfhjyc50ndxznkvlg18j80m78hkzwh25d3948fsk"; depends=[bdsmatrix Matrix ]; };
RFLPtools = derive { name="RFLPtools"; version="1.6"; type="cran"; sha256="1hl2crg7jl266zac41xvx151h7kl52346wnlvd8hba64s4s4apay"; depends=[RColorBrewer ]; };
RFOC = derive { name="RFOC"; version="3.3-3"; type="cran"; sha256="101d7nf4zjni5kdk54w3afdaqnjzl7y90zygybkqpd0vi82q602b"; depends=[RPMG GEOmap RSEIS MASS splancs ]; };
RFgroove = derive { name="RFgroove"; version="1.0"; type="cran"; sha256="13cf2grp87j7mm0lqf8f65d1pzypjp3b7g09f35x6dfirvc7lkdy"; depends=[randomForest wmtsa fda ]; };
RFinanceYJ = derive { name="RFinanceYJ"; version="0.3.1"; type="cran"; sha256="0qhmzsch7c2p0zckjkspsajzh8m10cf75ixjlgd0nj8rm41fngm3"; depends=[XML xts ]; };
RFmarkerDetector = derive { name="RFmarkerDetector"; version="1.0"; type="cran"; sha256="0p8dnqwhsjh1gwxvqpicdbsjs9gczqi5j4av786l9g18f5djsv6m"; depends=[AUCRF randomForest ggplot2 UsingR WilcoxCV ROCR ]; };
RForcecom = derive { name="RForcecom"; version="0.7"; type="cran"; sha256="0rjav2rwanzqgi1yasbm9lj18f0mfxwd8w8x41skf656gfcpi0i4"; depends=[XML RCurl plyr ]; };
RFreak = derive { name="RFreak"; version="0.3-0"; type="cran"; sha256="1dmllxb6yjkfkn34f07j2g7w5m63b5d10lh9xsmxyfk23b8l3x0x"; depends=[rJava ]; };
RGA = derive { name="RGA"; version="0.2.1"; type="cran"; sha256="14fyd65n75m4xjdp019xdp3sa6h6j3ip6yr42b4nn1cxgkjplbnm"; depends=[httr httpuv RCurl jsonlite shiny ]; };
RGCCA = derive { name="RGCCA"; version="2.0"; type="cran"; sha256="0mcp51z5jkn7yxmspp5cvmmvq0cwh7hj66g7wjmxsi74dwxcinvg"; depends=[MASS ]; };
RGENERATE = derive { name="RGENERATE"; version="1.3"; type="cran"; sha256="16gkdwbigdsdvnplqhzs11kk4dhb2rlnf7vj6kbzxw9fb1b7818q"; depends=[RMAWGEN ]; };
RGENERATEPREC = derive { name="RGENERATEPREC"; version="1.0"; type="cran"; sha256="1f6y3i8r6a9cajbj127s0cd13ihbi8scgrsgizza1fjb7fg2g450"; depends=[copula RGENERATE blockmatrix Matrix stringr RMAWGEN ]; };
RGIFT = derive { name="RGIFT"; version="0.1-5"; type="cran"; sha256="1745fs4bq0ss39fiwljspvrmnkgbbpc1fjvhvcrsmp2iizq12sgn"; depends=[ ]; };
RGSEA = derive { name="RGSEA"; version="1.0.0"; type="bioc"; sha256="150cqysn5n689b86cp1ib4zh75h7w04xi96fnyd6mky11vy0c5yc"; depends=[BiocGenerics ]; };
RGalaxy = derive { name="RGalaxy"; version="1.10.0"; type="bioc"; sha256="1p9dcxp2xqvcxdl3gikbf89n1mhhhpkqhd6drxmljgxbj790paxz"; depends=[XML optparse digest BiocGenerics Biobase roxygen2 ]; };
RGenetics = derive { name="RGenetics"; version="0.1"; type="cran"; sha256="0x5sspd67hh08qm62whlnnd838m0np29q3bfzgwp6j85lhil3jrx"; depends=[ ]; };
RGoogleAnalytics = derive { name="RGoogleAnalytics"; version="0.1.1"; type="cran"; sha256="1049fyxl00izw92rm508p90asjp0agmv38b00yfbmasfzsp1r00s"; depends=[lubridate httr ]; };
RGraphics = derive { name="RGraphics"; version="2.0-12"; type="cran"; sha256="03f0rlckfkll3s30avglbf0524laf8n6plxlbmbx1qi1s18hcfai"; depends=[lattice ggplot2 ]; };
RGtk2 = derive { name="RGtk2"; version="2.20.31"; type="cran"; sha256="1ilnlmsk9fis61pc5bn9sf7z4b7vc7f0a0zcy77kk4bns6iqjvyp"; depends=[ ]; };
RGtk2Extras = derive { name="RGtk2Extras"; version="0.6.1"; type="cran"; sha256="19gjz2bk9dix06wrmlnq02yj1ly8pzhvr0riz9b08vbzlsv9gnk2"; depends=[RGtk2 ]; };
RH2 = derive { name="RH2"; version="0.2.3"; type="cran"; sha256="1qbxy600fc8k2xl70liggdgg03ga6a8yad001banqzdmh508wcxl"; depends=[chron RJDBC rJava ]; };
RHRV = derive { name="RHRV"; version="4.0"; type="cran"; sha256="16xmmmw8gsqalbqf59xwpkd2bkfwxrdx8bwdn875bizx7mn0bql7"; depends=[tkrplot waveslim nonlinearTseries ]; };
RHT = derive { name="RHT"; version="1.0"; type="cran"; sha256="1gxf8nhj3y92h8al7l3fxa45wc568kb3cykrbdjlsy2zjacf7fcc"; depends=[ ]; };
RHive = derive { name="RHive"; version="2.0-0.2"; type="cran"; sha256="0a1saqqwh6zvz264jkkd6c9abxpsg1j4yfivb5h773i76pzhvqc3"; depends=[rJava ]; };
RI2by2 = derive { name="RI2by2"; version="1.2"; type="cran"; sha256="0387ncq1nhpz8521nwsjybsdpncm56nrwkz68apgihmrbjlmp6m7"; depends=[gtools ]; };
RIFS = derive { name="RIFS"; version="0.1-5"; type="cran"; sha256="0705dhirh7bhy2yf3b1mpk3m7lggg4pwy640lvaspwaxkd6zac5w"; depends=[ ]; };
RIGHT = derive { name="RIGHT"; version="0.2.0"; type="cran"; sha256="1mwm7l5l2hj67j03d895rx1181hax31a0nn3nq7rjcgpbljd2gjx"; depends=[ggplot2 plyr rjson shiny ]; };
RIPSeeker = derive { name="RIPSeeker"; version="1.6.0"; type="bioc"; sha256="04kfxwp6h6iw60v1hacaj054r2l2v1p3csv4rvhirdiwdcgljfxp"; depends=[IRanges GenomicRanges Rsamtools GenomicAlignments rtracklayer ]; };
RISmed = derive { name="RISmed"; version="2.1.5"; type="cran"; sha256="03c2b6iqq147kwrpx6wh440y1p2sy5c4i3v2yph99326pzxbyw7q"; depends=[ ]; };
RImageJROI = derive { name="RImageJROI"; version="0.1.1"; type="cran"; sha256="0a4sa60klbpl31qxxvjjbksdhvs3vwm9na1v7014v93fzxy6bjas"; depends=[spatstat ]; };
RImpala = derive { name="RImpala"; version="0.1.6"; type="cran"; sha256="03f4cq4bcrydpy78ypir7smj7abrcfynz0zzlgwgc60vh7vl79lz"; depends=[rJava ]; };
RInSp = derive { name="RInSp"; version="1.2"; type="cran"; sha256="0zg46qw44wx17ydcz592gl4k9qq08dycmsshxxqkjf92r3g3l6wm"; depends=[ ]; };
RInside = derive { name="RInside"; version="0.2.13"; type="cran"; sha256="0cfhljdai9kkw5m01mjaya0s02g4g1cy1g4i0qpjkhgqyihsh7dy"; depends=[Rcpp Rcpp ]; };
RItools = derive { name="RItools"; version="0.1-12"; type="cran"; sha256="0zdwj5y355d8jnwmjic3djwn6zy7h1iyl58j9hmnmc3m369cir0s"; depends=[lattice SparseM xtable svd abind ]; };
RJDBC = derive { name="RJDBC"; version="0.2-5"; type="cran"; sha256="0cdqil9g4w5mfpwq85pdq4vpd662nmw4hr7qkq6510gk4l375ab2"; depends=[DBI rJava ]; };
RJSDMX = derive { name="RJSDMX"; version="1.3"; type="cran"; sha256="1z4l6iw404qn3syk2877msywkr8369nic5zzvnx1qj0gj9x2mm2p"; depends=[rJava zoo ]; };
RJSONIO = derive { name="RJSONIO"; version="1.3-0"; type="cran"; sha256="1dwgyiy19sixhy6yclqcaaxswbmpq7digyjjxhy1qv0wfsvk94qi"; depends=[ ]; };
RJaCGH = derive { name="RJaCGH"; version="2.0.3"; type="cran"; sha256="0wz7vhlgzf8smzl7gx01dx070266fnmzw66wpl0im20nxfy8mr0l"; depends=[ ]; };
RJafroc = derive { name="RJafroc"; version="0.0.1"; type="cran"; sha256="0zjyr7qz50wvzkais6q9kyf3wp29g15kan73b8wdqrvab0f5rjqs"; depends=[xlsx ggplot2 stringr ]; };
RKEA = derive { name="RKEA"; version="0.0-6"; type="cran"; sha256="1dncplg83b4zznh1zh90wr8jv5259cy93imrry86c5kqdijmhrrp"; depends=[RKEAjars rJava tm ]; };
RKEAjars = derive { name="RKEAjars"; version="5.0-1"; type="cran"; sha256="00bva6ksdnmwa0i2zvr36n40xp429c0sqyp20a8n3zsblawiralc"; depends=[rJava ]; };
RLMM = derive { name="RLMM"; version="1.28.0"; type="bioc"; sha256="1hdmqbvp7p3svldbb25kn2498y93807aj5b2qi72vdrf4wpxjabj"; depends=[MASS ]; };
RLRsim = derive { name="RLRsim"; version="3.0"; type="cran"; sha256="16bqsp15b8ikgix18p63k6sf81d1al4djbb51r08imjs4z9jppg4"; depends=[Rcpp mgcv Rcpp ]; };
RLumShiny = derive { name="RLumShiny"; version="0.1.0"; type="cran"; sha256="0j4w3h1j6dm5q98639am3xfixjdx2xhiiy3qghkb0z8lv5rbvvw5"; depends=[Luminescence shiny digest googleVis RCurl ]; };
RM2 = derive { name="RM2"; version="0.0"; type="cran"; sha256="1v57nhwg8jrpv4zi22fhrphw0p0haynq13pg9k992sb0c72dx70a"; depends=[msm ]; };
RMAWGEN = derive { name="RMAWGEN"; version="1.3.0"; type="cran"; sha256="19p8bxcfk802pdn6990ya0bd9ghbvg8vmk3z01x1v76w09j4bv38"; depends=[chron date vars ]; };
RMC = derive { name="RMC"; version="0.2"; type="cran"; sha256="1sc4nsjmaw2ajm8bka7r4mf73zxqhnvx23kl4v20pfpy9rhgd0h6"; depends=[ ]; };
RMKdiscrete = derive { name="RMKdiscrete"; version="0.1"; type="cran"; sha256="0b4adw46sn98qmy4nxv5l5svcjrp5532x7slfhhgsskqx408lzjf"; depends=[ ]; };
RMOA = derive { name="RMOA"; version="1.0"; type="cran"; sha256="01mrl6544wv2jc8b8gk1whs865sbv4id5sywnf1hq3r7g8wgs8lp"; depends=[RMOAjars rJava ]; };
RMOAjars = derive { name="RMOAjars"; version="1.0"; type="cran"; sha256="0k3w37dwyyvfxh7a9l76cyjm27qq1clxppc5h16li2m8x68fvpjq"; depends=[rJava ]; };
RMRAINGEN = derive { name="RMRAINGEN"; version="1.0"; type="cran"; sha256="175kd803a44yblq2jw5mrn2qv4piiy249577lf684bmmajf4ird4"; depends=[copula RGENERATE RMAWGEN blockmatrix Matrix ]; };
RMTstat = derive { name="RMTstat"; version="0.3"; type="cran"; sha256="1nn25q4kmh9kj975sxkrpa97vh5irqrlqhwsfinbck6h6ia4rsw1"; depends=[ ]; };
RMallow = derive { name="RMallow"; version="1.0"; type="cran"; sha256="0prd5fc98mlxnwjhscmghw62jhq9rj5jk8qf4fnaa2a718yxf9b5"; depends=[combinat ]; };
RMark = derive { name="RMark"; version="2.1.12"; type="cran"; sha256="0b8yzng9c74yxl1a1nkc4knf2a9114mjkis19b1pdnclyxcnx45z"; depends=[snowfall matrixcalc msm coda ]; };
RMassBank = derive { name="RMassBank"; version="1.8.1"; type="bioc"; sha256="09yd8zc9ba2mf9cws99cpg330h6gryszn0pclvq9jn2azdvqag68"; depends=[Rcpp XML RCurl rjson rcdk yaml mzR ]; };
RMediation = derive { name="RMediation"; version="1.1.3"; type="cran"; sha256="07ck74dl1wwb88229fhkh2czlynddff7zvjyhisxk53qmdb0wvmw"; depends=[MASS lavaan e1071 ]; };
RMongo = derive { name="RMongo"; version="0.0.25"; type="cran"; sha256="1anybw64bcipwsjc880ywzj0mxkgcj6q0aszdad6zd4zlbm444pc"; depends=[rJava ]; };
RMySQL = derive { name="RMySQL"; version="0.10.3"; type="cran"; sha256="0791pshzr7rjjcnlm9md7gfsqkzizhzr9vwgnk2acc7sw5hikga6"; depends=[DBI ]; };
RNASeqPower = derive { name="RNASeqPower"; version="1.6.0"; type="bioc"; sha256="1am0y36v29lig3d52a68kdivv5bwabfaxd6npmm4xsdqfafyffrs"; depends=[ ]; };
RNAinteract = derive { name="RNAinteract"; version="1.14.0"; type="bioc"; sha256="1hjn6vhkal5k1m15sjnr4zf5r90mj9mchscim2818xc7cbw5bqzy"; depends=[abind locfit Biobase RColorBrewer ICS ICSNP cellHTS2 geneplotter gplots hwriter lattice latticeExtra limma splots ]; };
RNAither = derive { name="RNAither"; version="2.14.0"; type="bioc"; sha256="1izlnxlbjcsvdlhji93sv4ap8n5qqai8pyk3npnawrci2b50niiz"; depends=[topGO RankProd prada geneplotter limma biomaRt car splots ]; };
RNCBIEUtilsLibs = derive { name="RNCBIEUtilsLibs"; version="0.9"; type="cran"; sha256="1h1ywx8wxy6n2rbpmjbqw4c0djz29pbncisd0mlbshj1fw226jba"; depends=[rJava ]; };
RNCEP = derive { name="RNCEP"; version="1.0.7"; type="cran"; sha256="0yvddsdpdrsg2dafmba081q4a34q15d7g2z5zr4qnzqb8wjwh6q2"; depends=[maps RColorBrewer abind fields fossil tgp sp ]; };
RND = derive { name="RND"; version="1.1"; type="cran"; sha256="1rbnjkfrsvm68xp90l4awixbvpid9nxnhg6i6fndpdmqwly2fwdp"; depends=[ ]; };
RNeXML = derive { name="RNeXML"; version="2.0.2"; type="cran"; sha256="1giqwpcvr3v7na0z25qwps3qlrnffji0frcx694ifdfa89fn0s4d"; depends=[ape XML plyr taxize reshape2 httr uuid ]; };
RNetCDF = derive { name="RNetCDF"; version="1.7-3"; type="cran"; sha256="1blpwkmdi7scm876mvk9m23k4kfx83rc6hcy342236rbmxdzahhg"; depends=[ ]; };
RNetLogo = derive { name="RNetLogo"; version="1.0-1"; type="cran"; sha256="051yx7l8qbnvb4gn67m00wnl6v0jrmavmp7n7zygjn7p1xi3w22c"; depends=[rJava igraph ]; };
RNiftyReg = derive { name="RNiftyReg"; version="1.1.3"; type="cran"; sha256="1z980rwlq7wg4zjslppzs9d2cxhj7l63sgg8x8g6zgs5ag3pzgi7"; depends=[reportr oro_nifti ]; };
ROAuth = derive { name="ROAuth"; version="0.9.6"; type="cran"; sha256="0vhsp8qybrl94898m2znqs7hmlnlbsh8sm0q093dwdb2lzrqww4m"; depends=[RCurl digest ]; };
ROC = derive { name="ROC"; version="1.42.0"; type="bioc"; sha256="0g1whrm9c0x8aqa01am3gr0kjnm6gryvwfw430dj2hcrvsjpwg4j"; depends=[ ]; };
ROC632 = derive { name="ROC632"; version="0.6"; type="cran"; sha256="0vgv4rclvb79mfj1phs2hmxhwchpc5rj43hvsj6bp7wv8cahfg5g"; depends=[survival penalized survivalROC ]; };
ROCR = derive { name="ROCR"; version="1.0-7"; type="cran"; sha256="1jay8cm7lgq56i967vm5c2hgaxqkphfpip0gn941li3yhh7p3vz7"; depends=[gplots ]; };
ROCS = derive { name="ROCS"; version="1.2"; type="cran"; sha256="1liph11p5dwvm1z5vq7ph5pizzqrm6ami94cq6y5kvm2qyv0jfah"; depends=[rgl ]; };
ROCt = derive { name="ROCt"; version="0.8"; type="cran"; sha256="1k0571gq7igg56qxwf9ibk28v763ji0w9183gs6qp95lpbyp5zwr"; depends=[date survival relsurv ]; };
ROCwoGS = derive { name="ROCwoGS"; version="1.0"; type="cran"; sha256="029nramxwhzqim315g1vkg1zsszzkic28w6ahwg9n7bk9d08adzk"; depends=[ ]; };
RODBC = derive { name="RODBC"; version="1.3-11"; type="cran"; sha256="1j6qv7w4klgwzdx9jf6h4l1x1idn3rka70ql37pbnzga1h5dr9yy"; depends=[ ]; };
RODBCext = derive { name="RODBCext"; version="0.2.3"; type="cran"; sha256="0j0774gpnd72mw3x9qv7shiwrk0s5rk8hf0wjq4iy42wwbvql7l6"; depends=[RODBC ]; };
RODM = derive { name="RODM"; version="1.1"; type="cran"; sha256="0cyi2y3lsw77gqxmawla5jlm4vnhsagh3ykdgb6izxslc4j2fszx"; depends=[RODBC ]; };
ROI = derive { name="ROI"; version="0.1-0"; type="cran"; sha256="01za8cxjf721m2lxnw352k8g32pglmllk50l7b8yhjwc49k8rl66"; depends=[registry slam ]; };
ROI_plugin_glpk = derive { name="ROI.plugin.glpk"; version="0.0-2"; type="cran"; sha256="10p3cq59app3xdv8dvqr24m937a36lzd274mdl2a9r4fwny2rssa"; depends=[ROI Rglpk ]; };
ROI_plugin_quadprog = derive { name="ROI.plugin.quadprog"; version="0.0-2"; type="cran"; sha256="0mkjq87rv1xf0bggpqd2r4gabv11spgcds2y94r3vpmh8krf71jf"; depends=[quadprog ROI slam ]; };
ROI_plugin_symphony = derive { name="ROI.plugin.symphony"; version="0.0-2"; type="cran"; sha256="1z4cahz0h38jw54p9363ca6i3qq7dwlm3568dr91gvpqf76b05wd"; depends=[ROI Rsymphony slam ]; };
ROSE = derive { name="ROSE"; version="0.0-3"; type="cran"; sha256="12b9grh3rgaa07blbnxy8nvy5gvpd45m43bfqb3m4k3d0655jpk2"; depends=[ ]; };
RObsDat = derive { name="RObsDat"; version="15.02"; type="cran"; sha256="1fagbmp48rnyln6jh2yzvc414q82q6dvixmia7yqg64lrkzkh302"; depends=[zoo spacetime xts DBI vwr e1071 sp ]; };
ROntoTools = derive { name="ROntoTools"; version="1.6.1"; type="bioc"; sha256="0a72nkx8ichc35hl9iwc5rf2d4mm2rd39nlvb1pjag3lp65wa3ax"; depends=[graph boot KEGGREST KEGGgraph Rgraphviz ]; };
ROptEst = derive { name="ROptEst"; version="0.9"; type="cran"; sha256="0m5czyqcsz42dzrhm3vwfmn046n57cb7x5sqzf2nad1gqgxzxp1d"; depends=[distr distrEx distrMod RandVar RobAStBase ]; };
ROptEstOld = derive { name="ROptEstOld"; version="0.9.2"; type="cran"; sha256="0blf34xff9pjfy983xm7a27xqkh9173nk64ysas6f0g4h31gh8ax"; depends=[distr distrEx RandVar evd ]; };
ROptRegTS = derive { name="ROptRegTS"; version="0.9.1"; type="cran"; sha256="1a8pbn63wh2w2n409yzbwvarvhphcn82rdqjh407ch3k3x6jz3r5"; depends=[ROptEstOld RandVar distr distrEx ]; };
ROracle = derive { name="ROracle"; version="1.1-12"; type="cran"; sha256="1ydmckr0wzjgvhhh410l4ih7idbr8140g6v11avh655wffk02q5p"; depends=[DBI ]; };
RPA = derive { name="RPA"; version="1.22.0"; type="bioc"; sha256="015slb9g3my3hv59ja4czvi2bcxf30ldgy8nazn6qmph78pdbm9b"; depends=[affy ]; };
RPANDA = derive { name="RPANDA"; version="1.0"; type="cran"; sha256="1q8chhmdgn697a4qp4f7prdviar29z0py050748qw7ab326lqp5d"; depends=[ape picante pspline deSolve ]; };
RPCLR = derive { name="RPCLR"; version="1.0"; type="cran"; sha256="03kpyszsjb656lfwx2yszv0a9ygxs1x1dla6mpkhcnqw00684fab"; depends=[MASS survival ]; };
RPEnsemble = derive { name="RPEnsemble"; version="0.2"; type="cran"; sha256="1kbgpbk7gma0vhl0aybdj7bk2chhbggzh7h1w7snddgdvvj6cz10"; depends=[MASS class ]; };
RPMG = derive { name="RPMG"; version="2.1-7"; type="cran"; sha256="1nkmnqrys65vg377mys6qzpbwfh43adgy76c6jfdg336nf8qx2wd"; depends=[ ]; };
RPMM = derive { name="RPMM"; version="1.20"; type="cran"; sha256="09rwrcd8jz0nii1vx0n3b4daidiq0kp0vf88bvi84y4i06743il7"; depends=[cluster ]; };
RPPairwiseDesign = derive { name="RPPairwiseDesign"; version="1.0"; type="cran"; sha256="0k2vh698rhs5a0b5vhyvrnnwqnagdzs591zx6hn9vbmm8rm4y1dm"; depends=[ ]; };
RPostgreSQL = derive { name="RPostgreSQL"; version="0.4"; type="cran"; sha256="0gpmbpiaiqvjzyl84l2l8v2jnz3h41v8jl99sp1qvvyrjrickra2"; depends=[DBI ]; };
RProtoBuf = derive { name="RProtoBuf"; version="0.4.2"; type="cran"; sha256="0ph6sdw0gys70sjlfimgvjk19rbj4v6p7wk05nar6wh8mabpvb63"; depends=[Rcpp RCurl Rcpp ]; };
RPublica = derive { name="RPublica"; version="0.1.2"; type="cran"; sha256="1fawjkwfxx3z370132vsjjs3ls316gzxzlxp8b4vzrshx1p7vp3q"; depends=[jsonlite httr RCurl ]; };
RPushbullet = derive { name="RPushbullet"; version="0.2.0"; type="cran"; sha256="1h9yvw9kw7df0ijwhfc2bi29y61fl9zg3mp4xygx3fyr9mycjm7a"; depends=[RJSONIO ]; };
RQDA = derive { name="RQDA"; version="0.2-7"; type="cran"; sha256="05h2f5sk0a14bhzqng5xp87li24b6n11p5lcxf9xpy7sbmh5ig6g"; depends=[RSQLite gWidgetsRGtk2 RGtk2 DBI igraph gWidgets ]; };
RQuantLib = derive { name="RQuantLib"; version="0.4.0"; type="cran"; sha256="1p2hd7wa5yi5ian2akb70pjr4glfni4dvwgglyg5pqmmm2j45k2d"; depends=[Rcpp Rcpp ]; };
RRF = derive { name="RRF"; version="1.6"; type="cran"; sha256="1gp224mracrz53vnxwfvd7bln18v8x7w130wslhfgcdl0n4f2d28"; depends=[ ]; };
RRHO = derive { name="RRHO"; version="1.6.0"; type="bioc"; sha256="1i1i0kk6la20hd0gk9q5pai7lrzxjz6dj10wiylgg2bg63dkqbm4"; depends=[VennDiagram ]; };
RRTCS = derive { name="RRTCS"; version="0.0.1"; type="cran"; sha256="05ws5n2ajisdh4gfzmilvkz6jvvbl6fiwkcjzwm8bll2rhl916z4"; depends=[sampling samplingVarEst ]; };
RRreg = derive { name="RRreg"; version="0.3.0"; type="cran"; sha256="0pip05wk76h436mvcsddhn2p25ihms3yf1lb23k7ygpx6jx4mdn3"; depends=[doParallel foreach ]; };
RSA = derive { name="RSA"; version="0.9.8"; type="cran"; sha256="1pqblhimhj79ss8js0nf8w24ga2kdmgw64rh496iib36g27asn8n"; depends=[lavaan ggplot2 lattice tkrplot plyr RColorBrewer aplpack ]; };
RSADBE = derive { name="RSADBE"; version="1.0"; type="cran"; sha256="1nzpm88rrzavk0n8iflsx8r3s1xcry15n80zqdw6jijjycz10w1q"; depends=[ ]; };
RSAGA = derive { name="RSAGA"; version="0.93-6"; type="cran"; sha256="0wqiww0rx5fz4rbsb1x6pr2q0wz5dacj5fc0asj70igxwmh5x0p8"; depends=[gstat shapefiles plyr ]; };
RSAP = derive { name="RSAP"; version="0.9"; type="cran"; sha256="1sxirfabhpmfm0yiiazc9h1db70hqwva2is1dql6sjfanpl8qanl"; depends=[yaml reshape ]; };
RSDA = derive { name="RSDA"; version="1.2"; type="cran"; sha256="06sa3x0abm2gnf4i4y3d5mlqj1wl7mzzal27sa1x65awzi6rs2kz"; depends=[sqldf XML scales FactoMineR ggplot2 glmnet abind scatterplot3d ]; };
RSEIS = derive { name="RSEIS"; version="3.4-5"; type="cran"; sha256="0wh7977vm721hb566lh721mwn6b4x0p7x6xb7gv0nvrd3kpsw9zn"; depends=[RPMG Rwave ]; };
RSGHB = derive { name="RSGHB"; version="1.0.2"; type="cran"; sha256="0ffdx9lscbgknfqhvjdh3rwnlhiqxbpqa55jkn111a1vfv726v3d"; depends=[ ]; };
RSKC = derive { name="RSKC"; version="2.4.1"; type="cran"; sha256="1dvzxf001a9dg71l4bh8z3aia7mymqy800268qf7qzy9n6552g59"; depends=[flexclust ]; };
RSNNS = derive { name="RSNNS"; version="0.4-6"; type="cran"; sha256="1p4gv2v9vzbgaksiibg66l9l9nabnm5lblc17md2cdcb6rygh3hp"; depends=[Rcpp Rcpp ]; };
RSNPset = derive { name="RSNPset"; version="0.4"; type="cran"; sha256="1asrl75jlkdp829phjfza10fcl9akiqspbxncd8zf2a23f2r54sy"; depends=[fastmatch foreach doRNG qvalue Rcpp Rcpp RcppEigen ]; };
RSQLServer = derive { name="RSQLServer"; version="0.1.1"; type="cran"; sha256="0xaw8a06xgc78hjg4bndip0jpc7l4glk28pggm2l3j31ybx81kw7"; depends=[DBI rJava RJDBC ]; };
RSQLite = derive { name="RSQLite"; version="1.0.0"; type="cran"; sha256="08b1syv8z887gxiw8i09dpqh0zisfb6ihq6qqr01zipvkahzq34f"; depends=[DBI ]; };
RSVGTipsDevice = derive { name="RSVGTipsDevice"; version="1.0-4"; type="cran"; sha256="1ybk5q4dhskrh7h1sy86ilchdwi6rivy3vv3lph6pms2virgm854"; depends=[ ]; };
RSVSim = derive { name="RSVSim"; version="1.6.1"; type="bioc"; sha256="1xqgl0xq90ax42y5yhfk6v5py5nsgm0mms8rx87fyb3zg2aihx4y"; depends=[Biostrings GenomicRanges IRanges ShortRead ]; };
RSclient = derive { name="RSclient"; version="0.7-2"; type="cran"; sha256="04ml4pynjl97295wrclvb61mpwacrkzc9x5pbwyfg1qr3l8hss93"; depends=[ ]; };
RSeed = derive { name="RSeed"; version="0.1.31"; type="cran"; sha256="0wljchzkp8800v9zcgjapkbildkb3p2xnkh1m6m7q6qqc9aw8mws"; depends=[sybil RBGL graph ]; };
RSelenium = derive { name="RSelenium"; version="1.3.5"; type="cran"; sha256="15pnmnljl4dm9gbcgnad5j58k6cgs6qm34829kdgyb0ygs9q7ya0"; depends=[RCurl RJSONIO XML caTools ]; };
RSiena = derive { name="RSiena"; version="1.1-232"; type="cran"; sha256="0qp3bqq5p19bg47m37s2dw8m4q91hnkc2zxwhsgb076q0xvvv9xq"; depends=[Matrix ]; };
RSiteCatalyst = derive { name="RSiteCatalyst"; version="1.4.3"; type="cran"; sha256="003mazcwz7w814pm8i9zdfmsbijf02n80w48ml4grmjjn1v7x5ar"; depends=[jsonlite httr plyr base64enc digest stringr ]; };
RSocrata = derive { name="RSocrata"; version="1.6.0-12"; type="cran"; sha256="0db1p3bxlh07d43rlg4cmj2gbasqd21mg8qnrrp8zkqasmjdzhn7"; depends=[httr jsonlite mime curl ]; };
RSofia = derive { name="RSofia"; version="1.1"; type="cran"; sha256="0q931y9rcf6slb0s2lsxhgqrzy4yqwh8hb1124nxg0bjbxvjbihn"; depends=[Rcpp Rcpp ]; };
RStars = derive { name="RStars"; version="1.0"; type="cran"; sha256="1siwqm8sp8wqbb56961drkwcnkv3w1xiy81hxy0zcr2z7rscv7mh"; depends=[RJSONIO RCurl ]; };
RStorm = derive { name="RStorm"; version="0.902"; type="cran"; sha256="1apk358jwzg5hkrcq8h39rax1prgz9bhkz9z51glmci88qrw1frv"; depends=[plyr ]; };
RSurveillance = derive { name="RSurveillance"; version="0.1.0"; type="cran"; sha256="1y17bfv0glzzb5rfniia0z4px810kgv2gns0igizw7w427zshnm0"; depends=[epitools epiR ]; };
RSurvey = derive { name="RSurvey"; version="0.8-3"; type="cran"; sha256="0dqrajd3m2v5cd3afl9lni9amfqfv4vhz7kakg3a5180j5rcag12"; depends=[sp rgeos MBA ]; };
RSvgDevice = derive { name="RSvgDevice"; version="0.6.4.4"; type="cran"; sha256="0vplac5jzg6bmvbpmj4nhiiimsr9jlbk8mzyifnnndk9iyf2lcmz"; depends=[ ]; };
RTCA = derive { name="RTCA"; version="1.18.0"; type="bioc"; sha256="14q30yf6lxwn5nnn4p9hsqsc2i10vfki0hl6slz6nw5nszc1bkf8"; depends=[Biobase RColorBrewer gtools ]; };
RTConnect = derive { name="RTConnect"; version="0.1.4"; type="cran"; sha256="1000jmmqzyhl6vh1ii75jdh88s9inaz52gvfwcin2k2zr7bi91ba"; depends=[ ]; };
RTDE = derive { name="RTDE"; version="0.1-0"; type="cran"; sha256="00hh1axipp2blrhjwl9mc4fkqv3l132gxlhi9hdy52w20yhwigin"; depends=[ ]; };
RTN = derive { name="RTN"; version="1.4.1"; type="bioc"; sha256="1fh14m8zk6rl5bbwldbvysrl8csn9wczb8aicsiscndqdi9914v4"; depends=[igraph RedeR minet snow limma data_table ff car IRanges ]; };
RTOMO = derive { name="RTOMO"; version="1.1-3"; type="cran"; sha256="10qkqdx2zj2m854z9s57ddf5jbzagac9mq5v6z5393c0s8bx10x8"; depends=[RPMG GEOmap RSEIS splancs ]; };
RTextTools = derive { name="RTextTools"; version="1.4.2"; type="cran"; sha256="1j3zfywq8xgax51mbizxz704i3ys4vzp8hyi5kkjzq6g2lw7ywq2"; depends=[SparseM randomForest tree nnet tm e1071 ipred caTools maxent glmnet tau ]; };
RTextureMetrics = derive { name="RTextureMetrics"; version="1.1"; type="cran"; sha256="0d0mvpmcpd62cvqlajrqp32lnvpflyf9bqvdzly2v8v1kb8274fc"; depends=[ ]; };
RTopper = derive { name="RTopper"; version="1.12.0"; type="bioc"; sha256="1cghjbz2nwamvny858p8xg6azzgwqr7922dk6iiczyl7brvgmf5r"; depends=[Biobase limma multtest ]; };
RTriangle = derive { name="RTriangle"; version="1.6-0.6"; type="cran"; sha256="1g4dp792awbvsl35nvyd8gkx99p2njdcafin16qysfrjl43f5i4s"; depends=[ ]; };
RUVSeq = derive { name="RUVSeq"; version="1.0.0"; type="bioc"; sha256="19c5shg278zaqhnhq7kx6xf8i34g42lcd2ri26y6rkg870lbs5f0"; depends=[EDASeq edgeR MASS ]; };
RUVnormalize = derive { name="RUVnormalize"; version="1.0.0"; type="bioc"; sha256="1s5a1dw99qvxrm0dhgy973nwrpif7hgqzq4x8x9ydy6p8s7fj07k"; depends=[Biobase ]; };
RUnit = derive { name="RUnit"; version="0.4.28"; type="cran"; sha256="0p631cg014m7linml2770g260ml0jj74d5w82ddl1p2zs5yq57hx"; depends=[ ]; };
RVAideMemoire = derive { name="RVAideMemoire"; version="0.9-45-2"; type="cran"; sha256="1c2hmkc34qgi942i4pnw61lk0z6kd4j9424zqqscm77zscfmrmcw"; depends=[ade4 boot cramer car lme4 MASS mixOmics multcompView nnet pspearman statmod vegan ]; };
RVFam = derive { name="RVFam"; version="1.1"; type="cran"; sha256="0gw8rgq11zndnqmay6y3y5rmmljvwhxzm2pqa90vs5413dnchq92"; depends=[coxme survival lme4 kinship2 MASS Matrix ]; };
RVideoPoker = derive { name="RVideoPoker"; version="0.3"; type="cran"; sha256="06s4dlw0pw8rcq5b31xxqdpdk396rf27mai2vpvmn585vbm1ib7a"; depends=[pixmap tkrplot rpanel ]; };
RVowpalWabbit = derive { name="RVowpalWabbit"; version="0.0.6"; type="cran"; sha256="06f2lmls92qkbscss00c99xkzpx83mgjah6ds0sixv1b2qi216ap"; depends=[Rcpp Rcpp ]; };
RVsharing = derive { name="RVsharing"; version="1.3.4"; type="cran"; sha256="0v267m7gfvc6fvfh4i53jk2xcr21kih6ddlgvb600j5ck6mi14vf"; depends=[kinship2 ]; };
RVtests = derive { name="RVtests"; version="1.2"; type="cran"; sha256="0k7w6ml981zvr5bix197qw4kaf7rz5jqnwqlxf7aryxbm39gk16c"; depends=[glmnet spls pls ]; };
RWBP = derive { name="RWBP"; version="1.0"; type="cran"; sha256="104vr2cdk185hh4zn3vmqvb14p1q8ifk11wdgvk7fli1m1zxxwdd"; depends=[RANN igraph lsa SnowballC ]; };
RWeather = derive { name="RWeather"; version="0.4"; type="cran"; sha256="1vm8w07gsxwxvg1gpdzn6mpnh8g9kp0ln9fxjw5rl2f1zz80bxpy"; depends=[XML ]; };
RWebLogo = derive { name="RWebLogo"; version="1.0.3"; type="cran"; sha256="1n65mlnr163ywjnyyngnigbj0wpgkr38c3nx8hw5r8mwjnf3d617"; depends=[findpython ]; };
RWebServices = derive { name="RWebServices"; version="1.30.0"; type="bioc"; sha256="0k9270arzhj6l5vnk2m7dw52nb6py2kgdlrdl2yazbjw4xsi7c9l"; depends=[SJava TypeInfo RCurl SJava ]; };
RWeka = derive { name="RWeka"; version="0.4-24"; type="cran"; sha256="1nzpwh5i4snlz5hpk27395f6ly2mfzif6fw1cb6yn2sba0nj0ls7"; depends=[RWekajars rJava ]; };
RWekajars = derive { name="RWekajars"; version="3.7.12-1"; type="cran"; sha256="0a3a33l4rglyj95v6m3lqdz0c1fzriprdlp1p8cx2v06n50ymvrz"; depends=[rJava ]; };
RWiener = derive { name="RWiener"; version="1.2-0"; type="cran"; sha256="1ssh4xcyr4whgyd91p6bjsm9mq1ajqjqva0yyk13dnf5jfpsr0gs"; depends=[ ]; };
RXKCD = derive { name="RXKCD"; version="1.7-5"; type="cran"; sha256="0dsds1bv2vfq61gfppar2ai23dryh09ric5i6zaccms6q64z23md"; depends=[RJSONIO png jpeg plyr ]; };
RXMCDA = derive { name="RXMCDA"; version="1.5.3"; type="cran"; sha256="1pc52kvihxzq12p95r4srmnawxcsvd4r7252dajby338p56d1lw8"; depends=[XML kappalab ]; };
RXshrink = derive { name="RXshrink"; version="1.0-8"; type="cran"; sha256="0l4aknr1vxrkxqsgkjcffs0731jskyzvl055a01vd8h4a0826n5s"; depends=[lars ]; };
RYoudaoTranslate = derive { name="RYoudaoTranslate"; version="1.0"; type="cran"; sha256="1i3iyqh97vpn02bm66kkmw52ni29js30v18n2aw8pvr88jpdgxm4"; depends=[RCurl rjson ]; };
RadOnc = derive { name="RadOnc"; version="1.1.0"; type="cran"; sha256="0gjrs78aaqbizzlcyjshc785ams3nclr503p4s2xsmd6sxj4khwi"; depends=[rgl geometry oro_dicom ptinpoly ]; };
RadTran = derive { name="RadTran"; version="1.0"; type="cran"; sha256="1sb8d4y3b37akbxhdavxrkp34zn3ip061b7gzy0ga57pyn76cvpn"; depends=[ReacTran rootSolve ]; };
RadioSonde = derive { name="RadioSonde"; version="1.4"; type="cran"; sha256="1v9jdpynmb01m3syhas1s08xxlvjawhlvjkyhils2iggi4xw4hiq"; depends=[ ]; };
Rambo = derive { name="Rambo"; version="1.1"; type="cran"; sha256="1yc04xsfkc54y19g5iwambgnlc49ixjjvfrafsgis2zh5w6rjwv8"; depends=[sna ]; };
Ramd = derive { name="Ramd"; version="0.2"; type="cran"; sha256="0a64rp4dwhfr6vxsmya16x7wy7rxj4n98sdhhyy0ll850rdzlxd8"; depends=[ ]; };
RamiGO = derive { name="RamiGO"; version="1.12.1"; type="bioc"; sha256="1hdcfmhwm4laap8pxpda3q19fz76xh1zw5wssvagji17x2l0pqiy"; depends=[gsubfn igraph RCurl png RCytoscape graph ]; };
RandVar = derive { name="RandVar"; version="0.9.2"; type="cran"; sha256="04hw4v2d9aa8z9f8wvwbzhbfy8zjl5q8mpl9b91q86fhh1yq5cz4"; depends=[distr distrEx ]; };
RandomFields = derive { name="RandomFields"; version="3.0.62"; type="cran"; sha256="1v2dmwl3nq3mw88439z6hjaf3gkz9sf7dqm9iipgk333qw1s6sfk"; depends=[sp ]; };
RandomFieldsUtils = derive { name="RandomFieldsUtils"; version="0.0.2"; type="cran"; sha256="12vja6ilihy2xq78h6nj1i60vgd5b6pqr2knpw7yq1nix22v4qn9"; depends=[ ]; };
RankAggreg = derive { name="RankAggreg"; version="0.5"; type="cran"; sha256="1c5ckk2pfkdxs3l24wgai2xg817wv218fzp7w1r3rcshxf0dcz2i"; depends=[gtools ]; };
RankProd = derive { name="RankProd"; version="2.38.0"; type="bioc"; sha256="15d0v1pzz5z75w28mi5a67q319zdcjs770w4vmr6vdq366v5ai6v"; depends=[ ]; };
RankResponse = derive { name="RankResponse"; version="3.1.1"; type="cran"; sha256="04s588zbxcjgvpmbb2x46bbf5l15xm7pwiaxjgc1kn1pn6g1080c"; depends=[ ]; };
Rankcluster = derive { name="Rankcluster"; version="0.92.9"; type="cran"; sha256="172jjsyc6a5y32s2fb8z6lgcq6rcwjbk3xnc5vvkhj64amlyxla6"; depends=[Rcpp Rcpp RcppEigen ]; };
RapidPolygonLookup = derive { name="RapidPolygonLookup"; version="0.1"; type="cran"; sha256="0m6r11ksryzcfcm265wr9fhwb867j9ppfhalvvygzig5j85sg92k"; depends=[sp RANN PBSmapping RgoogleMaps ]; };
Rariant = derive { name="Rariant"; version="1.2.0"; type="bioc"; sha256="1gli9ill961hblxgw8d33bz462rnas0v4jclnclslfvvlbji27lc"; depends=[GenomicRanges VariantAnnotation IRanges ggbio ggplot2 exomeCopy SomaticSignatures Rsamtools shiny VGAM dplyr reshape2 GenomeInfoDb S4Vectors ]; };
Rarity = derive { name="Rarity"; version="1.3-4"; type="cran"; sha256="0zz1axr8a1r6js0la2ncls0l6jnjvx807ay2ngzb52hqbijifghx"; depends=[ ]; };
RaschSampler = derive { name="RaschSampler"; version="0.8-7"; type="cran"; sha256="11vkb5gvr1r2a7fpxyygkixc62ms53dpik9jdg7vrb9k43v82ggj"; depends=[ ]; };
RbcBook1 = derive { name="RbcBook1"; version="1.34.0"; type="bioc"; sha256="05bsnvvvm5xs3vrm0v6jggsmf4d31kzz0aga76scxf66wzvwdnq0"; depends=[Biobase graph rpart ]; };
RbioRXN = derive { name="RbioRXN"; version="1.5.1"; type="cran"; sha256="0lc43wm986y3xbdh1xihn7w583cql9kvj6rb018pn06ghz153i0d"; depends=[fmcsR ChemmineR plyr RCurl gdata KEGGREST data_table stringr ]; };
Rbitcoin = derive { name="Rbitcoin"; version="0.9.2"; type="cran"; sha256="0ndq4kg1jq6h0jxwhpdp8sw1n5shg53lwa1x0bi7rifmy0gnh66f"; depends=[data_table RCurl digest RJSONIO ]; };
Rborist = derive { name="Rborist"; version="0.1-0"; type="cran"; sha256="1irb9scl68m7skqdwny9kvnzg7f1r0q1c0whzqyhhj9l4lw16hmr"; depends=[Rcpp Rcpp RcppArmadillo ]; };
Rbowtie = derive { name="Rbowtie"; version="1.6.0"; type="bioc"; sha256="0bjiwrl8dvwmilq85w18lm47a7xji5rmgzy7pfxyb836i75qn70v"; depends=[ ]; };
Rcade = derive { name="Rcade"; version="1.8.0"; type="bioc"; sha256="00rr2gznlfxkq0dlfpc9d62y84av3z7vrrph4yyh8kaz5pyd9qjn"; depends=[GenomicRanges baySeq Rsamtools S4Vectors rgl plotrix ]; };
Rcapture = derive { name="Rcapture"; version="1.4-2"; type="cran"; sha256="1nsxy5vpfv7fj03i6l5pgzjm0cldwqxxycnvqkfkshbryjcyl0ps"; depends=[ ]; };
Rcgmin = derive { name="Rcgmin"; version="2013-2.21"; type="cran"; sha256="02igq7bdlxwa7ysfiyvqfhcvgm866lrp2z3060z5lmnp6afa0958"; depends=[numDeriv ]; };
Rchemcpp = derive { name="Rchemcpp"; version="2.4.0"; type="bioc"; sha256="0kfhn3ry6w5d5wl6asz96662sb7abxhy97q2g3p19qig04v00kdl"; depends=[Rcpp ChemmineR Rcpp ]; };
Rchoice = derive { name="Rchoice"; version="0.3"; type="cran"; sha256="1ac2nw03g66z2rgxzv8jqad74cp4c9ry0hvnw77d57ddaxszkrva"; depends=[Formula maxLik msm plm plotrix ]; };
RchyOptimyx = derive { name="RchyOptimyx"; version="2.6.0"; type="bioc"; sha256="1q9gsmy84lk869j1d6jabdpi0z8ahhpcya62fy965mza901q9cin"; depends=[Rgraphviz sfsmisc graph flowType ]; };
Rclusterpp = derive { name="Rclusterpp"; version="0.2.3"; type="cran"; sha256="02s5gmmmd0l98wd1y884pjl3h289dyd9p9s7dh7yl2zaslqs2094"; depends=[Rcpp RcppEigen Rcpp RcppEigen ]; };
Rcmdr = derive { name="Rcmdr"; version="2.1-7"; type="cran"; sha256="1qn0bfh36shdnm2qbjwggjv19vqkkhng82x39sdbljx0z3g3bmdg"; depends=[RcmdrMisc car tcltk2 abind ]; };
RcmdrMisc = derive { name="RcmdrMisc"; version="1.0-2"; type="cran"; sha256="18by1b1iz7q6lbnhxj5l5w58fqsvki84d830sv7iyzrs2q6n7vhq"; depends=[car sandwich abind Hmisc MASS e1071 ]; };
RcmdrPlugin_BCA = derive { name="RcmdrPlugin.BCA"; version="0.9-8"; type="cran"; sha256="0xkip7q9i57ghgz0rh0pl8nkl7bflf4w1g4zbyjdlcjypyf7lnr8"; depends=[Rcmdr BCA flexclust car RcmdrMisc nnet foreign rpart rpart_plot ]; };
RcmdrPlugin_DoE = derive { name="RcmdrPlugin.DoE"; version="0.12-3"; type="cran"; sha256="1iifn71kjjgcp7dfz2pjq57mgbv4rrznrl3b3k9gdc2dva1z9zvc"; depends=[DoE_base FrF2 DoE_wrapper relimp Rcmdr RcmdrMisc ]; };
RcmdrPlugin_EACSPIR = derive { name="RcmdrPlugin.EACSPIR"; version="0.2-2"; type="cran"; sha256="10r6rb0fwlilcnqxa38zh7yxc54x1a0by5x4f6gzdn9zs7aj5l1r"; depends=[R2HTML abind ez nortest reshape Rcmdr RcmdrMisc ]; };
RcmdrPlugin_EBM = derive { name="RcmdrPlugin.EBM"; version="1.0-8"; type="cran"; sha256="0lkj869xdacvnma0qq20fqdsq59jqka2fv5h78f99lybzcb95i11"; depends=[Rcmdr epiR abind ]; };
RcmdrPlugin_EZR = derive { name="RcmdrPlugin.EZR"; version="1.28"; type="cran"; sha256="0by00cnfs0yciy1azqvmcbkbf6r8mr2451xjqqxfd4jwmhg3nrxl"; depends=[Rcmdr ]; };
RcmdrPlugin_EcoVirtual = derive { name="RcmdrPlugin.EcoVirtual"; version="0.1"; type="cran"; sha256="00yk09c1d1frwpfq12zvhg4gnc3p63r61abnil623jpr6wh4b2x8"; depends=[Rcmdr EcoVirtual ]; };
RcmdrPlugin_FactoMineR = derive { name="RcmdrPlugin.FactoMineR"; version="1.5-0"; type="cran"; sha256="1hfnn12l3jljqpczpxz4m9ywbmw5rc1c8dpfl4cabrxnh6ymnk1a"; depends=[FactoMineR Rcmdr ]; };
RcmdrPlugin_HH = derive { name="RcmdrPlugin.HH"; version="1.1-42"; type="cran"; sha256="0ra5glv2p4ii2c1b3dyxbdjl4ps6idjpl6ni8ridrfb391qlmyrk"; depends=[HH lattice latticeExtra rgl mgcv Rcmdr ]; };
RcmdrPlugin_IPSUR = derive { name="RcmdrPlugin.IPSUR"; version="0.2-1"; type="cran"; sha256="1lk7divj5va74prsnchq8yx9fbyym7xcsyqzkf72w448fgvvvwlv"; depends=[Rcmdr ]; };
RcmdrPlugin_KMggplot2 = derive { name="RcmdrPlugin.KMggplot2"; version="0.2-0"; type="cran"; sha256="1w4n7r3sp6h87wxhrzg500w90p8dzr43j28p8p1r2y0v0i0v6mk5"; depends=[ggplot2 ggthemes gtable plyr Rcmdr RColorBrewer scales survival tcltk2 ]; };
RcmdrPlugin_MA = derive { name="RcmdrPlugin.MA"; version="0.0-2"; type="cran"; sha256="1zivlc0r2mkxpx23ba76njmb2wnnjijysvza4f24dg4l47d0sr2p"; depends=[Rcmdr MAd metafor ]; };
RcmdrPlugin_MPAStats = derive { name="RcmdrPlugin.MPAStats"; version="1.1.5"; type="cran"; sha256="0km6yglhn0128kk1xm2mnrkr2lkv3r9zndhlv7h1dkd16aph3vm3"; depends=[Rcmdr ordinal ]; };
RcmdrPlugin_NMBU = derive { name="RcmdrPlugin.NMBU"; version="1.8.0.4"; type="cran"; sha256="1qxx685wd974dc2zj7myg0jlxz5s63lkjfycc66f3mcj1qk5j4k6"; depends=[mixlm MASS pls xtable Rcmdr ]; };
RcmdrPlugin_RMTCJags = derive { name="RcmdrPlugin.RMTCJags"; version="1.0"; type="cran"; sha256="0fwzr27pk7p82wj1xbajva1ips15jdfgwxzf7815bcm7x7w9xr8v"; depends=[Rcmdr runjags rmeta igraph coda rjags ]; };
RcmdrPlugin_ROC = derive { name="RcmdrPlugin.ROC"; version="1.0-18"; type="cran"; sha256="0alwsvwry4k65ps00zvdqky9rh663bbfaw15lhwydbgcpqdkn2n6"; depends=[Rcmdr ROCR pROC ResourceSelection ]; };
RcmdrPlugin_SCDA = derive { name="RcmdrPlugin.SCDA"; version="1.1"; type="cran"; sha256="0pd765ndh8d7hy6spds3r4pi09i0ak4b1ygwczp6yr2zcs1aikbc"; depends=[SCVA SCRT SCMA Rcmdr ]; };
RcmdrPlugin_SLC = derive { name="RcmdrPlugin.SLC"; version="0.2"; type="cran"; sha256="1nwpzmgfla1y05dxf81w0wmvvmvcq5jn5k8phlq30920ia7ybs8g"; depends=[SLC Rcmdr ]; };
RcmdrPlugin_SM = derive { name="RcmdrPlugin.SM"; version="0.3.1"; type="cran"; sha256="10sjh2x02kb6yaxbvd9ihc6777j4iv6wi6k42gyl3k7i2c39fyn3"; depends=[Rcmdr car RColorBrewer colorspace vcd ]; };
RcmdrPlugin_StatisticalURV = derive { name="RcmdrPlugin.StatisticalURV"; version="1.0-1"; type="cran"; sha256="04pqqgy12rnhwm8l0752hb9p5h4l11mm7flm6n9kkcvbkvagsbrz"; depends=[agricolae multcomp car Rcmdr ]; };
RcmdrPlugin_TeachingDemos = derive { name="RcmdrPlugin.TeachingDemos"; version="1.0-7"; type="cran"; sha256="0d473p0df99x9a3jfwb49gxsrcvslcw9yandramwq82cwy3sdcxw"; depends=[rgl TeachingDemos Rcmdr ]; };
RcmdrPlugin_UCA = derive { name="RcmdrPlugin.UCA"; version="1.0-2"; type="cran"; sha256="11a8jaz5vycq8hnpxzrbv1g8vyh0ic1y48952ah633b2j1m1ay8i"; depends=[Rcmdr ]; };
RcmdrPlugin_coin = derive { name="RcmdrPlugin.coin"; version="1.0-22"; type="cran"; sha256="0qmdjnjmgq52wgl4llg69q9x7hvwd73mz3swv0sv88v8zqg7xj93"; depends=[Rcmdr coin survival multcomp ]; };
RcmdrPlugin_depthTools = derive { name="RcmdrPlugin.depthTools"; version="1.3"; type="cran"; sha256="09mjn5jn4rdj1lh515vr3xlnk615flg13kcwbpk0an2si4xkgm9h"; depends=[Rcmdr depthTools ]; };
RcmdrPlugin_doex = derive { name="RcmdrPlugin.doex"; version="0.2.0"; type="cran"; sha256="0l3c8vwifyl8a7qkfaqxm7cws2cg1g501qa93w5svcgp03yf98mj"; depends=[Rcmdr multcomp ]; };
RcmdrPlugin_epack = derive { name="RcmdrPlugin.epack"; version="1.2.5"; type="cran"; sha256="1577qhac4rldifax5x3l39cddan6dhq2dv4iv2n64nadgrl0259w"; depends=[Rcmdr TeachingDemos tseries abind MASS xts forecast ]; };
RcmdrPlugin_lfstat = derive { name="RcmdrPlugin.lfstat"; version="0.7"; type="cran"; sha256="009yj9c5cr34k8qa16q19sp7c5iwv95g9swbm004nr18mfah8x9w"; depends=[lfstat Rcmdr ]; };
RcmdrPlugin_mosaic = derive { name="RcmdrPlugin.mosaic"; version="1.0-7"; type="cran"; sha256="0k6xaz2dfm9ch9lxqsh19jm8d4bbyjj2ffmjjxl57kanb3pvrrwv"; depends=[ENmisc vcd Hmisc Rcmdr ]; };
RcmdrPlugin_orloca = derive { name="RcmdrPlugin.orloca"; version="4.1"; type="cran"; sha256="19qj6llr5sfw267dgbn2jvrsisb54qbjhgaiigfzymk6px33wwmg"; depends=[orloca orloca_es Rcmdr ]; };
RcmdrPlugin_plotByGroup = derive { name="RcmdrPlugin.plotByGroup"; version="0.1-0"; type="cran"; sha256="10wc7lnihsrldsynq2s0syr1aqmvfnj9rhgwh1nkk7jlrwcgj0z6"; depends=[Rcmdr lattice ]; };
RcmdrPlugin_pointG = derive { name="RcmdrPlugin.pointG"; version="0.6.6"; type="cran"; sha256="0sc3akbpdys353va05b40g3rq8qihw0pmhvv0kckkhsgrbr8mc07"; depends=[Rcmdr RColorBrewer ]; };
RcmdrPlugin_qual = derive { name="RcmdrPlugin.qual"; version="2.2.6"; type="cran"; sha256="00wznh0k909cd9vwdj1ag3224xkqnwjsad1bfkgxbszsx0w6xvy9"; depends=[Rcmdr ]; };
RcmdrPlugin_sampling = derive { name="RcmdrPlugin.sampling"; version="1.1"; type="cran"; sha256="0fx0s63wq0si1jydl9xyj9ny7iglg91zpvkyrnc05i5pan9l3xd9"; depends=[lpSolve sampling MASS Rcmdr ]; };
RcmdrPlugin_seeg = derive { name="RcmdrPlugin.seeg"; version="1.0"; type="cran"; sha256="105c2rl3mrcv7r3iqa9d2zs6cys7vfpyydylkg2cggfqkghxgr95"; depends=[Rcmdr seeg spatstat sgeostat ]; };
RcmdrPlugin_sos = derive { name="RcmdrPlugin.sos"; version="0.3-0"; type="cran"; sha256="1r9jxzmf5ks62b5jbw0pkf388i1lnld6i27xhfzysjqdxcnzdsdz"; depends=[sos Rcmdr tcltk2 ]; };
RcmdrPlugin_steepness = derive { name="RcmdrPlugin.steepness"; version="0.3-2"; type="cran"; sha256="1na98sl42896y7yklaj07sn88lj6p6ik7gwy9ffaxzicqaa8plgf"; depends=[Rcmdr steepness ]; };
RcmdrPlugin_survival = derive { name="RcmdrPlugin.survival"; version="1.0-5"; type="cran"; sha256="1gcc9l1x0vmzmq7v09mzybig1js5jsgsq84096yk494w3dnzrr0a"; depends=[survival date Rcmdr ]; };
RcmdrPlugin_temis = derive { name="RcmdrPlugin.temis"; version="0.7.3"; type="cran"; sha256="1ssnky8basr135lhnagq7dlwlj1c9qrvm14hbdm0k3g9gnqmxkgh"; depends=[tm NLP slam zoo lattice Rcmdr tcltk2 ca R2HTML RColorBrewer latticeExtra stringi ]; };
Rcolombos = derive { name="Rcolombos"; version="1.5.2"; type="cran"; sha256="1whjn447jk2bjyjf0fwl0165f8x41fjzmkmagl6dfq1c4373sf27"; depends=[httr ]; };
Rcpi = derive { name="Rcpi"; version="1.2.0"; type="bioc"; sha256="02p4k91472lxrd2l0q1vs1zycbh2gjndc4wmgpkfvzakfcyr7vxr"; depends=[RCurl rjson rcdk foreach doParallel Biostrings GOSemSim ChemmineR fmcsR ]; };
Rcplex = derive { name="Rcplex"; version="0.3-2"; type="cran"; sha256="1hx9s327af7yawzyq5isvx8n6pvr0481lrfajgh8nihj7g69nmk7"; depends=[slam ]; };
Rcpp = derive { name="Rcpp"; version="0.11.6"; type="cran"; sha256="153gwzg2inxmzs5qrr87r3zabjvfh32i8kdivdy77b3c5yfrl5za"; depends=[ ]; };
Rcpp11 = derive { name="Rcpp11"; version="3.1.2.0"; type="cran"; sha256="1x6n1z7kizagr5ymvbwqb7nyn3lca4d4m0ks33zhcn9gay6g0fac"; depends=[ ]; };
RcppAPT = derive { name="RcppAPT"; version="0.0.1"; type="cran"; sha256="0fyya80bd3w22qbsbznj9y21dwlj30a16d8a8kww4x8bpvmyil5z"; depends=[Rcpp Rcpp ]; };
RcppAnnoy = derive { name="RcppAnnoy"; version="0.0.6"; type="cran"; sha256="1n4wrllhxn95lgkralvw5jjgff93nay5wdlyihih7f195fq5wqms"; depends=[Rcpp Rcpp ]; };
RcppArmadillo = derive { name="RcppArmadillo"; version="0.5.100.1.0"; type="cran"; sha256="0126g932fq24ns4yzj3z2dwagdy9qb7ckprk30zs7alq6rayfmn5"; depends=[Rcpp Rcpp ]; };
RcppBDT = derive { name="RcppBDT"; version="0.2.3"; type="cran"; sha256="0gnj4gz754l80df7w3d5qn7a57z9kq494n00wp6f7vr8aqgq8wi1"; depends=[Rcpp Rcpp BH ]; };
RcppCNPy = derive { name="RcppCNPy"; version="0.2.4"; type="cran"; sha256="1cawaxghbliy7hgvqz3y69asl43bl9mxf46nwpbxc0vx3cq15fnk"; depends=[Rcpp Rcpp ]; };
RcppClassic = derive { name="RcppClassic"; version="0.9.6"; type="cran"; sha256="1xhjama6f1iy7nagnx1y1pkqffrq8iyplllcar24vxr0zirgi1xi"; depends=[Rcpp Rcpp ]; };
RcppClassicExamples = derive { name="RcppClassicExamples"; version="0.1.1"; type="cran"; sha256="0shs12y3gj5p7gharjik48dqk0fy4k2jx7h22ppvgbs8z85qjrb8"; depends=[Rcpp RcppClassic Rcpp RcppClassic ]; };
RcppDE = derive { name="RcppDE"; version="0.1.2"; type="cran"; sha256="0ji5csfygqvrcahgx5gxy7dddpykckzw8hmqslsdl7l68wj60qkc"; depends=[Rcpp RcppArmadillo Rcpp RcppArmadillo ]; };
RcppDL = derive { name="RcppDL"; version="0.0.5"; type="cran"; sha256="1gii00bna6k9byaax7gsx42dv1jjnkrp4clbmdq59ybq3vkvw8z2"; depends=[Rcpp Rcpp ]; };
RcppEigen = derive { name="RcppEigen"; version="0.3.2.4.0"; type="cran"; sha256="1p6lfylj0mh059pxbp198r8nci8f89h0gb11x2pi0jgg7cqbxgh6"; depends=[Matrix Rcpp Rcpp ]; };
RcppExamples = derive { name="RcppExamples"; version="0.1.6"; type="cran"; sha256="1jnqh9nii5nncsah0lrkls8dqqcka9fnbvfg8ikl4cqjri17rpbv"; depends=[Rcpp Rcpp ]; };
RcppGSL = derive { name="RcppGSL"; version="0.2.4"; type="cran"; sha256="1nw1984siwxvihp68g7khr2c4a4nwyb4ll04r5302kksz4nh7mpi"; depends=[Rcpp Rcpp ]; };
RcppMLPACK = derive { name="RcppMLPACK"; version="1.0.10-2"; type="cran"; sha256="1hdvdk6ni2iganmldarklv635yzgzja36zcpflh5w45c5y3ysqvj"; depends=[Rcpp Rcpp RcppArmadillo BH ]; };
RcppOctave = derive { name="RcppOctave"; version="0.14.5"; type="cran"; sha256="0dplc2x9fq2jfzfbcxdd45pmiimapqb3xhyjkzd4k6q8xmqjw95p"; depends=[Rcpp pkgmaker digest stringr Rcpp ]; };
RcppParallel = derive { name="RcppParallel"; version="4.3.8"; type="cran"; sha256="0gk42v2qxjgz34ispcyr0mizbp3l9l0p6jpw3y59vafpbkgdk0yg"; depends=[ ]; };
RcppProgress = derive { name="RcppProgress"; version="0.2.1"; type="cran"; sha256="1dah99679hs6pcaazxyc52xpx5wawk95r2bpx9fx0i33fqs1s4ng"; depends=[Rcpp Rcpp ]; };
RcppRedis = derive { name="RcppRedis"; version="0.1.3"; type="cran"; sha256="0xpldiny2n121dp7vpj9l3bjvjhbfkdim5cassvvj2wms9q4jvh5"; depends=[Rcpp RApiSerialize Rcpp RApiSerialize ]; };
RcppRoll = derive { name="RcppRoll"; version="0.2.2"; type="cran"; sha256="19xzvxym8zbighndygkq4imfwc0abh4hqyq3qrr8aakyd096iisi"; depends=[Rcpp Rcpp ]; };
RcppSMC = derive { name="RcppSMC"; version="0.1.4"; type="cran"; sha256="1gcqffb6rkw029cpzv7bzsxaq0a5b032zjvriw6yjzyrpi944ip7"; depends=[Rcpp Rcpp ]; };
RcppStreams = derive { name="RcppStreams"; version="0.1.0"; type="cran"; sha256="0pb9ri2jajfh7643wx730bkmpvjvvmip682ynm2yn6x6brjll6jf"; depends=[Rcpp Rcpp BH ]; };
RcppTOML = derive { name="RcppTOML"; version="0.0.3"; type="cran"; sha256="0v9gxbr5gb7k273ld6vx2n0vzy22px13s7cvackbm7mhc68bp5jw"; depends=[Rcpp Rcpp ]; };
RcppXts = derive { name="RcppXts"; version="0.0.4"; type="cran"; sha256="143rhz97qh8sbr6p2fqzxz4cgigwprbqrizxpkjxyhq8347g8p4i"; depends=[Rcpp xts Rcpp xts ]; };
RcppZiggurat = derive { name="RcppZiggurat"; version="0.1.2"; type="cran"; sha256="05ai6s2j025fvr4znpmsvhxj4x7xyw2wsb9j3c5sv7aw1byfs0bb"; depends=[Rcpp Rcpp RcppGSL ]; };
Rcsdp = derive { name="Rcsdp"; version="0.1.53"; type="cran"; sha256="0x91hyx6z9f4zd7djxlq7dnznmr9skyzwbbcbjyid9hxbcfyvhcp"; depends=[ ]; };
Rd2roxygen = derive { name="Rd2roxygen"; version="1.6"; type="cran"; sha256="0y0vh1dfflh8lrgrdj9wfmwh70ywd9kiia49f09h849mv1ln1z60"; depends=[roxygen2 formatR ]; };
Rdisop = derive { name="Rdisop"; version="1.26.0"; type="bioc"; sha256="1d96mwc26nplax0063mz5ymz4x72vcd8zhsyn06c41r3j7ql6xl3"; depends=[RcppClassic RcppClassic Rcpp ]; };
Rdistance = derive { name="Rdistance"; version="1.2.2"; type="cran"; sha256="0njfcgcaw8vkvayd102wd5cdp1ai9ghqhi8zsijv6iifxs6yvwq9"; depends=[ ]; };
Rdpack = derive { name="Rdpack"; version="0.4-14"; type="cran"; sha256="19vscr9l63c074n76b6a6jbl956sphjhz0d50yiwp3cvqf28yssf"; depends=[gbRd bibtex ]; };
Rdsdp = derive { name="Rdsdp"; version="1.0.2"; type="cran"; sha256="0rpy3897dargrfrn6qd5m1j6i1pvfk2qa3cny0iacqkgqbg8a4wx"; depends=[ ]; };
Rdsm = derive { name="Rdsm"; version="2.1.1"; type="cran"; sha256="07fc6c2hv0vvg15va552y54cla1mrqsd75w3zh02vc7yd226l4rj"; depends=[bigmemory ]; };
ReCiPa = derive { name="ReCiPa"; version="3.0"; type="cran"; sha256="019vlvgxnqqlwghxygfqggzp2b4x2pqzdrbhaa703zdhm58k0n1g"; depends=[ ]; };
ReQON = derive { name="ReQON"; version="1.12.0"; type="bioc"; sha256="11b3b6s0i0kj8r3nadl6ckqsx7zqgapgwkivxd5wzswrrznpjjiz"; depends=[Rsamtools seqbias rJava ]; };
ReacTran = derive { name="ReacTran"; version="1.4.2"; type="cran"; sha256="1yc0k3wgg4yb6cqmjkyl25sfkbfcfxi5ria106w5jyx7dr5lfvdi"; depends=[rootSolve deSolve shape ]; };
ReactomePA = derive { name="ReactomePA"; version="1.10.1"; type="bioc"; sha256="0spq6zvvnjcxs9k7rfj27af7yb442md82r5bcyjp0vjn5l1g4ph7"; depends=[DOSE AnnotationDbi igraph graphite ]; };
ReadqPCR = derive { name="ReadqPCR"; version="1.12.0"; type="bioc"; sha256="1cy58aappyydqwan7jwaq2mr32pcy0xl2zzp8fzfvirjbrvj5d0f"; depends=[Biobase affy Biobase ]; };
RealVAMS = derive { name="RealVAMS"; version="0.3-1"; type="cran"; sha256="04d4sc3lhlklx1y016rmh3x27m8caxlp53qn2ks5wz52w26pfdhn"; depends=[Matrix numDeriv Rcpp Rcpp RcppArmadillo ]; };
RecordLinkage = derive { name="RecordLinkage"; version="0.4-7"; type="cran"; sha256="18v9jihp00xfz80vkg054v93w6grnp3aaf7prlzckwxs5i5lff70"; depends=[DBI RSQLite ff ffbase e1071 rpart ada ipred evd data_table nnet xtable RSQLite ]; };
Records = derive { name="Records"; version="1.0"; type="cran"; sha256="08y1g2m6bdrvv4rpkhd5v2lh7vprxy9bcx9ahp1f7p062bn2lwji"; depends=[ ]; };
RedeR = derive { name="RedeR"; version="1.14.10"; type="bioc"; sha256="1aijy1mzkpbjcgsjirqmjbw6gblgpb456sby5yzgqlnz5jqbh13j"; depends=[igraph RCurl XML ]; };
RefFreeEWAS = derive { name="RefFreeEWAS"; version="1.3"; type="cran"; sha256="1cb1q2nki0d18ia4cmi1sp7qih9hv7g1jk1kyp7vya5gp572z3cd"; depends=[isva ]; };
RefManageR = derive { name="RefManageR"; version="0.8.45"; type="cran"; sha256="16smvd25gdssiry2i8gs24km83hnsq2v6m225i7qadcmn9pyj4yh"; depends=[XML RCurl RJSONIO plyr bibtex lubridate stringr ]; };
RefNet = derive { name="RefNet"; version="1.2.1"; type="bioc"; sha256="0960aj6lmxnam8763nlqiz8acxm7d2lz9vn49zwh68lb4rpv8qqd"; depends=[IRanges PSICQUIC AnnotationHub RCurl shiny BiocGenerics ]; };
RefPlus = derive { name="RefPlus"; version="1.36.0"; type="bioc"; sha256="160i2zcfr9a1znx01bnssdj7737mvpmnkkycixs5npzy06hkf5mb"; depends=[Biobase affy affyPLM preprocessCore ]; };
RegClust = derive { name="RegClust"; version="1.0"; type="cran"; sha256="1d9w74phw4fgafglc18j7dpmln96fvxnf1kdc9zddgj90p8yfx63"; depends=[ ]; };
RegressionFactory = derive { name="RegressionFactory"; version="0.7.1"; type="cran"; sha256="1zx885x49ncp2cl1v8hxzc3r2njka9cjsadjykbvqp9pdbm4ga5l"; depends=[ ]; };
RelValAnalysis = derive { name="RelValAnalysis"; version="1.0"; type="cran"; sha256="1jl1gfj44gfkmc1yp6g5wwn4miydwpvxwrg76rnkv9454zrc5pvp"; depends=[zoo ]; };
Reliability = derive { name="Reliability"; version="0.0-2"; type="cran"; sha256="12zsicgbjqih3grbs62pw37x8wlkmnyc7g0yz6bqnfb4ym2yb7fg"; depends=[ ]; };
ReliabilityTheory = derive { name="ReliabilityTheory"; version="0.1.4"; type="cran"; sha256="1faab4z3rp0xqc0s0rrkw4kxgyc332xz3sjaz1wd4p6kiydds2hi"; depends=[igraph sfsmisc combinat FRACTION mcmc PhaseType actuar HI ]; };
Renext = derive { name="Renext"; version="2.1-10"; type="cran"; sha256="1c18v9xya73j8qnqvkb4fc7bfvzxnw904z5n9n9rgch70nrccqfn"; depends=[evd numDeriv ]; };
RenextGUI = derive { name="RenextGUI"; version="1.0-2"; type="cran"; sha256="0ghs8bwb6qdyvhghxvdy51cibylgm7bdbzgqsn1nbxam39yhvfv9"; depends=[gWidgets gWidgetstcltk Renext ]; };
Reol = derive { name="Reol"; version="1.55"; type="cran"; sha256="0147x3fvafc47zd2chgv3b40k480pcjpji8vm1d741i1p6ml448p"; depends=[XML RCurl ape ]; };
ReorderCluster = derive { name="ReorderCluster"; version="1.0"; type="cran"; sha256="0ss750frzvj0bm1w7zblmcsjpszhnbffwlkaw31sm003lbx9hy58"; depends=[gplots Rcpp Rcpp ]; };
RepeatedHighDim = derive { name="RepeatedHighDim"; version="2.0.0"; type="cran"; sha256="1n9w4jb25pm0mmsahlfhkp9jmhgp5b21l1g85gm2wbxqkjsg7g0g"; depends=[MASS nlme ]; };
Repitools = derive { name="Repitools"; version="1.12.1"; type="bioc"; sha256="1b6c87248z1f28v67zl3h6i7nfd0sxyc1hrbfv9xkkq1092fybms"; depends=[BiocGenerics S4Vectors IRanges GenomeInfoDb GenomicRanges GenomicAlignments BSgenome gplots MASS gsmoothr edgeR DNAcopy Ringo aroma_affymetrix Rsolnp Biostrings Rsamtools cluster rtracklayer ]; };
ReporteRs = derive { name="ReporteRs"; version="0.7.8"; type="cran"; sha256="1gzsdrkmz2g59m2653xfcl4d6zs010hzcjxr6sk26dhxj11alqgr"; depends=[ReporteRsjars rJava ]; };
ReporteRsjars = derive { name="ReporteRsjars"; version="0.0.2"; type="cran"; sha256="1abvgzxipg0cgiy26z14i99qydzqva6j2v7pnrxapysg7ml5cnjc"; depends=[rJava ]; };
ReportingTools = derive { name="ReportingTools"; version="2.6.0"; type="bioc"; sha256="1pk9qp65awffp7nfj71hppqr6nfcakfxp36bmbssjfirycdzj7qx"; depends=[knitr Biobase hwriter Category GOstats limma lattice AnnotationDbi edgeR annotate GSEABase BiocGenerics XML R_utils DESeq2 ggplot2 ggbio IRanges ]; };
ResistorArray = derive { name="ResistorArray"; version="1.0-28"; type="cran"; sha256="055zr4rybgrvg3wsgd9vhyjpvzdskrlss68r0g7rnj4yxkix0kxz"; depends=[ ]; };
ResourceSelection = derive { name="ResourceSelection"; version="0.2-4"; type="cran"; sha256="01r1w03paazyix5jjxww89falba1qfiqcznx79a6fmsiv8gm2x5w"; depends=[ ]; };
Rfacebook = derive { name="Rfacebook"; version="0.5"; type="cran"; sha256="0cl4s815i4yxp805j8nhqmva31imbd1xp3yxgi53qwjhagh4i57a"; depends=[httr rjson httpuv ]; };
Rfit = derive { name="Rfit"; version="0.21"; type="cran"; sha256="129z5ivwfxbh3rfwk98jnm6ibq5z9z3r9mhy9gv61jfr4ig78dcn"; depends=[quantreg ]; };
Rglpk = derive { name="Rglpk"; version="0.6-0"; type="cran"; sha256="0g0s63skabr0yqk5s9p66p77z8v3pr3hbnirbgdddlvkpphi08xx"; depends=[slam ]; };
RgoogleMaps = derive { name="RgoogleMaps"; version="1.2.0.7"; type="cran"; sha256="04k7h8hgxvgsccdiysbblplwjvn8m7g8h3anzdlxmmjaamd8l9lw"; depends=[png RJSONIO ]; };
Rgraphviz = derive { name="Rgraphviz"; version="2.10.0"; type="bioc"; sha256="1hs1vqix0frwyrrcmvgn9jjr8vzdflag5yc6l1fsslg99c5dmlys"; depends=[graph ]; };
Rhh = derive { name="Rhh"; version="1.0.2"; type="cran"; sha256="0blxim8yrb0qnbkc1z2q24q6ryakggq2zhaa223swla99ahmsny3"; depends=[ ]; };
Rhpc = derive { name="Rhpc"; version="0.14-261"; type="cran"; sha256="09rb68dys283gqmgn00v5skz6y5mcychg7hjrmi59pcfl5i7sk71"; depends=[ ]; };
RhpcBLASctl = derive { name="RhpcBLASctl"; version="0.14-256"; type="cran"; sha256="1s9mwwh269wwdqnb98jxsmpjm2bdf5dj4c3wkj5i81w2p1sm8qx3"; depends=[ ]; };
RidgeFusion = derive { name="RidgeFusion"; version="1.0-3"; type="cran"; sha256="10llmrsfpcqrkcbw7zj44kvfy7ywn9rk49n7zplilz8h94zzcmjv"; depends=[mvtnorm ]; };
Ridit = derive { name="Ridit"; version="1.1"; type="cran"; sha256="02cni6hzf1bsns7vi8vklnhc0pfb5vwqhjnnfnjnnaxpzpsbvdfn"; depends=[ ]; };
Ringo = derive { name="Ringo"; version="1.30.0"; type="bioc"; sha256="1krh2c5wqlc32i7s5wwggzba533i74d2zfxn9gic1k2mjnrax7b5"; depends=[Biobase RColorBrewer limma Matrix lattice BiocGenerics genefilter limma vsn ]; };
Risa = derive { name="Risa"; version="1.8.0"; type="bioc"; sha256="0iv7v93yikkxk63cjvi80a24akf0gfd24h8bswpl8vqib2nxj74l"; depends=[Biobase Rcpp biocViews affy xcms ]; };
Ritc = derive { name="Ritc"; version="1.0.1"; type="cran"; sha256="1h41s4jihzj0yj8xyan0zhhyyiq8m5567vw4gvmmr81p1qfzvva8"; depends=[minpack_lm ]; };
Rivivc = derive { name="Rivivc"; version="0.9"; type="cran"; sha256="0gl3040pp9nqm4g2ympnx80z64zfnn1hfsxka8ynd2cqhjn3b5i1"; depends=[signal ]; };
Rjpstatdb = derive { name="Rjpstatdb"; version="0.1"; type="cran"; sha256="0iwgsp3mblp7bsx88wfpqn09y1xrkingfkm3z9jsi2bwrnrjc2iv"; depends=[RCurl XML ]; };
Rlab = derive { name="Rlab"; version="2.15.1"; type="cran"; sha256="1pb0pj84i1s4ckdmcglqxa8brhjha4y4rfm9x0na15n7d9lzi9ag"; depends=[ ]; };
Rlabkey = derive { name="Rlabkey"; version="2.1.127"; type="cran"; sha256="1bacl4ax9bgn27180hgh6gr4y0bwl3q4y18mc0cyb06yagzci5d9"; depends=[RCurl rjson ]; };
Rlibeemd = derive { name="Rlibeemd"; version="1.3.2"; type="cran"; sha256="0db6x2cry011ymmfy1pxgdyjdn6l93d8wmixp59r51yij2s775xq"; depends=[Rcpp Rcpp ]; };
Rlinkedin = derive { name="Rlinkedin"; version="0.1"; type="cran"; sha256="0w30zv4a842vckk4yqsh8hhkdz2gy650a0x29aacp77p9y79g9yn"; depends=[httr XML httpuv ]; };
Rmagpie = derive { name="Rmagpie"; version="1.22.0"; type="bioc"; sha256="14v9kif2srbmqw2dpyrh8kr1598n63zr5d0lx2r57c4jh5g0cg9p"; depends=[Biobase Biobase e1071 kernlab pamr ]; };
Rmalschains = derive { name="Rmalschains"; version="0.2-2"; type="cran"; sha256="1ki3igj78sk4kk1cvbzrgzjdvw6kbdb7dmqglh6ws2nmr5b6a7fx"; depends=[Rcpp Rcpp ]; };
RmiR = derive { name="RmiR"; version="1.22.0"; type="bioc"; sha256="0hgg6xjj6jjgizs1qgjx3cgqky188z1b5kqdvf2ryhcn7gjyym2r"; depends=[RSVGTipsDevice DBI ]; };
Rmisc = derive { name="Rmisc"; version="1.5"; type="cran"; sha256="1ijjhfy3v91fspid77rrkc5dkcb2lav37wc3f4k5lwrn24wzy5y8"; depends=[lattice plyr ]; };
Rmixmod = derive { name="Rmixmod"; version="2.0.2"; type="cran"; sha256="1qv6zymkgsbplrq4aa87lvcsv75dssj8qqq2h9665v31jsgx84lr"; depends=[Rcpp Rcpp ]; };
RmixmodCombi = derive { name="RmixmodCombi"; version="1.0"; type="cran"; sha256="0cwcyclq143938wby0aj265xyib6gbca1br3x09ijliaj3pjgdqi"; depends=[Rmixmod Rcpp ]; };
Rmonkey = derive { name="Rmonkey"; version="0.2.11"; type="cran"; sha256="0dfn38ni06k0q7a10ilb3169ffc71mizf25jfiqmbmqw08az8bhf"; depends=[RCurl httr jsonlite plyr ]; };
Rmosek = derive { name="Rmosek"; version="1.2.5.1"; type="cran"; sha256="0zggv699s93i9g98qjs4ci2nprgfkzq45lpzgrbhldsxiflf27gz"; depends=[Matrix Matrix ]; };
Rmpfr = derive { name="Rmpfr"; version="0.5-7"; type="cran"; sha256="0bqjs65wlnpq95smnnwpqjrqgwda412z2qbyafa8jw6972lmsyq9"; depends=[gmp ]; };
Rmpi = derive { name="Rmpi"; version="0.6-5"; type="cran"; sha256="0i9z3c45jyxy86yh3f2nja5miv5dbnipm7fpm751i7qh630acykc"; depends=[ ]; };
RnavGraph = derive { name="RnavGraph"; version="0.1.8"; type="cran"; sha256="1fwzfy41gdr1aw1wg6dw04mxwwpp5s9x2inxyq3bc9s8bm1rlxih"; depends=[graph scagnostics rgl ]; };
RnavGraphImageData = derive { name="RnavGraphImageData"; version="0.0.3"; type="cran"; sha256="1mrh0p2ckczw4xr1kfmcf0ri2h2fhp7fmf8sn2h1capmm12i1q8f"; depends=[ ]; };
Rnits = derive { name="Rnits"; version="1.0.0"; type="bioc"; sha256="1v41764jb3q4is99w6ykdihxva8imma6zid16k56xg9b331pnz43"; depends=[Biobase ggplot2 limma affy boot impute qvalue reshape2 ]; };
RobAStBase = derive { name="RobAStBase"; version="0.9"; type="cran"; sha256="1428xaplcjq6r0migbaqncfj0iz8hzzfabmabm167p44wa2bwbwh"; depends=[rrcov distr distrEx distrMod RandVar ]; };
RobLox = derive { name="RobLox"; version="0.9"; type="cran"; sha256="1ws6bkzvg1y1cwmls71das0lih6gncx5w3ncd2siznapd4n44p69"; depends=[distrMod RobAStBase lattice RColorBrewer Biobase RandVar distr ]; };
RobLoxBioC = derive { name="RobLoxBioC"; version="0.9"; type="cran"; sha256="0ia7vn8x8whyp8kl7mpwd6fd0yv0y3pb1mppnh2329x7xdvcs5j4"; depends=[RobLox affy BiocGenerics Biobase beadarray lattice RColorBrewer distr ]; };
RobPer = derive { name="RobPer"; version="1.2.1"; type="cran"; sha256="1impcp2yfxxh439a70s2gqwfng6cgi123y20fd01b84jkp9gx3hi"; depends=[robustbase quantreg BB rgenoud ]; };
RobRSVD = derive { name="RobRSVD"; version="1.0"; type="cran"; sha256="07z5fw8j5lq7nyxgkvb9i4iwb5inddz2ib4m2bjx6q4c1ricpqz9"; depends=[ ]; };
RobRex = derive { name="RobRex"; version="0.9"; type="cran"; sha256="0ii539mjq462n1lbnyv3whl8b1agvhvlz31wwyz911gb40isl639"; depends=[ROptRegTS ]; };
RobustAFT = derive { name="RobustAFT"; version="1.3"; type="cran"; sha256="0cxyvq75bwhjh3qzfj6ynmy8mby6yjy4r851sx80b8ls6rv4cf3z"; depends=[robustbase survival ]; };
RobustRankAggreg = derive { name="RobustRankAggreg"; version="1.1"; type="cran"; sha256="1pslqyr1lji1zvcrwyax4zg2s81p1jnhfldz8mdfhsp5y7v8iar3"; depends=[ ]; };
RockFab = derive { name="RockFab"; version="1.2"; type="cran"; sha256="1b5mhfll5vmqwl4pblmclyx9604vn07jyza02rm0jcsx915ms8sc"; depends=[rgl EBImage ]; };
Roleswitch = derive { name="Roleswitch"; version="1.4.1"; type="bioc"; sha256="1halab8xr5z4kwnirxrmax72ncsw5cmjh7wg9364kjyrgcrkn8am"; depends=[pracma reshape plotrix microRNA biomaRt Biostrings Biobase DBI ]; };
Rolexa = derive { name="Rolexa"; version="1.22.0"; type="bioc"; sha256="0864zas9kbdi3vsw4la08zdf62xnbrfdbghvvfva2kagn783h6l5"; depends=[ShortRead mclust Biostrings IRanges ShortRead ]; };
Rook = derive { name="Rook"; version="1.1-1"; type="cran"; sha256="00s9a0kr9rwxvlq433daxjk4ji8m0w60hjdprf502msw9kxfrx00"; depends=[brew ]; };
RootsExtremaInflections = derive { name="RootsExtremaInflections"; version="1.0"; type="cran"; sha256="1vcbjxx1yfla71fmmf5w8dqp0vqw93dxsjsvz0vj28bfqmkmh554"; depends=[ ]; };
Rothermel = derive { name="Rothermel"; version="1.2"; type="cran"; sha256="0zrz2ck3q0vg0wpa4528rjlrfnvlyiy0x1gr5z1aax1by7mdj82s"; depends=[GA ftsa ]; };
RoughSetKnowledgeReduction = derive { name="RoughSetKnowledgeReduction"; version="0.1"; type="cran"; sha256="0zn6y2rp78vay9zwijpzhjpyq1gmcsa13m9fcsxkd1p2c8g5rbmf"; depends=[ ]; };
RoughSets = derive { name="RoughSets"; version="1.2-1"; type="cran"; sha256="06bykfd26qdll0xadvvp0lljcibg613xi02gq5q8x3h0l9qa4c2x"; depends=[Rcpp Rcpp ]; };
Rpdb = derive { name="Rpdb"; version="2.2"; type="cran"; sha256="0gf6qab05a3ky8skbbjiadizi1gs4pcw3zp25qj5gn82lb6382pd"; depends=[rgl ]; };
Rphylip = derive { name="Rphylip"; version="0.1-23"; type="cran"; sha256="0kpqmik4bhr74ib8yvaavr10z4v4w3li5vibdhz7lvz35jfirg9r"; depends=[ape ]; };
Rpoppler = derive { name="Rpoppler"; version="0.0-1"; type="cran"; sha256="01zsbm538yhwm1cyz5j6x2ngz05yqj16yxyvyxqhn6jp8d0885jh"; depends=[ ]; };
RpsiXML = derive { name="RpsiXML"; version="2.8.0"; type="bioc"; sha256="0280clvvshkidkx8xixdn215023rf6xvjhmh3h3gdr7q9msmz4q8"; depends=[annotate graph Biobase RBGL XML hypergraph AnnotationDbi ]; };
Rqc = derive { name="Rqc"; version="1.0.4"; type="bioc"; sha256="1wv1yvczxq5jmp3q01yfmkl0w4xq0p1flm2mvi17lfdm4xnh1xlj"; depends=[BiocParallel ShortRead ggplot2 BiocGenerics Biostrings IRanges reshape2 S4Vectors knitr BiocStyle ]; };
Rquake = derive { name="Rquake"; version="2.3-1"; type="cran"; sha256="0xb8j76jjv6k3r8nzjxdddic4rq1yj7qsh85asl38qwj7483cyc4"; depends=[RPMG RSEIS GEOmap MBA minpack_lm rgl cda ]; };
Rramas = derive { name="Rramas"; version="0.1-4"; type="cran"; sha256="191rm2ylvf3ffc9i4wpjvfbsinmw7s1m0wcq24j4qs4fxg8qqzyq"; depends=[diagram ]; };
Rrdrand = derive { name="Rrdrand"; version="0.1-10"; type="cran"; sha256="1j72v44scmghm29jxjdy0651qlkhsnrb3bb5qff82451mbd17bzb"; depends=[ ]; };
Rsampletrees = derive { name="Rsampletrees"; version="0.1"; type="cran"; sha256="02wh99nxlhyrivr655825nqcl3w0mvppnmvc9yrkdbkjw0l1zsjd"; depends=[haplo_stats ape ]; };
Rsamtools = derive { name="Rsamtools"; version="1.18.3"; type="bioc"; sha256="14bpdz9yad10dvb49921di3ci8d32y76c3034xqcnnkdcdzcvbsb"; depends=[S4Vectors IRanges GenomeInfoDb GenomicRanges XVector Biostrings BiocGenerics zlibbioc bitops S4Vectors IRanges XVector Biostrings ]; };
Rserve = derive { name="Rserve"; version="1.7-3"; type="cran"; sha256="09rha4p86vak7ss721mwp5bm5ig09xam8zlqv63n9wf36v3kdmpn"; depends=[ ]; };
RsimMosaic = derive { name="RsimMosaic"; version="1.0.2"; type="cran"; sha256="0d5z5dffi2prz0r31x08c8gw83448bhkma5mzcmrdlg6kx5y7dp8"; depends=[jpeg fields RANN ]; };
Rsolnp = derive { name="Rsolnp"; version="1.15"; type="cran"; sha256="10w9gd1l62r638sh00fbgcpinsyyanfrqjdskrpk7z70fnyvwqm2"; depends=[truncnorm ]; };
Rsomoclu = derive { name="Rsomoclu"; version="1.4.1"; type="cran"; sha256="0yr0nsm2b7wg1x57db9zclqnqqbmhyax9vgw13ynqirq2ysxxsg6"; depends=[Rcpp ]; };
Rssa = derive { name="Rssa"; version="0.13"; type="cran"; sha256="1prcivlwxky4h33ybky7n3wpn4vj1wm898ifsrhs1j9ywla1m2zf"; depends=[svd forecast lattice ]; };
Rsubread = derive { name="Rsubread"; version="1.16.1"; type="bioc"; sha256="0zxvhj25hmd9496wfmc1dp9kaf84640z8xkgyck7llhq80cd4d3a"; depends=[ ]; };
Rsundials = derive { name="Rsundials"; version="1.6"; type="cran"; sha256="0vrvxsznbclgls4jljc59lyli6cw9k1a3wapfrs6xbkqi8865iif"; depends=[ ]; };
Rsymphony = derive { name="Rsymphony"; version="0.1-19"; type="cran"; sha256="0m9xbyp4hxz9rbc8nd7q0fwzgl6126iv0sxwifamxkc9z8vr86js"; depends=[ ]; };
Rtreemix = derive { name="Rtreemix"; version="1.28.0"; type="bioc"; sha256="0gshbb9gxzi3gdxjlp9g920dmy6hdp59ddlb6pyiva33pq9yhpz0"; depends=[graph Biobase Hmisc ]; };
Rtsne = derive { name="Rtsne"; version="0.9"; type="cran"; sha256="1b3ilfirlhmbv1914rwnj9mamn6clzi86csp3szfwg93gk23yymn"; depends=[Rcpp Rcpp ]; };
Rttf2pt1 = derive { name="Rttf2pt1"; version="1.3.3"; type="cran"; sha256="16bnhrg86rzi4g4zf235m1g8amyhcwxpw0wgcxynfiinm2fl4y1n"; depends=[ ]; };
Ruchardet = derive { name="Ruchardet"; version="0.0-3"; type="cran"; sha256="0dgldi6fgp949c3455m9b4q6crqv530jph210xzph41vgw8a2q2v"; depends=[Rcpp Rcpp ]; };
Runiversal = derive { name="Runiversal"; version="1.0.2"; type="cran"; sha256="0667mspsjydmxi848c6wsf14gz72bmdj9b3lilma92b7fhqnv7ai"; depends=[ ]; };
Runuran = derive { name="Runuran"; version="0.21.0"; type="cran"; sha256="1p33z9h2zj6fx42rlq6yajd6lwvzy4a1a5gs67dz5k1zbza8avw0"; depends=[ ]; };
RunuranGUI = derive { name="RunuranGUI"; version="0.1"; type="cran"; sha256="0wm91mzgd01qjinj94fr53m0gkxjvx7yjhmwbkrxsjn6mjklq72l"; depends=[Runuran rvgtest gWidgets gWidgetsRGtk2 cairoDevice ]; };
Rvcg = derive { name="Rvcg"; version="0.11"; type="cran"; sha256="0id732zhncy6x47qdbyddcm3f8l1r4j53ya4qj3zcf81q15dadw0"; depends=[Rcpp Rcpp RcppEigen ]; };
Rvmmin = derive { name="Rvmmin"; version="2013-11.12"; type="cran"; sha256="1ljzydvizbbv0jv5lbfinypkixfy7zsvplisb866f8w45amd152a"; depends=[optextras ]; };
Rwave = derive { name="Rwave"; version="2.4"; type="cran"; sha256="1ynj6higx0j6iv033lx8h3i9hlg5b53nl2gv6fwjny4ygm8b1mjm"; depends=[ ]; };
Rwinsteps = derive { name="Rwinsteps"; version="1.0-1"; type="cran"; sha256="0kzngkan9vydibnr3xm4pyz4v6kz0r4h19f0ngqpri07fkhdsxzd"; depends=[ ]; };
RxCEcolInf = derive { name="RxCEcolInf"; version="0.1-3"; type="cran"; sha256="04d6ffl4qs2vjbk0ibvyq17i2l26qnvxr72s6p3f8q4px33rh4kh"; depends=[MASS MCMCpack mvtnorm lattice ]; };
RxnSim = derive { name="RxnSim"; version="1.0.1"; type="cran"; sha256="17agz3kw7pj4mpl25y1n8l9lqfj63wn70rqpdkcpnx7j6s6933vx"; depends=[rJava fingerprint data_table rcdk ]; };
Ryacas = derive { name="Ryacas"; version="0.2-12.1"; type="cran"; sha256="18dpnr6kj0a8f2jcbj9f6ahd0mg7bm1qm8dcs1wh8kmjl3klr1y8"; depends=[XML ]; };
Rz = derive { name="Rz"; version="0.9-1"; type="cran"; sha256="1cpsmfxijrfx06ydpjzbaak7gkad4jjk1ph9453l9zly1cwzgspj"; depends=[foreign memisc psych ggplot2 RGtk2 formatR ]; };
S4Vectors = derive { name="S4Vectors"; version="0.4.0"; type="bioc"; sha256="0y3bqkx1jg6xr0b24hd5akj61yjwnmzafld81ic5hi7kz8rncsca"; depends=[BiocGenerics BiocGenerics ]; };
SAENET = derive { name="SAENET"; version="1.0"; type="cran"; sha256="0mnzv1a3xmbf4w9mgsi2kf20kyhcsadaih63wb0zvraqv5ijdd31"; depends=[autoencoder neuralnet ]; };
SAFD = derive { name="SAFD"; version="0.4"; type="cran"; sha256="1zbja8bgva2j24ks4m14hbf4s0n674lj89nfxkkmwrljzsmjrjhv"; depends=[ ]; };
SAGx = derive { name="SAGx"; version="1.40.0"; type="bioc"; sha256="09vx06m974max7l2wm7d42xsbwayapkfi4nzc83n7nykkx7vqpx3"; depends=[multtest Biobase ]; };
SAM = derive { name="SAM"; version="1.0.5"; type="cran"; sha256="1fki43bp6kan6ls2rd6vrp1mcwvz92wzcr7x6sjirbmr03smcypr"; depends=[ ]; };
SAMUR = derive { name="SAMUR"; version="0.6"; type="cran"; sha256="0iyv7ljjrgakgdmpylcxk3m3xbm2xwc6lbjvl7sk1pmxvpx3hhhc"; depends=[Matching ]; };
SAMURAI = derive { name="SAMURAI"; version="1.2.1"; type="cran"; sha256="02fipbjcsbp2b2957x6183z20icv1yly2pd1747nyww9bmpa7ycm"; depends=[metafor ]; };
SANTA = derive { name="SANTA"; version="2.2.0"; type="bioc"; sha256="013bvam139ch20rr774rf1nsssl1y0ckaizsn0ryqpgvrlc78ik7"; depends=[igraph Matrix snow stringr ]; };
SAPP = derive { name="SAPP"; version="1.0.4"; type="cran"; sha256="0a86vz390v2g5lz1r33qrmhgvak4rpfmpxy39shnivhagnrsarkl"; depends=[ ]; };
SASPECT = derive { name="SASPECT"; version="0.1-1"; type="cran"; sha256="1d3yqxg76h9y485pl5mvlx6ls1076f80b320yvx4zxmqq9yxmaba"; depends=[ ]; };
SAScii = derive { name="SAScii"; version="1.0"; type="cran"; sha256="0nq859xmrvpbifk8q1kbx3svg61rqdg8p8gr1pn85fr0j3w7h666"; depends=[ ]; };
SASmixed = derive { name="SASmixed"; version="1.0-4"; type="cran"; sha256="0491x4a3fwiy26whclrc19alcdxccn40ghpsgwjkn9sxi8vj5wvm"; depends=[ ]; };
SASxport = derive { name="SASxport"; version="1.5.0"; type="cran"; sha256="0sgxpjv9ilz2zb13kkb0fqjfbamrczxpy9rwvfhh46bmx4i038iq"; depends=[chron Hmisc ]; };
SAVE = derive { name="SAVE"; version="1.0"; type="cran"; sha256="1m9rrga8x00hlvn0c1jcz6yz14pdm6h3dq14905mq49sw63c7zll"; depends=[coda DiceKriging ]; };
SBMLR = derive { name="SBMLR"; version="1.62.0"; type="bioc"; sha256="0fx0354iqp7m6g42pq9xb34vzy55vqwdh2sxsha835whz5db96vh"; depends=[XML deSolve ]; };
SBRect = derive { name="SBRect"; version="0.26"; type="cran"; sha256="16g0ciy9q9irypsl8x36i0lavl41j3af13r2si0by8q6wj56pxi4"; depends=[rJava ]; };
SBSA = derive { name="SBSA"; version="0.2.3"; type="cran"; sha256="1v23lzzziyjlvgn5p2n1qcq2zv9hsyz2w15lbnfi5wvinxhlg8sc"; depends=[Rcpp Rcpp RcppArmadillo ]; };
SCAN_UPC = derive { name="SCAN.UPC"; version="2.8.1"; type="bioc"; sha256="1ky1bp4856dk9hsrvij9k9yr0ygzvx1wmn25jk56lk80kzyybx9m"; depends=[Biobase oligo Biostrings GEOquery affy affyio foreach sva MASS IRanges ]; };
SCBmeanfd = derive { name="SCBmeanfd"; version="1.1"; type="cran"; sha256="0pcyrnzlnlyn4v3lyv7pv01v2lh4vig1x4x8g98lpccpi1bimd4z"; depends=[boot KernSmooth ]; };
SCEPtER = derive { name="SCEPtER"; version="0.2-1"; type="cran"; sha256="19sphwcsj2z05dvpmz7vgxykzyghkfn79jwqvk6d66daman679mv"; depends=[MASS ]; };
SCEPtERbinary = derive { name="SCEPtERbinary"; version="0.1-1"; type="cran"; sha256="0rab0widfndx94dn1nchhs06q0d57vq2n3xy79p130l9rgp9v489"; depends=[MASS SCEPtER ]; };
SCGLR = derive { name="SCGLR"; version="2.0.2"; type="cran"; sha256="1g8vgmlsc88g00rf3pxqszli4r9v3r4md6vq5lxa7j9wn28c7rp1"; depends=[Matrix Formula expm ggplot2 pROC ]; };
SCI = derive { name="SCI"; version="1.0-1"; type="cran"; sha256="1m5a15a4n0zjqykq38pyw9133g2ih4ykbgak8c8khq8p0isnl8qb"; depends=[fitdistrplus lmomco ]; };
SCMA = derive { name="SCMA"; version="1.1.1"; type="cran"; sha256="1jbx4fkixm31zdlfx65xxdzpf77dzpqazy1l6qyjz7q672s2vidd"; depends=[ ]; };
SCORER2 = derive { name="SCORER2"; version="0.99.0"; type="cran"; sha256="1a28wga69ip9s98ch2dqgl0qkwa3w6frmaqcvhclc360ik813mxq"; depends=[ ]; };
SCRT = derive { name="SCRT"; version="1.1.1"; type="cran"; sha256="02sndf5r1y27pgkw4wd9bhz7jhzk3cv78hp3xl222phjznjf2lzi"; depends=[ ]; };
SCVA = derive { name="SCVA"; version="1.1.1"; type="cran"; sha256="1n660pml288ia4x18kjbrcx0n1cnasdxhl6pymh1nzxm4ai2hinc"; depends=[ ]; };
SCperf = derive { name="SCperf"; version="1.0"; type="cran"; sha256="1v9l7d9lil2gy5bw6i7bzc24808m063xaw2spl005j0a9rh4ag41"; depends=[ ]; };
SDD = derive { name="SDD"; version="1.2"; type="cran"; sha256="0wzgm1hgjv5s00bpd7j387qbvn5zvyrrd5fr2rgyll4cw9p4sd33"; depends=[Hmisc sm tseries rpanel rgl ]; };
SDDE = derive { name="SDDE"; version="1.0.0"; type="cran"; sha256="1vd96w6qjy7ak85gj1c255fb0ifaffp79k6swqnvskvkq2cc524m"; depends=[igraph doParallel foreach iterators ]; };
SDMTools = derive { name="SDMTools"; version="1.1-221"; type="cran"; sha256="1kacrpamshv7wz83yn45sfbw4m9c44xrrngzcklnwx8gcxx2knm6"; depends=[R_utils ]; };
SDaA = derive { name="SDaA"; version="0.1-3"; type="cran"; sha256="0z10ba4s9r850fjhnrirj2jgnfj931vwzi3kw9502r5k7941lsx0"; depends=[ ]; };
SE_IGE = derive { name="SE.IGE"; version="1.0"; type="cran"; sha256="0gx3kdsdl3rjms6fxabxz51z84r9mcy4934l2g43ifrxbyphnias"; depends=[ ]; };
SEAsic = derive { name="SEAsic"; version="0.1"; type="cran"; sha256="1mg01sag6n1qldjvmvbasac86s7sbhi4k99kdkav2hdh6n9jg467"; depends=[ ]; };
SECP = derive { name="SECP"; version="0.1-4"; type="cran"; sha256="0a4j0ggrbs0jzcph70hc4f5alln4kdn2mrkp3jbh321a6494kwl1"; depends=[SPSL ]; };
SEER2R = derive { name="SEER2R"; version="1.0"; type="cran"; sha256="0lk0kkp8sv3nl19zwqd7449mmjxsj3pqpzdmqf70qf8xh2pqyvzd"; depends=[ ]; };
SEERaBomb = derive { name="SEERaBomb"; version="2015.1"; type="cran"; sha256="1pab5088pjhsx0lwh2xgm7hril0qpb0jprwm61d8c30bgrrqxni9"; depends=[RSQLite LaF dplyr rgl XLConnect Rcpp reshape2 mgcv DBI Rcpp ]; };
SEL = derive { name="SEL"; version="1.0-2"; type="cran"; sha256="1nrk0fx6ff330abq8askvp0790xnfv00m3sraqcr32hciw6ks421"; depends=[quadprog lattice ]; };
SEMID = derive { name="SEMID"; version="0.1"; type="cran"; sha256="1bxdjdyqlvxz339jdgw90qi6kvfhjdmga38vhfl3ldlxfv2s9gfk"; depends=[igraph ]; };
SEMModComp = derive { name="SEMModComp"; version="1.0"; type="cran"; sha256="1za67470f13z8jsy3z588c7iiiz993d3vjqrb8v9fann2r6sf1md"; depends=[mvtnorm ]; };
SETPath = derive { name="SETPath"; version="1.0"; type="cran"; sha256="1dpgmki0dhph13h1fd3mbf308746wccgfz5g5gdm7bwbjnmjzd98"; depends=[ ]; };
SEchart = derive { name="SEchart"; version="0.1"; type="cran"; sha256="19gqcd6xzwg37nzc67p88ip4i0v2f59ds85xfw9qq8lybvdm76k2"; depends=[JM ]; };
SGCS = derive { name="SGCS"; version="2.3"; type="cran"; sha256="1c917g03s50mp96lqhkjagsd2cq9rjbprlwf3h409dj59g6k2zx6"; depends=[spatstat ]; };
SGL = derive { name="SGL"; version="1.1"; type="cran"; sha256="1wc430jqn3li102zpfmyyavfbab7x7ww9p89clxsndyigrrbjdr7"; depends=[ ]; };
SGP = derive { name="SGP"; version="1.2-0.0"; type="cran"; sha256="0v4ljhvfrvl6izprcrw8w36474fjz0v1kpcsg0sx32359amd3zxz"; depends=[Cairo colorspace data_table doParallel foreach gridBase iterators jsonlite plyr quantreg reshape2 RSQLite sn ]; };
SGPdata = derive { name="SGPdata"; version="8.0-0.0"; type="cran"; sha256="0g25s2wcj47394fm16maygafnynizma3mgb3r65b5p9c27swk4v8"; depends=[ ]; };
SGSeq = derive { name="SGSeq"; version="1.0.6"; type="bioc"; sha256="08ngcqr5h0q2y37s0vqcafjyxa5p2shf1zmsydynrghvmfbjlksl"; depends=[BiocParallel GenomicRanges IRanges AnnotationDbi BiocGenerics Biostrings GenomicAlignments GenomicFeatures GenomeInfoDb igraph Rsamtools rtracklayer S4Vectors ]; };
SHIP = derive { name="SHIP"; version="1.0.2"; type="cran"; sha256="0b83cclibdz1r7sz968nmca4najwgps9wrdlsh4gxrl7fq40k4ln"; depends=[ ]; };
SID = derive { name="SID"; version="1.0"; type="cran"; sha256="1446zy4rqbw0lpyhnhyd06dzv238dxpdxgmsk34hqv7g3j7q5h1w"; depends=[pcalg igraph RBGL Matrix ]; };
SII = derive { name="SII"; version="1.0.3"; type="cran"; sha256="1k9mvz6g25qs351c0vx7n5h77kb6k833jrcww14ni59yc9jgvsyg"; depends=[ ]; };
SIM = derive { name="SIM"; version="1.36.0"; type="bioc"; sha256="1d6nv0wszar176lr42jwz2mab5fm7v39sany0gcfqypdw1bb94i4"; depends=[quantreg globaltest quantsmooth ]; };
SIMMS = derive { name="SIMMS"; version="1.0.1"; type="cran"; sha256="08kl9kzxqmzlacs8jfys0w7rngx93mlj4k1g8wzg4hmnlmic8l3k"; depends=[survival MASS glmnet ]; };
SIN = derive { name="SIN"; version="0.6"; type="cran"; sha256="0vq80m3vl8spdnlkwvwy0gk3ziyybqzjp3scnfdcpn942ds7sgg9"; depends=[ ]; };
SINGLE = derive { name="SINGLE"; version="1.3"; type="cran"; sha256="0wd7jzys51rnwr5rhf2llpygqxydjrv0dill19v8sz9w0madkil4"; depends=[flsa igraph dse Matrix ]; };
SIS = derive { name="SIS"; version="0.7-5"; type="cran"; sha256="197zf4s4f5wm8sl9h5vxwywmml7n05fwqlxbldn6wkpxix7gx0xm"; depends=[glmnet ncvreg survival ]; };
SJava = derive { name="SJava"; version="0.92.1"; type="bioc"; sha256="0d5v3wvky06f8sd0hr39sw61f2a084winjqy4cd8vkmnxh6y8xcf"; depends=[ ]; };
SKAT = derive { name="SKAT"; version="1.0.7"; type="cran"; sha256="0f8ln37871qsnxfcfcrnq91krcgwd85cz6g0p78px4yg3g4jwsn3"; depends=[ ]; };
SLC = derive { name="SLC"; version="0.3"; type="cran"; sha256="0l0y1sjj0glsb7vwla99ijclcgaq2y85bgz1wqm348n4shsmm2rs"; depends=[ ]; };
SLGI = derive { name="SLGI"; version="1.26.0"; type="bioc"; sha256="1b47jz7bgccm345mip5b628cnk2qwd3z0177nyx7lkkx8pyb0fp0"; depends=[ScISI lattice AnnotationDbi Biobase ScISI lattice BiocGenerics ]; };
SLHD = derive { name="SLHD"; version="2.1-1"; type="cran"; sha256="0y3ilxd0phmks8zkmpgw7p5zrkwq4k95h976cwk58pavvhfwj9kb"; depends=[ ]; };
SLOPE = derive { name="SLOPE"; version="0.1.1"; type="cran"; sha256="1v58jcd60i7hhs8wirdfqr1sskdrynnwcnqsr3q19vgnj4x1dn8f"; depends=[Rcpp Rcpp ]; };
SLqPCR = derive { name="SLqPCR"; version="1.32.0"; type="bioc"; sha256="02px4mkqp6mj7bkakqnp85p77ipway96k91jznf3vcingsd52d25"; depends=[ ]; };
SMAP = derive { name="SMAP"; version="1.30.0"; type="bioc"; sha256="0i44gpvc9939q3vyi45d1a7ixpsrc448bf0dmsnrzljgqzv322cv"; depends=[ ]; };
SMC = derive { name="SMC"; version="1.1"; type="cran"; sha256="1r4ajgi785lmpnlxrba0n6phmk1f0mb6b5yqk6hx8gng2w8ggclz"; depends=[ ]; };
SMCP = derive { name="SMCP"; version="1.1.3"; type="cran"; sha256="0ksx2ibz849vhrz2px9p7z8hlgvspz7kxhadvhk5mhkfbhrnpdf0"; depends=[ ]; };
SMCRM = derive { name="SMCRM"; version="0.0-3"; type="cran"; sha256="1x06w00sdijhg5h1s61q4ym5wgk97pw9md6api7if2cxjv7h5zcy"; depends=[ ]; };
SMFI5 = derive { name="SMFI5"; version="1.0"; type="cran"; sha256="10qp33l0dig00y9gfhpzqig6dbkjw76ch9pfq64dn4xrdkpq1kx5"; depends=[ggplot2 reshape corpcor ]; };
SMIR = derive { name="SMIR"; version="0.02"; type="cran"; sha256="02q8m5m8lcfrpi78p3kajkps8wiir3jwyqc54j9vfx8aj6mk1v71"; depends=[ ]; };
SML = derive { name="SML"; version="0.1"; type="cran"; sha256="0pdj7321wy50v5l23hknlm30kp8cfgn072pbbifyp8qzmk0hyd8h"; depends=[glmnet Matrix lattice ]; };
SMNCensReg = derive { name="SMNCensReg"; version="3.0"; type="cran"; sha256="06542jacy74mw6ic0i1ml09pn45sll96bya7dqja6bg9yp0m6bvr"; depends=[Matrix PerformanceAnalytics ]; };
SMPracticals = derive { name="SMPracticals"; version="1.4-2"; type="cran"; sha256="0apmkmsv2fqmxpgq08n9k9dvcknj74s4cpp0myjcd6kibb7g9slq"; depends=[ellipse MASS nlme survival ]; };
SMR = derive { name="SMR"; version="2.0.1"; type="cran"; sha256="0qy56fmismcjklpf29ic2gi1g8ajdjpxsl0akb9cqzyisyf641ia"; depends=[ ]; };
SMVar = derive { name="SMVar"; version="1.3.3"; type="cran"; sha256="17wr4lixy3p32gr4jq02d7zsr88yrbddjsvynzdsdrwbxf4mwqhp"; depends=[ ]; };
SNAGEE = derive { name="SNAGEE"; version="1.6.0"; type="bioc"; sha256="0ngmcgsf39y3v7pmaxcqgzbndmcc3n8cwzf29qh698nixbqr3q5b"; depends=[ ]; };
SNFtool = derive { name="SNFtool"; version="2.2"; type="cran"; sha256="1d84ybsi91mr3ma4jzmr9606hg1q00yg0dn50vkjnyda50igcb1c"; depends=[heatmap_plus ]; };
SNPMClust = derive { name="SNPMClust"; version="1.0"; type="cran"; sha256="1vyag8axrl888qhjsbv7g84hzfsnvxh5ccdcdriamy50c2chkji8"; depends=[MASS mclust ]; };
SNPRelate = derive { name="SNPRelate"; version="1.0.1"; type="bioc"; sha256="1l4kq76fg7hvqwc7h954rz8880cc0vhgljf6kgi05v7g1yz3bq4v"; depends=[gdsfmt gdsfmt ]; };
SNPassoc = derive { name="SNPassoc"; version="1.9-2"; type="cran"; sha256="113byj8zbg6xyxb1qzm76sqfyk3fap0sd90691zzm1x2pbfnb3mh"; depends=[haplo_stats survival mvtnorm ]; };
SNPchip = derive { name="SNPchip"; version="2.12.0"; type="bioc"; sha256="0fww0gdpn2vq9n7mlsd72hk55va5vdrn606190skh8v6xh5d3ns1"; depends=[lattice foreach oligoClasses Biobase GenomicRanges IRanges GenomeInfoDb ]; };
SNPmaxsel = derive { name="SNPmaxsel"; version="1.0-3"; type="cran"; sha256="0pjvixwqzjd3jwccc8yqq9c76afvbmfq0z1w0cwyj8bblrjpx13z"; depends=[mvtnorm combinat ]; };
SNPtools = derive { name="SNPtools"; version="1.1"; type="cran"; sha256="0l29kiqz4048x7amxx1qzkaw2xnd6lpdsdp5nq3rck9amx2hw64a"; depends=[IRanges GenomicRanges Biostrings Rsamtools ]; };
SNSequate = derive { name="SNSequate"; version="1.1-1"; type="cran"; sha256="1jgpjws5apysp55pwy3x8mbzy4zjvv39anp6j2x4lgczh5nf49b6"; depends=[magic ]; };
SOAR = derive { name="SOAR"; version="0.99-11"; type="cran"; sha256="1n38gx5sxpkqfkk4y6vpp6g19b8bs5bisni9wn6311s0csizp86m"; depends=[ ]; };
SOD = derive { name="SOD"; version="1.0"; type="cran"; sha256="0f0rh1qsjzxb3zzr440kvl6fnnj7dvc5apdzs5hpf6xrlfg863pk"; depends=[Rcpp Rcpp ]; };
SODC = derive { name="SODC"; version="1.0"; type="cran"; sha256="18s4rcp5dzchvwrzzbfhbs3x91zlg1rymjarxjk5i429mfrn0krx"; depends=[magic ppls psych MASS ]; };
SOLOMON = derive { name="SOLOMON"; version="1.0-1"; type="cran"; sha256="0z91wsrgdir25ks4dnirzsg4f1ngal7n40235m3w43j6y6dhkqrc"; depends=[ ]; };
SOMbrero = derive { name="SOMbrero"; version="1.0"; type="cran"; sha256="10d2fakjkfk3p4dfh0cw1sp7i95f7lqdvz8b7x7sc5pg82dpffy7"; depends=[knitr igraph wordcloud scatterplot3d RColorBrewer shiny ]; };
SOR = derive { name="SOR"; version="0.22"; type="cran"; sha256="1njwlsvdnwxidvwrx18h6h4dhrsdgy0fikkhn20pip42qqwd96gz"; depends=[Matrix ]; };
SOUP = derive { name="SOUP"; version="1.1"; type="cran"; sha256="0k8nlvl4681cz07xjazprcc0jhknfa5hgr7w1qxxmgrp3sprr8r4"; depends=[tensor ]; };
SPA3G = derive { name="SPA3G"; version="1.0"; type="cran"; sha256="15f38imwqn1zifym2821q7xysvws9vhlif4g16w0pnvk0wlhyb92"; depends=[ ]; };
SPACECAP = derive { name="SPACECAP"; version="1.1.0"; type="cran"; sha256="11szdq7sqr8ldwz7apbf1dv5mh43rbyb7dkivms58s5623xrq3sm"; depends=[coda ]; };
SPARQL = derive { name="SPARQL"; version="1.16"; type="cran"; sha256="0gak1q06yyhdmcxb2n3v0h9gr1vqd0viqji52wpw211qp6r6dcrc"; depends=[XML RCurl ]; };
SPAr = derive { name="SPAr"; version="0.1"; type="cran"; sha256="068jlsvaxx80ih6n86286m2r75cvy6w0m51vpj4gfclhh38py4p4"; depends=[ ]; };
SPECIES = derive { name="SPECIES"; version="1.0"; type="cran"; sha256="0p45llf2wjr467bqr4pbljfank9zz3fm42yl3i0r3jbkxgz0rjf0"; depends=[ ]; };
SPEI = derive { name="SPEI"; version="1.6"; type="cran"; sha256="0mbz4nydnzwypfbi1d9fjy09x6133q096qbfrc913dbidzkvfpqv"; depends=[lmomco ]; };
SPEM = derive { name="SPEM"; version="1.6.0"; type="bioc"; sha256="0wkkk473cwvarws9sfk85v2n6cx2dl1fsgs9ai52d9lnnwjf7ixa"; depends=[Rsolnp Biobase ]; };
SPIA = derive { name="SPIA"; version="2.18.0"; type="bioc"; sha256="1k45hbdgwrfbaz5h02d37599bbxx5lfnisbh3hzmzi00jfvjlg54"; depends=[KEGGgraph ]; };
SPIAssay = derive { name="SPIAssay"; version="1.0.0"; type="cran"; sha256="1rwa2iicwdm7z8khlnly0ybrqiisw420anr2pcdd5chxa48h8apg"; depends=[ ]; };
SPIn = derive { name="SPIn"; version="1.1"; type="cran"; sha256="109xxrg7bsmmfd6ik85kxrw2qclxbh5ipsh5mmrdl4hki3hnyp2s"; depends=[quadprog ]; };
SPMS = derive { name="SPMS"; version="2.0"; type="cran"; sha256="150kb4gjiksp3kc7p9j5zqc4955rq4fb27as71z89h23mkswz5r5"; depends=[Matrix ]; };
SPODT = derive { name="SPODT"; version="0.9-1"; type="cran"; sha256="01yq429a4s63855bwpn2mqjj2k3cz4187kfpi7n7qqdpdvmxz109"; depends=[rgdal sp tree ]; };
SPOT = derive { name="SPOT"; version="1.0.5543"; type="cran"; sha256="0y8rj0wxy8sdk7si9k11i4pb96vp1q78h48ihs4r7d383zykk827"; depends=[rpart emoa twiddler rgl AlgDesign randomForest rsm MASS mco ]; };
SPREDA = derive { name="SPREDA"; version="1.0"; type="cran"; sha256="1dyqsra899fd1nbk1b7vkw8gs455c6pbcvzw84q9iri77186xqhv"; depends=[survival nlme ]; };
SPRT = derive { name="SPRT"; version="1.0"; type="cran"; sha256="1r4pfqh8k5avi8qgpk5x1cy8lmkn341yvjvd2r7wqwb3mr242r0v"; depends=[ ]; };
SPSL = derive { name="SPSL"; version="0.1-8"; type="cran"; sha256="1jg1nfhz8qml1wwqa4d0w7vkdmbgdy5xlfqx0h2pdw2z8iij3xxc"; depends=[ ]; };
SPmlficmcm = derive { name="SPmlficmcm"; version="1.3"; type="cran"; sha256="0igybzc6fx6yd8xq06909vml4zwwzm4sl5xpds1292lgv3y3zdgb"; depends=[nleqslv ]; };
SQDA = derive { name="SQDA"; version="1.0"; type="cran"; sha256="0nfimk625wb64010r5r7hzr64jfwgc6rbn13wvrpn0jgayji87h6"; depends=[limma PDSCE mvtnorm ]; };
SQN = derive { name="SQN"; version="1.0.5"; type="cran"; sha256="0kb8kf6g482zqdp4avwvhs3pqghfny757dbzfl1abaigmvwvx4qj"; depends=[mclust nor1mix ]; };
SQUADD = derive { name="SQUADD"; version="1.16.0"; type="bioc"; sha256="117cdn7xy8priy7g06r57dbby1sq43ln9x6mc126szig89hp4wsr"; depends=[RColorBrewer ]; };
SQUAREM = derive { name="SQUAREM"; version="2014.8-1"; type="cran"; sha256="17fn37da4zslbfq5h4f3dfwyw1dxj5y2rgly3vjl2c4k5bnwxxqw"; depends=[ ]; };
SRAdb = derive { name="SRAdb"; version="1.20.13"; type="bioc"; sha256="0h1v4bz3syzh2z9p832fp981fkq5yzf4yvrpprfghpbsqmqhq1xh"; depends=[RSQLite graph RCurl GEOquery ]; };
SRCS = derive { name="SRCS"; version="1.0"; type="cran"; sha256="0aha9fqdigvsx8dvck4y2yb8c7v58rivz50z0xwi0bhwzdddx52f"; depends=[ ]; };
SRRS = derive { name="SRRS"; version="0.1.1"; type="cran"; sha256="0jv545a97q4pyl89lmhn3y0jhdzyq033mvx144x8lcgx59s7cyi3"; depends=[tcltk2 gtools ]; };
SSDforR = derive { name="SSDforR"; version="1.4.9"; type="cran"; sha256="1ka6zy77ml4kccfqjszvijh9dvlhzcp7fhsd2zsirsn6sdz0wrp0"; depends=[psych TTR MASS TSA ]; };
SSN = derive { name="SSN"; version="1.1.5"; type="cran"; sha256="1iymq6zzs3zfbjkz7h2ss8djdzvw2b3n68qazvw8vnrnkq3iyzry"; depends=[RSQLite sp MASS igraph maptools lattice BH ]; };
SSPA = derive { name="SSPA"; version="2.6.0"; type="bioc"; sha256="1svgzxlk64lhha8j00nji8jzihd6172jizk78m5wxy28cvcpngjs"; depends=[qvalue lattice limma ]; };
SSrat = derive { name="SSrat"; version="1.0"; type="cran"; sha256="1qpsdfdngsgxx3mqgn4avl65w4v5v4jwsh1nnxzfn9iqi9mg4bhi"; depends=[plyr sna ]; };
SSsimple = derive { name="SSsimple"; version="0.6.4"; type="cran"; sha256="0p7d4hx7mhn5myq8ajcij6hhg79rjxigk5v8z93yfdw4gjcb5wad"; depends=[mvtnorm ]; };
STAN = derive { name="STAN"; version="1.0.0"; type="bioc"; sha256="0q0d0yyzs549vhpxk4lmxjhih97a6k4r7xxlq7mmrhja6ylm7sh7"; depends=[Rsolnp ]; };
STAR = derive { name="STAR"; version="0.3-7"; type="cran"; sha256="1g78j4iyh78li1jaa3zz5qv4p41cg0imhmvbfakd34l32ppih4ll"; depends=[survival mgcv R2HTML gss codetools ]; };
STATegRa = derive { name="STATegRa"; version="1.0.0"; type="bioc"; sha256="0vi268m7b7l9pmxmi705920pygkfxmq2lqy9gijbzrf3gb8m0l5v"; depends=[Biobase gridExtra ggplot2 MASS calibrate gplots ]; };
STEPCAM = derive { name="STEPCAM"; version="1.0"; type="cran"; sha256="0lgikdj0mghz5hjm3rlrnnddjhvf9cmm0hwklbdyl3h816gq1jci"; depends=[vcd FD gtools MASS ]; };
STPGA = derive { name="STPGA"; version="1.0"; type="cran"; sha256="1kqxzjrxf194n006dr3h5kprb4l7qy8bgm2n6251p0sswpvr70j1"; depends=[ ]; };
STRINGdb = derive { name="STRINGdb"; version="1.5.5"; type="bioc"; sha256="0bds67n1bdin2cjiswdlpc8f0nw4j9px17255j8qmz5saf2yflgl"; depends=[png sqldf plyr igraph RCurl plotrix RColorBrewer gplots hash ]; };
SUE = derive { name="SUE"; version="1.0"; type="cran"; sha256="0akv724s84v2zixvwywj1ydfnfvcjnaabv6gm0601nsrh6ij1mi6"; depends=[ ]; };
SVMMaj = derive { name="SVMMaj"; version="0.2-2"; type="cran"; sha256="01njc7drq01r3364081dv9gn37vrql52zbrb60gd559f3jshqx3m"; depends=[kernlab MASS ]; };
SVMMatch = derive { name="SVMMatch"; version="1.1"; type="cran"; sha256="1ykwrhlid4hs466xh3kv6y2qdhgk0jiglg0l3zwk5qlni6p26zc9"; depends=[Rcpp Rcpp RcppArmadillo ]; };
SWATmodel = derive { name="SWATmodel"; version="0.5.9"; type="cran"; sha256="1i48g9nbjfn30ppwyzyz3k181nscv4wx773l8mzfdwhx0nlv4kyj"; depends=[EcoHydRology ]; };
SWMPr = derive { name="SWMPr"; version="2.0.0"; type="cran"; sha256="1gnjz5p76xpw4rpish4d7vr3r9f880mw5fb27bnc6b408vy0781d"; depends=[ggplot2 zoo data_table httr ggmap gridExtra maptools oce dplyr reshape2 tictoc tidyr wq XML ]; };
SYNCSA = derive { name="SYNCSA"; version="1.3.2"; type="cran"; sha256="1m057lhfaf0n35rs3sipia04qgkp04hv7wf7rvnr7bhzic9f4vg3"; depends=[vegan mice FD ]; };
Sabermetrics = derive { name="Sabermetrics"; version="1.0"; type="cran"; sha256="1x35h1ffy6jnsak13vb1kcsbmh3hpass19gqic8grk0c3g1dvv6y"; depends=[ ]; };
SamSPECTRAL = derive { name="SamSPECTRAL"; version="1.20.0"; type="bioc"; sha256="043wxqdmafs96xnwzvjj1xfccg7nzkha99pryz50cvrpy85si5s8"; depends=[ ]; };
Sample_Size = derive { name="Sample.Size"; version="1.0"; type="cran"; sha256="1vfnb2gg3rax4sxd81xqznfvh300nv45nn7zjsyrdjyg1n3ym7nw"; depends=[ ]; };
SampleSizeMeans = derive { name="SampleSizeMeans"; version="1.1"; type="cran"; sha256="1wbc46n8b8wbcxl21blbzs5728dr8r0l8d3jpzbha8pcav0xrh1m"; depends=[ ]; };
SampleSizeProportions = derive { name="SampleSizeProportions"; version="1.0"; type="cran"; sha256="0mvkvx3nni0l8ys68sq3h2zlbjvksdcdzxqlf03k0ca5bbcmdf9l"; depends=[ ]; };
SamplerCompare = derive { name="SamplerCompare"; version="1.2.6"; type="cran"; sha256="1n94fp6frawlbxcnvi0v6lhgs3yyc47lj1r46y3jg6zb9z3va3fa"; depends=[mvtnorm ]; };
SamplingStrata = derive { name="SamplingStrata"; version="1.0-3"; type="cran"; sha256="16nrcv5hbbvn4rgckzagi84i7h49bd878mnpknlzmzr5ykzywsay"; depends=[ ]; };
ScISI = derive { name="ScISI"; version="1.38.0"; type="bioc"; sha256="094gdjmzjy39ch1fjbin1rnaybqfnvnahzqzfyx3cm0vwz0sddf7"; depends=[RpsiXML annotate apComplex AnnotationDbi RpsiXML annotate ]; };
Scale = derive { name="Scale"; version="1.0.4"; type="cran"; sha256="1fa3840kji34qpbw6mxfavk8wq0vq0vx2w6ya71idbkxnvwc3y06"; depends=[psych Hmisc MASS ]; };
SciViews = derive { name="SciViews"; version="0.9-5"; type="cran"; sha256="199waafpn0ndg7szwfhw2jlgcx1f0pv7j0vix2vzz60knwm698xb"; depends=[MASS ellipse ]; };
SciencesPo = derive { name="SciencesPo"; version="1.02.12"; type="cran"; sha256="0v947xjfwyidl2fa6i7drvv9vnskz06kq4rmz46qzns7g0lwfjnq"; depends=[ggplot2 foreign MASS data_table lubridate xtable ]; };
ScoreGGUM = derive { name="ScoreGGUM"; version="1.0"; type="cran"; sha256="0f7sjfr3a8b8y1n9lrwyiyyljls3rbz84d9s93psi2fnmjj0kvgw"; depends=[ ]; };
ScottKnott = derive { name="ScottKnott"; version="1.2-5"; type="cran"; sha256="1ywwhdghcy30mp2nhsk2yhgb37nrdmb9yan5vvzsg66bchc3xgll"; depends=[ ]; };
ScrabbleScore = derive { name="ScrabbleScore"; version="1.0"; type="cran"; sha256="19vgaxnhvqsbllqxfbnhnar2j4g0fkxi7rfsmkks2bd2py81x04m"; depends=[ ]; };
ScreenClean = derive { name="ScreenClean"; version="1.0.1"; type="cran"; sha256="0haanr05g4vwp5apncyzv8i3r61g4xf9ihm8ilcabcgpri56gpjk"; depends=[MASS Matrix quadprog ]; };
SearchTrees = derive { name="SearchTrees"; version="0.5.2"; type="cran"; sha256="11p81x1klkmxarypxpbisf78dlrmhzzg9y9hxpwz75pks1y56gqg"; depends=[ ]; };
SegCorr = derive { name="SegCorr"; version="1.0"; type="cran"; sha256="1fyrnhbifvc2y2n6r0zg5yq0qcjzws62ynwqgc0mbvzax3n82dhm"; depends=[cghseg ]; };
Segmentor3IsBack = derive { name="Segmentor3IsBack"; version="1.8"; type="cran"; sha256="00m6fvx6s8mz477c8b4dmgdh52jf6jx1lcqzf84l90b1xw93qnv7"; depends=[ ]; };
Sejong = derive { name="Sejong"; version="0.01"; type="cran"; sha256="1d9gw42dbs74w7xi8r9bs6dhl23y16yxqzyhqqayvcm98q3l77nf"; depends=[ ]; };
SeleMix = derive { name="SeleMix"; version="0.9.1"; type="cran"; sha256="04gxgja35qs4k66iil014dzgl5bkx0qhr9w4v7qpmwv2bb07jwz3"; depends=[mvtnorm Ecdat xtable ]; };
SelvarMix = derive { name="SelvarMix"; version="1.0"; type="cran"; sha256="0yysmf854xz5l0lf2x0hw0qxbrdhgfrcx5ggw8n4pjfv553p38ni"; depends=[Rcpp glasso Rmixmod Rcpp RcppArmadillo ]; };
SemDist = derive { name="SemDist"; version="1.0.0"; type="bioc"; sha256="1gbbbslifpqxr6ndbrmpif5dm6l99nprzxrdjb113qzdxcs27m9p"; depends=[AnnotationDbi annotate ]; };
SemiCompRisks = derive { name="SemiCompRisks"; version="2.0"; type="cran"; sha256="0in3pv66nhb0ar4xfxskvf24c7bqkr9ik069a4nynwnc3idpsq32"; depends=[ ]; };
SemiMarkov = derive { name="SemiMarkov"; version="1.4.1"; type="cran"; sha256="048hmbcmhqkvqw8nbzm0136mc9w7b27jy8q9r3rvc3banh854d1m"; depends=[numDeriv MASS Rsolnp ]; };
SemiPar = derive { name="SemiPar"; version="1.0-4.1"; type="cran"; sha256="05gnk4s0d6276rmnyyv6gy1wpkji3sw563n8l7hmi9qqa19ij22w"; depends=[MASS cluster nlme ]; };
SemiParBIVProbit = derive { name="SemiParBIVProbit"; version="3.3"; type="cran"; sha256="12zjpyl79kx750xgra06zbw5vnaq8mis39cm8672w3d9giy2fxr5"; depends=[mgcv mvtnorm magic VineCopula VGAM survey trust Matrix sn ]; };
SemiParSampleSel = derive { name="SemiParSampleSel"; version="1.2"; type="cran"; sha256="1k9xmby8hy4k0qn7pjj0rypxj4iqb206ixv92bz7ga0q8zd0nxbr"; depends=[copula mgcv mvtnorm gamlss_dist magic trust VGAM Matrix ]; };
SenSrivastava = derive { name="SenSrivastava"; version="2012-04-0"; type="cran"; sha256="0ki0kl18cj8lkad6q48piyvslkirs8y5rnfa8bvgjxsisxg2ahhp"; depends=[ ]; };
SensitivityCaseControl = derive { name="SensitivityCaseControl"; version="2.1"; type="cran"; sha256="00jqzqx7g0av9lw13is723gph486gb8ga0wgcmmzpmb24s5nya9z"; depends=[ ]; };
SensoMineR = derive { name="SensoMineR"; version="1.20"; type="cran"; sha256="1qw97cixndg2h29bbpssl0rqag3w8im4nm9964lr7r012y5wdqhx"; depends=[FactoMineR cluster KernSmooth ]; };
SensusR = derive { name="SensusR"; version="1.0"; type="cran"; sha256="1b5yrb3iiijr7x0r4ga5dlx6yqqk4bvmh1377655s6c7j36sn1xd"; depends=[jsonlite lubridate rworldmap plyr sp ]; };
SeqArray = derive { name="SeqArray"; version="1.6.1"; type="bioc"; sha256="18nfd9mhgmgqr5ww5lv3xkxrdc3cprd4hp5l3cwk9h7x0yg7v0sz"; depends=[gdsfmt Biostrings GenomicRanges IRanges S4Vectors VariantAnnotation gdsfmt ]; };
SeqFeatR = derive { name="SeqFeatR"; version="0.1.7"; type="cran"; sha256="195pkpk9sh99v01mk827axsynwaccygx19i1x0h0ma7bsqlmw1qc"; depends=[tcltk2 Biostrings plotrix ape plyr phangorn qvalue widgetTools calibrate ggplot2 ]; };
SeqGSEA = derive { name="SeqGSEA"; version="1.6.0"; type="bioc"; sha256="1ql2f9hdiq5h3ry02kgwjm4mf07z8aqxk7019zq656an09d3aby2"; depends=[Biobase doParallel DESeq biomaRt ]; };
SeqGrapheR = derive { name="SeqGrapheR"; version="0.4.8.3"; type="cran"; sha256="03plwa3sc1pg34p1szbz3d0z8y53w7iqm7qn9q6fj72rsnk5spxc"; depends=[Biostrings igraph rggobi gWidgets gWidgetsRGtk2 cairoDevice ]; };
SeqVarTools = derive { name="SeqVarTools"; version="1.4.0"; type="bioc"; sha256="07i36kfhd329h721xq23nyhi08lavnmfj6dymlcqf1pg4njv8fxa"; depends=[SeqArray GenomicRanges IRanges GWASExactHW ]; };
Sequential = derive { name="Sequential"; version="1.1"; type="cran"; sha256="1fr4n6qbxwj6hs01h07wdj5v4c7af5q8ccnm33yzcrx845qf8fiv"; depends=[ ]; };
SetMethods = derive { name="SetMethods"; version="1.0"; type="cran"; sha256="0zizvrzyk01w4ncazvifmjm4h5zrpsf6n68n11sc8f5kzny9ia48"; depends=[lattice betareg lattice betareg ]; };
SharpeR = derive { name="SharpeR"; version="0.1501"; type="cran"; sha256="138faypgrfph48wvz600l20ypqzxdir4q43bl9s7vndysya3vsnl"; depends=[matrixcalc ]; };
ShortRead = derive { name="ShortRead"; version="1.24.0"; type="bioc"; sha256="0gvkzwz22bifh49yhxdj0pklc9h1i629rhhaicmz24nwa68dfc7x"; depends=[BiocGenerics BiocParallel Biostrings Rsamtools GenomicAlignments Biobase S4Vectors IRanges GenomeInfoDb GenomicRanges hwriter zlibbioc lattice latticeExtra S4Vectors IRanges XVector Biostrings ]; };
ShrinkCovMat = derive { name="ShrinkCovMat"; version="1.1.0"; type="cran"; sha256="1v2rr97wz5521cjy41j5vdqq29xd7696pc1rzw4angsfjrq3fnh4"; depends=[ ]; };
SiZer = derive { name="SiZer"; version="0.1-4"; type="cran"; sha256="0kiwvxrfa2b49r2iab5v2aysc2yzk5ck3h41f2hr0vq5pdnz0qy5"; depends=[boot ]; };
SigCheck = derive { name="SigCheck"; version="1.0.2"; type="bioc"; sha256="12fzadfnc5csjdk64krm95zar5wqb4xkcp1h00slhkng4580va38"; depends=[MLInterfaces Biobase e1071 BiocParallel ]; };
SigFuge = derive { name="SigFuge"; version="1.4.0"; type="bioc"; sha256="1j4781c26x7pi0p6vgq1z9lfmjlhb07y20l4jacarpffilb6nnkh"; depends=[GenomicRanges ggplot2 matlab reshape sigclust ]; };
SightabilityModel = derive { name="SightabilityModel"; version="1.3"; type="cran"; sha256="0rgv5735y07yyv5y9c3flzha97ykn34ysmzy6as1z94hqfr4w746"; depends=[ ]; };
Sim_DiffProc = derive { name="Sim.DiffProc"; version="2.9"; type="cran"; sha256="1cq168ga4p70hgx7rsm9rvam8b0wvjivqp2nsprk39i864j9sr91"; depends=[scatterplot3d rgl ]; };
SimBindProfiles = derive { name="SimBindProfiles"; version="1.4.0"; type="bioc"; sha256="0xl3295gabaycvxmgaijr6lgy52py2fv5gd3vpmnfzn9cfsw0a8i"; depends=[Ringo limma mclust Biobase ]; };
SimComp = derive { name="SimComp"; version="2.2"; type="cran"; sha256="07gmlbwvv07kq3z7gq2jxlank011c0cqh8zwwp4pzf061d3gjdm6"; depends=[mvtnorm multcomp mratios ]; };
SimCorMultRes = derive { name="SimCorMultRes"; version="1.3.0"; type="cran"; sha256="0r3d91x9srzsa0g6p3jlzplpsrprbg11kv6fsbbh47pz02fvi8mc"; depends=[evd ]; };
SimRAD = derive { name="SimRAD"; version="0.95"; type="cran"; sha256="1l4y39d05h5f2q609i73p07h093r9yca11dqw5iq1d7skwxcvf01"; depends=[Biostrings ShortRead ]; };
SimSeq = derive { name="SimSeq"; version="1.3.0"; type="cran"; sha256="0xkiiwk52sv8vivd4qsvzgjbw8q0csy0d45diym2mc9aq9nhf5dq"; depends=[fdrtool ]; };
SimilarityMeasures = derive { name="SimilarityMeasures"; version="1.4"; type="cran"; sha256="1w4klcln4hy9vcik9csg7b3b8kk4raxgckwfrhqg089d80xbqsxj"; depends=[ ]; };
Simile = derive { name="Simile"; version="1.3.3"; type="cran"; sha256="1izyjp18m1inac3svkf59z3lddrv44m7pdkhisgkr987xs8gdch4"; depends=[ ]; };
SimpleTable = derive { name="SimpleTable"; version="0.1-2"; type="cran"; sha256="1rkybrp7zlb7cj37799npss1ldic0yf519q5l7a6ikal4yl1afyb"; depends=[hdrcde locfit MCMCpack ]; };
SimplicialCubature = derive { name="SimplicialCubature"; version="1.0"; type="cran"; sha256="0da2krxsd3p7v2jm4fp2ksh0ak1y0cjxj7inwkdiwmmmgjyq033f"; depends=[ ]; };
Simpsons = derive { name="Simpsons"; version="0.1.0"; type="cran"; sha256="1pm6wga1yxc35zgz72plzq23d3l4bbzfdvhszdxmkn1pkk64h8ms"; depends=[mclust ]; };
SimuChemPC = derive { name="SimuChemPC"; version="1.3"; type="cran"; sha256="06sxknaykikcgbw7qbbw1risg0sbaisb68vhfd7cl6sg0327dznk"; depends=[rcdk ]; };
SimultAnR = derive { name="SimultAnR"; version="1.1"; type="cran"; sha256="0jvmxwmbnx14h27b576dg9mw3c2z0w3m82f51f25zd1darcl06bj"; depends=[ ]; };
SixSigma = derive { name="SixSigma"; version="0.8-1"; type="cran"; sha256="15jdr10a7a6wv50vz9y6qcrbhnddl8zh4j4d48xrarrqbjy6l4p7"; depends=[qcc lattice ggplot2 reshape2 nortest testthat ]; };
SkewHyperbolic = derive { name="SkewHyperbolic"; version="0.3-2"; type="cran"; sha256="10vilra5z884xinqkvk7ryi4nsq5zxlyn5qh23lsajba3b3qwhaw"; depends=[DistributionUtils GeneralizedHyperbolic RUnit ]; };
Skillings_Mack = derive { name="Skillings.Mack"; version="1.0-2"; type="cran"; sha256="1spf77ix9d264r126hnrjm7z8fw19v1bk5pqhqcf6lm93zlcgh8i"; depends=[MASS matrixcalc gtools ]; };
Sleuth2 = derive { name="Sleuth2"; version="1.0-7"; type="cran"; sha256="1zav2g1yqc6bvzap4r5xwy9abkdj8iswivj5y2lylc25nkxwcswg"; depends=[ ]; };
Sleuth3 = derive { name="Sleuth3"; version="0.1-8"; type="cran"; sha256="02qbigg75ckyg65620bv88ggs4d9z3vivxd5j76x8hzg5lkk31yj"; depends=[ ]; };
SmarterPoland = derive { name="SmarterPoland"; version="1.5"; type="cran"; sha256="0qa31z0wgl8bgc3ihgbfdmp1ang3wyy4qylj81zxh1yn2zxx5fr0"; depends=[rjson ggplot2 httr htmltools ]; };
SmithWilsonYieldCurve = derive { name="SmithWilsonYieldCurve"; version="1.0.1"; type="cran"; sha256="0qvhd1dn2wm9gzyp6k7iq057xqpkngkb4cfmvmjqmf0vhysp371w"; depends=[ ]; };
SmoothHazard = derive { name="SmoothHazard"; version="1.2.3"; type="cran"; sha256="0p6hnq782d5qwmq6ak2rmbzx84lrsy02lr303gg3y0vln5i2myyn"; depends=[lava mvtnorm prodlim ]; };
SnowballC = derive { name="SnowballC"; version="0.5.1"; type="cran"; sha256="0kbg33hy6m2hv9jspyx6naqmk2q6h2zmvvczjmkwqvlhzlj0c5s4"; depends=[ ]; };
SoDA = derive { name="SoDA"; version="1.0-6"; type="cran"; sha256="0sh2dan4ga2k14rirnkvgzsvbksx1k4ika5gkf5cy247rjkqnpj0"; depends=[ ]; };
SocialMediaMineR = derive { name="SocialMediaMineR"; version="0.1"; type="cran"; sha256="113nyjncl5yi61hz8i7k60b3f0f9a5vyrd3s72nbmc44cnvr8fci"; depends=[RCurl jsonlite httr ]; };
SocialNetworks = derive { name="SocialNetworks"; version="1.1"; type="cran"; sha256="0d868xka6d35i17r28cvm0ya971xk6y1kycsfff0279w27cjd9x0"; depends=[Rcpp Rcpp ]; };
SocialPosition = derive { name="SocialPosition"; version="1.0"; type="cran"; sha256="0aqx6raskybxwavl7366klhagclq0zlklr5sd0l9h6cz530h3azq"; depends=[ ]; };
SoftClustering = derive { name="SoftClustering"; version="1.1502"; type="cran"; sha256="1pgg9mjpfw55m3ny726vx5wl8gwsdkrxv8xzgmy3aqdlwzhh4bwz"; depends=[ ]; };
SoilR = derive { name="SoilR"; version="1.1-23"; type="cran"; sha256="1cryypgnbck5hvkc2izrd8r10q2b97f2p1s46x4dk8p099gck5wg"; depends=[deSolve RUnit ]; };
SomatiCA = derive { name="SomatiCA"; version="1.10.0"; type="bioc"; sha256="19gs6gkm3jchri1npyrcjgns0hk1b07ifajbimpc43s6dyx2dq6q"; depends=[lars DNAcopy foreach rebmix GenomicRanges IRanges doParallel foreach lars sn DNAcopy rebmix GenomicRanges IRanges ]; };
SomaticSignatures = derive { name="SomaticSignatures"; version="2.2.3"; type="bioc"; sha256="16dnaip4x3fqrgs59hl1n0x61165xaz40pzzkcng4rzvvf1yya5n"; depends=[VariantAnnotation GenomicRanges S4Vectors IRanges GenomeInfoDb Biostrings ggplot2 ggbio reshape2 NMF pcaMethods Biobase proxy ]; };
SortableHTMLTables = derive { name="SortableHTMLTables"; version="0.1-3"; type="cran"; sha256="1jgrqsm0cj8qlk0s4qn3b83w96mgpp5gmhgcg9q2glc72v8c4ljh"; depends=[testthat brew ]; };
SoundexBR = derive { name="SoundexBR"; version="1.1"; type="cran"; sha256="1rhmwbf7687lgwwx1qldljb9j7qj7hcaypawlchmys61ny9500wl"; depends=[ ]; };
SpacePAC = derive { name="SpacePAC"; version="1.4.0"; type="bioc"; sha256="0bywmkaj208qlgndsg0x415vvlsgvdhpn64dzxsw4dh9d2ilygb8"; depends=[iPAC ]; };
SparseGrid = derive { name="SparseGrid"; version="0.8.2"; type="cran"; sha256="057xbj2bhjm9i32kn39iscnqqdsvsmq0b8c92l8hnf9avf1sx10x"; depends=[ ]; };
SparseM = derive { name="SparseM"; version="1.6"; type="cran"; sha256="1296snm3481259xwhj97vffwjb2v8367ivf2g5amd4pzqzwx6p1k"; depends=[ ]; };
SparseTSCGM = derive { name="SparseTSCGM"; version="2.1.1"; type="cran"; sha256="0xr3l049kssi7k074wggvc96p2zlca076j2hwpwpmna42xl3dmqv"; depends=[glasso longitudinal flare MASS mvtnorm network abind ]; };
SpatPCA = derive { name="SpatPCA"; version="1.0.0.1"; type="cran"; sha256="1j2zhm0xlm5w1p4yhg60qwa0r2hai7nv1n25ski5x2nfnpb5fiij"; depends=[fields Rcpp Rcpp RcppArmadillo ]; };
SpatialEpi = derive { name="SpatialEpi"; version="1.2.1"; type="cran"; sha256="02mvahpbrlcnxmf272fk46wykv9s2lcjqd5yhd80dfs78qjwly77"; depends=[sp Rcpp MASS maptools spdep Rcpp RcppArmadillo ]; };
SpatialExtremes = derive { name="SpatialExtremes"; version="2.0-0"; type="cran"; sha256="0fjh4cjzljwzxk4bhcrff9wnkskaiawbj7z6swrj1xl35mq4dljx"; depends=[ ]; };
SpatialNP = derive { name="SpatialNP"; version="1.1-1"; type="cran"; sha256="108gxk0gbbjck9bgxvqb9h216ww21lmh2by0hrhzwx5r63hhcbmd"; depends=[ ]; };
SpatialPack = derive { name="SpatialPack"; version="0.2-3"; type="cran"; sha256="1gs0x3wj3hj663m6kszwhy3ibcx0lrslr127miy1rhz8683ij71c"; depends=[ ]; };
SpatialPosition = derive { name="SpatialPosition"; version="0.9"; type="cran"; sha256="0w09yrn32pis4w3hkbghkgwpyy7mnnzzkhhp289xl738lymv207a"; depends=[raster sp ]; };
SpatialTools = derive { name="SpatialTools"; version="0.5.8"; type="cran"; sha256="18zchr8bfjqdr9j6vh6365mhrj2n0ns1ixvmas5s0ppiim59jl7j"; depends=[spBayes Rcpp Rcpp RcppArmadillo ]; };
SpatialVx = derive { name="SpatialVx"; version="0.2-3"; type="cran"; sha256="1xc8xcnp507l8smb05040zz1cgyx48p645rrijqdibb2xp4gvgk9"; depends=[spatstat fields smoothie smatr turboEM distillery maps boot CircStats fastcluster waveslim ]; };
SpatioTemporal = derive { name="SpatioTemporal"; version="1.1.7"; type="cran"; sha256="0rc5zf8cnjw59azgqmslfz2dl5i17dfmb7ls5c849qybp2gn2zdv"; depends=[Matrix MASS ]; };
SpeCond = derive { name="SpeCond"; version="1.20.0"; type="bioc"; sha256="1im1fry6c19v1kds82nw12i4xv7v6x2shr5s0wf22m2adz6hgj5c"; depends=[mclust Biobase fields hwriter RColorBrewer ]; };
SpecHelpers = derive { name="SpecHelpers"; version="0.1.6"; type="cran"; sha256="1h14a1rsk7x5qafn4hcpmannkdf2wdphkzaa3b6nbb9jqjs1szi0"; depends=[gsubfn ]; };
SpeciesMix = derive { name="SpeciesMix"; version="0.3.1"; type="cran"; sha256="0wl15k00d7n9pmnp1kr28p05z4vrziprcdndw77kwkcgv51cvllk"; depends=[MASS numDeriv ]; };
SpecsVerification = derive { name="SpecsVerification"; version="0.3-0"; type="cran"; sha256="19vr4xlx9gx0ph6k2kf59bpbhmzncm1mmzz7ld3pjc7k4jfba3np"; depends=[ ]; };
SpherWave = derive { name="SpherWave"; version="1.2.2"; type="cran"; sha256="1wd9pql97m1zl0axzpkfq9sxadrm5cfax0gxh0ncqadaq7w7lml4"; depends=[fields ]; };
SphericalCubature = derive { name="SphericalCubature"; version="1.0.1"; type="cran"; sha256="0j592zvs07yc6amahlxgdw0k1vqr89gvcq22vcwzkx62igvlf6pv"; depends=[cubature ]; };
SphericalK = derive { name="SphericalK"; version="1.1"; type="cran"; sha256="18h1k0gy65jvzfpsda0ifv3nn3pvzx5ifllxbwh0my6w75c4biqn"; depends=[ ]; };
SplicingGraphs = derive { name="SplicingGraphs"; version="1.6.0"; type="bioc"; sha256="0m70j5wqmldgnhvk1lfaq024yzx85m05c3f7z9y3yjsmxy75mlhp"; depends=[BiocGenerics S4Vectors IRanges GenomicRanges GenomicFeatures GenomicAlignments Rgraphviz igraph BiocGenerics IRanges GenomicRanges GenomicFeatures GenomicAlignments graph Rgraphviz ]; };
SportsAnalytics = derive { name="SportsAnalytics"; version="0.2"; type="cran"; sha256="1vb080ak1mfvr6d0q9i3r8hd547ba80bavjdcri0gclqqcjf1ach"; depends=[ ]; };
StAMPP = derive { name="StAMPP"; version="1.3"; type="cran"; sha256="1igf6arp7glihkv60zc7c0zwfqaf5kcm2d1xr856fj194zxww9ad"; depends=[pegas doParallel foreach adegenet ]; };
StMoSim = derive { name="StMoSim"; version="3.0"; type="cran"; sha256="18mdgpn0x6338zzvc7nwccz6ypqmlpv7pzcy5fwx5y2wfkmdp4rm"; depends=[RcppParallel Rcpp RcppParallel Rcpp ]; };
StableEstim = derive { name="StableEstim"; version="2.0"; type="cran"; sha256="080khfix88j4656hmdy9l0xpbk9zzw7z7d7f6yvwsbalk3ag18i5"; depends=[Matrix stabledist testthat numDeriv xtable fBasics MASS ]; };
Stack = derive { name="Stack"; version="2.0-1"; type="cran"; sha256="09fgfhw9grxnpl5yg05p9gvlz38iw4prns1jn14nj3qx01k5rnxb"; depends=[plyr stringr ff ffbase bit ]; };
StanHeaders = derive { name="StanHeaders"; version="2.6.0-10"; type="cran"; sha256="0bw11myc16ddi1qhh8dcsf8dqg6dcp1wjbyrp5p98dcc1rym7kmg"; depends=[ ]; };
StandardizeText = derive { name="StandardizeText"; version="1.0"; type="cran"; sha256="0s267k2b109pcdiyd26gm4ag5afikrnnb55d3cs6g2fvzp744hfp"; depends=[ ]; };
Starr = derive { name="Starr"; version="1.22.0"; type="bioc"; sha256="1kclc4qsgj0v3r18yk0qmlz906bg8v8f7h76ils983zdb42p5d5n"; depends=[Ringo affy affxparser pspline MASS zlibbioc ]; };
Stat2Data = derive { name="Stat2Data"; version="1.6"; type="cran"; sha256="0pk68ffc6ffpddfpf9wi8ch39h6k3r80kldld3z5pnql18rc8nvx"; depends=[ ]; };
StatDA = derive { name="StatDA"; version="1.6.9"; type="cran"; sha256="01bjygis14b3yfsfkjbvy0zlhjxysjf46cfcw8p4a4lwik3qp03b"; depends=[geoR sgeostat cluster e1071 MASS MBA mgcv rgl robustbase xtable ]; };
StatDataML = derive { name="StatDataML"; version="1.0-25"; type="cran"; sha256="05s9kbrjl2wsfccgav34b02m06q62r3iyjd0ndr6xcqlw9x2w2ya"; depends=[XML ]; };
StatMatch = derive { name="StatMatch"; version="1.2.3"; type="cran"; sha256="10y9xaclxrw65v3k9qwdm7lvvf1kxpssc9nx0f15m8xkw5hhm7pa"; depends=[proxy clue survey RANN lpSolve ]; };
StatMethRank = derive { name="StatMethRank"; version="1.0"; type="cran"; sha256="0mcvwn1f3hylvyg46vigc5wnvhhig5v01ag3y9rap32v85f308zh"; depends=[MASS rjags pmr ]; };
StatRank = derive { name="StatRank"; version="0.0.4"; type="cran"; sha256="0s0jc4hvrry9a884fqfk3gp1w4ww5wif2kh3m0f22nn7qb49if9p"; depends=[truncdist plyr ]; };
Statomica = derive { name="Statomica"; version="1.0"; type="cran"; sha256="0x60n1d7wxfd013k6jjzvfi2mqgr52fd8ylk3yhm3907002jnh1g"; depends=[Biobase multtest distr fBasics ]; };
Stem = derive { name="Stem"; version="1.0"; type="cran"; sha256="1fr02mi5qyxbqavdh2hg8ggw4nfjh3vs7g0vh834h6y0v53l71r5"; depends=[mvtnorm MASS ]; };
StereoMorph = derive { name="StereoMorph"; version="1.4"; type="cran"; sha256="0xar1vx05q6dbfs9jmdbj7cz6jfrckhd8cm2ml922xg4zxrg23cf"; depends=[bezier rjson shiny Rcpp jpeg tiff png Rcpp ]; };
Storm = derive { name="Storm"; version="1.2"; type="cran"; sha256="1fg8y9my9yp6px1gh43mr3m2s2z262mzq03pj52mqg3n186vk8z3"; depends=[permute rjson ]; };
StrainRanking = derive { name="StrainRanking"; version="1.1"; type="cran"; sha256="0q6k90if74320mrs2ccq2izynylr8zakciwbc2c6ms0v57aalwic"; depends=[ ]; };
StratSel = derive { name="StratSel"; version="1.1"; type="cran"; sha256="0l08v71qmd170027y5vjnvgfm8kqvgaqrpms9msxhv8g5974kla8"; depends=[MASS memisc Formula mnormt ]; };
StreamMetabolism = derive { name="StreamMetabolism"; version="1.1.1"; type="cran"; sha256="1r9p6awf3a2d08w9rdlggkwlfhksn14xbhdhdnmxz79ym5mgdd8f"; depends=[zoo chron maptools ]; };
Streamer = derive { name="Streamer"; version="1.12.0"; type="bioc"; sha256="0h93z1kqyrb713dn6zabppbr0lcwrp3d9m7c00gm4hg0dlpc3y1s"; depends=[graph RBGL BiocGenerics ]; };
StressStrength = derive { name="StressStrength"; version="1.0.1"; type="cran"; sha256="15sgdisgz8zcq4i9z4zm7isr5ckyd7bk6yl1g7a5kngams282ipx"; depends=[ ]; };
SubCultCon = derive { name="SubCultCon"; version="1.0"; type="cran"; sha256="08q6k4nsv3gl5qk87s87smdg047yc2a4i7kg0fp08i7q7h62jkvz"; depends=[ ]; };
SubLasso = derive { name="SubLasso"; version="1.0"; type="cran"; sha256="12m7ynlqhikjhavd12bhsd04s9cpv8aq5xgm875i10mb3ldpd1bd"; depends=[glmnet psych gplots ]; };
SubpathwayGMir = derive { name="SubpathwayGMir"; version="1.0"; type="cran"; sha256="1rw94idhbnaszr2xv1wgnjcxlnxkml912pvmqh2a1nqpwca5mscy"; depends=[XML igraph ]; };
Sunder = derive { name="Sunder"; version="0.0.4"; type="cran"; sha256="1na41nnscyc4v1qbwzfgqk503r39xxbi6f446pscrz3v0v121f1a"; depends=[mnormt ]; };
SunterSampling = derive { name="SunterSampling"; version="1.0.1"; type="cran"; sha256="0qfld3j8xlpgp7c58zqw6gzm38m4d740lvdj5vmcflfcc6ja98sf"; depends=[ ]; };
SuperLearner = derive { name="SuperLearner"; version="2.0-15"; type="cran"; sha256="1sk45419awk8aahylmqbardx8lglx0d7hrwc0k2prnksk5r3549l"; depends=[nnls ]; };
SuppDists = derive { name="SuppDists"; version="1.1-9.1"; type="cran"; sha256="1jqsv1lzjblc7sdb4gh8pkww9ar174bpbjl7mmdi59fixymwz87s"; depends=[ ]; };
Surrogate = derive { name="Surrogate"; version="0.1-6"; type="cran"; sha256="1yqpwzihs7phydlbywr8cz3fq2bcin3b9v3q807bvp9mpjhi7ihg"; depends=[MASS nlme msm lme4 rgl lattice latticeExtra ]; };
SurvCorr = derive { name="SurvCorr"; version="1.0"; type="cran"; sha256="01rqdl503q1qnkn49iqnsjzis6azdsfi6s2hjky5k2zd6c9g18k5"; depends=[survival fields ]; };
SurvLong = derive { name="SurvLong"; version="1.0"; type="cran"; sha256="000ywg0sdk9kailiy7ckhq4mkaawl9hh88w6apj5khgpxsyj8aw3"; depends=[ ]; };
SurvRegCensCov = derive { name="SurvRegCensCov"; version="1.3"; type="cran"; sha256="1sl17x984ww07aakz6dambn5kznw4hvj4b8ahy2r4mr6wf2dpg5a"; depends=[survival numDeriv ]; };
Survgini = derive { name="Survgini"; version="1.0"; type="cran"; sha256="1gxkdv2j1njbgnwb52vyhz7p2lrcg3hp6sry3kyhp4wkvf6gnhxi"; depends=[survival ]; };
Sushi = derive { name="Sushi"; version="1.2.0"; type="bioc"; sha256="12zdd6c50li95qipck2zrqlx458rhklgja09887cby7s5s54vzca"; depends=[zoo biomaRt ]; };
SvyNom = derive { name="SvyNom"; version="1.1"; type="cran"; sha256="1jym2x6nd9a3y7nk5hflqpy54gs67y4sqqspkvkalf5l2cc64did"; depends=[survival rms Hmisc survey ]; };
SweaveListingUtils = derive { name="SweaveListingUtils"; version="0.6.2"; type="cran"; sha256="0n15gkiil9rlb0dhnkfimhcs09av35b7qx79iba7bx3y7spvzaqy"; depends=[startupmsg ]; };
SwimR = derive { name="SwimR"; version="1.4.0"; type="bioc"; sha256="02sdfc50siix81qvsc41d2khc6zijjgh337zjypglsp2k2lg1hfi"; depends=[gplots heatmap_plus signal R2HTML ]; };
SwissAir = derive { name="SwissAir"; version="1.1.4"; type="cran"; sha256="1avc32q7nbwjkcbml7z05car6khv1ghcz3miw0krm8i53w032c6f"; depends=[ ]; };
SyNet = derive { name="SyNet"; version="2.0"; type="cran"; sha256="0mb9dscddkvmkf7l3bbcy4dlfmrvvy588vxdqy5dr783bpa5dkiw"; depends=[tkrplot ]; };
SynchWave = derive { name="SynchWave"; version="1.1.1"; type="cran"; sha256="127hllvig8kcs9gr2q14crswzhacv6v2s4zrgj50qdyprj14is18"; depends=[fields ]; };
SynergizeR = derive { name="SynergizeR"; version="0.2"; type="cran"; sha256="0z32ylrjjvp8kr6lghhg57yq1laf9r0h8l3adysvis8bbpz2q2sj"; depends=[RJSONIO RCurl ]; };
Synth = derive { name="Synth"; version="1.1-5"; type="cran"; sha256="1cfvh91nz6skjk8jv04fhwv3ga9kcsfgq3mdy8lx75jkx16zr0pk"; depends=[kernlab optimx ]; };
TAM = derive { name="TAM"; version="1.6-0"; type="cran"; sha256="0wca6ry29k422q8x4qwpd9myc6xnd2p2z05dqlmb2gwzgbj3wcbk"; depends=[CDM MASS Rcpp mirt lavaan WrightMap tensor sfsmisc GPArotation psych mvtnorm msm lattice plyr Rcpp RcppArmadillo ]; };
TANOVA = derive { name="TANOVA"; version="1.0.0"; type="cran"; sha256="0c2mrahchwagisrkjl5l1s0mv0ny80kngq8dz0fjj9lwxwqwvwa5"; depends=[MASS ]; };
TAQMNGR = derive { name="TAQMNGR"; version="2015.2-1"; type="cran"; sha256="0j7qb15xy4g4ff0cmyjyz4lsalaxxf6zdwbq49j3y80ld0pvwhbk"; depends=[Rcpp ]; };
TBEST = derive { name="TBEST"; version="5.0"; type="cran"; sha256="15piy507vv8x59xgga17splxszy0vm87qjbfgxycvba633jishsa"; depends=[signal fdrtool ]; };
TBSSurvival = derive { name="TBSSurvival"; version="1.2"; type="cran"; sha256="12ipgffympqjjg8l9gbich5pgz0pqr5g07b0il26rr721xiyxk5v"; depends=[normalp survival mcmc R_utils coda Rsolnp BMS ]; };
TCC = derive { name="TCC"; version="1.6.5"; type="bioc"; sha256="17cyfv1401xrscxk7n10s85b6zyw5amc924hz1hsdgsvqm8kv1p0"; depends=[DESeq DESeq2 edgeR baySeq ROC samr ]; };
TDA = derive { name="TDA"; version="1.3"; type="cran"; sha256="1f9f5v8c0ynxz8p4kr9w08c4icf0840h7iay8k1ydh5zmr43d7lk"; depends=[FNN igraph scales ]; };
TDARACNE = derive { name="TDARACNE"; version="1.16.0"; type="bioc"; sha256="1yqf747bx6vm09yjclf787xz2j3nhk1fiwwmkp4wrd7fazqfnchl"; depends=[GenKern Rgraphviz Biobase ]; };
TDCor = derive { name="TDCor"; version="0.1-1"; type="cran"; sha256="001rmwi2v4vy1b2d7wwvvca4xnkizz8dmys3q3xbjv7wrfxyvai8"; depends=[deSolve ]; };
TDD = derive { name="TDD"; version="0.4"; type="cran"; sha256="193y8brybkjsajrbnlx1sdnw1wyyn9rhlm5wvp4aamqhvi8z13vn"; depends=[signal RSEIS pracma ]; };
TDMR = derive { name="TDMR"; version="1.3"; type="cran"; sha256="0bbd2an18ayxaxprsjqrybb877lkk74dpxbvbv7qdwc1ivqm8g96"; depends=[SPOT twiddler testit adabag ]; };
TDboost = derive { name="TDboost"; version="1.1"; type="cran"; sha256="1pyqssqxkr9bwyz4h1l5isbb78asmvddy20vyxq8snxra2r06hbf"; depends=[lattice ]; };
TED = derive { name="TED"; version="1.1.1"; type="cran"; sha256="0nb2arx7c1m8ymnkmj3jwbcw23vhkr1f3vlym2hqs0pq0lnsl4g0"; depends=[foreach zoo fields animation geoR RcppArmadillo ]; };
TEEReg = derive { name="TEEReg"; version="1.0"; type="cran"; sha256="1xpr4m8yamifjx7njb7dyqv51rsbjym9c5avflf69r9sazf3n503"; depends=[ ]; };
TEQC = derive { name="TEQC"; version="3.6.0"; type="bioc"; sha256="0072qasrzl50ril7jz96mkxkc290ifk8fs7r3mjmx2v8a7ifxak4"; depends=[BiocGenerics IRanges Rsamtools hwriter Biobase ]; };
TEQR = derive { name="TEQR"; version="5.0-0"; type="cran"; sha256="04r26qzps7nnvs4s2xpvjf6q456wa29alhsds07xvyqhi972xhs6"; depends=[ ]; };
TERAplusB = derive { name="TERAplusB"; version="1.0"; type="cran"; sha256="0mshx615awcf2arm39mgw2gzgpyn7a3f767484g7z4nqqlikwpgc"; depends=[ ]; };
TESS = derive { name="TESS"; version="1.2.1"; type="cran"; sha256="15wrbbhrzj66j0z6xhnbf560qg0dzm1yqfbpmx070n3lsa2rdyij"; depends=[ape coda deSolve ]; };
TExPosition = derive { name="TExPosition"; version="2.6.10"; type="cran"; sha256="12rgijlclaipwjjiyng7nwilzixdy6lsvncigcg0vjydhgk97jn1"; depends=[prettyGraphs ExPosition ]; };
TFBSTools = derive { name="TFBSTools"; version="1.4.0"; type="bioc"; sha256="1vkx7mnik79pdq02x8r73y8hmdaf8g6f2f1lf0fissvmg8z7v13w"; depends=[Biostrings RSQLite seqLogo GenomicRanges caTools XVector rtracklayer BSgenome S4Vectors IRanges gtools CNEr BiocParallel DirichletMultinomial TFMPvalue ]; };
TFDEA = derive { name="TFDEA"; version="0.9.8.3"; type="cran"; sha256="0qg4nhlqqj7hc8lg732zz8klbbp3yksnq8q8n4ml3jz8gadrpyj7"; depends=[lpSolveAPI ]; };
TFMPvalue = derive { name="TFMPvalue"; version="0.0.5"; type="cran"; sha256="13bfcwfiyl61cv2ma23fcmv2cvbsyzdbg2pl6l6zg39l6scxf9na"; depends=[Rcpp Rcpp ]; };
TFX = derive { name="TFX"; version="0.1.0"; type="cran"; sha256="0xrjdbvg0ng4i0s8ql1pfyma10x4n045spilkb05750677r5j44p"; depends=[XML ]; };
TH_data = derive { name="TH.data"; version="1.0-6"; type="cran"; sha256="1kx6z8lj1l2vxi7vhx47sly65grjkm3wvrbr3nl52q1vdmy1xsgm"; depends=[ ]; };
TIMP = derive { name="TIMP"; version="1.12.1"; type="cran"; sha256="06zjpa9j4sr62f2lspa75i7n8xcf4xdgxq2zjbzsx4f0p0nf5ymj"; depends=[fields vcd gplots colorspace gclus nnls deSolve minpack_lm MASS ]; };
TInPosition = derive { name="TInPosition"; version="0.13.6"; type="cran"; sha256="1cxxrfpbiyknaivv6gyp79lz0rxwhrndcd054smksxq8zcfz0v7c"; depends=[prettyGraphs TExPosition ExPosition InPosition ]; };
TKF = derive { name="TKF"; version="0.0.8"; type="cran"; sha256="1db87lwx26ayv1x2k8qd9dfr6j3jkvdl9ykisaxr42l6akqy21nr"; depends=[expm numDeriv ape phytools phangorn ]; };
TPmsm = derive { name="TPmsm"; version="1.2.0"; type="cran"; sha256="1670b9g6sqlg5xk76x77cph1wzp44yp957sn8px5k7kkb1hgi0pl"; depends=[KernSmooth ]; };
TR8 = derive { name="TR8"; version="0.9.13"; type="cran"; sha256="07wrqwa5gf1l1y3b07mganr5xkzxdzrh6lrv7gf01m9b7bsz564m"; depends=[RCurl XML taxize plyr rappdirs gWidgets gWidgetstcltk gdata ]; };
TRAMPR = derive { name="TRAMPR"; version="1.0-7"; type="cran"; sha256="135ylhijhpdxpznfdbdzwfsvy8bhw1yx28c3520a3lyrqvinpawg"; depends=[ ]; };
TRD = derive { name="TRD"; version="1.0"; type="cran"; sha256="1xj3ns9phiz4i70ky2p1q1cr3h6iq2i3dywnap6gqaq0fqmiq2fh"; depends=[Rlab ]; };
TROM = derive { name="TROM"; version="1.0"; type="cran"; sha256="1pr5n6bgjrn60f95395p2x8c2h1q3sx6a7448m0xi0a51wa016xp"; depends=[lattice topGO AnnotationDbi openxlsx gtools RColorBrewer gplots ]; };
TRSbook = derive { name="TRSbook"; version="1.0.1"; type="cran"; sha256="1w2yl5pchw2vn9l3qnm1ra9mjy946i5xsxh5n5xdvrcj2kak50x5"; depends=[xtable RColorBrewer gdata IndependenceTests ]; };
TSA = derive { name="TSA"; version="1.01"; type="cran"; sha256="0cm97hwxm6vfgy9mc3kgwq6dnmn86p8a4avnfjbai048qnwrn6hx"; depends=[leaps locfit mgcv tseries ]; };
TSCAN = derive { name="TSCAN"; version="1.2.0"; type="bioc"; sha256="0pkx5nij9qag5ki8fgs1ygi06aybwkjn4n7qcr95qzafjqxr9r19"; depends=[ggplot2 shiny plyr fastICA igraph TSP combinat mgcv gplots ]; };
TSEN = derive { name="TSEN"; version="1.0"; type="cran"; sha256="1pn313g2ylbjc37rqcakd797vffnh7v0rgg1xl5wjyvcgmm5mxix"; depends=[ncdf ]; };
TSHRC = derive { name="TSHRC"; version="0.1-3"; type="cran"; sha256="18ygg7bqwg1pdqi52l1lf33gcd277895rlf5853yzh7ln2ivssmi"; depends=[ ]; };
TSMySQL = derive { name="TSMySQL"; version="2015.4-1"; type="cran"; sha256="1gdda7li320ba9qfxfl5c4cwl2ln5jdbvid98cryj175g0nbmx7b"; depends=[TSdbi DBI tframe TSsql RMySQL ]; };
TSP = derive { name="TSP"; version="1.1-1"; type="cran"; sha256="0wwzmkgfy55dba9jl3mpbyqciia71px0x0s6708k8kz9vr03m2zs"; depends=[foreach ]; };
TSPostgreSQL = derive { name="TSPostgreSQL"; version="2015.4-1"; type="cran"; sha256="11201zpbrva6gwc9hg8pynadrps6d8pb3syzba9nyjpv2ck6x3ry"; depends=[TSdbi DBI tframe tframePlus TSsql RPostgreSQL ]; };
TSPred = derive { name="TSPred"; version="2.0"; type="cran"; sha256="0p4msk12n8jc1ss8p7m15rxd0ip7v83c5p78v26nk5dz21a4xprp"; depends=[forecast ]; };
TSSQLite = derive { name="TSSQLite"; version="2015.4-1"; type="cran"; sha256="10z8s967wmapkb56hh2brb5bafgqr8flwh0sr72yqqv0ca2d06sc"; depends=[TSdbi DBI tframe tframePlus TSsql RSQLite ]; };
TSSi = derive { name="TSSi"; version="1.12.0"; type="bioc"; sha256="1dynhh1pn4bc57brs7jf9q7na71zd3pc9nj03n76g0rfy92n78gi"; depends=[BiocGenerics IRanges BiocGenerics S4Vectors Hmisc minqa Biobase plyr IRanges ]; };
TSTutorial = derive { name="TSTutorial"; version="1.2.3"; type="cran"; sha256="0hpk6k3lc72p8pdz5aad04lcjsz9k443h5gs09dc3i10wqw3yhxs"; depends=[MASS ]; };
TSclust = derive { name="TSclust"; version="1.2.3"; type="cran"; sha256="0m04svw4z2rhvzyckn8l4pg4rmwfn8xlzd9k839c47ldbzgb4z6l"; depends=[wmtsa pdc cluster locpol KernSmooth dtw longitudinalData ]; };
TScompare = derive { name="TScompare"; version="2015.4-1"; type="cran"; sha256="0jmxnrbsdg368f29bp70rc9i88si5zjblbcn8rcjyn2k9vpd3q2f"; depends=[TSdbi tframe tfplot DBI ]; };
TSdata = derive { name="TSdata"; version="2015.4-2"; type="cran"; sha256="1c0ly1gs6p3fspwvk1f6c2xgzvc7p7pkzakm44lisbyjklacnilp"; depends=[ ]; };
TSdbi = derive { name="TSdbi"; version="2015.1-1"; type="cran"; sha256="1bqxpd4g0ppm1261srgwjzghfwwl53vybkihz99azckky0539m1s"; depends=[DBI tframe ]; };
TSdist = derive { name="TSdist"; version="2.2"; type="cran"; sha256="1zqqy2pxjzxlj1d32d086qrkf9rlgj9vn9smzbcfix8wlgvxfi1l"; depends=[proxy zoo xts dtw TSclust KernSmooth locpol pdc longitudinalData cluster ]; };
TSfame = derive { name="TSfame"; version="2015.4-1"; type="cran"; sha256="197v123mkxr7qlksnb5iadms5zbc8xqbpgr2cspb8x1krz6phssz"; depends=[TSdbi DBI tframe tframePlus fame tis ]; };
TSmisc = derive { name="TSmisc"; version="2015.1-3"; type="cran"; sha256="1hv1q9p7vp7pxx9s4s9w3vkif1w1xr4y656x3zaf48ijxf6c6a90"; depends=[TSdbi DBI tframe tframePlus zoo xts its tseries quantmod gdata ]; };
TSodbc = derive { name="TSodbc"; version="2015.4-1"; type="cran"; sha256="0m6r97gs483jg6jlmfkbzxg3jvf6q140kvpidjccj224zb1sqlcq"; depends=[TSdbi DBI tframe tframePlus TSsql RODBC ]; };
TSsdmx = derive { name="TSsdmx"; version="2015.2-2"; type="cran"; sha256="1xwriyg0raqd6812r6vf34dljs0cjhxls9gpal4w0bjmvmc67khb"; depends=[TSdbi DBI tframe tframePlus RJSDMX rJava ]; };
TSsql = derive { name="TSsql"; version="2015.1-2"; type="cran"; sha256="1hpi2cssnkzqgnaj91wrvb94fs8zpfg8hi4m1zwswzyl3az0l9sc"; depends=[DBI tframe TSdbi tframePlus zoo ]; };
TTAinterfaceTrendAnalysis = derive { name="TTAinterfaceTrendAnalysis"; version="1.5.1"; type="cran"; sha256="1i9p5s7xj3py8465yjjaqs2m7krjxzzqd86lkpbgzxnxjdnxcx5i"; depends=[Hmisc pastecs reshape wq e1071 timeSeries fBasics relimp multcomp nlme lubridate tcltk2 ]; };
TTR = derive { name="TTR"; version="0.22-0"; type="cran"; sha256="0aackwmmakjcynpq4nxi8xw1x3688rkg6kypgd5jiprzzdhsz5rq"; depends=[xts xts ]; };
TTmoment = derive { name="TTmoment"; version="1.0"; type="cran"; sha256="0a4rdb4fk1mqnvvz0r15kni0g5vcj4xkkcwwv7c2gxc94xh5i5ih"; depends=[mvtnorm ]; };
TUWmodel = derive { name="TUWmodel"; version="0.1-4"; type="cran"; sha256="1xxbrcs3dddzcya15pj4k86z05vnv06fnwblfvygx0zkw0m292av"; depends=[ ]; };
Table1Heatmap = derive { name="Table1Heatmap"; version="1.1"; type="cran"; sha256="1nrabjivfsdhaqmlq365pskkrp99jqsxn8vy03mdnqn5h5zv7wvx"; depends=[colorRamps ]; };
TableMonster = derive { name="TableMonster"; version="1.2"; type="cran"; sha256="1cl70d0svzx8nsg6kw5dv50s9d6wxqkyg39d2d4vissbpilq6arn"; depends=[xtable ]; };
TableToLongForm = derive { name="TableToLongForm"; version="1.3.1"; type="cran"; sha256="135q0bgsm2yndrg3vpwmihbqlyf3qkm97i0jvcw6bf06p6b2fk41"; depends=[ ]; };
TaoTeProgramming = derive { name="TaoTeProgramming"; version="1.0"; type="cran"; sha256="1b36s5mpm5vbhzcwmvm8g5pl7vpn6rsl5cnglfy8kgm1q9nnr7ff"; depends=[ ]; };
TapeR = derive { name="TapeR"; version="0.3.2"; type="cran"; sha256="070zl7hqv5zprhs464gy1kmz0am58l0vig8xvdq6pbz94nrhvpj0"; depends=[nlme pracma ]; };
TargetScore = derive { name="TargetScore"; version="1.4.0"; type="bioc"; sha256="1djnws8qls7kqq7bs950z9cdhz8fm79i4b5l3z9xn27divhadz8h"; depends=[pracma Matrix ]; };
TargetSearch = derive { name="TargetSearch"; version="1.22.0"; type="bioc"; sha256="0xzn71kdif1maicla2xlk40zf1lih1yd742dz3yyrig4d8mhfasl"; depends=[mzR ]; };
TauP_R = derive { name="TauP.R"; version="1.1"; type="cran"; sha256="10sjvcv70fjrsl5nnk9gm4sy7nhwm6aaq57gr37cb10v079ykmk1"; depends=[ ]; };
Taxonstand = derive { name="Taxonstand"; version="1.7"; type="cran"; sha256="0xs2kdsd6sa5vpxajw1rkraiy27km6q4mqsdsq1yfdl1wxv7m0sl"; depends=[ ]; };
TcGSA = derive { name="TcGSA"; version="0.9.8"; type="cran"; sha256="19gp3pj4p2svrfyviccvv13q82qj7584nck8zbba90hzv9g4xy86"; depends=[lme4 ggplot2 GSA multtest reshape2 gtools gplots cluster stringr ]; };
TeachNet = derive { name="TeachNet"; version="0.7"; type="cran"; sha256="1p39bsf846r7zwz4lrrv2bpyx9yrkqzrnacajwrz3jjqj6qpp6cn"; depends=[ ]; };
TeachingDemos = derive { name="TeachingDemos"; version="2.9"; type="cran"; sha256="160xch4812darv77qk2xjblm6nfnna5x2rxy335bwdsdjzcx4x9m"; depends=[ ]; };
TeachingSampling = derive { name="TeachingSampling"; version="3.2.2"; type="cran"; sha256="07c1wx7hl246kvj9ah55kdjpag8a9zbzh3jy0680w5nnv8vzsxxs"; depends=[ ]; };
TestScorer = derive { name="TestScorer"; version="1.7"; type="cran"; sha256="1rzpy4aa61l21qx2qxrmk16cxrvbygacxk4rkm766769aq2jqa09"; depends=[ ]; };
TestSurvRec = derive { name="TestSurvRec"; version="1.2.1"; type="cran"; sha256="05f5gc8hvz09hx015jzis6ikki9c1brdq7l7a9bxm9bqbcc9f2f9"; depends=[survrec boot ]; };
Thermimage = derive { name="Thermimage"; version="1.0.1"; type="cran"; sha256="16wpmwqfqjghhp4g5wpmgzf0ii2aa0gawcq74rfn4frfizzdy0ad"; depends=[ ]; };
Thinknum = derive { name="Thinknum"; version="1.3.0"; type="cran"; sha256="0j48vgr4wsc2chm95aprq0xm0dk720xk5zmiijxasg92sfp0va6n"; depends=[RCurl RJSONIO ]; };
ThreeArmedTrials = derive { name="ThreeArmedTrials"; version="0.1-0"; type="cran"; sha256="1pafm8k90yv0hrk5a9adfv37087l2in0psslhkxha6mkmdh6a5f6"; depends=[MASS ]; };
ThreeWay = derive { name="ThreeWay"; version="1.1.2"; type="cran"; sha256="1vf71im3bs2b2v05j12l8qn181kah0mch4h13n71zqik1ykly6jf"; depends=[ ]; };
ThresholdROC = derive { name="ThresholdROC"; version="1.0"; type="cran"; sha256="1w7bjw1w09skxyc5w3d72wivljlvnck6vbchihjx7m5k6djn7pxi"; depends=[ ]; };
TickExec = derive { name="TickExec"; version="1.1"; type="cran"; sha256="0v0m0wi49yw0ply19vnirl2zwnk61sxalx24l8cadvkssgs13509"; depends=[ ]; };
TiddlyWikiR = derive { name="TiddlyWikiR"; version="1.0.1"; type="cran"; sha256="0vwwjdmfc8c0y2gfa8gls1mzvp29y39c9sxryrgpk253jj9px1kr"; depends=[ ]; };
Tides = derive { name="Tides"; version="1.1"; type="cran"; sha256="0w2xjnw2zv4s49kvzbnfvy30mfkn8hqdz6p155xm1kfqwvyb28qq"; depends=[ ]; };
TilePlot = derive { name="TilePlot"; version="1.3.1"; type="cran"; sha256="0yfzjyzc743rv5piw9mb7y0rr558hkxszgz49lya2w3i1mqvxbzy"; depends=[ ]; };
TimeMachine = derive { name="TimeMachine"; version="1.2"; type="cran"; sha256="1dz0j777wmd8mpkm2ryiahpcw6w88w429zjcw6m67pi20r1992cb"; depends=[ ]; };
TimeProjection = derive { name="TimeProjection"; version="0.2.0"; type="cran"; sha256="04yr4cg2khkw9n3y3qk0ni1327k4pxm09zz2xg8mpjdvgi4p9yi3"; depends=[lubridate timeDate Matrix ]; };
TimeWarp = derive { name="TimeWarp"; version="1.0.12"; type="cran"; sha256="1qadaf8n8ym5nv1z328hd5wiw78f014imgd2ryvi70sh4dmzb16l"; depends=[ ]; };
Tinflex = derive { name="Tinflex"; version="1.0"; type="cran"; sha256="0zvh2nfx4kqf90mmrpdm2fzlzn7s7gs09i8zin604hqxjir6p3ny"; depends=[ ]; };
TitanCNA = derive { name="TitanCNA"; version="1.4.0"; type="bioc"; sha256="1715mzds758z8k7lz9bn2r9f9azrf359d4ryac514w0f1v56f1hk"; depends=[foreach IRanges Rsamtools GenomeInfoDb ]; };
ToPASeq = derive { name="ToPASeq"; version="1.0.1"; type="bioc"; sha256="0ilsjx2ys425bg9nsk909xii1rpddqpmjxlhsd0196b5vmcdpy0m"; depends=[graphite gRbase graph locfit R_utils edgeR DESeq2 GenomicRanges igraph DESeq fields limma TeachingDemos SPIA clipper topologyGSA ]; };
TopKLists = derive { name="TopKLists"; version="1.0.3"; type="cran"; sha256="0687nxsddmlgyz3kwcfmcv0vj2pw91154rd1p19ivhmbvhvnhwvh"; depends=[Hmisc gplots ]; };
TraMineR = derive { name="TraMineR"; version="1.8-9"; type="cran"; sha256="0qawgjifz6w7gb06j9q5kbvhf8pn17922mvmgwzva5mykvqfmdic"; depends=[RColorBrewer boot ]; };
TraMineRextras = derive { name="TraMineRextras"; version="0.2.3"; type="cran"; sha256="0b6xh1xhmigjfj9cbk4gdpi1d131cq9ikwgdblcwwrmnrhcjgld6"; depends=[TraMineR RColorBrewer combinat survival cluster ]; };
TrackReconstruction = derive { name="TrackReconstruction"; version="1.1"; type="cran"; sha256="1f2l3nshb6qrhyczw5rxqqzmsjxf0rvv3y78j8d9lv1nnd9kxzq5"; depends=[fields RColorBrewer ]; };
TransView = derive { name="TransView"; version="1.10.0"; type="bioc"; sha256="08jzlzp7skmkllangb1d5fksdznb5qxnr036hksr8nakndjwv1ra"; depends=[GenomicRanges Rsamtools zlibbioc gplots IRanges Rsamtools ]; };
TreatmentSelection = derive { name="TreatmentSelection"; version="1.1.2"; type="cran"; sha256="1mvrb72yz51gmwqlfg5gsjbi65lqk5j24agddw1br53ymdvjgzq4"; depends=[ggplot2 ]; };
TreePar = derive { name="TreePar"; version="3.3"; type="cran"; sha256="1sm518b1b4b1p0n5979qzvi2nacxpp3znbg9n75pf2a8z8wy6p4l"; depends=[ape Matrix subplex TreeSim deSolve ]; };
TreeSim = derive { name="TreeSim"; version="2.1"; type="cran"; sha256="01izfzlvrak65mzwpz4bn5cansw10fvfjfvj164f5g0qghg9v84n"; depends=[ape geiger laser ]; };
TreeSimGM = derive { name="TreeSimGM"; version="1.2"; type="cran"; sha256="0y6hadwx3apw11jy5d4al3dav3his8b4xvkv7s5d5rd92l7yrw0r"; depends=[TreeSim ]; };
TriMatch = derive { name="TriMatch"; version="0.9.4"; type="cran"; sha256="008mi58sv82ykvwzil229z3zq3addyn3bik0xzfajcx4h7sdmsfg"; depends=[ggplot2 scales reshape2 ez psych PSAgraphics gridExtra ]; };
TrialSize = derive { name="TrialSize"; version="1.3"; type="cran"; sha256="1hikhw2l7d3c7cg4p7zzrgdwhy9g4rv06znpw5mc6kwinyakp75q"; depends=[ ]; };
TripleR = derive { name="TripleR"; version="1.4.1"; type="cran"; sha256="028xvy3l72n1jhhfzv1fx1a51ya9bx008icz81ixjdwghzqr0wmi"; depends=[ggplot2 reshape2 plyr ]; };
Tsphere = derive { name="Tsphere"; version="1.0"; type="cran"; sha256="0xgxw2hfj40k5s0b54dcmz7savl8wy4midmmgc7lq4pyb8vd58xx"; depends=[glasso rms ]; };
TukeyC = derive { name="TukeyC"; version="1.1-5"; type="cran"; sha256="08s9scsd2l6wavc7qqlffjbf89vkd6xpb4iawvbqf7jh8jiyvw17"; depends=[ ]; };
TunePareto = derive { name="TunePareto"; version="2.4"; type="cran"; sha256="0pljl3q5s9yqc4ph70y66ff9ci9w8gwj8jsy8srxqkgqvahc8arf"; depends=[ ]; };
TurboNorm = derive { name="TurboNorm"; version="1.14.0"; type="bioc"; sha256="14zfl2xrn55mwws7mx8q70fa8ym5dfdgqzmfk6ygbn6g2f57i8vr"; depends=[convert limma marray affy lattice ]; };
TurtleGraphics = derive { name="TurtleGraphics"; version="1.0-5"; type="cran"; sha256="18azwbvs3cv3arp6zhh5bklf7n04p13jpfjh44nxv5159jry7arr"; depends=[ ]; };
TwoCop = derive { name="TwoCop"; version="1.0"; type="cran"; sha256="1ycxq8vbp68z82r2dfg2wkc9zk3bn33d94xay20g2p55lnzl2ifd"; depends=[ ]; };
TwoStepCLogit = derive { name="TwoStepCLogit"; version="1.2.3"; type="cran"; sha256="0arqpfflflsydsgcrpq364vqf4sn019m03ygmpq810wa78v4r9s0"; depends=[survival ]; };
TypeInfo = derive { name="TypeInfo"; version="1.32.0"; type="bioc"; sha256="1ha815a0f07hnlqjw3r10h2da7bdsvdil513f9xm41is4npf8f1b"; depends=[ ]; };
UBCRM = derive { name="UBCRM"; version="1.0.1"; type="cran"; sha256="1h9f8wlxdgb67qqqnfhd9gfs4l2cq84vajhcb0psva0gwdd1yf6i"; depends=[ ]; };
UNDO = derive { name="UNDO"; version="1.8.0"; type="bioc"; sha256="0ka1n3fjk7awh128wbgw08z3z7s2fnkj3xnrmqrz0ydqhhz58654"; depends=[BiocGenerics Biobase MASS boot nnls ]; };
UNF = derive { name="UNF"; version="2.0.1"; type="cran"; sha256="1gnzj7lxfp0x5f2ws9aclzaq75gbmsqhjqi02llmihf05gq0kp23"; depends=[base64enc digest ]; };
UPMASK = derive { name="UPMASK"; version="1.0"; type="cran"; sha256="19krsqkz2g5b6svqp29s6i92bhlk7liv8lf7d03za848w7y2jkhq"; depends=[MASS RSQLite DBI ]; };
USAboundaries = derive { name="USAboundaries"; version="0.1.1"; type="cran"; sha256="18bk37lhrlp5j0496n956881zl88inliylmgh1p2nlkv4f195yd0"; depends=[assertthat dplyr ggplot2 lubridate maptools rgeos sp ]; };
UScancer = derive { name="UScancer"; version="0.1-2"; type="cran"; sha256="0p1kxw1phqq598ljk3njznc9kmgscc8gmwdrvx1scba9rr6n61kl"; depends=[rgdal ]; };
UScensus2000cdp = derive { name="UScensus2000cdp"; version="0.03"; type="cran"; sha256="143hqnzdla3p31n422ddzaaa34wc6xnnhil4y53m4qydyg407700"; depends=[maptools sp foreign ]; };
UScensus2000tract = derive { name="UScensus2000tract"; version="0.03"; type="cran"; sha256="11ppw75k8zghj7xphx5xyl3azsdsyd142avp0la2g941w6f8l2n1"; depends=[maptools sp foreign ]; };
UScensus2010 = derive { name="UScensus2010"; version="0.11"; type="cran"; sha256="1q06spkh8f4ijvfg557rl3176ki4i8a1y39cyqm3v7mnzwckyj3l"; depends=[maptools sp foreign ]; };
UWHAM = derive { name="UWHAM"; version="1.0"; type="cran"; sha256="1qaj8anaxqnx4nc6vvzda9hhhzqk9qp8q7bxm26qgia4hgascnrv"; depends=[trust ]; };
UniProt_ws = derive { name="UniProt.ws"; version="2.6.2"; type="bioc"; sha256="0h3w6ldi3ni3g1546c12p987q9shksj2s18pfyqbk2jdxygph3i0"; depends=[RSQLite RCurl BiocGenerics AnnotationDbi ]; };
Unicode = derive { name="Unicode"; version="0.1-5"; type="cran"; sha256="088f38qy3vympxj6n4vyvvqd4gldcfli9l8rmzgmm1rm3v195mvn"; depends=[ ]; };
UsingR = derive { name="UsingR"; version="2.0-4"; type="cran"; sha256="0wj6cn9ijc0rkpxsy1fd104m254b997dhmvwzz0knjkh5nybm8zm"; depends=[MASS HistData Hmisc ]; };
V8 = derive { name="V8"; version="0.6"; type="cran"; sha256="1cr9nm5wvi3b2766fpdgihnfmn1ckrwrzyya6dchvg2lr3giba38"; depends=[Rcpp jsonlite curl Rcpp ]; };
VAR_etp = derive { name="VAR.etp"; version="0.7"; type="cran"; sha256="0py5my3ilhcmz44m15hh0d219l9cz7rda4a9gbmf8wh9cgvvj1s3"; depends=[ ]; };
VBLPCM = derive { name="VBLPCM"; version="2.4.3"; type="cran"; sha256="0aibjkqlc8l3f17m52ifb25s639gkydvgdj2gkijk5mk0g681qdj"; depends=[ergm sna mclust ]; };
VBmix = derive { name="VBmix"; version="0.2.17"; type="cran"; sha256="0fhx2vk5ffq147kfgsqjbqwgv64m7z9mbz4gchj90440ih7kyxa5"; depends=[lattice pixmap mnormt ]; };
VCA = derive { name="VCA"; version="1.1.1"; type="cran"; sha256="14xm220ymg5p1m2h2xvjkbgaqfhi7dmf8fmi4zmfm5gksgf4v351"; depends=[Matrix numDeriv ]; };
VDA = derive { name="VDA"; version="1.3"; type="cran"; sha256="063mpwbyykx4f46wzfvrgnlq73ar7i06gxr4mjzbhqcfrsybi72b"; depends=[rgl ]; };
VGAM = derive { name="VGAM"; version="0.9-8"; type="cran"; sha256="0wizv2r1k79ifg9m0z9m2l80bshvfmajanznk5a5370ih3fih33a"; depends=[ ]; };
VGAMdata = derive { name="VGAMdata"; version="0.9-7"; type="cran"; sha256="0fkm90nbmj0gjzxmh54qbf90alcbaiz27rs0zc0i5jhh2cv716y6"; depends=[ ]; };
VHDClassification = derive { name="VHDClassification"; version="0.3"; type="cran"; sha256="1ij4h3gzxb9mm9q743kc3sg2q609mnqz6mhlrbim1wcjji2b7bv4"; depends=[e1071 lattice ]; };
VIF = derive { name="VIF"; version="1.0"; type="cran"; sha256="0yvg6ikrcs7mhg0pavhcywrfysv7ylvnhxpc5sam86dbp69flx9x"; depends=[ ]; };
VIGoR = derive { name="VIGoR"; version="1.0"; type="cran"; sha256="1c24s917aafqy46b3xlsw8v3afs11nd5bq83vlygpgnz1612jpga"; depends=[ ]; };
VIM = derive { name="VIM"; version="4.1.0"; type="cran"; sha256="15nmywg8mhknvivg9bfszif2allim5vf1hjfbfyl053jphjpax26"; depends=[colorspace data_table car robustbase sp vcd MASS nnet e1071 Rcpp Rcpp ]; };
VIMGUI = derive { name="VIMGUI"; version="0.9.0"; type="cran"; sha256="195lakyik597sjkq6c5v3881p35111gzmj2r5f5nr53vi6bn4pzm"; depends=[tkrplot VIM survey gWidgetsRGtk2 foreign RGtk2 Cairo Hmisc ]; };
VLF = derive { name="VLF"; version="1.0"; type="cran"; sha256="1il8zhm80mc22zj16dpsy4s6s9arj21l9ik0vccyrpnlr8ws3d3l"; depends=[ ]; };
VLMC = derive { name="VLMC"; version="1.4-1"; type="cran"; sha256="0y91cl9pv1d5s8956grdx3y4xa5l1fabrh1wl5hn11fjgyz1dcij"; depends=[MASS ]; };
VNM = derive { name="VNM"; version="4.0"; type="cran"; sha256="0dc2wvj8f09yrsf5lhg6djhfnkgslngs6a13g54d5q9aa4nnxm8w"; depends=[ ]; };
VPdtw = derive { name="VPdtw"; version="2.1-10"; type="cran"; sha256="1sipiqbk766czd1jxam3bc2hfq7wsn72x51j5ssn2s2q0gvpl7m1"; depends=[ ]; };
VSURF = derive { name="VSURF"; version="1.0.0"; type="cran"; sha256="1hqn22k66v9zb2qr7sig0zgki9hbfr5442d7mlldnyj3m012m22j"; depends=[doParallel foreach randomForest rpart ]; };
VaRES = derive { name="VaRES"; version="1.0"; type="cran"; sha256="0gw05jiqgirhz3c8skbb07y4h44r6vi68gnd5y7ql455v0c2raza"; depends=[ ]; };
VanillaICE = derive { name="VanillaICE"; version="1.28.5"; type="bioc"; sha256="0lfhhawkvv4ah4wbk7krmwq5ymmgyqzk6ni66ij6slm5nsib253s"; depends=[GenomicRanges Biobase oligoClasses IRanges S4Vectors foreach matrixStats data_table lattice GenomeInfoDb crlmm ]; };
VarSelLCM = derive { name="VarSelLCM"; version="1.1"; type="cran"; sha256="04iqlkphlj8xwz2qrabqphilj3s5hspasawh92f94mvfjd6vgscl"; depends=[Rcpp mclust Rcpp RcppArmadillo ]; };
VarSwapPrice = derive { name="VarSwapPrice"; version="1.0"; type="cran"; sha256="12q2wp2cqi9q47mzbb7sc250zkjqkhs9z0h93ik0h63dv339abgj"; depends=[ ]; };
VariABEL = derive { name="VariABEL"; version="0.9-2"; type="cran"; sha256="0vlr6zxl75i49p35jxrc5fwfrb55n91hqdan2ikcix3r2k4qs5k0"; depends=[ ]; };
VarianceGamma = derive { name="VarianceGamma"; version="0.3-1"; type="cran"; sha256="0h424hdphbgi9i84bgzdwmsq05w61q8300x8f9y4szbxa5k2dnar"; depends=[DistributionUtils GeneralizedHyperbolic RUnit ]; };
VariantAnnotation = derive { name="VariantAnnotation"; version="1.12.9"; type="bioc"; sha256="06s1fxiw3dxjy5li3kn4p46bymrgssx4pfmrgvdra1wcfqx29qbq"; depends=[BiocGenerics GenomeInfoDb GenomicRanges Rsamtools DBI zlibbioc Biobase S4Vectors IRanges XVector Biostrings AnnotationDbi BSgenome rtracklayer GenomicFeatures S4Vectors IRanges XVector Biostrings Rsamtools ]; };
VariantFiltering = derive { name="VariantFiltering"; version="1.2.14"; type="bioc"; sha256="0275cy9xpxjp9jff3my97s5pa193f2i6ll54wsm5l8qvkpilqr1i"; depends=[BiocGenerics DBI RSQLite Biobase S4Vectors IRanges AnnotationDbi BiocParallel Biostrings GenomeInfoDb GenomicRanges GenomicFeatures Rsamtools BSgenome VariantAnnotation shiny S4Vectors IRanges XVector Biostrings ]; };
VariantTools = derive { name="VariantTools"; version="1.8.1"; type="bioc"; sha256="0kr05nh1p128nm50bzrcn2lxnapm4vvgrzakbszxrakgk9span5r"; depends=[S4Vectors IRanges GenomicRanges VariantAnnotation Rsamtools BiocGenerics Biostrings gmapR GenomicFeatures Matrix rtracklayer BiocParallel GenomeInfoDb BSgenome ]; };
VdgRsm = derive { name="VdgRsm"; version="1.5"; type="cran"; sha256="13mbv3ih6p2915wdzq4zjx7m4k37w1xddkxx6dzk1jiak2br9slj"; depends=[permute AlgDesign ]; };
Vdgraph = derive { name="Vdgraph"; version="2.2-2"; type="cran"; sha256="1q8l711zbrrj4h1wmpv93nbvlg8xi6kjv22zpidkck8ncpyyla80"; depends=[ ]; };
VecStatGraphs2D = derive { name="VecStatGraphs2D"; version="1.7"; type="cran"; sha256="08f9ixpiq8s5h8h608wrs9l16xk3c1xcrvwgvm5wqm6xfkj9gpfd"; depends=[MASS ]; };
VecStatGraphs3D = derive { name="VecStatGraphs3D"; version="1.6"; type="cran"; sha256="1pnpgnxdiis4kzwhh17k61aidyan5fp9rzqhvwf6gljb4csqsk54"; depends=[rgl misc3d MASS ]; };
Vega = derive { name="Vega"; version="1.14.0"; type="bioc"; sha256="1gzm54glvbm24bb0qvkcmn9zl00dywiwbqcjk9vxf002xbww03pw"; depends=[ ]; };
VegaMC = derive { name="VegaMC"; version="3.4.0"; type="bioc"; sha256="128r0ns20vsp8glxyafa9yms4f2l5iakv0pz0cmq9pgqkg6ni2wz"; depends=[biomaRt Biobase genoset ]; };
VennDiagram = derive { name="VennDiagram"; version="1.6.9"; type="cran"; sha256="0sxgspqsn15y3pipd9wy4wh2n5rkb9bazqkfwkf88p483azpjxw9"; depends=[ ]; };
VideoComparison = derive { name="VideoComparison"; version="0.11"; type="cran"; sha256="04jc9br4ddck2sh9bhy02jx34cqxvh904lr46sid6dnmaqfn80l7"; depends=[RJSONIO RCurl zoo pracma Rcpp Rcpp ]; };
VineCopula = derive { name="VineCopula"; version="1.4"; type="cran"; sha256="03bjpnpq8zj1h4z35m2xkgrislvp7lmvpxm905xxn1r3r944kflz"; depends=[MASS mvtnorm igraph copula ADGofTest ]; };
VizOR = derive { name="VizOR"; version="0.7-9"; type="cran"; sha256="1xw06y86nsrwpri6asrwh8kccjsqzzidgbpld6d6l7vrglp8m6sr"; depends=[lattice rms ]; };
Voss = derive { name="Voss"; version="0.1-4"; type="cran"; sha256="056izh1j26vqjhjh01fr7nwiz1l6vwr5z4fll87w99nc5wc4a467"; depends=[fields ]; };
VoxR = derive { name="VoxR"; version="0.5.1"; type="cran"; sha256="07lsp6lrkq0gv55m84dl9w7gz5246d9avypqnkz96n3rbbgd0w5z"; depends=[ ]; };
W2CWM2C = derive { name="W2CWM2C"; version="1.0"; type="cran"; sha256="14q1y4vpmrx8qz5nav8bbjkxqsqk646zcwr8h7yzi7cfa85b4cxz"; depends=[waveslim wavemulcor ]; };
W3CMarkupValidator = derive { name="W3CMarkupValidator"; version="0.1-2"; type="cran"; sha256="162bjf8g94xxif86c6545kjvn2m06v618kna6ic2b3alyx577fww"; depends=[XML RCurl ]; };
WARN = derive { name="WARN"; version="1.1"; type="cran"; sha256="0rnzsc8vbm116g4cwdivmxqv1zyg4givjrrlahvbf4xl5pbryg6d"; depends=[MASS ]; };
WCE = derive { name="WCE"; version="1.0"; type="cran"; sha256="1kb1z67ymnz8cgwxq6m5fpqgxmmrfiwh2q3x4rhanac2sinagyn4"; depends=[plyr survival ]; };
WCQ = derive { name="WCQ"; version="0.2"; type="cran"; sha256="1yhkr2iazd7lh9r68xz1lh32z6r1sdnmqrjshcrm4rbwai0j3lkr"; depends=[ ]; };
WDI = derive { name="WDI"; version="2.4"; type="cran"; sha256="0ih6d9znq6b2prb4nvq5ypyjv1kpi1vylm3zvmkdjvx95z1qsinf"; depends=[RJSONIO ]; };
WGCNA = derive { name="WGCNA"; version="1.46"; type="cran"; sha256="0amrj6bm4rdr9db57a7qqkh0wk8f9vkvpc3jag9dhwvxfwnrn378"; depends=[dynamicTreeCut fastcluster matrixStats Hmisc impute foreach doParallel reshape preprocessCore survival AnnotationDbi ]; };
WMCapacity = derive { name="WMCapacity"; version="0.9.6.6"; type="cran"; sha256="19x6l06srh59q1cnixisa5fgm5hkpq35h9zfmdnfaj3xl8pxhzyn"; depends=[gtools gWidgets gWidgetsRGtk2 coda cairoDevice RGtk2 XML ]; };
WMDB = derive { name="WMDB"; version="1.0"; type="cran"; sha256="10wdjy3g2qg975yf1dhy09w9b8rs3w6iszhbzqx9igfqvi8isrr1"; depends=[ ]; };
WRS2 = derive { name="WRS2"; version="0.3-1"; type="cran"; sha256="11i9zv7p7808v3hvnhjn58yl7mwh26zhis6hh9n73dw3hn22xdng"; depends=[MASS reshape plyr ]; };
WWGbook = derive { name="WWGbook"; version="1.0.1"; type="cran"; sha256="0q8lnd1fp4rmz715x0lf61py3xw8wg55yq3gvswaqwy68dlqrzjc"; depends=[ ]; };
WaterML = derive { name="WaterML"; version="1.0.0"; type="cran"; sha256="125aivc23qgarndbwxif3xmqjp4n32vyk8cb7f7a2v3y51z332j2"; depends=[XML RJSONIO httr ]; };
Watersheds = derive { name="Watersheds"; version="1.0"; type="cran"; sha256="11hrprl8ldbgk1j1f8z4cb327c8d94x1fc29dpacqck48gdb4wmp"; depends=[sp maptools rgeos lattice splancs ]; };
Wats = derive { name="Wats"; version="0.2-16"; type="cran"; sha256="1wbyyllmjsmh8wb8npzizlfn3hsvfpqp9p3b5wx3zpsavqw839wy"; depends=[colorspace ggplot2 lubridate plyr RColorBrewer testit zoo ]; };
WaveCD = derive { name="WaveCD"; version="1.0"; type="cran"; sha256="0gracn8lknw96nnir1m8fg5va3f45vvbiy69rxx8vibnfdg1q3l9"; depends=[waveslim lattice ]; };
WaveletComp = derive { name="WaveletComp"; version="1.0"; type="cran"; sha256="16ghxqjbv39pmgd52im6ilkkh0hpnaw8ns0hwkngpbr479m1grdp"; depends=[ ]; };
WeightedCluster = derive { name="WeightedCluster"; version="1.2"; type="cran"; sha256="1d0df284fzfa34fi7b3d7f4zzm9ppyah46rj865446l5pjvl9np3"; depends=[TraMineR cluster RColorBrewer ]; };
WeightedPortTest = derive { name="WeightedPortTest"; version="1.0"; type="cran"; sha256="007v3w9ssiv2sds7sikpal27g6pxwxhs7bvcyw6kr0vg8gvlbi8h"; depends=[ ]; };
WhatIf = derive { name="WhatIf"; version="1.5-6"; type="cran"; sha256="02lqvirnf24jn8b2s08z5fjmpilp2z08lww1s793n3pn783adbky"; depends=[lpSolve ]; };
WhiteStripe = derive { name="WhiteStripe"; version="1.1.1"; type="cran"; sha256="1naavgkvgky3lzg5vlz11g589cxr0fgiqz2waz86da1ksk4a19gw"; depends=[oro_nifti mgcv ]; };
WhopGenome = derive { name="WhopGenome"; version="0.9.2"; type="cran"; sha256="0bh96bcv8hknhqfjw4wi1ixdd8fcsfzlhwk89knp18br2pm5dxpx"; depends=[ ]; };
WideLM = derive { name="WideLM"; version="0.1-1"; type="cran"; sha256="0spxl960pgzh0cn1gkw2ayixpi982rr85qajcdqahmn9msk877h8"; depends=[Rcpp Rcpp ]; };
WikipediR = derive { name="WikipediR"; version="1.2.0"; type="cran"; sha256="1l9q9yg4z4j0lch9r8xr9q0f8mr0lpzf50ygmkkcvfd5sp7hirmi"; depends=[httr jsonlite ]; };
WikipediaR = derive { name="WikipediaR"; version="1.0"; type="cran"; sha256="0kx966q5zn7jq1m7b8w1y1zllxvslr66bz6ji1lr11vk0fykl3kn"; depends=[XML ]; };
WilcoxCV = derive { name="WilcoxCV"; version="1.0-2"; type="cran"; sha256="1kbb7ikgnlxybmvqrbn4cd8xnqrkwipk4xd6yja1xsi39a109xzl"; depends=[ ]; };
WordPools = derive { name="WordPools"; version="1.0-2"; type="cran"; sha256="1izs4cymf2xy1lax85rvsgsgi05ygf0ibi9gzxc96sbgvy4m78kf"; depends=[ ]; };
WrightMap = derive { name="WrightMap"; version="1.1"; type="cran"; sha256="0dmximp549gr37ps56vz8mnlii7753dc5v0wl3s78cymjmnmyr0z"; depends=[ ]; };
WriteXLS = derive { name="WriteXLS"; version="3.5.1"; type="cran"; sha256="0grhwwlibdpvzjlm1vc5ykl54jcz0jmg6rkhis00rjn5yqccx0in"; depends=[ ]; };
XBRL = derive { name="XBRL"; version="0.99.16"; type="cran"; sha256="1wrcm8srn185qrba7rig3fvwjz1n2ab296i0jr71vhyp9417h40q"; depends=[Rcpp Rcpp ]; };
XDE = derive { name="XDE"; version="2.12.0"; type="bioc"; sha256="1x0jy8gx2zd4cdhba3wp2ajyngxcnph3mkiqm5qynm4cd462r3hq"; depends=[Biobase Biobase BiocGenerics genefilter gtools MergeMaid mvtnorm ]; };
XLConnect = derive { name="XLConnect"; version="0.2-11"; type="cran"; sha256="02wxnr6h06h125dqszs8mzq4av842g445ndr59xgscxr03fyvi8p"; depends=[XLConnectJars rJava ]; };
XLConnectJars = derive { name="XLConnectJars"; version="0.2-9"; type="cran"; sha256="0js79297himq628cwx5cc3pcq3iv6p16bn4bpd5diyjaya4x27g3"; depends=[rJava ]; };
XML = derive { name="XML"; version="3.98-1.1"; type="cran"; sha256="0n9i6746211wihglbpsgalj2cyvggn4rv6a4fbavqwnjw3h1hwwl"; depends=[ ]; };
XML2R = derive { name="XML2R"; version="0.0.6"; type="cran"; sha256="0azfh950r2b7ck3n1vzk3mdll7zy844nx3mbk676jxnj8gg7nxk5"; depends=[XML RCurl plyr ]; };
XNomial = derive { name="XNomial"; version="1.0.1"; type="cran"; sha256="134bwglqhgah7v3w6ir65dch2dwp5h4vldw521ba74l5v9b2j2h4"; depends=[ ]; };
XVector = derive { name="XVector"; version="0.6.0"; type="bioc"; sha256="055sv0289pc1i0bdihms4ml2j44xxgljk566csjr1da7lrjb6qga"; depends=[BiocGenerics S4Vectors IRanges BiocGenerics S4Vectors IRanges S4Vectors IRanges ]; };
XiMpLe = derive { name="XiMpLe"; version="0.03-21"; type="cran"; sha256="1j387jzxh0z9dmhvc0kpjjjzf781sgrw57nwzdqwx6bn09bw509d"; depends=[ ]; };
Xmisc = derive { name="Xmisc"; version="0.2.1"; type="cran"; sha256="11gwlcyxhz1p50m68cnqrxmisdk99v8vrsbvyr7k67f0kvsznzs1"; depends=[ ]; };
YPmodel = derive { name="YPmodel"; version="1.1"; type="cran"; sha256="036f5y8qrcxglblgnaa15xzlz9pxbhbysrbr2gl66h9dvcd6kavr"; depends=[ ]; };
YaleToolkit = derive { name="YaleToolkit"; version="4.2.2"; type="cran"; sha256="12wggdyz0wgnmxnqhp8bypyy1x1p50g49fwdzl2l43il44cdyv0g"; depends=[foreach iterators ]; };
YieldCurve = derive { name="YieldCurve"; version="4.1"; type="cran"; sha256="0w47j8v2lvarrclnixwzaq98nv1xh2m48q5xvnmk7j9nsv2l3p68"; depends=[xts ]; };
YourCast = derive { name="YourCast"; version="1.6.2"; type="cran"; sha256="0vl37svwky6j1am235ac2wk1fdmh509w0h4m7y93lpjhzj6m8c1p"; depends=[ggplot2 gridExtra lattice foreign reshape2 ]; };
YplantQMC = derive { name="YplantQMC"; version="0.6-4"; type="cran"; sha256="09galr2bcjvfpcp84znsv45j2cfyn4yhdx31kxs062sylys6kxld"; depends=[rgl geometry LeafAngle gplots ]; };
YuGene = derive { name="YuGene"; version="1.1.2"; type="cran"; sha256="0sy0bh49l0fajh1z88mpb4f0k3hsf3kd1vxv731qhpxcrc3pz09b"; depends=[mixOmics ]; };
ZIM = derive { name="ZIM"; version="1.0.2"; type="cran"; sha256="1n4dc0as011gzaac153zq1dfbg1axvmf9znlmhl7xjj4dz4966qm"; depends=[MASS ]; };
ZeBook = derive { name="ZeBook"; version="0.5"; type="cran"; sha256="1djwda6hzx6kpf4dbmw0fkfq39fqh80aa3q9c6p41qxzcpim27dw"; depends=[triangle deSolve ]; };
Zelig = derive { name="Zelig"; version="4.2-1"; type="cran"; sha256="1hhr9jx25fdnkqwyj2bkgrvqlah4z2drphmb5mdn1an2p2g23v9z"; depends=[boot MASS sandwich ]; };
ZeligChoice = derive { name="ZeligChoice"; version="0.8-1"; type="cran"; sha256="1ql9yq83ipf0vpv63fpckylwq4jrcbfjgjm77f5ndkd83gqjzrmg"; depends=[Zelig VGAM ]; };
ZeligGAM = derive { name="ZeligGAM"; version="0.7-1"; type="cran"; sha256="1643ycx51mnlxwiarfkrwm8gr8clx00xi2llcaqsd3wsrr4z5j97"; depends=[Zelig mgcv ]; };
ZeligMultilevel = derive { name="ZeligMultilevel"; version="0.7-1"; type="cran"; sha256="00zlambykds4z1c5kx3rpla1kllyp96cxwvbc5lalwdb9i48pp3s"; depends=[Zelig lme4 ]; };
a4 = derive { name="a4"; version="1.14.0"; type="bioc"; sha256="16fy84ra04lly9l188zfbqxk08dm8pkjnpzz04v46aqnmyhnih3v"; depends=[a4Base a4Preproc a4Classif a4Core a4Reporting ]; };
a4Base = derive { name="a4Base"; version="1.14.0"; type="bioc"; sha256="1dhy6r6mn02mqiz1x7jzpiy71zwclv8b3b7gys0yz4d5d67ywm6r"; depends=[Biobase AnnotationDbi annaffy mpm genefilter limma multtest glmnet a4Preproc a4Core gplots ]; };
a4Classif = derive { name="a4Classif"; version="1.14.0"; type="bioc"; sha256="0j5byji2dhapg5bk1zvpsi7f2ws26npx2jl7nj0qk9fzqagysvh8"; depends=[a4Core a4Preproc MLInterfaces ROCR pamr glmnet varSelRF a4Core ]; };
a4Core = derive { name="a4Core"; version="1.14.0"; type="bioc"; sha256="0pdpbb3i4vc81kf18flx70wv27dnxjb28gnijcmc5v6im7zi33cr"; depends=[Biobase glmnet ]; };
a4Preproc = derive { name="a4Preproc"; version="1.14.0"; type="bioc"; sha256="04af822aaia03d2569fdxyflfhb2ppdaa0aia0afwsf0pmr3lng3"; depends=[AnnotationDbi ]; };
a4Reporting = derive { name="a4Reporting"; version="1.14.0"; type="bioc"; sha256="13y6xw9c5d2ag6naqjdgr3pz2ajc9liqczjxq5pjj1619pxvsg0s"; depends=[annaffy xtable ]; };
aCGH = derive { name="aCGH"; version="1.44.0"; type="bioc"; sha256="0bj73kwibkadm3j7j9g5fim5npvcpxgdfqv7qa2lk690vzyn12w6"; depends=[cluster survival multtest Biobase cluster multtest survival ]; };
aCRM = derive { name="aCRM"; version="0.1.1"; type="cran"; sha256="0kzp568hd9c9a9qgniia5s5gv0q5f89xfvvwpzb197gqhs3x092v"; depends=[dummies randomForest kernelFactory ada ]; };
aLFQ = derive { name="aLFQ"; version="1.3.2"; type="cran"; sha256="1963np2b2x7gbpgwcx0rqxd2psfdfmh72ap1y4p7f37ibjm8g45m"; depends=[data_table plyr caret seqinr lattice randomForest ROCR reshape2 protiq ]; };
aRpsDCA = derive { name="aRpsDCA"; version="1.0.0"; type="cran"; sha256="035888scbl5333sz25f9n6xh1zis7l2752p4nhsbs2g44q38l9h6"; depends=[ ]; };
aRxiv = derive { name="aRxiv"; version="0.5.8"; type="cran"; sha256="0kwphz9x4ljsznvxxvm03mmbrv3ipyy2fh8lgik4zvv4c63mlxsh"; depends=[httr XML ]; };
abc = derive { name="abc"; version="2.1"; type="cran"; sha256="0ngzaaz2y2s03fhngvwipmy4kq38xrmyddaz6a6l858rxvadrlhb"; depends=[abc_data nnet quantreg MASS locfit ]; };
abc_data = derive { name="abc.data"; version="1.0"; type="cran"; sha256="1bv1n68ah714ws58cf285n2s2v5vn7382lfjca4jxph57lyg8hmj"; depends=[ ]; };
abcdeFBA = derive { name="abcdeFBA"; version="0.4"; type="cran"; sha256="1rxjripy8v6bxi25vdfjnbk24zkmf752qbl73cin6nvnqflwxkx4"; depends=[Rglpk rgl corrplot lattice ]; };
abctools = derive { name="abctools"; version="1.0"; type="cran"; sha256="0kaw2saghjyysj2bcsij2018ls3lrzh9188m0yqhmv71k5vh68rd"; depends=[abc abind plyr ]; };
abd = derive { name="abd"; version="0.2-7"; type="cran"; sha256="0zkqwdcpz1v9k509vvzfbf9732v43q919hwd9yq3q0dg67d32ai7"; depends=[nlme lattice mosaic ]; };
abf2 = derive { name="abf2"; version="0.7-1"; type="cran"; sha256="0d65mc1w4pbiv7xaqzdlw1bfsxf25587rv597hh41vs0j0zlfpxx"; depends=[ ]; };
abind = derive { name="abind"; version="1.4-3"; type="cran"; sha256="1km61qygl4g3f91ar15r55b13gl8dra387vhmq0igf0sij3mbhmn"; depends=[ ]; };
abn = derive { name="abn"; version="0.85"; type="cran"; sha256="1ml4l4fiqscc1ikv0wsi73rymb9599mpnhmzlfnvv4zp3fkfm6qm"; depends=[Cairo ]; };
abundant = derive { name="abundant"; version="1.0"; type="cran"; sha256="0n2yvq057vq5idi7mynnp15cbsijyyipgbl4p7rqfbbgpk5hy3qb"; depends=[QUIC ]; };
acc = derive { name="acc"; version="1.0.2"; type="cran"; sha256="1z7hncgd43mc84v3wdcqpkp3gxsdyvh7h8s6qvgap2lp04m1j74l"; depends=[zoo PhysicalActivity mhsmm timeDate ]; };
accelerometry = derive { name="accelerometry"; version="2.2.5"; type="cran"; sha256="00mn09j7y39sc7h5srnnfk2l73vhh6zq7rzc0vckfvs72lncmwv5"; depends=[Rcpp Rcpp ]; };
accrual = derive { name="accrual"; version="1.0"; type="cran"; sha256="0gw418i9nlrm7nkg6d4m2icd4a04a7avqfjj7nidhl6vy4nflg3k"; depends=[fgui SMPracticals ]; };
accrued = derive { name="accrued"; version="1.2"; type="cran"; sha256="0xkar6kpxf7sq36xqf6cvns2sp5qgqxqjb8hindp59gvlcd2r5a7"; depends=[ ]; };
acepack = derive { name="acepack"; version="1.3-3.3"; type="cran"; sha256="13ry3vyys12iplb14jfhmkrl9g5fxg3iijiggq4s4zb5m5436b1y"; depends=[ ]; };
acid = derive { name="acid"; version="1.0"; type="cran"; sha256="0m59xnz6435n7j3fggv274g5rap7cpr0zby3aqbaycfdfrp78d1h"; depends=[gamlss gamlss_dist Hmisc ]; };
acm4r = derive { name="acm4r"; version="1.0"; type="cran"; sha256="1wqzc35i1rshx0zlmas8y4qkkvy6h9r4i4apscjjv1xg2wjflzxa"; depends=[MASS ]; };
acnr = derive { name="acnr"; version="0.2.4"; type="cran"; sha256="1nry927zqhb34h9lcixr344n3sxvq1142zwgj8hadlw69dv8m59y"; depends=[R_utils xtable ]; };
acopula = derive { name="acopula"; version="0.9.2"; type="cran"; sha256="1z8bs4abbfsdxfpbczdrf1ma84bmh7akwx2ki9070zavrhbf00cf"; depends=[ ]; };
acp = derive { name="acp"; version="2.0"; type="cran"; sha256="11ij2xhnkhy7lnzj8fld7habidb9av8a2bk22ycf62f556pqf533"; depends=[tseries quantmod ]; };
acs = derive { name="acs"; version="1.2"; type="cran"; sha256="1vw4ghqcz53m3qy7hy2j7nrdinbbqjpwvr1hsvglq31fq7wss3bd"; depends=[stringr plyr XML ]; };
acss = derive { name="acss"; version="0.2-5"; type="cran"; sha256="0cqa60544f58l5qd7h6xmsir40b9hqnq6pqgd5hfx2j2l5n7qhmk"; depends=[acss_data zoo ]; };
acss_data = derive { name="acss.data"; version="1.0"; type="cran"; sha256="09kl4179ipr8bq19g89xcdi1xxs397zcx5cvgp6viy8gn687ilgv"; depends=[ ]; };
activity = derive { name="activity"; version="1.0"; type="cran"; sha256="1y1vy3kj9n21jvbyl3s5hllfkqp3z1rnn7701c5jxhay5dbdz3p2"; depends=[circular overlap pbapply ]; };
actuar = derive { name="actuar"; version="1.1-8"; type="cran"; sha256="0zdw8dphpp49hr82z44az10vyawj301p8lr0cc7dk96g7xrzmlwa"; depends=[ ]; };
adSplit = derive { name="adSplit"; version="1.36.0"; type="bioc"; sha256="1h0jkyzn7pkdbvlwfwpbnybpm2zsdxm1n9zggklyxq37xvy2g548"; depends=[AnnotationDbi Biobase cluster multtest ]; };
ada = derive { name="ada"; version="2.0-3"; type="cran"; sha256="1c0nj9k628bcl4r8j0rmyp5f1igdjq6qhjxyif6575fvn2gdzmbw"; depends=[rpart ]; };
adabag = derive { name="adabag"; version="4.0"; type="cran"; sha256="0n4zls13f46rxqrx9qkvrifshb3cl8l6ni7zw36pm6fixbz844fk"; depends=[rpart mlbench caret ]; };
adagio = derive { name="adagio"; version="0.5.9"; type="cran"; sha256="1yp9w557advb7dzrdqwkffpdmhn6mk4879lrrjd0d6kv89fwz5yr"; depends=[ ]; };
adaptDA = derive { name="adaptDA"; version="1.0"; type="cran"; sha256="0nk7n628d30jz03a2rmpgzrwwd79rlpqvr6lwhilmkg1gblvz7r1"; depends=[MASS ]; };
adaptMCMC = derive { name="adaptMCMC"; version="1.1"; type="cran"; sha256="1y1qxn3qm59nyy9ld5x30p452yam7b2fyl236b14xvpm8g3xx1fa"; depends=[coda Matrix ]; };
adaptTest = derive { name="adaptTest"; version="1.0"; type="cran"; sha256="08d7a5dlzhaj236jvaw3c91008l66vf5i4k5anhcs32a3j8yh2iv"; depends=[lattice ]; };
adaptivetau = derive { name="adaptivetau"; version="2.2"; type="cran"; sha256="1xqvbbdmn70fmycpn0680q1l9s34kcmkjl812d7yrfxwm1bjfif5"; depends=[ ]; };
adaptsmoFMRI = derive { name="adaptsmoFMRI"; version="1.1"; type="cran"; sha256="1h79gh1bd6s2xhwf4whh72wf2cz4di2p8dnlf6192mfg108qc6nw"; depends=[Matrix coda mvtnorm MCMCpack spatstat ]; };
additivityTests = derive { name="additivityTests"; version="1.1-4"; type="cran"; sha256="048ds90wqjdjy1nyhna3m06asdklbh8sx1n556kss2j1r1pma1sw"; depends=[ ]; };
addreg = derive { name="addreg"; version="2.0"; type="cran"; sha256="1lc8p70di466i061jrbahq4hir4g5a8rns6044jjjg8v7b1y8alc"; depends=[combinat glm2 ]; };
ade4 = derive { name="ade4"; version="1.7-2"; type="cran"; sha256="01pchn70jpz8v9l86ng34a2vgn3pv4v5iwxz5n39f685p9lkc2nn"; depends=[ ]; };
ade4TkGUI = derive { name="ade4TkGUI"; version="0.2-6"; type="cran"; sha256="010ggsxcmljh0cdba4lcfnsd9r49pwqs6kbw88syfn2qv65hh5kq"; depends=[ade4 ]; };
adegenet = derive { name="adegenet"; version="1.4-2"; type="cran"; sha256="13fglxy40rnwi5hsmmvwlfcvfn8dybxyy3k5qhpml8jgpbl3fsdb"; depends=[ade4 MASS igraph ape shiny ggplot2 ]; };
adegraphics = derive { name="adegraphics"; version="1.0-2"; type="cran"; sha256="1jhi761rhrq1k27gxfns46j67x0ajbff6mz9cwl5jkcqg2mbcg8q"; depends=[ade4 KernSmooth lattice RColorBrewer sp ]; };
adehabitat = derive { name="adehabitat"; version="1.8.17"; type="cran"; sha256="0cy98fd6mcbjc152vv41mnh5xj19xdfag8n950fvffbrpvpgbcpb"; depends=[ade4 tkrplot shapefiles sp ]; };
adehabitatHR = derive { name="adehabitatHR"; version="0.4.13"; type="cran"; sha256="140ar1naf67v996d5p0i2v07g02pf9c4c6h1pjicai5n59s7z72v"; depends=[sp deldir ade4 adehabitatMA adehabitatLT ]; };
adehabitatHS = derive { name="adehabitatHS"; version="0.3.11"; type="cran"; sha256="0sbhc1mvdc8pxq56plbgk0ry65chxcv3zjry4151hiv7yxpn39ri"; depends=[sp ade4 adehabitatMA adehabitatHR ]; };
adehabitatLT = derive { name="adehabitatLT"; version="0.3.19"; type="cran"; sha256="0h9n6j3a52bik5pslysvhb11d8df5k50ghi34zlxhdcbm09gfnmz"; depends=[sp ade4 adehabitatMA CircStats ]; };
adehabitatMA = derive { name="adehabitatMA"; version="0.3.9"; type="cran"; sha256="15n9mg8m4mjg5zn5c5hz9bl5qcghzkijiflk8psc0kg2csfpv7hy"; depends=[sp ]; };
adephylo = derive { name="adephylo"; version="1.1-6"; type="cran"; sha256="1sk639gmk3cs711xn68mx18r28kjd1pychcg89qlki03y1hnxg7j"; depends=[ade4 phylobase ape adegenet ]; };
adhoc = derive { name="adhoc"; version="1.0"; type="cran"; sha256="193adddarjkc2kk1xncfkm919s1lkmc1yzgyz9793p74nqmfsj0a"; depends=[spider ape polynom ]; };
adimpro = derive { name="adimpro"; version="0.7.8"; type="cran"; sha256="06zwdgl7g4azg2mn7p35may8hsjcvf2dz7dj86zqngjspda123s4"; depends=[ ]; };
adlift = derive { name="adlift"; version="1.3-2"; type="cran"; sha256="0nzg16vhm5qg3xzczi3f6cynvp9ym2jsfrc4fdyxq7bwp9kry2i4"; depends=[EbayesThresh ]; };
ads = derive { name="ads"; version="1.5-2.2"; type="cran"; sha256="17k24dihl41jgkkglhnkj7lvvl53dgahjkb5jhfmfgk6i16c7s23"; depends=[ade4 spatstat ]; };
adwave = derive { name="adwave"; version="1.0"; type="cran"; sha256="10cz870n3az7brmf2658g0jrc1x39c69vw37n99m8x6wxxp6ypn8"; depends=[waveslim ]; };
aemo = derive { name="aemo"; version="0.1.0"; type="cran"; sha256="1iik0rrqkkx9n1qb1pvq5iwxqmvs6vnx8z80hdzb5vqq0lvi1bsx"; depends=[dplyr stringr assertthat lubridate ]; };
afex = derive { name="afex"; version="0.13-145"; type="cran"; sha256="0wyjgxh1rdibj21f8dbwg7f30q1z6jwwpj2dcjx2rh60axvp1dir"; depends=[car lme4 reshape2 stringr coin Matrix pbkrtest ]; };
affxparser = derive { name="affxparser"; version="1.38.0"; type="bioc"; sha256="19pvq35hip53qzglfh39vwnpkbw6h4bxjfy8k06amh6i9pbwg3wl"; depends=[ ]; };
affy = derive { name="affy"; version="1.44.0"; type="bioc"; sha256="1af0vd7drsg0k4wvp1lrryv23szgmprjpk0kbwj414lc3ddridzw"; depends=[BiocGenerics Biobase affyio BiocInstaller preprocessCore zlibbioc preprocessCore ]; };
affyContam = derive { name="affyContam"; version="1.24.0"; type="bioc"; sha256="0knr0l6xwcyfpz4l3k23cygm2i0bhsxshs15iyy6ach9hdm57bq4"; depends=[Biobase affy ]; };
affyILM = derive { name="affyILM"; version="1.18.0"; type="bioc"; sha256="00db5avl50i9h139x5d272qhim8cdr4afc1lhhpi48l4y4zhxc1p"; depends=[gcrma affxparser affy Biobase ]; };
affyPLM = derive { name="affyPLM"; version="1.42.0"; type="bioc"; sha256="1lyzy0rv7irl2izavs48i7f29i4mb5bn45946s2v8c31f6698qlq"; depends=[BiocGenerics affy Biobase gcrma preprocessCore BiocGenerics zlibbioc preprocessCore ]; };
affyPara = derive { name="affyPara"; version="1.26.0"; type="bioc"; sha256="03zbc93ba5li1fwv2smfp5859c2dm0anq2biran0zzwav08h3bwm"; depends=[affy snow vsn aplpack affyio ]; };
affyQCReport = derive { name="affyQCReport"; version="1.44.0"; type="bioc"; sha256="0z0qrxj1xndgx86kfm2vs3dbdw1j44ax9xcdgifb9048z1gw350l"; depends=[Biobase affy lattice affy affyPLM Biobase genefilter lattice RColorBrewer simpleaffy xtable ]; };
affycomp = derive { name="affycomp"; version="1.42.0"; type="bioc"; sha256="18p7f3dhg26fircpxg1gcbn9mi0ysdydm8pnwp49mnwl0sq72435"; depends=[Biobase ]; };
affycoretools = derive { name="affycoretools"; version="1.38.0"; type="bioc"; sha256="1qn3wr8nbj52sk3r6nhpq9iffhgf4jjs8yqm9q18xlvmqszsq3vy"; depends=[affy Biobase biomaRt limma GOstats annotate annaffy genefilter gcrma xtable AnnotationDbi lattice gplots oligoClasses ReportingTools hwriter ]; };
affyio = derive { name="affyio"; version="1.34.0"; type="bioc"; sha256="0ils272ap69kf3l7d66dzrvdh8gp66wb648iyzy26dbzkjcld3a7"; depends=[zlibbioc ]; };
affylmGUI = derive { name="affylmGUI"; version="1.40.2"; type="bioc"; sha256="062333g5ks3f58n8xqzklalndiq42njfs9ad805za5si58lg1c2r"; depends=[affyPLM tkrplot limma affy BiocInstaller affyio R2HTML xtable gcrma AnnotationDbi ]; };
affypdnn = derive { name="affypdnn"; version="1.40.0"; type="bioc"; sha256="09xfhcklsh4kpzwjp96hq8i9v7x5nc6n3zl2ybk899ilvhirbsbv"; depends=[affy ]; };
aftgee = derive { name="aftgee"; version="1.0-0"; type="cran"; sha256="0gfp05r6xvn9fcysbqyzkz916axpsc2d3lb5wmb1v92z1zw3037b"; depends=[MASS BB survival geepack ]; };
agRee = derive { name="agRee"; version="0.3-1"; type="cran"; sha256="1gqbhv44z1r9m54fmrg0frnzsgsp13v5ppmzpv28frz9d8x7sxx6"; depends=[miscF lme4 R2jags ]; };
agilp = derive { name="agilp"; version="3.8.0"; type="bioc"; sha256="0g5hfmwylbxm8r4dn40qkxac2n7hc9hzv4pra60766dgisyz6i15"; depends=[ ]; };
agop = derive { name="agop"; version="0.1-4"; type="cran"; sha256="1jwyl02z053rsdw9hryv1nyj9wlq310l51fghp1p0j51c159mlpx"; depends=[Matrix igraph ]; };
agricolae = derive { name="agricolae"; version="1.2-1"; type="cran"; sha256="1vrc1bjqcp3xk8q41bl3kvjvaj58gw19dv7vwsxn9r6r99hlb3j1"; depends=[klaR MASS nlme cluster spdep ]; };
agridat = derive { name="agridat"; version="1.11"; type="cran"; sha256="1bnkzacwp22dw5vppm4yz583h1dw5d93dlca9i3ba2y9dzsalx0d"; depends=[lattice reshape2 ]; };
agrmt = derive { name="agrmt"; version="1.39"; type="cran"; sha256="0qkl8wikvg635mr8v3n9svdicnb8sl4brrh7px1n5jy71h7cswd7"; depends=[ ]; };
agsemisc = derive { name="agsemisc"; version="1.3-1"; type="cran"; sha256="1905q35jgjhghlawql43yh296kbpysp927x3hj750yshz5zayzyr"; depends=[lattice MASS ]; };
ahaz = derive { name="ahaz"; version="1.14"; type="cran"; sha256="1z7w5rxd5cya7kxhgxqvn72k87y33ginxra9g7j9wrfs5jgx6kvx"; depends=[survival Matrix ]; };
aidar = derive { name="aidar"; version="1.0.0"; type="cran"; sha256="01vs14bz4k504q5lx65b60kyi7hgvjdmib8igiipjmg4snwh8hdk"; depends=[XML ]; };
akima = derive { name="akima"; version="0.5-11"; type="cran"; sha256="17n7iiwybwanvm5mflb1f2xx1gnw1pcmfsnl1f82afixpalbs0gh"; depends=[ ]; };
akmeans = derive { name="akmeans"; version="1.1"; type="cran"; sha256="1nqbxbx583n0h2zmpy002rlmr6j86j6bg76xj5c69brrh59dpyw1"; depends=[ ]; };
alabama = derive { name="alabama"; version="2015.3-1"; type="cran"; sha256="0mlgk929gdismikwx4k2ndqq57nnqj7mlgvd3479b214hksgq036"; depends=[numDeriv ]; };
ald = derive { name="ald"; version="1.0"; type="cran"; sha256="1vphmqhx6wlzsz3s94jsa4mk6wpacp93wfgpj0vp9ljfb3aplhik"; depends=[ ]; };
algstat = derive { name="algstat"; version="0.0.2"; type="cran"; sha256="1ssdrrwnxrhx3syndqxqcaldlbnjamk3x2yiq7jgxy0qsiadmqsi"; depends=[mpoly stringr reshape2 Rcpp Rcpp ]; };
allan = derive { name="allan"; version="1.01"; type="cran"; sha256="02bv9d5ywbq67achfjifb3i7iiaaxa8r9x3qvpri2jl1cxnlf27m"; depends=[biglm ]; };
allanvar = derive { name="allanvar"; version="1.0"; type="cran"; sha256="0wpywdr15gb49m9kxrpjfsxlxrm4hwm46x42k8dgc6sihfsqbm22"; depends=[gplots ]; };
alleHap = derive { name="alleHap"; version="0.7.2"; type="cran"; sha256="1x10grrv732a0iidr2c96vbl46553njhvvlq249jxn3y11lfq2gv"; depends=[gtools ]; };
allelematch = derive { name="allelematch"; version="2.5"; type="cran"; sha256="1kws6y3igq6l85cfjrck2dzcfpgr56ridbc6w071h8kjw19mlzas"; depends=[dynamicTreeCut ]; };
allelic = derive { name="allelic"; version="0.1"; type="cran"; sha256="0xs4kd3vqb5ph8kqc3lcqgirrdkz8b627pvnczvci2g0sr3cl18j"; depends=[ ]; };
alm = derive { name="alm"; version="0.4.0"; type="cran"; sha256="125cl5b1sps33ipsh2pygrw79mhin1qj374lq56ny7c9rp4n9w7p"; depends=[ggplot2 plyr stringr reshape reshape2 httr jsonlite lubridate ]; };
alphaOutlier = derive { name="alphaOutlier"; version="1.0.1"; type="cran"; sha256="1zl80q08vcyvyakfv6cd444m6l5z14p7bv9jf8kpg4dad3d63mhz"; depends=[Rsolnp nleqslv quantreg ]; };
alphahull = derive { name="alphahull"; version="2.0"; type="cran"; sha256="1z8kbh3y5clh3hn018g0fci2psd0l36nz4a08pgg7md2bbhripbl"; depends=[ggplot2 tripack sgeostat spatstat splancs ]; };
alphashape3d = derive { name="alphashape3d"; version="1.1"; type="cran"; sha256="1hfxvzqgirc587vxyggxdqii90nvypzi3wddvd2zdw2h95v9kfyg"; depends=[geometry rgl ]; };
alr3 = derive { name="alr3"; version="2.0.5"; type="cran"; sha256="0zrrsv2kjq3cky3bhk6gp32p1qpr1i5k2lx7c1w08bql0nb1x740"; depends=[car ]; };
alr4 = derive { name="alr4"; version="1.0.5"; type="cran"; sha256="0m8jgc4mfni17psf8m0avf0m364vcq5k3c9x807p98ch2z5nsygv"; depends=[car effects ]; };
alsace = derive { name="alsace"; version="1.2.0"; type="bioc"; sha256="13phx385i6hj0l054gm6wycvh2ggf653m8sdn81sln8nmrly4lp4"; depends=[ALS ptw ]; };
altcdfenvs = derive { name="altcdfenvs"; version="2.28.0"; type="bioc"; sha256="1p8d732c13vcim9ny3m832cvzkaw7d63dmj13r1j50y4gqwjfynm"; depends=[BiocGenerics Biobase affy makecdfenv Biostrings hypergraph ]; };
amap = derive { name="amap"; version="0.8-14"; type="cran"; sha256="1dz37z9v4zvyvqrs4xvpfv468jwvpxav60qn2w0049bw8llj6xdl"; depends=[ ]; };
amei = derive { name="amei"; version="1.0-7"; type="cran"; sha256="0dyx6a1y5i0abwka0y89d0mpj55rm5ywb4r9c2mqmy43djp181hn"; depends=[ ]; };
amen = derive { name="amen"; version="1.0"; type="cran"; sha256="17kaknfgi39qcg5mhkdyf6cn2l3nn9n2xzvyz1c4piy6inhmj36c"; depends=[ ]; };
aml = derive { name="aml"; version="0.1-1"; type="cran"; sha256="09xxlxp784wlb561apns3j8f2h9pfk497cy5pk8wr4hhqqv4d3al"; depends=[lars ]; };
ampliQueso = derive { name="ampliQueso"; version="1.4.0"; type="bioc"; sha256="0qx2f9dszrgcrcwix78mizb5h4bjqrlsm9mbc3xval1r53vj58i4"; depends=[rnaSeqMap knitr rgl ggplot2 gplots doParallel foreach VariantAnnotation genefilter statmod xtable edgeR DESeq samr ]; };
anacor = derive { name="anacor"; version="1.0-5"; type="cran"; sha256="1m2r5x5spb5nahd9cvnsxwqi0ay2kasmha21rbwj3r99jz1vxkql"; depends=[rgl car scatterplot3d colorspace fda ]; };
analogue = derive { name="analogue"; version="0.16-0"; type="cran"; sha256="1izbqzmnw4hmirjlvwp15imzaai2kxbv2gzc58y5awwbfdrg314m"; depends=[vegan mgcv MASS brglm princurve lattice ]; };
analogueExtra = derive { name="analogueExtra"; version="0.1-0"; type="cran"; sha256="0hyl0vn2i594r5czzha7y9a1n4dpznfpmh2j46mci2r57p2s3qr2"; depends=[vegan3d analogue rgl ]; };
analyz = derive { name="analyz"; version="1.4"; type="cran"; sha256="0qdh1gld2dkl0krbhm2vcqg8dfs03dn51rclgsw02554s06dlgxw"; depends=[ ]; };
anametrix = derive { name="anametrix"; version="1.6"; type="cran"; sha256="14xrrnvz7jn1jqds48l5pvzlx6hsaxrjc932lqnvv70sfypinjkm"; depends=[RCurl XML pastecs ]; };
anapuce = derive { name="anapuce"; version="2.2"; type="cran"; sha256="0qs27as628090k3sq5b14l90g7qdp23d0jz5lb1wxsgi3ji0f7qj"; depends=[ ]; };
anchors = derive { name="anchors"; version="3.0-8"; type="cran"; sha256="12gd2526y7s2a8i6b9xma2c3sc6zxnwzl6sn8b50hbxizwr8d34j"; depends=[rgenoud MASS ]; };
andrews = derive { name="andrews"; version="1.0"; type="cran"; sha256="130i86qkdy1xpcf611jpzqgmd17iik7j7spdcfwzk48f31biyp8v"; depends=[ ]; };
anesrake = derive { name="anesrake"; version="0.70"; type="cran"; sha256="17127rmjfrdwnr2m6205cci3b0kd9girp82qranxwac4mgb7p7ld"; depends=[Hmisc ]; };
anfis = derive { name="anfis"; version="0.99.1"; type="cran"; sha256="1v8di5dzwb1g1ldi7idcmmr9nirp9kxvc8km1qq1i8zaw1bh8pqb"; depends=[ ]; };
anim_plots = derive { name="anim.plots"; version="0.1"; type="cran"; sha256="0qjwmxpkvjf27parh1fvhrkiczm4zlv9c034dp04yysbdz65r1by"; depends=[animation ]; };
animalTrack = derive { name="animalTrack"; version="1.0.0"; type="cran"; sha256="0jlvfflpaq64s48sblzh1n1vx8g3870iss97whigri29s6hn79ry"; depends=[rgl ]; };
animation = derive { name="animation"; version="2.3"; type="cran"; sha256="1hqgkaxmyyfrx7cfzv00010r9l2n8gxm35jd41p3kc208mhd7ssp"; depends=[ ]; };
annaffy = derive { name="annaffy"; version="1.38.0"; type="bioc"; sha256="1wa045yzsxc3z20ip8s98kczp58yj2ljx9y09xgxalm31462v6yr"; depends=[Biobase AnnotationDbi ]; };
annmap = derive { name="annmap"; version="1.8.0"; type="bioc"; sha256="0skniiq0lfiz6wcwbrdyq3cv8r46j9k7k5sidigp0gfqa88f9v2f"; depends=[GenomicRanges DBI RMySQL digest Biobase lattice Rsamtools genefilter IRanges BiocGenerics ]; };
annotate = derive { name="annotate"; version="1.44.0"; type="bioc"; sha256="1jmkj4yy9hx8wwzykf667ndykwcigqilk5vph95f9y3nb1zpd4f1"; depends=[AnnotationDbi XML Biobase DBI xtable BiocGenerics ]; };
annotationTools = derive { name="annotationTools"; version="1.40.0"; type="bioc"; sha256="1fbnl1a8xy73aisgxh6q023l5q0mb17pd1ww65kq8v978751prs4"; depends=[Biobase ]; };
anominate = derive { name="anominate"; version="0.5"; type="cran"; sha256="0qhq3ngxi1d3yln6bafg3c36a7whnznnww0101da2y0i6dw79lg5"; depends=[coda wnominate oc pscl MCMCpack ]; };
anota = derive { name="anota"; version="1.14.0"; type="bioc"; sha256="0byhmv4w86zq1i1fshx7ld0lyixjsyz68wiz7c7vvz8z53dnw1in"; depends=[qvalue multtest qvalue ]; };
antiProfiles = derive { name="antiProfiles"; version="1.6.0"; type="bioc"; sha256="1avsffrvyi4w7zqp0i1j53cjhbf7xgsjhzc4na8widsrla1jqzx0"; depends=[matrixStats ]; };
antitrust = derive { name="antitrust"; version="0.94"; type="cran"; sha256="1k768lmx5vv069bd9fzly1205rxr9mkqi1p8jjx67kwmyhhw5sd2"; depends=[MASS evd BB numDeriv ggplot2 ]; };
aod = derive { name="aod"; version="1.3"; type="cran"; sha256="1a6xs5d5289w69xd2salsxwikjjhjzvsnplqrq78b1sr6kzfyxz3"; depends=[ ]; };
aods3 = derive { name="aods3"; version="0.4-1"; type="cran"; sha256="074c16wmgd1vc2yvwx1y84bg55hvmm5yi8zgpwh51jcsbqlhbpgn"; depends=[lme4 boot ]; };
aoristic = derive { name="aoristic"; version="0.6"; type="cran"; sha256="0b9h2l59vvrvbjjwwb43j74frvwa8lsj4x5kwhwpsfjfch1yqwjl"; depends=[ggplot2 spatstat GISTools lubridate classInt reshape2 rgdal plotKML MASS sp maptools RColorBrewer ]; };
apComplex = derive { name="apComplex"; version="2.32.0"; type="bioc"; sha256="12vk170npyfhr5m0yyvcijxsigjj0739xaxlx8sq3rx5xdf92lrr"; depends=[graph RBGL Rgraphviz ]; };
apTreeshape = derive { name="apTreeshape"; version="1.4-5"; type="cran"; sha256="0mvnjchhfbpbnrgnplb6qxa7r2kkvw29gqiprwggkf553wi6zl48"; depends=[ape quantreg ]; };
apc = derive { name="apc"; version="1.1"; type="cran"; sha256="0gnjniy7gm5fh4wn7vwml3z5bw6ydd1xxq5npvqljbzy4vhh8k5a"; depends=[ ]; };
apcluster = derive { name="apcluster"; version="1.4.1"; type="cran"; sha256="1s7wsgimpln5kiy1ai8clq2r0i6vh8mr5v4xjha9phdbm8l8yfbg"; depends=[Rcpp Matrix Rcpp ]; };
ape = derive { name="ape"; version="3.2"; type="cran"; sha256="015ibyri6r2xdmy644pb1p6xn0rzxaz49sr96859jfvafzi7p2ny"; depends=[nlme lattice ]; };
aplore3 = derive { name="aplore3"; version="0.7"; type="cran"; sha256="1xj3k13wjpsydcrai474b94kyj298islzfpfwn8n51k67h8r4l08"; depends=[ ]; };
aplpack = derive { name="aplpack"; version="1.3.0"; type="cran"; sha256="0i6jy6aygkqk5gagngdw9h9l579lf0qkiy5v8scq5c015w000aaq"; depends=[ ]; };
apmsWAPP = derive { name="apmsWAPP"; version="1.0"; type="cran"; sha256="1azgif06dsbadwlvv9nqs8vwixp6balrrbpj62khzmv1jvqr4072"; depends=[genefilter Biobase seqinr multtest gtools edgeR DESeq aroma_light ]; };
appell = derive { name="appell"; version="0.0-4"; type="cran"; sha256="0g7pzhxqgscnyf07xycbrpyimp1z1hljgcr3nqigpx09w7zi5wlw"; depends=[ ]; };
apple = derive { name="apple"; version="0.3"; type="cran"; sha256="194z2f6hwdjjxdkjwlmfhpfp26p9yp3gparklhdbb6zlb4a9nnhz"; depends=[MASS ]; };
approximator = derive { name="approximator"; version="1.2-6"; type="cran"; sha256="165qvx5946wkv1qsgbmjhmwvik7m23r1vbpnp7claylflgj1ycnm"; depends=[emulator ]; };
aprean3 = derive { name="aprean3"; version="1.0.1"; type="cran"; sha256="17rnq02sncl6rzwyln10200s43b8z1s2j0kdi9kgcb6qr51v12rv"; depends=[ ]; };
aprof = derive { name="aprof"; version="0.2.4"; type="cran"; sha256="0gw5qj6c5ygjc6nwx2lb8biykkk73fv2x3j1xxabpgnsfq1whwyc"; depends=[ ]; };
apsimr = derive { name="apsimr"; version="1.0"; type="cran"; sha256="1lk8n0vb20sxs02s6xx16d2xrh09p08b6i50b99bx9k7dhlgn6cf"; depends=[ggplot2 XML lubridate reshape2 MASS mgcv ]; };
apsrtable = derive { name="apsrtable"; version="0.8-8"; type="cran"; sha256="1qmm89npjgqij0bh6p393wywl837lfsshp2mv9b5izh1sg2qfwvw"; depends=[ ]; };
apt = derive { name="apt"; version="2.3"; type="cran"; sha256="0yrgxdqzwa5zv6rv8d8nnlraxngq60i1f0yrkygwsj4kngv2yhyv"; depends=[erer gWidgets car urca copula ]; };
aqfig = derive { name="aqfig"; version="0.8"; type="cran"; sha256="0ha0jb5ag3zx6v7c63lsm81snslzb8y8g565mxjmf7vxpcmzzqsi"; depends=[geoR ]; };
aqp = derive { name="aqp"; version="1.8-6"; type="cran"; sha256="03gwvb5sm9l4vyl0jh9rzjs3ka2qmw4qqh40ywahq3dchpbxmlzd"; depends=[plyr reshape lattice cluster sp Hmisc stringr scales plotrix RColorBrewer MASS digest ]; };
aqr = derive { name="aqr"; version="0.4"; type="cran"; sha256="04frgil3nbxsww66r9x0c6f308pzqr1970prp20bdv9qm3ym5axw"; depends=[xts RCurl ]; };
archdata = derive { name="archdata"; version="0.1"; type="cran"; sha256="1k7cpqwgvkwfz25a9db0c8g6ii6xsbhkj3c9alghhaafs7x8n47w"; depends=[ ]; };
archetypes = derive { name="archetypes"; version="2.2-0"; type="cran"; sha256="1djzlnl1pjb0ndgpfj905kf9kpgf9yizrcvh4i1p6f043qiy0axf"; depends=[modeltools nnls ]; };
archiDART = derive { name="archiDART"; version="1.0"; type="cran"; sha256="0fahcw3032rvz1qd2vv872k8d7845zjfm2byrk1nk5b34z25wm2b"; depends=[ ]; };
archivist = derive { name="archivist"; version="1.3"; type="cran"; sha256="1did4s9afmbd4b2xcs674fyk2vz0r08vchjfar1q3ri2mfq4p7x5"; depends=[RSQLite DBI shiny lubridate RCurl digest httr ]; };
arf3DS4 = derive { name="arf3DS4"; version="2.5-10"; type="cran"; sha256="12cbrk57c9m7fj1x7nfmcj1vp28wj0wymsjdz8ylxhm3jblbgmxc"; depends=[corpcor ]; };
arfima = derive { name="arfima"; version="1.2-7"; type="cran"; sha256="00mc50hssnv7qj6dn1l3jgx8ca4vjkqirc38rv538xwjgw9mm1ms"; depends=[ltsa ]; };
argosfilter = derive { name="argosfilter"; version="0.63"; type="cran"; sha256="0rrc2f28hla0azw90a5gk3zj72vxhm1b6yy8ani7r78yyfhgm9ig"; depends=[ ]; };
argparse = derive { name="argparse"; version="1.0.1"; type="cran"; sha256="03p8dpwc26xz01lfbnmckcx6wzky43dyq71085b0anzsavgx0786"; depends=[proto findpython getopt rjson ]; };
argparser = derive { name="argparser"; version="0.1"; type="cran"; sha256="0x4wm8hjzb779pp39v8q210npg7kzh9m8wwqmd17aaqaa3l2al9f"; depends=[ ]; };
arm = derive { name="arm"; version="1.8-5"; type="cran"; sha256="0mjsjqrim2a6ds8gxrbdyp96b6sz1vjsqic80a5izrc2z9bml5p5"; depends=[MASS Matrix lme4 abind coda nlme ]; };
arnie = derive { name="arnie"; version="0.1.2"; type="cran"; sha256="14xkgyfn9zvkbgram15w7qzqc5pl1a8ig66cif7a79najrgd914r"; depends=[ ]; };
aroma_affymetrix = derive { name="aroma.affymetrix"; version="2.13.0"; type="cran"; sha256="0rb4qijsqzrv47i30fpcngw50a1gk10zn1r13lszxcsm5i8vjqf7"; depends=[R_utils aroma_core R_methodsS3 R_oo R_cache R_devices R_filesets aroma_apd MASS matrixStats ]; };
aroma_apd = derive { name="aroma.apd"; version="0.6.0"; type="cran"; sha256="1l9p5qww71h6wlg2z15wirsfz2i7hmf637l17zaf3n7fp9s3flc7"; depends=[R_methodsS3 R_oo R_utils R_huge ]; };
aroma_cn = derive { name="aroma.cn"; version="1.6.0"; type="cran"; sha256="090qqvv6sk0508knmh2qr1lvpc2vr8s17mj6siblzc66ldp22dj7"; depends=[R_utils aroma_core R_methodsS3 R_oo R_filesets R_cache matrixStats PSCBS ]; };
aroma_core = derive { name="aroma.core"; version="2.13.0"; type="cran"; sha256="1r3r0hrw8akdpjmzhnc0fg6nyd9hccvv4kfbms38qll70lac4910"; depends=[R_utils R_filesets R_devices R_methodsS3 R_oo R_cache R_rsp matrixStats RColorBrewer PSCBS ]; };
aroma_light = derive { name="aroma.light"; version="2.2.1"; type="bioc"; sha256="120f8r117iidhdlfj73wv276jyl1vs6sdb5pha95ywqq5b3qxvi5"; depends=[R_methodsS3 R_oo R_utils matrixStats ]; };
arrayMvout = derive { name="arrayMvout"; version="1.24.0"; type="bioc"; sha256="11338l6jhyf90nzkhmgb60dz4hhkfkkzwv02x90ly9q9bq9g2c3q"; depends=[parody Biobase affy lumi simpleaffy mdqc affyContam ]; };
arrayQuality = derive { name="arrayQuality"; version="1.44.0"; type="bioc"; sha256="0vriyjg3aqgjhxgzlww5h3215smnvdh0rrrq7llfwbxmji3fhfl7"; depends=[gridBase hexbin limma marray RColorBrewer ]; };
arrayQualityMetrics = derive { name="arrayQualityMetrics"; version="3.22.1"; type="bioc"; sha256="1ynacxsncvnniq4av60046x3y6v42jsvrwyh9snkrjhkfpivh4xj"; depends=[affy affyPLM beadarray Biobase Cairo genefilter gridSVG Hmisc hwriter lattice latticeExtra limma RColorBrewer setRNG vsn XML ]; };
arrayhelpers = derive { name="arrayhelpers"; version="0.76-20120816"; type="cran"; sha256="1q80dykcbqbcigv2f9xg1brfm3835i0zvs0810q6kh682a3hpqbi"; depends=[ ]; };
ars = derive { name="ars"; version="0.5"; type="cran"; sha256="0m63ljb6b97kmsnmh2z5phmh24d60iddgz46i6ic4rirshq7cpaz"; depends=[ ]; };
arules = derive { name="arules"; version="1.1-6"; type="cran"; sha256="0xq0j4phwqw9cx2yzxx8xx4srnjjlv75cd463x959bycsp6fzb5r"; depends=[Matrix ]; };
arulesNBMiner = derive { name="arulesNBMiner"; version="0.1-4"; type="cran"; sha256="05vj7pzzh84xr6d0m16dhzr7bw50hkiyq99vl46zinak648my338"; depends=[arules rJava ]; };
arulesSequences = derive { name="arulesSequences"; version="0.2-6"; type="cran"; sha256="1fvph6c8dy3hj0h63h85bzzzka8dx0cc0lcncz9svyahy1j4q3z0"; depends=[arules ]; };
arulesViz = derive { name="arulesViz"; version="1.0-0"; type="cran"; sha256="0g4bqfn8jya992r2wbi044v68mj508h52snrdcd5ijhdhw8xq9xc"; depends=[arules scatterplot3d vcd seriation igraph ]; };
asVPC = derive { name="asVPC"; version="1.0.2"; type="cran"; sha256="07nfwr0lsfpwgfdgzcdn1svw8dnjfni5ga9q77yjd1bj0wf76ci2"; depends=[ggplot2 plyr ]; };
asbio = derive { name="asbio"; version="1.1-5"; type="cran"; sha256="1br9rhj6nghwx54i2hpjrsdhwg8v38s66cy8fc4pg97zypdnikpj"; depends=[scatterplot3d pixmap tkrplot plotrix mvtnorm deSolve lattice multcompView ]; };
ascii = derive { name="ascii"; version="2.1"; type="cran"; sha256="19dfbp7k4bjxjn8wdzhbmz7g3za6gn8vcnd5qkm4dz7gg1fg7b8p"; depends=[ ]; };
ascrda = derive { name="ascrda"; version="1.15"; type="cran"; sha256="17anzlhcjmrk13s5gs752rsc735y5wvba6r3w1nbv0cnkpnyk8i7"; depends=[class nnet rda MASS sfsmisc e1071 pamr ]; };
asd = derive { name="asd"; version="2.0"; type="cran"; sha256="1nnsbh6g0bhvhp6644zf2l6frr3qnls0s7y7r0g211b5zagq20z3"; depends=[mvtnorm ]; };
ash = derive { name="ash"; version="1.0-14"; type="cran"; sha256="15x16ld25i160asqf4z4difa6zn2yfgl04j8y8nqb0djymdx7a1f"; depends=[ ]; };
asmn = derive { name="asmn"; version="1.2.0"; type="bioc"; sha256="0kc47p68gv1yn3yflqa2b5bz7c165s55fxpaqgsxpxnanh4ynf17"; depends=[methylumi Biobase ]; };
aspace = derive { name="aspace"; version="3.2"; type="cran"; sha256="1g51mrzb6amafky2kg2mx63g6n327f505ndhna6s488xlsr1sl49"; depends=[splancs Hmisc shapefiles ]; };
aspect = derive { name="aspect"; version="1.0-3"; type="cran"; sha256="12wyyr0ms8g3y96jz1x0y52dlma00j20h7hmm8m6y5p1lgk9kmcd"; depends=[ ]; };
assertive = derive { name="assertive"; version="0.2-4"; type="cran"; sha256="0xc561fi322qd5z7ss2zi69nl3i8i56w8bksgd38fpjigg0x9fwl"; depends=[knitr ]; };
assertr = derive { name="assertr"; version="0.4.1"; type="cran"; sha256="1h77iisvyakccm7v1iqva04s1hn197sjcy28832cagqg89qlsg31"; depends=[dplyr ]; };
assertthat = derive { name="assertthat"; version="0.1"; type="cran"; sha256="0dwsqajyglfscqilj843qfqn1ndbqpswa7b4l1d633qjk9d68qqk"; depends=[ ]; };
assist = derive { name="assist"; version="3.1.3"; type="cran"; sha256="0ngnn75iid5r014fcly29zhcfpqkqq24znncc3jdanbhdmfyybyz"; depends=[nlme lattice ]; };
aster = derive { name="aster"; version="0.8-30"; type="cran"; sha256="0vdlimkkmd9ar5v3xrbi9gshvj980l7641brd7cqs78sqf0v71fn"; depends=[trust ]; };
aster2 = derive { name="aster2"; version="0.2-1"; type="cran"; sha256="1gr9hx0mhyan0jy7wsl4ccsx9ahlvhfiq0j1xnffa4m3hzazisn5"; depends=[ ]; };
astro = derive { name="astro"; version="1.2"; type="cran"; sha256="1c7zrycgj2n8gz50m94ys1dspilds91s1b2pwaq6df1va17pznby"; depends=[MASS plotrix ]; };
astroFns = derive { name="astroFns"; version="4.1-0"; type="cran"; sha256="0g5q0y067xf1ah91b4lg8mr9imj0d6lgig7gbj3b69fn335k363g"; depends=[ ]; };
astrochron = derive { name="astrochron"; version="0.4.2"; type="cran"; sha256="1wrpcngny2b4k0p3xagh5967yvvgxcsp87xcdp4raf4n1v3nk2xx"; depends=[multitaper IDPmisc fields ]; };
astrodatR = derive { name="astrodatR"; version="0.1"; type="cran"; sha256="00689px4znwmlp6qbj6z2a51b7ylx1yrrjpv6zjkvrwpv6lyj9fw"; depends=[ ]; };
astrolibR = derive { name="astrolibR"; version="0.1"; type="cran"; sha256="0gkgry5aiz29grp9vdq9zgg6ss47ql08nwcmz1pfvd0g0h9h75l8"; depends=[ ]; };
astsa = derive { name="astsa"; version="1.3"; type="cran"; sha256="01bslr6hww029097244r5l4bz4v7z46gpihw39har8h0xicl6ywk"; depends=[ ]; };
asympTest = derive { name="asympTest"; version="0.1.3"; type="cran"; sha256="11nlkgws3y8xbz3yli55414a2rkk7367q9q5r2ssa61jaiimibhh"; depends=[ ]; };
asypow = derive { name="asypow"; version="2013.9-1"; type="cran"; sha256="0zd42ha30kysjhd6rwxr91k1hhsimw3py2inymbpxgyq4s890whs"; depends=[ ]; };
atmcmc = derive { name="atmcmc"; version="1.0"; type="cran"; sha256="05k69b5wlysz3kh0yiqvshgvr0nyz34zkvn6bjs30cwz7s9j21pn"; depends=[ ]; };
atsd = derive { name="atsd"; version="1.0.8441"; type="cran"; sha256="1jz2bdgvk1wamrm8r9ygprhyf0z3mdk9c1pwlb4bfmwvbnqd0yqa"; depends=[RCurl httr ]; };
attract = derive { name="attract"; version="1.18.0"; type="bioc"; sha256="1xshcyfd78lr9kla1iclz60rz56pxkza04y13jn28ad12dfff1nk"; depends=[AnnotationDbi limma cluster GOstats Biobase AnnotationDbi limma cluster GOstats ]; };
attribrisk = derive { name="attribrisk"; version="0.1"; type="cran"; sha256="1zqx53mxz2hh9jyanf3jkadgpj44jbqrk4p13fas91zvhpw9pn5s"; depends=[survival boot ]; };
audio = derive { name="audio"; version="0.1-5"; type="cran"; sha256="1hv4052n2r6jkzkilhkfsk4dj1xhbgk4bhba2ca9nf8ag92jkqml"; depends=[ ]; };
audiolyzR = derive { name="audiolyzR"; version="0.4-9"; type="cran"; sha256="09jsrjy15vcn6da0kgk06ghayyrf3s853gqv8qdawg745ky2hbgi"; depends=[hexbin RJSONIO plotrix ]; };
audit = derive { name="audit"; version="0.1-1"; type="cran"; sha256="0hrcdcwda5c0snskrychiyfjcbnymkcl2x43bapb6inw9y8989qv"; depends=[ ]; };
autoencoder = derive { name="autoencoder"; version="1.0"; type="cran"; sha256="18i6b2vjhlq9f82syw3k88gm9bvklv827nflgzq0xzjnzh6z5nr8"; depends=[ ]; };
automap = derive { name="automap"; version="1.0-14"; type="cran"; sha256="1190kbmp0x80x0hyifdbblb4ijq79kvrfn9rkp5k6diig4v30n0w"; depends=[sp gstat lattice reshape ]; };
autopls = derive { name="autopls"; version="1.3"; type="cran"; sha256="1qf5gk1vsz1p5670w7bgzh3b15wvrx1gy6ih4sivw0vj8bcjxbw9"; depends=[pls ]; };
aws = derive { name="aws"; version="1.9-4"; type="cran"; sha256="11vbsg4yhnl4995m8gq5gykrlk61y3a618g2zxkc9wdf5z4xqdny"; depends=[awsMethods gsl ]; };
awsMethods = derive { name="awsMethods"; version="1.0-3"; type="cran"; sha256="1r6rbrlc5wbljp2x9aqhhnjblnb3gjm217x0cbmrw1pa0cf7q5jq"; depends=[ ]; };
aylmer = derive { name="aylmer"; version="1.0-11"; type="cran"; sha256="1b6dryvfz9yp00nj8lv8j1isnshcgwn9fx41knah9pw7dn4pxkk2"; depends=[Brobdingnag ]; };
b6e6rl = derive { name="b6e6rl"; version="1.1"; type="cran"; sha256="17scdskn677vaxx1h2jypqaffvjgczryplg17nr3wigi1x0cxg7a"; depends=[ ]; };
bPeaks = derive { name="bPeaks"; version="1.2"; type="cran"; sha256="1z6jghcmw0lwv17ms7gdp5zzimaawq3ahbwkxa4062g373592smd"; depends=[ ]; };
bReeze = derive { name="bReeze"; version="0.4-0"; type="cran"; sha256="1znhmb2inbfv574adhwjwk3qf9kikrxrly4n6sfyim1z6sagnj0z"; depends=[ ]; };
babar = derive { name="babar"; version="1.0"; type="cran"; sha256="13j5klrcnd4dwrgdbxlvwcj56l9mzi4j9ga6jj5i04pgdc6vsfx5"; depends=[ ]; };
babel = derive { name="babel"; version="0.2-6"; type="cran"; sha256="1dsxjnhr0cky7wlzz8pr8rn3cldfcyrh8v6gn2ba4abr0df7i4dd"; depends=[edgeR ]; };
babynames = derive { name="babynames"; version="0.1"; type="cran"; sha256="0qq0303mmcnpfy5630d7rqmb8rl36p7hg2z842rzd4lkhy8c2l07"; depends=[ ]; };
backtest = derive { name="backtest"; version="0.3-2"; type="cran"; sha256="06q488pynxgis1m6rxc8hgscpy8vimffpi4aamviwb089sjzilnn"; depends=[lattice ]; };
bagRboostR = derive { name="bagRboostR"; version="0.0.2"; type="cran"; sha256="1k9w98p3ad3myzyqhcrc4rsn7196qvhnmk5ddx3fpd1rdvy2dnby"; depends=[randomForest ]; };
ballgown = derive { name="ballgown"; version="1.0.4"; type="bioc"; sha256="1pvzm8dxyrxfgw4wypl805wjxnywqnqr0ip8yxwx16qa04vr88ii"; depends=[GenomicRanges IRanges S4Vectors RColorBrewer sva limma rtracklayer Biobase GenomeInfoDb ]; };
bamdit = derive { name="bamdit"; version="1.1-1"; type="cran"; sha256="0f865yfwd2pvbkcx8jm4iyilldmprsgyqnscp1n28rp3sbdii4bl"; depends=[coda rjags ]; };
bams = derive { name="bams"; version="1.6"; type="cran"; sha256="1pplnpilpydxf7gcs87424cajss74q8cr9pyv2biy4pkvfql0nxl"; depends=[ ]; };
bandit = derive { name="bandit"; version="0.5.0"; type="cran"; sha256="03mv4vbn9g4mqikd9map33gmw2fl9xvb62p7gpxs1240w5r4w3fp"; depends=[boot gam ]; };
barcode = derive { name="barcode"; version="1.1"; type="cran"; sha256="14zh714cwgq80zspvhw88cs5b82gvz4b6yfbshj9b7x0y2961nxd"; depends=[lattice ]; };
bartMachine = derive { name="bartMachine"; version="1.2.0"; type="cran"; sha256="0hcz39397v2y8qgdy67i97j0z5g2qidkkf5p9ydcqp9fp5msshq7"; depends=[rJava car randomForest missForest ]; };
base64 = derive { name="base64"; version="1.1"; type="cran"; sha256="1wn3zj1qlgybzid4nr6hvlyqg1rp2dwfh88vxrfby2fy2ba1nl5x"; depends=[ ]; };
base64enc = derive { name="base64enc"; version="0.1-2"; type="cran"; sha256="0d2b7vl08abssfwprfiqc0yscb1gz4xlzlwwbf7y9z19wbyxizh5"; depends=[ ]; };
baseline = derive { name="baseline"; version="1.2-0"; type="cran"; sha256="12gjirk9jyq7lmfkp10kcli84bld9n9m6yhcj5z6y4iaq6d8hazq"; depends=[SparseM ]; };
basicspace = derive { name="basicspace"; version="0.15"; type="cran"; sha256="11aqrai26kdwszznlhrk52jr19syl549qdq3nspbxcn2mj65f5pw"; depends=[ ]; };
batade = derive { name="batade"; version="0.1"; type="cran"; sha256="1lr0j20iydh15l6gbn471vzbwh29n58dlpv9bcx1mnsqqnsgpmal"; depends=[hwriter ]; };
batch = derive { name="batch"; version="1.1-4"; type="cran"; sha256="03v8a1hsjs6nfgmhdsv6fhy3af2vahc67wsk71wrvdxwslmn669q"; depends=[ ]; };
batchmeans = derive { name="batchmeans"; version="1.0-2"; type="cran"; sha256="126q7gyb1namhb56pi0rv9hchlghjr95pflmmpwhblqfq27djss2"; depends=[ ]; };
baySeq = derive { name="baySeq"; version="2.0.50"; type="bioc"; sha256="08p2kck94hsn6p4xcb4y2q4il236xf5vr44zvxmpvxpbjga1lk3f"; depends=[GenomicRanges abind ]; };
bayesDccGarch = derive { name="bayesDccGarch"; version="1.0"; type="cran"; sha256="1xgznixi0wdpqbqjacf5viyz69fjd0xbsdgvkgq2d8pjbgp18s0a"; depends=[coda ]; };
bayesDem = derive { name="bayesDem"; version="2.4-1"; type="cran"; sha256="0s2dhy8c90smvaxcng6ixhjm7kvwwz2c4lgplynrggrm8rfb19ay"; depends=[gWidgets gWidgetsRGtk2 bayesTFR bayesLife bayesPop RGtk2 wpp2012 ]; };
bayesGARCH = derive { name="bayesGARCH"; version="2.0.1"; type="cran"; sha256="1gz18wjikkg3yf71b1g21cx918dyz89f5m295iv8ah807cdx7vjk"; depends=[mvtnorm coda ]; };
bayesGDS = derive { name="bayesGDS"; version="0.6.1"; type="cran"; sha256="0134x5knwp9pmkjyzgi1k7hjj92sym1p0zq98sizlbs0mff2p2s4"; depends=[Matrix ]; };
bayesLife = derive { name="bayesLife"; version="2.2-0"; type="cran"; sha256="09r915azz60ca5b4w0kkd8x8mb0cxz36lapakdmgrgxd4qax17nv"; depends=[bayesTFR wpp2012 hett car coda ]; };
bayesMCClust = derive { name="bayesMCClust"; version="1.0"; type="cran"; sha256="14cyvcyx3nmkbvsy7n4xjp7zvcgdhy013dv9d72y8j5dvlv82pb4"; depends=[gplots xtable mnormt MASS bayesm boa e1071 gtools ]; };
bayesPop = derive { name="bayesPop"; version="5.3-4"; type="cran"; sha256="1zq0vjkz4b33niwldli6sh8pgz5wsyzk59iyx5bcdpkbkprv57np"; depends=[bayesTFR bayesLife abind plyr wpp2012 ]; };
bayesQR = derive { name="bayesQR"; version="2.2"; type="cran"; sha256="0w5fg7hdwpgs2dg4vzcdsm60wkxgjxhcssw9jzig5qgdjdkm07nm"; depends=[ ]; };
bayesSurv = derive { name="bayesSurv"; version="2.4"; type="cran"; sha256="014jxlx4w6lzzq9axdk8mwwlppmly0yj9i14zhmngdbr7mxh3f87"; depends=[survival coda smoothSurv ]; };
bayesTFR = derive { name="bayesTFR"; version="4.1-2"; type="cran"; sha256="17qv25yrprj099vx1jj46ycgxnc4ldx6qcqx42h5gz38qqzz2q4s"; depends=[mvtnorm MASS coda wpp2012 ]; };
bayesclust = derive { name="bayesclust"; version="3.1"; type="cran"; sha256="0zxjd64nz8c6vg6jwb2xh6kbw41a2pcmlwq5cl6k2kbplqbm2jdf"; depends=[ ]; };
bayescount = derive { name="bayescount"; version="0.9.99-5"; type="cran"; sha256="0c2b54768wn72mk297va3k244256xlsis9cd6zn6q5n1l7ispj6j"; depends=[runjags rjags coda ]; };
bayesm = derive { name="bayesm"; version="2.2-5"; type="cran"; sha256="16cnm1i7vwviqxwq3yhj5r9a46qaanq2mb4snd0659rkia6p8h7a"; depends=[ ]; };
bayesmix = derive { name="bayesmix"; version="0.7-3"; type="cran"; sha256="142132aslmmm35yai4n1d2hqqkczvrnm8ln9gwxvbczmxaggnc01"; depends=[rjags coda ]; };
bayespref = derive { name="bayespref"; version="1.0"; type="cran"; sha256="0gwlzs7qkgmf90np7xv85d27jjqggyhfj00vpya664a2znyjb3jm"; depends=[coda lattice MASS MCMCpack RColorBrewer ]; };
bayess = derive { name="bayess"; version="1.4"; type="cran"; sha256="0axipk5hn2hw3g4dfh7y3xa0dxqmi8kqpbr77nl14y7ydpija6xm"; depends=[MASS mnormt gplots combinat ]; };
bayou = derive { name="bayou"; version="1.0.1"; type="cran"; sha256="0l342a4lsn6b18i2kyk2hr50k69bb7jcw8dlnbi96yf1i58qcdri"; depends=[ape geiger phytools coda Rcpp MASS mnormt fitdistrplus denstrip Rcpp RcppArmadillo ]; };
bbefkr = derive { name="bbefkr"; version="4.2"; type="cran"; sha256="1wjx652w3p41sq71a2zdzmb7frjxm6xvcgrc2ark2spwb0lbjjw6"; depends=[ ]; };
bbemkr = derive { name="bbemkr"; version="2.0"; type="cran"; sha256="015c57s8mpimm82nddnh382wlkisxgdmc2hvp7k38pcnqxc5gb5q"; depends=[MASS ]; };
bbmle = derive { name="bbmle"; version="1.0.17"; type="cran"; sha256="1j3x2glnn0i0fc0mmafwkkqh1js90g8q7gix2vrhif0pmwinsrak"; depends=[numDeriv lattice MASS ]; };
bbo = derive { name="bbo"; version="0.2"; type="cran"; sha256="19xrbla3bb3csg3gjjrpkgyr379zfwyh293bcrcd6j8rnm6g4i01"; depends=[ ]; };
bc3net = derive { name="bc3net"; version="1.0.2"; type="cran"; sha256="0iakqf4apscxb4mb5klj9qklbi25dmdd77la3ads2y882gm2nj0z"; depends=[c3net infotheo igraph Matrix lattice ]; };
bclust = derive { name="bclust"; version="1.4"; type="cran"; sha256="1s04fqff5bw6d5kk0smvach6yq492dv1w0ahh9mrm2jsi2q58h7p"; depends=[ ]; };
bcp = derive { name="bcp"; version="3.0.1"; type="cran"; sha256="08sa1az1ljsi00zmj3l7z8p1j5im1w79yjxy8k1p6ba90bck7l4h"; depends=[foreach iterators Rcpp Rcpp ]; };
bcpa = derive { name="bcpa"; version="1.1"; type="cran"; sha256="0rwbd39szp0ar9nli2rswhjiwil31zgl7lnwm9phd0qjv8q0ppar"; depends=[Rcpp plyr Rcpp ]; };
bcpmeta = derive { name="bcpmeta"; version="1.0"; type="cran"; sha256="02fw1qz9cvr7pvmcng7qg7p04wxxpmvb2s8p78f52w4bf694iqhl"; depends=[mvtnorm ]; };
bcrm = derive { name="bcrm"; version="0.4.4"; type="cran"; sha256="0gcigc7505fsk1m70df3n0dz553adkbs8yz2bhskb4qrw4gbmvr7"; depends=[mvtnorm ggplot2 ]; };
bcv = derive { name="bcv"; version="1.0.1"; type="cran"; sha256="0yqcfariw9sw0b8cpljcr7vf5rf0cwr1wbif23icchfaxk2m42gj"; depends=[ ]; };
bda = derive { name="bda"; version="5.1.3"; type="cran"; sha256="0v2xki9a1j6y42x03a3rrm746xx4qd3ris1m0k7alh25j3ayhs3p"; depends=[ ]; };
bde = derive { name="bde"; version="1.0.1"; type="cran"; sha256="1f25gmjfl58x4pns89abfk85yq5aad3bgq9yqpv505g5gxk62d3v"; depends=[shiny ggplot2 ]; };
bdoc = derive { name="bdoc"; version="1.2"; type="cran"; sha256="15d7grc0a1hakkxhgbm2gp0awggzlmsp8zf8abj5bgfih63gcmj2"; depends=[ ]; };
bdpv = derive { name="bdpv"; version="1.1"; type="cran"; sha256="0i6wdf27243ch8pn2chqriwxjg3g72wbvzlx52mz4ahw700xjc7n"; depends=[ ]; };
bdscale = derive { name="bdscale"; version="1.2"; type="cran"; sha256="0j2h7ainfnh78szp355didbkmcl6d5vz1di8nznjarwxncrbgc6g"; depends=[ggplot2 scales ]; };
bdsmatrix = derive { name="bdsmatrix"; version="1.3-2"; type="cran"; sha256="16qhfwk0r1snm9hg32qwz7hizkpwc32m723hjm23m2026gvz2nwy"; depends=[ ]; };
bdvis = derive { name="bdvis"; version="0.1.0"; type="cran"; sha256="1f837i48gmspx9xrnxzsgdbg6ykxmvkp8l20y19yd9iakhv7k3jy"; depends=[maps plotrix sqldf plyr taxize treemap ggplot2 ]; };
bdynsys = derive { name="bdynsys"; version="1.3"; type="cran"; sha256="07gfyp0qwq9y1cnh7lhcz7q0b1s51cjwlbpll50l2cza2dszmf29"; depends=[plm Formula MASS Hmisc deSolve pracma caTools matrixStats ]; };
beadarray = derive { name="beadarray"; version="2.16.0"; type="bioc"; sha256="10yh90501bdy1gnmxamn6z4rhjiplay2afgd9145bb84hldcwa6d"; depends=[BiocGenerics Biobase ggplot2 BeadDataPackR limma AnnotationDbi reshape2 GenomicRanges IRanges illuminaio ]; };
beadarrayFilter = derive { name="beadarrayFilter"; version="1.1.0"; type="cran"; sha256="044dq5irc00v2f2gjz0vb69w7q7b84lppc55ganabdv4f0dxdblc"; depends=[beadarray RColorBrewer ]; };
beadarrayMSV = derive { name="beadarrayMSV"; version="1.1.0"; type="cran"; sha256="0785vmjsli37hjyppk7hlqmn0b683s1apysx9dghbw4h6rgvr8n9"; depends=[Biobase geneplotter rggobi limma ]; };
beadarraySNP = derive { name="beadarraySNP"; version="1.32.0"; type="bioc"; sha256="0lmgcbbb4caf2qgbgk574yazil2vif10i3j1d69xhqjr38k936hb"; depends=[Biobase quantsmooth ]; };
beanplot = derive { name="beanplot"; version="1.2"; type="cran"; sha256="0wmkr704fl8kdxkjwmaxw2a2h5dwzfgsgpncnk2p2wd4768jknj9"; depends=[ ]; };
bear = derive { name="bear"; version="2.6.4"; type="cran"; sha256="1v5rcb7aqzc7zjbbwwcy02z79crxq90mxs32k2gfvf7jzky09hpy"; depends=[reshape nlme gdata ICSNP sciplot plotrix ggplot2 png ]; };
beepr = derive { name="beepr"; version="1.1"; type="cran"; sha256="187gww50yc8hzrzwz6j9ib101196g6ci9fx3dqyhg764ydn8if1n"; depends=[stringr audio ]; };
beeswarm = derive { name="beeswarm"; version="0.2.0"; type="cran"; sha256="05yhddljmls35xdffp7iikgwh3jh5s4b7w5d2gw89w7l8hr62ypz"; depends=[ ]; };
benchden = derive { name="benchden"; version="1.0.5"; type="cran"; sha256="1cwcgcm660k8rc8cpd9sfpzz66r55b4f4hcjc0hznpml35015zla"; depends=[ ]; };
benchmark = derive { name="benchmark"; version="0.3-6"; type="cran"; sha256="05rgrjhbvkdv06nzbh0v57b06vdikrqc1d29wirzficxxbjk1hih"; depends=[proto ggplot2 relations psychotools reshape scales plyr ]; };
benford_analysis = derive { name="benford.analysis"; version="0.1.1"; type="cran"; sha256="00ynk1af5nbq8bn8y77sckx4w32g5zxcp06pdpcxwvp38d7hxhvc"; depends=[data_table ]; };
bentcableAR = derive { name="bentcableAR"; version="0.3.0"; type="cran"; sha256="1gjrlv94av9955jqhicaiqm36rrgmy0avxn9y7wbp2s1sbg7fyg7"; depends=[ ]; };
ber = derive { name="ber"; version="4.0"; type="cran"; sha256="0gl7rms92qpa5ksn8h3ppykmxk5lzbcs13kf2sjiy0r2535n8ydi"; depends=[MASS ]; };
berryFunctions = derive { name="berryFunctions"; version="1.7.1"; type="cran"; sha256="1xpmpbls0vjyi51k7sd1v8s7lp4s1549javcg3yinmvxp9xhwfkx"; depends=[ ]; };
bestglm = derive { name="bestglm"; version="0.34"; type="cran"; sha256="0b6lj91v0vww0fy50sqdn99izkxqbhv83y3zkyrrpvdzwia4dg9w"; depends=[leaps ]; };
betafam = derive { name="betafam"; version="1.0"; type="cran"; sha256="1nf5509alqnr5qpva36f1wb7rdnc084p170h91jv89xvzsidqxca"; depends=[ ]; };
betapart = derive { name="betapart"; version="1.3"; type="cran"; sha256="0h2y2c3q6njzh2rlxh8izgkrq9y7abkbb0b13f2iyj9pnalvdv52"; depends=[ape geometry picante rcdd ]; };
betaper = derive { name="betaper"; version="1.1-0"; type="cran"; sha256="1gr533iw71n2sq8gga9kzlah7k28cnlwxb2yh562gw6mh1axmidm"; depends=[vegan ellipse ]; };
betareg = derive { name="betareg"; version="3.0-5"; type="cran"; sha256="1zpj1x5jvkn7d8jln16vr4xziahng0f54vb4gc4vs03z7c853i4a"; depends=[flexmix Formula lmtest modeltools sandwich ]; };
betas = derive { name="betas"; version="0.1.1"; type="cran"; sha256="1v85r6lrk21viwzam42gi42bgbwh5ibn3dpbh3aqrf3dnn1rdsyd"; depends=[robust ]; };
betategarch = derive { name="betategarch"; version="3.2"; type="cran"; sha256="0x3l1zvdp8r7mam7fvdlh1w3dwpjwj86n0ysfk8g824p4mn2wsgv"; depends=[zoo ]; };
bethel = derive { name="bethel"; version="0.2"; type="cran"; sha256="1zlkw672k1c5px47bpa2vk3w2906vkhvifz20h6xm7s51gmm64i0"; depends=[ ]; };
betr = derive { name="betr"; version="1.22.0"; type="bioc"; sha256="1gw9g33cpsbc86825ispf56w16273abxflbb9r3r4hvhv4m1kklx"; depends=[Biobase limma mvtnorm ]; };
bezier = derive { name="bezier"; version="1.1"; type="cran"; sha256="1bhqf1zbshkf1x8mgqp4mkgdxk9jxi51xj6i47kqkyn9gbdzch0c"; depends=[ ]; };
bfa = derive { name="bfa"; version="0.3.1"; type="cran"; sha256="02vnbm77blllb74kll8w1i91k0llk43vq60aqjwpc5kqmzy652pk"; depends=[coda Rcpp RcppArmadillo Rcpp RcppArmadillo ]; };
bfast = derive { name="bfast"; version="1.5.7"; type="cran"; sha256="0n75minka55rxpvs3qkj0c65ydn1gc3i8lkr2gdyn1adjkl5yn01"; depends=[strucchange zoo forecast sp raster ]; };
bfp = derive { name="bfp"; version="0.0-27"; type="cran"; sha256="08hlr33dwwjc4ag8vfsa3w4rcsc2093j8zwb05xkkl5nwqsq3mq0"; depends=[Rcpp Rcpp ]; };
bgafun = derive { name="bgafun"; version="1.28.0"; type="bioc"; sha256="1zrlfv7g0pfmpr55m0rx81zn02k3g278d24qh6xzl2f198zwf6aw"; depends=[made4 seqinr ade4 ]; };
bgeva = derive { name="bgeva"; version="0.3"; type="cran"; sha256="0isijl43kmg4x7mdnvz0lrxr87f68dl4jx7gmlg70m8r6kk8cfqn"; depends=[mgcv magic trust ]; };
bglm = derive { name="bglm"; version="1.0"; type="cran"; sha256="1ln5clsfhpzjkm6cjil0lfqg687b0xxbvw1hcvangc0c0s314mrz"; depends=[mvtnorm ]; };
bgmm = derive { name="bgmm"; version="1.7"; type="cran"; sha256="00bjwmgqvz053yczvllf1nxy1g88fgwrrzhnw309f2yjr1qvjbgg"; depends=[mvtnorm car lattice combinat ]; };
bgx = derive { name="bgx"; version="1.32.0"; type="bioc"; sha256="0sg56jz4y9z71dp8dq2hdzwp09ij98xsba0a8fap66xw6b249nr1"; depends=[Biobase affy gcrma ]; };
biasbetareg = derive { name="biasbetareg"; version="1.0"; type="cran"; sha256="1562zdin0y5mrp36ih11ir3h9cv49cx1l98chxd89fkj8x3c1fbg"; depends=[betareg ]; };
bibtex = derive { name="bibtex"; version="0.4.0"; type="cran"; sha256="0sy1czwjff3kdfnmlkp036qlnw8dzdl5al7izy1cc0535hsijv0d"; depends=[ ]; };
biclust = derive { name="biclust"; version="1.2.0"; type="cran"; sha256="03vkj7zp3dl4zbv2gzv9pahcd1018lbv4ixghvv1g0fsbndrybdg"; depends=[MASS colorspace lattice flexclust ]; };
bifactorial = derive { name="bifactorial"; version="1.4.7"; type="cran"; sha256="187zlsqph7m63wf6wajvs6a4a08aax9hiqssgvma6cpkpisfiz4k"; depends=[mvtnorm multcomp lattice Rcpp Rcpp ]; };
bigGP = derive { name="bigGP"; version="0.1-5"; type="cran"; sha256="0hlfylwinkwz2s8wgqf6qwxrrdx5a02ln13y4arfwwlqi1kw0s4q"; depends=[Rmpi ]; };
bigRR = derive { name="bigRR"; version="1.3-10"; type="cran"; sha256="08m77r9br6wb9i21smaj4pwwpq3nxdirs542gnkrpakl7bvyp6s3"; depends=[hglm DatABEL ]; };
bigalgebra = derive { name="bigalgebra"; version="0.8.4"; type="cran"; sha256="19rv552ac0q9djc1yvpldkc0lipdf6q143m9dnndpsqs7ayqlr4g"; depends=[bigmemory bigmemory BH ]; };
biganalytics = derive { name="biganalytics"; version="1.1.1"; type="cran"; sha256="0g45b293c1z9n2z9ab66jsy8yaiqm7bbs2d6pglzwgmmdvwy03qd"; depends=[bigmemory BH bigmemory ]; };
bigdata = derive { name="bigdata"; version="0.1"; type="cran"; sha256="1n1zcjhvb2s87d7fkcm95x11ss4b8pczza0n55gxjv4przfiq0in"; depends=[glmnet Matrix lattice ]; };
biglars = derive { name="biglars"; version="1.0.2"; type="cran"; sha256="17zs25dvlja9ynx2fm5f4nmgkx4mnyqs5iscwsyahr6qigx1rz9x"; depends=[ff ]; };
biglm = derive { name="biglm"; version="0.9-1"; type="cran"; sha256="1z7h4by457z93k5i6qf5rq7xmd1y2kcd1rq4pv465cd32d4mb2g1"; depends=[DBI ]; };
bigmemory = derive { name="bigmemory"; version="4.4.6"; type="cran"; sha256="1pplnpxqg380l5mjgz0ak4ipsx7x54339n2wr3dd29xv3w2fb5rp"; depends=[bigmemory_sri BH BH ]; };
bigmemory_sri = derive { name="bigmemory.sri"; version="0.1.3"; type="cran"; sha256="0mg14ilwdkd64q2ri9jdwnk7mp55dqim7xfifrs65sdsv1934h2m"; depends=[ ]; };
bigmemoryExtras = derive { name="bigmemoryExtras"; version="1.10.0"; type="bioc"; sha256="0ym8750x94lk62mpgp5gfxs2wqnqsfka5p1gapngq9rhbz15fba5"; depends=[bigmemory Biobase ]; };
bigml = derive { name="bigml"; version="0.1.2"; type="cran"; sha256="0vl5krjbgckknxwl26b2hn63jhb80zbn7abpckhxzxfxzncpnfz9"; depends=[RJSONIO RCurl plyr ]; };
bigpca = derive { name="bigpca"; version="1.0"; type="cran"; sha256="1s4qmg7xl8z0sv1b1vfqw0r5cvlbrxx1n0m03ira8fpykcck2clm"; depends=[reader NCmisc bigmemory biganalytics bigmemory_sri BH irlba ]; };
bigrf = derive { name="bigrf"; version="0.1-11"; type="cran"; sha256="0lazi8jk8aapdyyynd5yfcbn4jpjyxh8l64ayd0jj3nisl6hvmdh"; depends=[bigmemory foreach bigmemory BH ]; };
bigrquery = derive { name="bigrquery"; version="0.1.0"; type="cran"; sha256="15ibgi6bqvn0ydq8jx1xhwkwpwwyd7w4f2ams2gpafpysc2f2ks6"; depends=[httr jsonlite assertthat R6 dplyr ]; };
bigsplines = derive { name="bigsplines"; version="1.0-6"; type="cran"; sha256="03gan2wrsi2hfxhn3l05qd0x04x8ymkab9aqpfbfn59m296xhd3m"; depends=[ ]; };
bigtabulate = derive { name="bigtabulate"; version="1.1.2"; type="cran"; sha256="0vp873r3gww6kfkjdm87qgcdi85362kq946lvs45ggvyv7iaw0wa"; depends=[bigmemory BH bigmemory ]; };
bild = derive { name="bild"; version="1.1-5"; type="cran"; sha256="03has1zi57inicahl52ja006vv5cdndyxfsxp77l6nc3zc6ixna8"; depends=[ ]; };
bimetallic = derive { name="bimetallic"; version="1.0"; type="cran"; sha256="181qi4dr0zc7x6wziq7jdc1his20jmprfpq3hrfm56fr5n1sj8wl"; depends=[ ]; };
binGroup = derive { name="binGroup"; version="1.1-0"; type="cran"; sha256="1sf7prg2x1ryynf1kz7jr50svmga7kjgd5pi9qm3g2hyimz8mvs4"; depends=[ ]; };
binMto = derive { name="binMto"; version="0.0-6"; type="cran"; sha256="1h9s42wk848x15f4glhsh2iikpra64miwlia6xz5dqlzbs4vw86k"; depends=[mvtnorm ]; };
binda = derive { name="binda"; version="1.0.2"; type="cran"; sha256="1hfqx79pq9bn37j8rwv11wsv6d9prph26p2hqmnxilsdxr953ib2"; depends=[entropy ]; };
bindata = derive { name="bindata"; version="0.9-19"; type="cran"; sha256="15ya21fz1kvq4qsppkn9ypiqvaq8q4vszdcgcymampa7zc07z2ld"; depends=[e1071 mvtnorm ]; };
binequality = derive { name="binequality"; version="0.6.1"; type="cran"; sha256="18pcz5b65zk6fwh597pcbpyy0j7gkxp5swwadxvsa3cainvyd07n"; depends=[gamlss gamlss_cens gamlss_dist survival ineq ]; };
bingat = derive { name="bingat"; version="1.1"; type="cran"; sha256="1pb1yy1xrfvh71pg237lkmi56p8pbam60rii5i5km1i960lq0wc1"; depends=[matrixStats network ]; };
binhf = derive { name="binhf"; version="1.0-1"; type="cran"; sha256="0l8925bj6mjv2y7fn76zh2g8xjig3kbbdy4jl0ip3gd9kbrakl9k"; depends=[wavethresh adlift ]; };
binom = derive { name="binom"; version="1.1-1"; type="cran"; sha256="0mjj92dqf5q69jxzqya4izb1mly3mkydbnmlm4wb3zqqg82a324c"; depends=[ ]; };
binomSamSize = derive { name="binomSamSize"; version="0.1-3"; type="cran"; sha256="0hryaf0y3yjxp84c0k80mhxj8zzlad697bv2yrvcjvllkzdvzbm7"; depends=[binom ]; };
binomTools = derive { name="binomTools"; version="1.0-1"; type="cran"; sha256="14594i7iapd6hy4j36yb88xmrbmczg8zgbs0b6k0adnmqf83bn4v"; depends=[ ]; };
binomialcftp = derive { name="binomialcftp"; version="1.0"; type="cran"; sha256="00c7ymlxk1xnx3x1814x7bcyir7q5sy4rb82dcpzf2bdly4xa1qr"; depends=[ ]; };
binomlogit = derive { name="binomlogit"; version="1.2"; type="cran"; sha256="1njz1g9sciwa8q6h0zd8iw45vg3i1fwcvicj5y8srpk8wqw3qp7k"; depends=[ ]; };
binr = derive { name="binr"; version="1.1"; type="cran"; sha256="0kgk91zy7bdrhpkh9c5bi206y9hjwjwzb508i8qqmznqyxmza70r"; depends=[ ]; };
binseqtest = derive { name="binseqtest"; version="1.0"; type="cran"; sha256="103nbi3zq9m632665iqz0z79v963ixhd5xrjfx6drwpfp4i69pbl"; depends=[clinfun ]; };
bio_infer = derive { name="bio.infer"; version="1.3-3"; type="cran"; sha256="14pdv6yk0sk6v8g9p6bazbp7mr3wmxgfi6p6dj9n77lhqlvjcgm9"; depends=[ ]; };
bio3d = derive { name="bio3d"; version="2.2-2"; type="cran"; sha256="0sqwl27n15sbablw4mcqgf0w2k28jc59wf8yqxrmqbg8cckfsh9j"; depends=[ ]; };
bioDist = derive { name="bioDist"; version="1.38.0"; type="bioc"; sha256="0lax2lr794gzz6a6l100zkx6f02k9nj1xmn7d3l224s4vkn57zhr"; depends=[Biobase KernSmooth ]; };
bioPN = derive { name="bioPN"; version="1.2.0"; type="cran"; sha256="0mvqgsfc7d4h6npgg728chyp5jcsf49xhnq8cgjxfzmdayr1fwr8"; depends=[ ]; };
bioassayR = derive { name="bioassayR"; version="1.4.3"; type="bioc"; sha256="1p0r8wplhcxh2xw3wc9gda2mgiynfsqr368xjrgkch2q4f95hkbl"; depends=[DBI RSQLite Matrix rjson XML ]; };
biocGraph = derive { name="biocGraph"; version="1.28.0"; type="bioc"; sha256="1rgb7dp24dv5d2nadpl2j4gzqnna1diwciirjb4nmcbb5p8rh8fy"; depends=[Rgraphviz graph Rgraphviz geneplotter graph BiocGenerics ]; };
biocViews = derive { name="biocViews"; version="1.34.1"; type="bioc"; sha256="1jxdkbi8fdpc3253qy0gxs3xfd5g4d231n9b3r5sy18424c7zvr7"; depends=[Biobase graph RBGL XML RCurl RUnit knitr ]; };
biogas = derive { name="biogas"; version="1.0"; type="cran"; sha256="0c7ayhmy69k08f32i1agri349wm1addibw4xp9rjq9cmkdhazvbd"; depends=[ ]; };
biogram = derive { name="biogram"; version="1.1"; type="cran"; sha256="04nkm972x1nzlacfjfk3i4gsqbfhrfaygmmw13hrp47j8snv8r26"; depends=[slam bit ]; };
biom = derive { name="biom"; version="0.3.12"; type="cran"; sha256="18fmzp2zqjk7wm39yjlln7mpw5vw01m5kmivjb26sd6725w7zlaa"; depends=[plyr RJSONIO Matrix ]; };
biomaRt = derive { name="biomaRt"; version="2.22.0"; type="bioc"; sha256="0pn5cg5yhxg11yfp4xbnm048y1h7njs42f3mb7gbhzk8ijs783cq"; depends=[XML RCurl AnnotationDbi ]; };
biomod2 = derive { name="biomod2"; version="3.1-64"; type="cran"; sha256="0ymqscsdp5plhnzyl256ws9namqdcdxq3w5g79ymfpymfav10h3a"; depends=[sp raster reshape ggplot2 abind rasterVis pROC nnet gbm mda randomForest rpart MASS ]; };
biomvRCNS = derive { name="biomvRCNS"; version="1.6.0"; type="bioc"; sha256="1bf9s5n3jy3pv6182j8jd7387dlqdy4776vnsi3xn4sz532j2cs6"; depends=[IRanges GenomicRanges Gviz mvtnorm ]; };
bionetdata = derive { name="bionetdata"; version="1.0.1"; type="cran"; sha256="1l362zxgcvxln47b1vc46ad6ww8ibwhqr2myxnz1dnk2a8nj7r2q"; depends=[ ]; };
biopara = derive { name="biopara"; version="1.5"; type="cran"; sha256="1fhhs6lkm3iphlkx6wklh9sgr1mkjkka9wv2m8fnk0xw01bdsyl5"; depends=[ ]; };
biorxivr = derive { name="biorxivr"; version="0.1.0"; type="cran"; sha256="0277kand29vsxczjg1wnlvx494w67x6pd1ybg735ni62is567adg"; depends=[XML ]; };
bios2mds = derive { name="bios2mds"; version="1.2.2"; type="cran"; sha256="1avzkbk91b7ifjba5zby5r2yw5mibf2wv05a4nj27gwxfwrr21cd"; depends=[amap e1071 scales cluster rgl ]; };
biosignalEMG = derive { name="biosignalEMG"; version="1.0.2"; type="cran"; sha256="0ywb59w3rgac59gif1jba8qi7rjdsdj7y5czj7kv8lf01vd5dl3l"; depends=[ ]; };
biosvd = derive { name="biosvd"; version="2.2.0"; type="bioc"; sha256="0yig3gpjzzs7m17c76sdzn68s55waxc6n6jgpbcsl3hg84s3ch95"; depends=[BiocGenerics Biobase NMF ]; };
biotools = derive { name="biotools"; version="2.1"; type="cran"; sha256="15ncx700v5ignr3gggz5zfspskzpj3kpzsy6rg2y4pnjm1vlndgj"; depends=[rpanel tkrplot MASS boot ]; };
biovizBase = derive { name="biovizBase"; version="1.14.1"; type="bioc"; sha256="1v3d408yxccpps16j2x8pdk3fzfahbjwscaqr10am9qqsvjrcyfa"; depends=[scales Hmisc RColorBrewer dichromat BiocGenerics S4Vectors IRanges GenomeInfoDb GenomicRanges Biostrings Rsamtools GenomicAlignments GenomicFeatures AnnotationDbi VariantAnnotation ]; };
bipartite = derive { name="bipartite"; version="2.05"; type="cran"; sha256="05w3ypdxy2lfygdlvg9xv88dpsf21i60rsbvvz058zwpfzr39hfh"; depends=[vegan sna fields igraph MASS permute ]; };
biplotbootGUI = derive { name="biplotbootGUI"; version="1.0"; type="cran"; sha256="0pgm31nhh1b78a8ciqjxw7gf3j7hh9wjc3myj29jpl92flbqmsw0"; depends=[rgl tkrplot vegan tcltk2 ]; };
birdring = derive { name="birdring"; version="1.2"; type="cran"; sha256="1jhhvdipsx3kw8n6gw6amm1vq0m83l48dkark9vvi2hpd730ca1y"; depends=[geosphere ks lazyData raster rgdal rgeos rworldmap rworldxtra sp ]; };
birk = derive { name="birk"; version="1.3.0"; type="cran"; sha256="02h8vh2r1ilmfgx1j3yw9jlzwshqh70nac28qzq1f5mpqll8z1sg"; depends=[ ]; };
birta = derive { name="birta"; version="1.10.0"; type="bioc"; sha256="12jpmicfdw6c314ypy5galxkc4fgdbpawdf55xvm946dvf30bf11"; depends=[limma MASS Biobase ]; };
bisectr = derive { name="bisectr"; version="0.1.0"; type="cran"; sha256="1vjsjshvzj66qqzg32rviklqswrb00jyq6vwrywg1hpqhf4kisv7"; depends=[devtools ]; };
bisoreg = derive { name="bisoreg"; version="1.4"; type="cran"; sha256="1ianhk5vrzhwb9ymzvlx9701p5c4iasxyq7nhrvm815dm15rf2wf"; depends=[bootstrap monreg R2WinBUGS coda ]; };
bit = derive { name="bit"; version="1.1-12"; type="cran"; sha256="0a6ig6nnjzq80r2ll4hc74za3xwzbzig6wlyb4dby0knzf3iqa6f"; depends=[ ]; };
bit64 = derive { name="bit64"; version="0.9-4"; type="cran"; sha256="1w734l5ayr7w17a3gk2kmkqwz7v5jm830kfhyqmnd15i816lnjb9"; depends=[bit ]; };
bitops = derive { name="bitops"; version="1.0-6"; type="cran"; sha256="176nr5wpnkavn5z0yy9f7d47l37ndnn2w3gv854xav8nnybi6wwv"; depends=[ ]; };
bivarRIpower = derive { name="bivarRIpower"; version="1.2"; type="cran"; sha256="0vgi0476rwali6k8bkp317jawzq5pf04v75xmycpmadb7drnpzy0"; depends=[ ]; };
biwavelet = derive { name="biwavelet"; version="0.17.10"; type="cran"; sha256="0rvlpqfrgajaw5bifc3103ixj2akdhpcxqhgw9fv0r1c5kv98qz0"; depends=[fields ]; };
biwt = derive { name="biwt"; version="1.0"; type="cran"; sha256="1mb3x8ky3x8j4n8d859i7byyjyfzq035i674b2dmdca6mn7paa14"; depends=[rrcov MASS ]; };
bizdays = derive { name="bizdays"; version="0.2.2"; type="cran"; sha256="1n2bh7vy0fhxq20s4lnbhgig1012di34kfl61i0ap7pc6464kg8d"; depends=[ ]; };
blender = derive { name="blender"; version="0.1.2"; type="cran"; sha256="1qqkfgf7fzwcz88a43cqr8bw86qda33f18dg3rv1k77gpjqr999c"; depends=[vegan ]; };
blighty = derive { name="blighty"; version="3.1-4"; type="cran"; sha256="1fkz3vfcnciy6rfybddcp5j744dcsdpmf7cln2jky0krag8pjzpn"; depends=[ ]; };
blima = derive { name="blima"; version="1.0.0"; type="bioc"; sha256="0v6a7611ziw0hsklj4w5ry1m1bw0m8lcs75a8ba3brdz0mdhab8k"; depends=[beadarray Biobase BiocGenerics ]; };
blkergm = derive { name="blkergm"; version="1.1"; type="cran"; sha256="0giknhcl14b4djn5k5v5n33b7bc3f8x6lx2h4jr25kpd89aynhq5"; depends=[network ergm statnet_common ergm ]; };
blm = derive { name="blm"; version="2013.2.4.4"; type="cran"; sha256="1w6c30cq38j4i1q4hjg12l70mhy5viw886l1lsnxyvniy113in4i"; depends=[ ]; };
blme = derive { name="blme"; version="1.0-2"; type="cran"; sha256="11m98j9xr6w0hfcss4bbx2aa34gnc5p9if9r8ilw9ify18by77np"; depends=[lme4 ]; };
blmeco = derive { name="blmeco"; version="1.0"; type="cran"; sha256="0shhyvqq88i0nr6wdf78rlqk4c91jv26nrb19jcjcw2wxv1mnazq"; depends=[MASS MuMIn arm lme4 ]; };
blockTools = derive { name="blockTools"; version="0.6-2"; type="cran"; sha256="0h04179ybklwbs69rg73p5h09fi3vzagh845r00ivw4iv18anq40"; depends=[MASS ]; };
blockcluster = derive { name="blockcluster"; version="3.0.2"; type="cran"; sha256="1qd92lj3ckrj7cvl9zs85igb0974wy5s4zwdnvfyvrsi2bqi3qp8"; depends=[Rcpp Rcpp RcppEigen ]; };
blockmatrix = derive { name="blockmatrix"; version="1.0"; type="cran"; sha256="14k69ly4i8pb8z59005kaf5rpv611kk1mk96q6piyn1gz1s6sk6r"; depends=[ ]; };
blockmodeling = derive { name="blockmodeling"; version="0.1.8"; type="cran"; sha256="0x71w1kysj9x6v6vsirq0nndsf6f3wzkf8pbsq3x68sf4cdji1xl"; depends=[ ]; };
blockmodels = derive { name="blockmodels"; version="1.1.1"; type="cran"; sha256="088629i4g63m8rnqmrv50dgpqbnxd1a4zl5wr3ga0pdpqhmd53wp"; depends=[Rcpp digest Rcpp RcppArmadillo ]; };
blockrand = derive { name="blockrand"; version="1.3"; type="cran"; sha256="1090vb26w6s7iqjcal0xbb3qb6p6j46a5w25f1wjdppd1spvh7f9"; depends=[ ]; };
blocksdesign = derive { name="blocksdesign"; version="1.6"; type="cran"; sha256="1d188c1lyf5zvdffcw3w7imzjxxmr7nmr29zj9z1b64p1ddrryh4"; depends=[crossdes ]; };
blowtorch = derive { name="blowtorch"; version="1.0.2"; type="cran"; sha256="0ymhkzfdrfcsq2qc5hbn9i0p58xqf90vwd46960cszxacyzzcnrb"; depends=[ggplot2 foreach iterators ]; };
blsAPI = derive { name="blsAPI"; version="0.1.1"; type="cran"; sha256="1d9mzhhr9yrx1kca6mzrq3gqqismv2q5wf1zx76srqvpaja2wszq"; depends=[rjson RCurl ]; };
bmd = derive { name="bmd"; version="0.5"; type="cran"; sha256="0d4wxyymycb416sdn272292l70s1h2m5kv568vakx3rbvb8y6agy"; depends=[drc ]; };
bmem = derive { name="bmem"; version="1.5"; type="cran"; sha256="1miiki743rraralk9dp12dsjjajj3iizcrfwmplf6xas6pl8sfk6"; depends=[Amelia MASS lavaan sem snowfall ]; };
bmk = derive { name="bmk"; version="1.0"; type="cran"; sha256="1wxkrlrhmsxsiraj8nyiax9bqs834ln2swykmpf40wxspkykgfdq"; depends=[coda plyr functional ]; };
bmmix = derive { name="bmmix"; version="0.1-2"; type="cran"; sha256="00php2pgpnm9n0mnamchi6a3dgaa97kdz2ynivrf38s0vca7fqx8"; depends=[ggplot2 reshape2 ]; };
bmp = derive { name="bmp"; version="0.2"; type="cran"; sha256="059ps1sy02b22xs138ba99fkxq92vzgfbyf2z5pyxwzszahgy869"; depends=[ ]; };
bmrm = derive { name="bmrm"; version="3.0"; type="cran"; sha256="0ix5hfsvs2vnca0l1aflynddw6z85cqdyxn0y7xynkkapk182g4p"; depends=[lpSolve LowRankQP ]; };
bnlearn = derive { name="bnlearn"; version="3.8.1"; type="cran"; sha256="07lh67nw7wpjimim44zpw8h1rq4yqa2sdjcwj95bmyc25hlzv1s1"; depends=[ ]; };
bnormnlr = derive { name="bnormnlr"; version="1.0"; type="cran"; sha256="0l2r7vqikak47nr6spdzgjzhvmkr9dc61lfnxybmajvcyy6ymqs9"; depends=[mvtnorm numDeriv ]; };
bnpmr = derive { name="bnpmr"; version="1.1"; type="cran"; sha256="0hvwkdbs2p2l0iw0425nca614qy3gsqfq4mifipy98yxxvgh8qgc"; depends=[ ]; };
boa = derive { name="boa"; version="1.1.7-2"; type="cran"; sha256="1n7i0i8jq2sa1kzhbgyqzl9d53wja7fsxd7rligc8xjm0sdsb386"; depends=[ ]; };
boilerpipeR = derive { name="boilerpipeR"; version="1.3"; type="cran"; sha256="0467bjqhdmi3p02fp0r7rgm00x9ry464f2hniav990qzsw8i16q6"; depends=[rJava ]; };
bold = derive { name="bold"; version="0.2.6"; type="cran"; sha256="15hnbspp5s293v2jykmirf9rvdgpkd71h431gizz71ssayanzp67"; depends=[XML httr stringr assertthat jsonlite reshape plyr ]; };
boolean3 = derive { name="boolean3"; version="3.1.6"; type="cran"; sha256="00s6ljhqy8gpwa3kxfnm500r528iml53q364bjcl4dli2x85wa9p"; depends=[optimx numDeriv lattice rgenoud mvtnorm rlecuyer ]; };
boostSeq = derive { name="boostSeq"; version="1.0"; type="cran"; sha256="0sikyzhn1i6f6n7jnk1kb82j0x72rj8g5cimp2qx3fxz33i0asx6"; depends=[genetics lpSolveAPI ]; };
boostr = derive { name="boostr"; version="1.0.0"; type="cran"; sha256="123ag8m042i1dhd4i5pqayqxbkfdj4z0kq2fyhxfy92a7550gib2"; depends=[foreach iterators stringr ]; };
boot = derive { name="boot"; version="1.3-15"; type="cran"; sha256="0pyznvhbb8237nqab6ylmis73q0s3fgmf65fmh0rr3ryljvzp6sq"; depends=[ ]; };
bootES = derive { name="bootES"; version="1.01"; type="cran"; sha256="00y901d5cjdpzras5w6mv851h5zgp36m5ib6dazs4vqrfpqymva8"; depends=[boot ]; };
bootLR = derive { name="bootLR"; version="0.9"; type="cran"; sha256="0p4hq8nfdd8jw8r8dmlb6va4g7jjnkbsah69hissa9lqawbj9pi7"; depends=[boot ]; };
bootRes = derive { name="bootRes"; version="1.2.3"; type="cran"; sha256="0bb7w6wyp9wjrrdcyd3wh44f5sgdj07p5sz5anhdnm97rn1ib6dz"; depends=[ ]; };
bootSVD = derive { name="bootSVD"; version="0.2"; type="cran"; sha256="1b31gxlbysng5ysa18mzlp3vlc9jhn51hia0z1j9g47wi0r0f274"; depends=[ff ]; };
bootStepAIC = derive { name="bootStepAIC"; version="1.2-0"; type="cran"; sha256="0p6v4zjsaj1p6c678010fazdh40lpv0rvhczd1halj8aic98avdx"; depends=[MASS ]; };
bootnet = derive { name="bootnet"; version="0.1"; type="cran"; sha256="18bx0za81z8za0hswj1qwl7a721xbvfpjz0hsih7glf6n5hn0cyp"; depends=[ggplot2 IsingFit qgraph dplyr gtools corpcor ]; };
bootruin = derive { name="bootruin"; version="1.2-1"; type="cran"; sha256="1ii1fcj8sn9x82w23yfzxkgngrgsncnyrik4gcqn6kv7sl58f4r3"; depends=[ ]; };
bootsPLS = derive { name="bootsPLS"; version="1.0.2"; type="cran"; sha256="1d2jn3c74d31rp37qpr8j4rviwg1gmkqppx5pyw0mm37vdajffri"; depends=[mixOmics ]; };
bootspecdens = derive { name="bootspecdens"; version="3.0"; type="cran"; sha256="0hnxhfsc3ac4153lrjlxan8xi4sg1glwb5947ps6pkkyhixm0kc1"; depends=[MASS ]; };
bootstrap = derive { name="bootstrap"; version="2015.2"; type="cran"; sha256="1h068az4sz49ysb0wcas1hfj7jkn13zdmk087scqj5iyqzr459xf"; depends=[ ]; };
boottol = derive { name="boottol"; version="2.0"; type="cran"; sha256="01dps9rifzrlfm4lvi7w99phfi87b7khx940kpsr4m9s168a2dzv"; depends=[boot plyr ]; };
boral = derive { name="boral"; version="0.6"; type="cran"; sha256="0ldd5slj90xsch498brll6sjbl6j8fb6a28vfciykr2364mgmahp"; depends=[coda R2jags mvtnorm fishMod MASS ]; };
boss = derive { name="boss"; version="2.1"; type="cran"; sha256="1knsnf19b1xvvq20pjiv56anbnk0d51aq6z3ikhi8y92ijkzh0y8"; depends=[lme4 geepack Matrix ncdf ]; };
boussinesq = derive { name="boussinesq"; version="1.0.3"; type="cran"; sha256="1j1jarc3j5rby1wvj1raj779c1ka5w68z7v3q8xhzjcaccrjhzxk"; depends=[ ]; };
boxplotdbl = derive { name="boxplotdbl"; version="1.2.2"; type="cran"; sha256="01bvp6vjnlhc4lndxwd705bzlsh7zq0i9v66mxszrcz6v8hb9rwi"; depends=[ ]; };
boxr = derive { name="boxr"; version="0.2.5"; type="cran"; sha256="03lxdhjajjdpf58c50j1dn4i4bqy8s7h5xgr6m87r7g1v91x23y4"; depends=[httr httpuv assertthat stringr dplyr digest jsonlite ]; };
bpca = derive { name="bpca"; version="1.2-2"; type="cran"; sha256="05ldz6b2s379mymj8jzvia9x6gj047gwsxvnv3zj9x8b1hvndnd6"; depends=[scatterplot3d rgl ]; };
bpcp = derive { name="bpcp"; version="1.2.4"; type="cran"; sha256="06q8zkf7z31ax3pb2xmww3l3axcmhvmgrfri1aikhi7ifgcfc979"; depends=[ ]; };
bpkde = derive { name="bpkde"; version="1.0-7"; type="cran"; sha256="1ls6rwmbgb2vzsjn34r87ab8rnz3ls61g6f4x3jpglbk0j91f0h8"; depends=[ ]; };
bqtl = derive { name="bqtl"; version="1.0-30"; type="cran"; sha256="1v1p3wvqm5hmwpnjqaz8vlpzm036gpzpxsvy7m0v4x7nc5vrq7g6"; depends=[ ]; };
brainR = derive { name="brainR"; version="1.2"; type="cran"; sha256="1515v6kk73p4s3vrnkpkilfxfyqrf7b762sq6j364ygsyfybvh2z"; depends=[rgl misc3d oro_nifti ]; };
brainwaver = derive { name="brainwaver"; version="1.6"; type="cran"; sha256="0r79dpd9bbbn34rm29512srzj3m29qgvbryvrp1mwv8mmcsh6ij6"; depends=[waveslim ]; };
branchLars = derive { name="branchLars"; version="1.0"; type="cran"; sha256="1adk9j77ynv7y8q04nvb468ik4nq4ff3j2nbxw596kgg5bg1ymz0"; depends=[lars Rgraphviz ]; };
breakage = derive { name="breakage"; version="1.1-1"; type="cran"; sha256="0zjazyz92criiimpz4wyd4hd8ccspvh3hhqpd4qkfdzdf9wp3kns"; depends=[Imap ]; };
breakaway = derive { name="breakaway"; version="1.0"; type="cran"; sha256="1agigb3b2ff1p9lx9ndz4hs1sgyv1g2zjb41l5p23370i5gk1nbn"; depends=[ ]; };
breakpoint = derive { name="breakpoint"; version="1.1"; type="cran"; sha256="07k5d1jn5ahhml2q9ynpmwjm2ckyrr63qj7svh2ziyb41f5v7mfw"; depends=[ggplot2 MASS msm foreach doParallel ]; };
brew = derive { name="brew"; version="1.0-6"; type="cran"; sha256="1vghazbcha8gvkwwcdagjvzx6yl8zm7kgr0i9wxr4jng06d1l3fp"; depends=[ ]; };
brewdata = derive { name="brewdata"; version="0.4"; type="cran"; sha256="1i8i3yhyph212m6jjsij61hz65a5rplxw8y2xqf6daqiisam5q6i"; depends=[RCurl XML stringdist ]; };
brglm = derive { name="brglm"; version="0.5-9"; type="cran"; sha256="14hxjamxyd0npak8wyfmmb17qclj5f86wz2y9qq3gbyi2s1bqw2v"; depends=[profileModel ]; };
bride = derive { name="bride"; version="1.3"; type="cran"; sha256="03k9jwklg1l8sqyjfh914570880ii0qb5dd9l0bg0d0qrghbj0rk"; depends=[ ]; };
bridge = derive { name="bridge"; version="1.30.0"; type="bioc"; sha256="1dr2hdip01k3j47vl12w7m4c21b3s8sljjq8pibplcgawx1b848g"; depends=[rama ]; };
brms = derive { name="brms"; version="0.1.0"; type="cran"; sha256="0cx01d65vwsrxlhvxwwlaviz1lvxhl0hd8qw0bna99w8ypsqfp3i"; depends=[ggplot2 Rcpp coda ggmcmc gridExtra ]; };
brnn = derive { name="brnn"; version="0.5"; type="cran"; sha256="0kf2fdgshk8i3jlxjfgpdfq08kzlz3k9s7rdp4bg4lg3khmah9d1"; depends=[Formula ]; };
broman = derive { name="broman"; version="0.55-2"; type="cran"; sha256="04pg362gmxg5lvrv333mjq06lv0q3a1mq6wrbmy87jch6f10lazi"; depends=[assertthat RPushbullet jsonlite ggplot2 ]; };
broom = derive { name="broom"; version="0.3.7"; type="cran"; sha256="00z4kwxdqp6g35g4x6js9rc96z8i40hzgvhf5frj9dwfpxclk145"; depends=[plyr dplyr tidyr psych stringr ]; };
bshazard = derive { name="bshazard"; version="1.0"; type="cran"; sha256="151c63pyapddc4z77bgkhmd7rsa1jl47x8s2n2s8yc6alwmj6dvs"; depends=[survival Epi ]; };
bspec = derive { name="bspec"; version="1.5"; type="cran"; sha256="0jynvir7z4q1vrvhdn6wijdrjfrkk4544nlawabw2fnfxss91a91"; depends=[ ]; };
bspmma = derive { name="bspmma"; version="0.1-1"; type="cran"; sha256="0bd6221rrbxjvabf1lqr9nl9s0qwav47gc56sxdw32pd99j9x5a9"; depends=[ ]; };
bsseq = derive { name="bsseq"; version="1.2.0"; type="bioc"; sha256="10vjm9gycr62qq8bh6widjikf4fjcjvgn0y254i6rncq9la7ihvi"; depends=[BiocGenerics IRanges GenomicRanges matrixStats scales Biobase locfit ]; };
bst = derive { name="bst"; version="0.3-4"; type="cran"; sha256="1s7qv2q9mcgg1c5mhblqg3nk9hary4pq6z0xgi3a6rs1929mgdyf"; depends=[rpart gbm ]; };
bsts = derive { name="bsts"; version="0.6.1"; type="cran"; sha256="0hs2inbwwpafpcr6y51qnmxms121z8cy8mil6acjfhrfc27f1msd"; depends=[BoomSpikeSlab zoo xts Boom Boom BH ]; };
btf = derive { name="btf"; version="1.1"; type="cran"; sha256="0n1h4hmjpvj97mpvannh3s5l08m4zfv0w64hrgdv4s5808miwfzc"; depends=[Matrix coda Rcpp RcppEigen ]; };
bujar = derive { name="bujar"; version="0.1-4"; type="cran"; sha256="0v48mkg78sy91z1z4xvy2r3xmay74615kzqxjqlclkk20999z56m"; depends=[mda ncvreg mboost gbm earth elasticnet rms ]; };
bumphunter = derive { name="bumphunter"; version="1.6.0"; type="bioc"; sha256="115fs6ndzdxfdiqm4lv93b4ym4wh1r2xbfg3vg9i87p0ma59ns7q"; depends=[S4Vectors IRanges GenomeInfoDb GenomicRanges foreach iterators locfit matrixStats limma doRNG BiocGenerics ]; };
bursts = derive { name="bursts"; version="1.0-1"; type="cran"; sha256="172g09d1vmwl83xs6gr4gfblqmx3apvblpzdr5d7fcw1ybsx0kj6"; depends=[ ]; };
bvarsv = derive { name="bvarsv"; version="1.0"; type="cran"; sha256="0ak4nsrcvhkg0145ax5ib9ljb5yc63zzfxlgvdbrdr4mlri4gsid"; depends=[Rcpp Rcpp RcppArmadillo ]; };
bvenn = derive { name="bvenn"; version="0.1"; type="cran"; sha256="1xrya49w5bd2b7plfxpqla60b2828rkm0rjmc4qnqzvrahsbal0y"; depends=[ ]; };
bvls = derive { name="bvls"; version="1.4"; type="cran"; sha256="18aaf7kk5mks3a59wwqhm1ckpn6s704l9m5nzy0x5iw0s98ijbm2"; depends=[ ]; };
bvpSolve = derive { name="bvpSolve"; version="1.2.4"; type="cran"; sha256="1ss25md3q59cm40rxw29x9421xjc7gd964hx9xwvx4h8dis34rgd"; depends=[rootSolve deSolve ]; };
c060 = derive { name="c060"; version="0.2-4"; type="cran"; sha256="1yzy0p6041rygqfwzb8dpyc7jq12javmhlvdcmmc7p59bbk7wv3j"; depends=[glmnet survival mlegp tgp peperr penalizedSVM lattice ]; };
c3net = derive { name="c3net"; version="1.1.1"; type="cran"; sha256="0m4nvrs41kmlakc6m203zlncqwgj94wns8kzcb31xngjcacmcq42"; depends=[igraph ]; };
cAIC4 = derive { name="cAIC4"; version="0.2"; type="cran"; sha256="13sp3wywv82wgi1vsbxwn68v9xigy0fi3mcwyxjmmgmnsxns2fza"; depends=[lme4 Matrix ]; };
cOde = derive { name="cOde"; version="0.1"; type="cran"; sha256="1cjp63lya2r82fgjwz8mnzs50x7hyzg87dkm006m76xs1iyv988i"; depends=[ ]; };
cSFM = derive { name="cSFM"; version="1.1"; type="cran"; sha256="1znxsqa8xdifmryg7jiqbpzm837n4n862kg5x1aki52crc4zyk3k"; depends=[sn mgcv mnormt MASS moments ]; };
ca = derive { name="ca"; version="0.58"; type="cran"; sha256="10dp261sq56ixrrr8qq4filxpzszcinz5qv50g40dan0k75n7isb"; depends=[ ]; };
caTools = derive { name="caTools"; version="1.17.1"; type="cran"; sha256="1x4szsn2qmbzpyjfdaiz2q7jwhap2gky9wq0riah74q0pzz76ank"; depends=[bitops ]; };
cabootcrs = derive { name="cabootcrs"; version="1.0"; type="cran"; sha256="0a6y04jq837k1pk8b9nhgz7rima7s8jid6vdjyfvrqshgaiabg1q"; depends=[ ]; };
cacIRT = derive { name="cacIRT"; version="1.3"; type="cran"; sha256="1qd9qw47d9dmxhnva3ik62q5rfcw0pd1ha1y689345nl05wysjkh"; depends=[ ]; };
cairoDevice = derive { name="cairoDevice"; version="2.22"; type="cran"; sha256="0j1fsfjzaz0mz6v33v8n2dcbskpafm3mhi5v85phpk3x4s2y84al"; depends=[ ]; };
calibrate = derive { name="calibrate"; version="1.7.2"; type="cran"; sha256="010nb1nb9y7zhw2k6d2i2drwy5brp7b83mjj2w7i3wjp9xb6l1kq"; depends=[MASS ]; };
calibrator = derive { name="calibrator"; version="1.2-6"; type="cran"; sha256="1arprrqmczbhc1gl85fh37cwpcky8vvqdh6zfza3hy21pn21i4kh"; depends=[emulator cubature ]; };
calmate = derive { name="calmate"; version="0.12.0"; type="cran"; sha256="1jd1ag1v10bpgkqpf5134av0yc7xph1679q40y541kyr59df0lxw"; depends=[R_utils aroma_core MASS R_methodsS3 R_oo matrixStats R_filesets ]; };
camel = derive { name="camel"; version="0.2.0"; type="cran"; sha256="0krilird8j69zbll96k46pcys4gfkcnkisww138wslwbicl52334"; depends=[lattice igraph MASS Matrix ]; };
cancerTiming = derive { name="cancerTiming"; version="3.0.0"; type="cran"; sha256="1sc5mz2gnrzvkc9kfnspq9vddk48a0a99yyywkwy1vvj0q2dgmyn"; depends=[LearnBayes gplots ]; };
cancerclass = derive { name="cancerclass"; version="1.10.0"; type="bioc"; sha256="0fc8ia12lkgz38bn13j4zknwrknrzlpfbc7j04z48z5996hjny8i"; depends=[Biobase binom ]; };
candisc = derive { name="candisc"; version="0.6-7"; type="cran"; sha256="1g2vypcniy94h462kylmzraa6q3ys9m0r1cn21dm8rzzjxid9g3g"; depends=[car heplots ]; };
cape = derive { name="cape"; version="1.3"; type="cran"; sha256="1qvjbnxydc16mflg1rmgp2kgljcna8vi88w34cs6k12wpgxmvz1f"; depends=[corpcor evd qpcR Matrix igraph fdrtool shape ]; };
caper = derive { name="caper"; version="0.5.2"; type="cran"; sha256="1l773sxmh1nyxlrjz8brnwhwraff826scwixrqmgdciqk7046d35"; depends=[ape MASS mvtnorm ]; };
capm = derive { name="capm"; version="0.8.0"; type="cran"; sha256="1vz17x0v5cjs5kdqkbay08f91kclsx4rcli5vgh9yxlk4ih9w4dd"; depends=[deSolve FME survey ggplot2 reshape2 shiny rgdal maptools sp ]; };
capushe = derive { name="capushe"; version="1.0"; type="cran"; sha256="0dwxaiqnz0qbsk4icjapklaa9bpjfl4gqvk1f92livy97jmf1r44"; depends=[MASS ]; };
capwire = derive { name="capwire"; version="1.1.4"; type="cran"; sha256="18a3dnbgr55yjdk6pd7agmb48lsiqjpd7fm64dr1si6rpgpl4i9c"; depends=[ ]; };
car = derive { name="car"; version="2.0-25"; type="cran"; sha256="1h7fndsypg9jqfc4xlr8aszjgs477jsvvw4lkpgjxrlb4j779yyj"; depends=[MASS mgcv nnet pbkrtest quantreg ]; };
carcass = derive { name="carcass"; version="1.4"; type="cran"; sha256="16apmiackw194p5n0fivkgd2ymca9bfajasypl82xqyfk6amh088"; depends=[lme4 survival expm arm MASS ]; };
cardidates = derive { name="cardidates"; version="0.4.6"; type="cran"; sha256="02ib56fvn2z63sbinhwnlw123y86h6xazbkzw68sa9klqaxv69yl"; depends=[boot pastecs lattice ]; };
care = derive { name="care"; version="1.1.8"; type="cran"; sha256="0r1j2q23rz54rcx528n53m3hmhvb8ndqjpmmzm6j1y6lmixpqh41"; depends=[corpcor ]; };
caret = derive { name="caret"; version="6.0-47"; type="cran"; sha256="0mpmch0435gcszj5yq4p7jpq7y9q8jk1bz3i1c9ij7a73kq2368i"; depends=[lattice ggplot2 car reshape2 foreach plyr nlme BradleyTerry2 ]; };
caretEnsemble = derive { name="caretEnsemble"; version="1.0.0"; type="cran"; sha256="16qibyx034gi06rs8wnazfdicvrwpdsys3mvgwmb35qgzldqfizy"; depends=[caret caTools pbapply ggplot2 digest plyr lattice gridExtra ]; };
caribou = derive { name="caribou"; version="1.1"; type="cran"; sha256="0ibl3jhvsgjfcva0113z0di9n5n30bs90yz0scckfv1c0pjhn4xd"; depends=[ ]; };
caroline = derive { name="caroline"; version="0.7.6"; type="cran"; sha256="1afxxbrd7w628l4pxdmvwbs7mbgxlhnfq3nxk2s93w47gn7r9fp7"; depends=[ ]; };
caschrono = derive { name="caschrono"; version="1.4"; type="cran"; sha256="1l9hmsacynh73kh14jrp7a42385v78znn9ll1jchzgkyz2x4dibw"; depends=[forecast Hmisc its timeSeries ]; };
caseMatch = derive { name="caseMatch"; version="1.0.1"; type="cran"; sha256="0r8z0dfhaqc5wmcrd1mgq1bn71h41fhk5q3ihffg0s9qsix4pk7j"; depends=[ ]; };
casper = derive { name="casper"; version="2.0.2"; type="bioc"; sha256="1x2gmrjgf29l47ss8claarrhhkn6cyi9833z6sg5q69ndmsij957"; depends=[Biobase IRanges GenomicRanges BiocGenerics EBarrays gaga gtools GenomeInfoDb GenomicFeatures limma mgcv Rsamtools rtracklayer S4Vectors sqldf survival VGAM ]; };
cat = derive { name="cat"; version="0.0-6.5"; type="cran"; sha256="1gv7chqp6kccipkrxjwhsa7yizizsmk4pj8672rgjmpfcc64pqfm"; depends=[ ]; };
catIrt = derive { name="catIrt"; version="0.5-0"; type="cran"; sha256="09010z1q96nbnpys6mybspaqy57lvgd2cvwgnfijzgx3kl87pwnl"; depends=[numDeriv ]; };
catR = derive { name="catR"; version="3.4"; type="cran"; sha256="0rgzcnqp18wb8m7f3m8mm7pv04a1irlknkrsrr4hhnzs0phf06yz"; depends=[ ]; };
catdata = derive { name="catdata"; version="1.2.1"; type="cran"; sha256="0fjylb55iw8w9sd3hbg895pzasliy68wcq95mgrh7af116ss637w"; depends=[MASS ]; };
categoryCompare = derive { name="categoryCompare"; version="1.10.0"; type="bioc"; sha256="0mj9iipq9alf3cz0wfngsj5lfdjm0zj109l8jdhcqqfhgrf51rd1"; depends=[Biobase BiocGenerics AnnotationDbi hwriter GSEABase Category GOstats annotate colorspace graph RCytoscape ]; };
catenary = derive { name="catenary"; version="1.1"; type="cran"; sha256="0khdk61fh8ngr70qf9i2655h5nblj98r8zl724ljv1cjb5x1vphv"; depends=[ggplot2 boot ]; };
cati = derive { name="cati"; version="0.96"; type="cran"; sha256="07vvhar1skcmx0sqkp4bcrrlmb88llqpgg4vmdi4nqhw48kjyjqn"; depends=[nlme ade4 ape e1071 mice rasterVis hypervolume FD geometry vegan ]; };
catnet = derive { name="catnet"; version="1.14.8"; type="cran"; sha256="03y7ddjyra3cjq7savdgickmw82ncx4k01rn752sks6rpl6bjslc"; depends=[ ]; };
catspec = derive { name="catspec"; version="0.97"; type="cran"; sha256="1crry0vg2ijahkq9msbkqknljx6vnx2m88bmy34p9vb170g9dbs1"; depends=[ ]; };
causaleffect = derive { name="causaleffect"; version="1.1.1"; type="cran"; sha256="1rsn3zfi24vv1s03ki0aghw4kjls95dr25473fpbmsrmm8n48cqi"; depends=[ggm igraph XML ]; };
causalsens = derive { name="causalsens"; version="0.1"; type="cran"; sha256="1v72zjplsa073f92qdza1zvwa1fwxlpmh8f6w5z8qcyiwqcbmifr"; depends=[ ]; };
cba = derive { name="cba"; version="0.2-14"; type="cran"; sha256="067rm1rfz0rrq8xkzibd81pwvc9rx7ki46bncim4j5ra6i9pn24n"; depends=[proxy ]; };
ccChooser = derive { name="ccChooser"; version="0.2.6"; type="cran"; sha256="1vgp4zhg46hcf9ma2cmwgnfrqkmq1arh0ahyzjpfk3817vh7disc"; depends=[cluster ]; };
ccaPP = derive { name="ccaPP"; version="0.3.0"; type="cran"; sha256="1wj5yij02372xarhvxsnh43v0l6xb2p8rflmskw6x86vpcdqd6zw"; depends=[Rcpp pcaPP robustbase RcppArmadillo Rcpp RcppArmadillo ]; };
cccd = derive { name="cccd"; version="1.04"; type="cran"; sha256="0mhqv9hzvw3w6wp23kvw4py54ij6x9r19b87i97wwgqr5rhhh1f3"; depends=[igraph plotrix proxy ]; };
cccp = derive { name="cccp"; version="0.2-4"; type="cran"; sha256="1hw0xzfdycrnhkym5va430jk1b9ywf7wbm9qyj4a62n210hk4nzc"; depends=[Rcpp Rcpp RcppArmadillo ]; };
cccrm = derive { name="cccrm"; version="1.1"; type="cran"; sha256="0q7vxzj3lblz5ddgzm8z99k0b0z194963hx96bbkqm4rv705dgb0"; depends=[nlme gdata ]; };
ccda = derive { name="ccda"; version="1.1"; type="cran"; sha256="0ya9x1b41l0pjyyfdswjyip0c2v8z7gncbj7cdz0486ad75229x7"; depends=[MASS ]; };
ccgarch = derive { name="ccgarch"; version="0.2.3"; type="cran"; sha256="0angffla3sk9i86v6bbsav95fp3mz5yvq7qfv0fx2v0nd2cx116w"; depends=[ ]; };
cchs = derive { name="cchs"; version="0.1.0"; type="cran"; sha256="1x6pzwjdcklkbgr1yalijrcj3g56hj6085fh4pzqbm7xkqcj1mi6"; depends=[survival ]; };
cclust = derive { name="cclust"; version="0.6-19"; type="cran"; sha256="11lzzpr65jw7s0419bdy3w7cq97ysvv52ijb1wgqpa48wh1qbqqd"; depends=[ ]; };
ccrepe = derive { name="ccrepe"; version="1.2.0"; type="bioc"; sha256="1yj91dm43jkfc757y5izqp72lsw39n0pmg9hhpkmlhd5ddyp5ly8"; depends=[infotheo ]; };
cda = derive { name="cda"; version="1.5.1"; type="cran"; sha256="09a2jb25219hq6if3bx03lsp94rp2ll9g73dhkdi665y7rlhgqwh"; depends=[dielectric Rcpp statmod randtoolbox reshape2 plyr Rcpp RcppArmadillo ]; };
cdb = derive { name="cdb"; version="0.0.1"; type="cran"; sha256="1rdb4lacjcw67apdyiv7cl1xvv9d1mrzck1qk605n6794k7wf2ys"; depends=[bitops ]; };
cdcsis = derive { name="cdcsis"; version="1.0"; type="cran"; sha256="1fxdsaqpjhpffn2fxddfcrx8wxwyvfws6rxkpp57g25980xiyzkd"; depends=[ks ]; };
cds = derive { name="cds"; version="1.0.1"; type="cran"; sha256="1vw8ghvwsrpsq89yc4vjyfcw2wsz9dhqv1nlaqmv9b4wqm8gsb5h"; depends=[MASS limSolve clue colorspace copula ]; };
cec2005benchmark = derive { name="cec2005benchmark"; version="1.0.4"; type="cran"; sha256="0bwv63l31hiy63372nvnyfkpqp61cqjag0gczd2v2iwsy3hyivpd"; depends=[ ]; };
cec2013 = derive { name="cec2013"; version="0.1-5"; type="cran"; sha256="07i2vp1x3qaw5di5vr5z70d47hh9174pjckjlhgv0f2w97slwc1i"; depends=[ ]; };
celestial = derive { name="celestial"; version="1.2"; type="cran"; sha256="1bwxr37vkgxavl230jmvk1yp3acnkcpc8im10fsxh1nfxys254ap"; depends=[ ]; };
cellGrowth = derive { name="cellGrowth"; version="1.10.0"; type="bioc"; sha256="0fqzzz06b6sy5xz4cf7i16m07qk3l42k9hbkr7qggpj6y81f0n96"; depends=[locfit lattice ]; };
cellHTS = derive { name="cellHTS"; version="1.36.0"; type="bioc"; sha256="1d887wqfn25vh88srxpbbs0z4p2xkxwc3l7d8280j1hg5w1q0nxg"; depends=[prada RColorBrewer Biobase genefilter ]; };
cellHTS2 = derive { name="cellHTS2"; version="2.30.0"; type="bioc"; sha256="0an4z1czl5ai7rm4dbrrxay0z9yfi2v7c033982mzbnnvwa2kcy7"; depends=[RColorBrewer Biobase genefilter splots vsn hwriter locfit prada GSEABase Category ]; };
cellVolumeDist = derive { name="cellVolumeDist"; version="1.3"; type="cran"; sha256="00hq3nbfbnmg2lhrqd0glkh5ld50fv54ll3q6v875d1lgs44sln1"; depends=[minpack_lm gplots ]; };
cellranger = derive { name="cellranger"; version="0.1.0"; type="cran"; sha256="1nfvh0bd99q7cili0hj6ifcg8r57fxv5k4634b7vkshy5rbc5fw1"; depends=[ ]; };
cem = derive { name="cem"; version="1.1.10"; type="cran"; sha256="0lykr7sksii30nk4z8pvn4bdmvhm5952grrsvb63qblazg3b84qc"; depends=[nlme lattice randomForest combinat ]; };
censNID = derive { name="censNID"; version="0-0-1"; type="cran"; sha256="1ij5ci6nkqf0rq51vyh4jw5sr3y46yndfkjmwl78ppdj66axxir5"; depends=[ ]; };
censReg = derive { name="censReg"; version="0.5-20"; type="cran"; sha256="15k7iq4275dyah3r47vgxsx6g6mr7ma53lkv6d1n89bczzys72kx"; depends=[maxLik glmmML sandwich miscTools ]; };
cents = derive { name="cents"; version="0.1-41"; type="cran"; sha256="03ycbd0c8b7danbblaixg6sm7msr9ixkanqswczqa8n2frhjfgj0"; depends=[ ]; };
cepp = derive { name="cepp"; version="1.0"; type="cran"; sha256="0lw3qr0vp0qbg2b62abhi1ady1dwig68m4nzqnjnk3lqxzp0fs8f"; depends=[trust randtoolbox ]; };
cfa = derive { name="cfa"; version="0.9-3"; type="cran"; sha256="0pl1mxv6jxn3mvlh75gr8as0daklyr7gkh37fcgmn2bwi973sspy"; depends=[ ]; };
cg = derive { name="cg"; version="1.0-2"; type="cran"; sha256="1rgbk4kvjaw4mbqa19hbnhlinqd4bw4fn2znlxr8wfhzj6648cl3"; depends=[Hmisc VGAM MASS lattice survival multcomp nlme ]; };
cgAUC = derive { name="cgAUC"; version="1.2.1"; type="cran"; sha256="172f9rkfhv4xzwpw8izsnsdbcw9p3hvxhh0fd8hzlkil7vskr3k8"; depends=[Rcpp Rcpp ]; };
cgam = derive { name="cgam"; version="1.2"; type="cran"; sha256="14vl608bf223jclaxfb6i7irfn9g2dqp76fhw82j4h7w4l47i1c3"; depends=[coneproj ]; };
cgdsr = derive { name="cgdsr"; version="1.1.33"; type="cran"; sha256="0y8cn386jifg2ilml0cp9cafjxaa0xkvjnja1fgarlyf07k3cpcs"; depends=[R_oo R_methodsS3 ]; };
cggd = derive { name="cggd"; version="0.8"; type="cran"; sha256="06z0mrxxc02parn9vkjv89qq4yqmsccsy319fi6c5iarssyvin1r"; depends=[ ]; };
cgh = derive { name="cgh"; version="1.0-7.1"; type="cran"; sha256="1fgjz43bgnswlyvrm669x697lybq3jyzz4l8ppgxqwxp4p4d2yqn"; depends=[ ]; };
cghFLasso = derive { name="cghFLasso"; version="0.2-1"; type="cran"; sha256="0b1hnjf9g0v47hbz0dy9m6jhcl1ky20yyhhmm8myng2sndcpjsbf"; depends=[ ]; };
cghMCR = derive { name="cghMCR"; version="1.24.0"; type="bioc"; sha256="1nfb7p7l700nzx4gvmj4n2575d4hj5rm8khf77yim8pqndnr2rg8"; depends=[DNAcopy CNTools limma BiocGenerics ]; };
cghseg = derive { name="cghseg"; version="1.0.2"; type="cran"; sha256="1x7j62aq5c1xj8ss3pys5160y6vny4pa1wvf6xh59ak2zr4xjm9h"; depends=[ ]; };
changepoint = derive { name="changepoint"; version="1.1.5"; type="cran"; sha256="090rak3ydlh92w0mpp2sjjx4m9x33clcs77waj20gzxbq38mqdci"; depends=[zoo ]; };
charm = derive { name="charm"; version="2.12.0"; type="bioc"; sha256="0pf2qfxydjm9gqy20rskawg04cjmf93013736s5hvq576pa8qw39"; depends=[Biobase SQN fields RColorBrewer genefilter BSgenome Biobase oligo oligoClasses ff preprocessCore Biostrings IRanges siggenes nor1mix gtools limma sva ]; };
cheb = derive { name="cheb"; version="0.3"; type="cran"; sha256="0vqkdx7i40w493vr7xywjypr398rjzdk5g410m1yi95cy1nk4mc7"; depends=[ ]; };
chebpol = derive { name="chebpol"; version="1.3-1367"; type="cran"; sha256="0w1yfnag0sjqjn7g5yn3wd19kkwzcchb491335h70rm360m1kr0y"; depends=[ ]; };
checkmate = derive { name="checkmate"; version="1.5.3"; type="cran"; sha256="1d9szbszql0nz1zxplsr0w9f1c9vi11mjr5xg5960slb5v086x0g"; depends=[ ]; };
checkpoint = derive { name="checkpoint"; version="0.3.10"; type="cran"; sha256="147phhsv5g8k23fd355jqjqpjjj8n3s0bblm8mv5c3d0322li7ac"; depends=[ ]; };
cheddar = derive { name="cheddar"; version="0.1-629"; type="cran"; sha256="13fmr37jj7dky5jrpr20z1iai9jbnpmwsh2pbzjwvib7561pyd6x"; depends=[ ]; };
chemCal = derive { name="chemCal"; version="0.1-34"; type="cran"; sha256="0sn0mhp2d9a9rddfpkiv1pkrmvnv4sy18c1x2ks0lwpaklg78fbs"; depends=[ ]; };
chemometrics = derive { name="chemometrics"; version="1.3.9"; type="cran"; sha256="089zlp4ba6yyxjh2p7fcph29lnxyk1gifb44fw7lsslvg19xlgjm"; depends=[rpart class e1071 MASS nnet pcaPP robustbase som lars pls mclust ]; };
chemosensors = derive { name="chemosensors"; version="0.7.8"; type="cran"; sha256="0zphfag0q6zskd301z1dldazzxr2fam6h41cpyivphaxpaljiv0m"; depends=[pls plyr reshape2 ggplot2 LearnBayes quadprog RColorBrewer ]; };
cherry = derive { name="cherry"; version="0.5-10"; type="cran"; sha256="0fs4p5k1lwwlin5fj9z91aw59ybp60phjk293imizg6vpai5h39p"; depends=[bitops lpSolve Matrix ]; };
childsds = derive { name="childsds"; version="0.5"; type="cran"; sha256="1fmisp6k375harjxsyzpwnd8zh3kd7vlhin18q1svfwdjyy9k3xh"; depends=[ ]; };
chillR = derive { name="chillR"; version="0.55"; type="cran"; sha256="1b8lp4dfr3366ism7q2pddqpps3zmsyv5xg9rpyyh9yyl9ga1xhy"; depends=[pls Kendall fields ]; };
chimera = derive { name="chimera"; version="1.8.5"; type="bioc"; sha256="0jbp6kmzq66dypfhnm5ml9q4krkfrjpam8dbm1nym3agxlhr4ywp"; depends=[Biobase GenomicRanges Rsamtools GenomicAlignments AnnotationDbi ]; };
chipPCR = derive { name="chipPCR"; version="0.0.8-10"; type="cran"; sha256="1mff7n7ga4sfwvcq7zkjkrl68nybnm2zkn37hmxvnw9yl3ls9lnw"; depends=[lmtest MASS outliers ptw quantreg Rfit robustbase shiny signal ]; };
chipenrich = derive { name="chipenrich"; version="1.4.0"; type="bioc"; sha256="03zsdbdg09s3fjsvz181wgfsq8xgjmdf5n7r9y94a84f6140ixsz"; depends=[GenomicRanges IRanges mgcv plyr lattice latticeExtra stringr rms ]; };
chipseq = derive { name="chipseq"; version="1.16.0"; type="bioc"; sha256="1mnqrr967h7fizngqq75q67wjvv4b12j0wldjsa7b969fah5jfmn"; depends=[BiocGenerics S4Vectors IRanges GenomicRanges BSgenome ShortRead BiocGenerics IRanges BSgenome GenomicRanges lattice ShortRead ]; };
chngpt = derive { name="chngpt"; version="2014.12-2"; type="cran"; sha256="1bg2hm5clvq1rj1mnj5fasbwmq0xayj327kwclajami4zcwjwqj5"; depends=[kyotil MASS ]; };
choiceDes = derive { name="choiceDes"; version="0.9-1"; type="cran"; sha256="07nnqqczi9p3cffdijzx14sxhqv1imdakj7y94brlr5mbf5i4fl4"; depends=[AlgDesign ]; };
choplump = derive { name="choplump"; version="1.0-0.4"; type="cran"; sha256="0fn6m3n81jb7wjdji4v04m53gakjfsj3ksm546xxz5zm7prk237s"; depends=[ ]; };
chopsticks = derive { name="chopsticks"; version="1.30.1"; type="bioc"; sha256="1igpilcmz4pxcglwbclink07gyx3ysbndg1qsjfaqr1xafip4hmd"; depends=[survival ]; };
chopthin = derive { name="chopthin"; version="0.1"; type="cran"; sha256="1xnyd5mvgqksk7c0mf4irrnshkjgih2h19b55yi4finxh6wrn8l4"; depends=[Rcpp Rcpp ]; };
chords = derive { name="chords"; version="0.90"; type="cran"; sha256="0wz5glm15615xb3cicc0m34zg78qzng3lpmysswbrfhc8x4kkchh"; depends=[MASS ]; };
choroplethr = derive { name="choroplethr"; version="3.1.0"; type="cran"; sha256="0nv47hx8z06xh58a1ff63zncl1776pakxa6dbf1skhc23wfafi86"; depends=[scales Hmisc stringr ggplot2 dplyr R6 acs WDI ]; };
choroplethrAdmin1 = derive { name="choroplethrAdmin1"; version="1.0.0"; type="cran"; sha256="1pnj5155h809sh9mp703y72348mi7mxnwid07kp1s489512ysfwr"; depends=[ggplot2 ]; };
choroplethrMaps = derive { name="choroplethrMaps"; version="1.0"; type="cran"; sha256="00dgwikfxm1p1dqz1ybsxj1j8jcmrwa08m2d3zsww2invd55pk7g"; depends=[ ]; };
chroGPS = derive { name="chroGPS"; version="1.10.0"; type="bioc"; sha256="1r300py3n2a0c1nim0g6jnr6llsih0hil3g71fa01dckr37yzhjy"; depends=[IRanges Biobase MASS changepoint cluster DPpackage ICSNP ]; };
chromer = derive { name="chromer"; version="0.1"; type="cran"; sha256="0fzl2ahvzyylrh4247w9yjmwib42q96iyhdlldchj97sld66c817"; depends=[dplyr httr data_table ]; };
chromoR = derive { name="chromoR"; version="1.0"; type="cran"; sha256="1x11byr6i89sdk405h6jd2rbvgwrcvqvb112bndv2rh9jnrvcw4z"; depends=[haarfisz gdata ]; };
chron = derive { name="chron"; version="2.3-45"; type="cran"; sha256="0jkanbisi1bxh35rg0i6sl82f8r9v8va8mf8hknfvwv7p7n3ddpx"; depends=[ ]; };
cin = derive { name="cin"; version="0.1"; type="cran"; sha256="1pwvy5nh5nrnysfqrzllb9fcrpddqg02c7iw3w9fij2h8s2v6kq5"; depends=[ ]; };
circlize = derive { name="circlize"; version="0.2.4"; type="cran"; sha256="0zxd8jcim03cg77zxq9dvwlki51s9jhyaycdif7q6qc598lwwjx1"; depends=[GlobalOptions shape ]; };
circular = derive { name="circular"; version="0.4-7"; type="cran"; sha256="1kgis2515c931ir76kpxnjx0cscw4n09a5qz1rbrhf34gv81pzqw"; depends=[boot ]; };
cisPath = derive { name="cisPath"; version="1.6.4"; type="bioc"; sha256="0h9s84hgy3pgzh39jgjwv81g8g9gj36c6m9n1rz3g26w9hdrcznx"; depends=[ ]; };
cit = derive { name="cit"; version="1.4"; type="cran"; sha256="0axmi41bydkj512jscil9mqz9g6f11khl8hi6fci96wnm9x8gw7s"; depends=[ ]; };
citbcmst = derive { name="citbcmst"; version="1.0.4"; type="cran"; sha256="1zkd117h9nahwbg5z6byw2grg5n3l0kyvv2ifrkww7ar30a2yikl"; depends=[ ]; };
citccmst = derive { name="citccmst"; version="1.0.2"; type="cran"; sha256="1b7awn1hjckxisfdi4ck697hwd4a5sqklwi7xzh6kgqhk9pv7vjn"; depends=[ ]; };
cjoint = derive { name="cjoint"; version="1.0.3"; type="cran"; sha256="0f9yh4rbgqlx12vx336isfxc3lnrl5sgbapld0qfkv93p26in9h6"; depends=[sandwich lmtest ggplot2 ]; };
clValid = derive { name="clValid"; version="0.6-6"; type="cran"; sha256="1l9q7684vv75jnbymaa10md13qri2wjjg7chr1z1m0rai8iq3xxw"; depends=[cluster class ]; };
cladoRcpp = derive { name="cladoRcpp"; version="0.14.4"; type="cran"; sha256="0d4vl7xrrwbhhx56ymw52rb5svw9nskxdya4dl04lw1qxc45p4jy"; depends=[Rcpp Rcpp RcppArmadillo ]; };
class = derive { name="class"; version="7.3-12"; type="cran"; sha256="14baglhxk8xv3857s9b0immizh7sakk3spa5s4v28ysh7i94wx6i"; depends=[MASS ]; };
classGraph = derive { name="classGraph"; version="0.7-4"; type="cran"; sha256="08cid5bdbciyijlzkx3684gx0cyzcj8myawf4dhcrz00jqrg8v60"; depends=[graph Rgraphviz graph Rgraphviz ]; };
classInt = derive { name="classInt"; version="0.1-22"; type="cran"; sha256="0r9940bv6n43i6vlcgc19bvmcv3zlw0bi9zfs3scvah68rdb7v7l"; depends=[e1071 class ]; };
classifly = derive { name="classifly"; version="0.4"; type="cran"; sha256="0mw1vcas0gr1r4yvh0j02zhk7kp5342r0bhhg776hqgqdczgh5zj"; depends=[class plyr ]; };
classify = derive { name="classify"; version="1.3"; type="cran"; sha256="0134h12h6v06d7ldj9qgqjhh5f5ap98pvr0v6d4k8dqndnn0pggy"; depends=[Rcpp plyr ggplot2 lattice R2jags reshape2 Rcpp ]; };
classyfire = derive { name="classyfire"; version="0.1-2"; type="cran"; sha256="0rar3mi2m1wf14lmahjbpdh1jlnisvgsbx86xbqlb8c0f8zfzxq3"; depends=[snowfall e1071 boot neldermead ggplot2 optimbase ]; };
cleanUpdTSeq = derive { name="cleanUpdTSeq"; version="1.4.0"; type="bioc"; sha256="06sq1xpi9n4b07i0r1l87pwnlylsy3qav0z6rfnb5df0xycbsrqq"; depends=[BiocGenerics BSgenome GenomicRanges seqinr e1071 ]; };
cleaver = derive { name="cleaver"; version="1.4.0"; type="bioc"; sha256="09y7f1qcfp4fdkn21c6gfxrrx95piy168lz8ln1v7fd50lz25ilc"; depends=[Biostrings IRanges ]; };
clere = derive { name="clere"; version="1.1"; type="cran"; sha256="0r6yzdfgzyl8y5qlj78azv0f6gp3kadnk4zycsrva1cc3qa7lv1c"; depends=[Rcpp Rcpp RcppEigen ]; };
clhs = derive { name="clhs"; version="0.5-4"; type="cran"; sha256="0535mpl1dbm9ij1dvj8dsmv4fickdg47by1mvf71lgfk5mjxy5nc"; depends=[ggplot2 sp raster reshape2 plyr scales ]; };
clickstream = derive { name="clickstream"; version="1.1.4"; type="cran"; sha256="0z73phz31j7n49xmwdgv293qbg6ldfgibpd5713qyk7qkhk8hvl7"; depends=[igraph plyr Rsolnp data_table arules ]; };
clifro = derive { name="clifro"; version="2.4-0"; type="cran"; sha256="1bjsfk4m7hgq8k1mw07zx34ibgmpxjw8sig9jjzsr5mp3v13kwp8"; depends=[lubridate XML selectr RCurl ggplot2 scales RColorBrewer reshape2 ]; };
climdex_pcic = derive { name="climdex.pcic"; version="1.1-5.1"; type="cran"; sha256="0sq5l5dmnwbq9y6zfrq7zp81c8bmxwkvl7y9iq6wi3qcr78ga6zy"; depends=[PCICt caTools Rcpp ]; };
clime = derive { name="clime"; version="0.4.1"; type="cran"; sha256="0qs9i7cprxddg1cmxhnmcfhl7v7g1r519ff2zfipxbs59m5xk9sf"; depends=[lpSolve ]; };
climwin = derive { name="climwin"; version="0.0.1"; type="cran"; sha256="1ajkqk6lj2d8gx7arkwrznrkrjvdc5g9789vwaawwczbdavyi8kd"; depends=[ggplot2 gridExtra evd lme4 lubridate MuMIn reshape ]; };
clinUtiDNA = derive { name="clinUtiDNA"; version="1.0"; type="cran"; sha256="0x3hb09073gkh60fc8ia0sfk948sm6z6j8sqkz275k4m8ryrabas"; depends=[ ]; };
clinfun = derive { name="clinfun"; version="1.0.10"; type="cran"; sha256="1q69qn7ib0mzpx5cv69fcgflp9rfmys5j33lqdj4b3g1z036bqrr"; depends=[mvtnorm ]; };
clinsig = derive { name="clinsig"; version="1.0-5"; type="cran"; sha256="1jb2qk6hfvms85whymrfpgvjp8pv33fbllpl8jg80yg1ppmg2jcg"; depends=[ ]; };
clippda = derive { name="clippda"; version="1.16.0"; type="bioc"; sha256="0dv9n6y3c1kfkcnjlyhi9zk80r5glpzihkvdjqpcl06p6i9jgvb4"; depends=[limma statmod rgl lattice scatterplot3d Biobase ]; };
clipper = derive { name="clipper"; version="1.6.2"; type="bioc"; sha256="05rf33h89b31ys1gr1k1i9aipdc8hgciqzfbnhml7glx8v4gnxyp"; depends=[Matrix graph Biobase Rcpp igraph gRbase qpgraph KEGGgraph corpcor RBGL ]; };
clogitL1 = derive { name="clogitL1"; version="1.4"; type="cran"; sha256="0m9yrg9mzzfv5qkdf6w55xyrjdghyrf27kk7b4x2gyvwvi5b7dkm"; depends=[Rcpp Rcpp ]; };
clonotypeR = derive { name="clonotypeR"; version="1.4.0"; type="bioc"; sha256="197dx26v5vxvpdhbh6ph4lcmk93zrbnx9ac4fclspsyna2q5i9yy"; depends=[ ]; };
cloudUtil = derive { name="cloudUtil"; version="0.1.10"; type="cran"; sha256="1j86vpd4ngrdpfjk44wb1mp0l88dxia64pjd2idfcd276giplh6s"; depends=[ ]; };
clpAPI = derive { name="clpAPI"; version="1.2.6"; type="cran"; sha256="1kgzmzf87b0j43ch21anmm2d73bj2d16slmyavpbkdwg72dg1sjb"; depends=[ ]; };
clst = derive { name="clst"; version="1.14.0"; type="bioc"; sha256="09gs6489394xnwdsva4kk8qhyixxw5i8pa9nbapld77fkh3mb2ss"; depends=[ROC lattice ]; };
clstutils = derive { name="clstutils"; version="1.14.0"; type="bioc"; sha256="0qbrijs731xc64zdkm51j5644y6xkvd22skjvlap4fawh6dn538i"; depends=[clst rjson ape lattice RSQLite ]; };
clue = derive { name="clue"; version="0.3-49"; type="cran"; sha256="1gz9imirwlvmvzn9j0rmdrrax2girf78xfrxw6mrhal66g48bsrj"; depends=[cluster ]; };
clues = derive { name="clues"; version="0.5.6"; type="cran"; sha256="1g0pjj4as5wfc7qr3nwkzgxxxp3mrdq7djn8p8qjba6kcdjxak1i"; depends=[ ]; };
clustMD = derive { name="clustMD"; version="1.0"; type="cran"; sha256="1i3c790k300a7y5xhqanp8f1bid2q3a0ajwgf5qsr6dv3ld4h7vj"; depends=[tmvtnorm mvtnorm truncnorm MASS mclust msm ]; };
cluster = derive { name="cluster"; version="2.0.1"; type="cran"; sha256="09l2vydyabk7x19bblxbjm68vnmifz46m5k3csb1snpbhq6qx52c"; depends=[ ]; };
cluster_datasets = derive { name="cluster.datasets"; version="1.0-1"; type="cran"; sha256="0i68s9305q08fhynpq24qnlw03gg4hbk4184z3q3ycbi8njpr4il"; depends=[ ]; };
clusterCrit = derive { name="clusterCrit"; version="1.2.4"; type="cran"; sha256="150iq5gp5czb8m7niyi294jjy3dbfpwccgak7scahd5kz2vs07c7"; depends=[ ]; };
clusterGeneration = derive { name="clusterGeneration"; version="1.3.4"; type="cran"; sha256="1ak8p2sxz3y9scyva7niywyadmppg3yhvn6mwjq7z7cabbcilnbw"; depends=[MASS ]; };
clusterGenomics = derive { name="clusterGenomics"; version="1.0"; type="cran"; sha256="127hvpg06is4x486g1d5x7dfkrbk7dj35qkds0pggnqxkq3wsc1c"; depends=[ ]; };
clusterPower = derive { name="clusterPower"; version="0.5"; type="cran"; sha256="1g2qpvizyk4q3qlgvar436nrfqxwp5y8yi2y6rch9ak5mbg3yzqb"; depends=[lme4 ]; };
clusterProfiler = derive { name="clusterProfiler"; version="2.0.1"; type="bioc"; sha256="0fnmkgincy9sn0hgggnpy5xd9r8dn14yr829dw2b9d9k2rl2x457"; depends=[plyr ggplot2 AnnotationDbi DOSE GOSemSim ]; };
clusterRepro = derive { name="clusterRepro"; version="0.5-1.1"; type="cran"; sha256="0vsf6cq6d51a4w23ph8kdz2h8dfpzyd6i85049p2wakn1kdvkz5p"; depends=[ ]; };
clusterSEs = derive { name="clusterSEs"; version="1.2"; type="cran"; sha256="0ykfwvibps20w62xrdj4cr6w63gig3dyjmdq8m937g8qsmhd74lz"; depends=[sandwich lmtest mlogit ]; };
clusterSim = derive { name="clusterSim"; version="0.44-2"; type="cran"; sha256="1xf3byri6mwlf89n896bxffmf3c6yqqh992npg9sqznx955hcggv"; depends=[cluster MASS ade4 e1071 rgl R2HTML ]; };
clusterStab = derive { name="clusterStab"; version="1.38.0"; type="bioc"; sha256="17w1mz308dp9gjk73k9zh4yhk8ykqh8ya6q2713x6wb8sy66xsrx"; depends=[Biobase ]; };
clusterfly = derive { name="clusterfly"; version="0.4"; type="cran"; sha256="0mxpn7aywqadyk43rr7dlvj0zjcyf4q7qbqw5ds38si7ik34lkrg"; depends=[rggobi e1071 reshape2 plyr RGtk2 ]; };
clustergas = derive { name="clustergas"; version="1.0"; type="cran"; sha256="1vf4czpwk71yxd26vm5sal0ml20ssjrq4bmk31yzxydpxn495fg8"; depends=[cluster ]; };
clustering_sc_dp = derive { name="clustering.sc.dp"; version="1.0"; type="cran"; sha256="0cppka7613cbjjf1q2yp6fln511wbqdhh8d4gs6p0fbq379kzmvc"; depends=[ ]; };
clustertend = derive { name="clustertend"; version="1.4"; type="cran"; sha256="1aqg8cy1hk3lmzvyqh9qc1mcknrva2i0c77hyd0yff9whz80ik4j"; depends=[ ]; };
clusteval = derive { name="clusteval"; version="0.1"; type="cran"; sha256="1ld0bdl4fy8dsfzm3k7a37cyxc6pfc9qs31x4pxd3z5rslghz7rj"; depends=[mvtnorm Rcpp Rcpp ]; };
clustrd = derive { name="clustrd"; version="0.1.2"; type="cran"; sha256="022lzp1wvbaa20d8hribgq9miy6i7jxm5m1p3p52h9b7bzga3q6g"; depends=[corpcor e1071 ggplot2 irlba ]; };
clustsig = derive { name="clustsig"; version="1.1"; type="cran"; sha256="0n5nf712vsa8zb0c2lv4gjqsgva62678vjngr9idgswb73shxm8v"; depends=[ ]; };
clustvarsel = derive { name="clustvarsel"; version="2.1"; type="cran"; sha256="0sj9065s604sjzmlziak9xxl0xhplmp1g3d5dl9smwf2x8bb80mw"; depends=[mclust BMA foreach iterators ]; };
clv = derive { name="clv"; version="0.3-2.1"; type="cran"; sha256="1qgp2qhblg6ysyrlg0ad169ahwhcyn5pvsqzdlqj700y1k7wl7mc"; depends=[cluster class ]; };
cmaes = derive { name="cmaes"; version="1.0-11"; type="cran"; sha256="1hwf49d1m660jdngqak9pqasysmpc4jcgr8m04szwbyzyy6xrm5k"; depends=[ ]; };
cmm = derive { name="cmm"; version="0.8"; type="cran"; sha256="1661v2lzxgf4s37wdsrnbsvqwppcr7mbp70i1xsysfzki1z6xr19"; depends=[ ]; };
cmprsk = derive { name="cmprsk"; version="2.2-7"; type="cran"; sha256="1imr3wpnj4g57n2x4ryahl4lk8lvq9y2r7319zv3k82mznha8bcm"; depends=[survival ]; };
cmprskQR = derive { name="cmprskQR"; version="0.9.0"; type="cran"; sha256="1vnrfhlmmyamkpd8lsfznfpcq0mspkiwn3j23yj4sarfx5n32s9a"; depends=[survival quantreg ]; };
cmrutils = derive { name="cmrutils"; version="1.2-2"; type="cran"; sha256="0gc4sx8g9364sybmrqdjdvddqjd9ps6v205kaw0nqdx30xn96hmm"; depends=[chron ]; };
cmvnorm = derive { name="cmvnorm"; version="1.0-1"; type="cran"; sha256="00cm7zfxbc5md3p6sakan64a6rzz7nbq0bqq9ys2iyxpilxalj3m"; depends=[emulator elliptic ]; };
cn_farms = derive { name="cn.farms"; version="1.14.0"; type="bioc"; sha256="1p00mlpsn5adsgq51g7v09vpznbbly05sq1qyndq35mmwlsp6l4y"; depends=[Biobase ff oligoClasses snow DBI affxparser oligo DNAcopy preprocessCore lattice ]; };
cn_mops = derive { name="cn.mops"; version="1.12.0"; type="bioc"; sha256="091gmwswlnqnh1b9n7xx3xafs4p7m79fw7fakbs43yrdd8ias6nd"; depends=[BiocGenerics Biobase IRanges GenomicRanges Rsamtools ]; };
cna = derive { name="cna"; version="1.0-3"; type="cran"; sha256="1iy0ispazhib30kh5wp3jziiyf0992nrdklrq80n0w3zhjyi21rh"; depends=[ ]; };
cncaGUI = derive { name="cncaGUI"; version="0.0-2"; type="cran"; sha256="0iwsaqqnh142syag91rzwwsc9n2qiw4xh5x1gjsgc74ywdm4g5fz"; depends=[rgl tcltk2 tkrplot ]; };
cnvGSA = derive { name="cnvGSA"; version="1.10.0"; type="bioc"; sha256="1wwrpifhg6ppmdrrx8h43mps3h85gv51dm3cn3q198cfhrj4m6yj"; depends=[brglm ]; };
coGPS = derive { name="coGPS"; version="1.10.0"; type="bioc"; sha256="16hx3pp517nlg2nk5sbhggxijn7ilf7b7l7zf1wv3zbm2myr1rhi"; depends=[ ]; };
coRNAi = derive { name="coRNAi"; version="1.16.0"; type="bioc"; sha256="1gg83a3d1zs9h833pxyb18iixwckj5ccgsch0rrhwxlasa778zb3"; depends=[cellHTS2 limma locfit MASS gplots lattice ]; };
coalescentMCMC = derive { name="coalescentMCMC"; version="0.4-1"; type="cran"; sha256="0xxv1sw5byf84wdypg5sfazrmj75h4xpv7wh4x5cr9k0vgf80b3s"; depends=[ape coda lattice Matrix phangorn ]; };
coarseDataTools = derive { name="coarseDataTools"; version="0.6-2"; type="cran"; sha256="1nnh61kfw294cxawz9i8yf37ddzsn5s532vvkaz0ychk0390wmi5"; depends=[MCMCpack ]; };
cobindR = derive { name="cobindR"; version="1.4.0"; type="bioc"; sha256="1c7za0zdpwb49mbhzgyp66pyzvd3nl5hnkdln1s1hwwnqsljivxk"; depends=[yaml seqinr Biostrings biomaRt BSgenome gmp mclust rtfbs gplots IRanges ]; };
cobs = derive { name="cobs"; version="1.3-0"; type="cran"; sha256="1aly7ir7vzir9wnbhyfbrkl7dbq68f79jwxhqrfpf0v2m5kxhz88"; depends=[SparseM quantreg ]; };
cobs99 = derive { name="cobs99"; version="0.9-12"; type="cran"; sha256="0zd0nyw8ma7k90i1k3ryn6qcb6yivrrajc6nmdh4f95ihvhc9ksm"; depends=[ ]; };
cocor = derive { name="cocor"; version="1.1-1"; type="cran"; sha256="1w6v9499jj727iznap66hlv9lr4r3s9pr5jnsin9zi8hjb2vhj4h"; depends=[ ]; };
cocorresp = derive { name="cocorresp"; version="0.2-3"; type="cran"; sha256="0r1kmcwnf476xbw7r40r3vbn6l1zgmaiq6cpgrvnyss7i5313q8s"; depends=[vegan ]; };
cocron = derive { name="cocron"; version="1.0-0"; type="cran"; sha256="190kfv7haybi7s33bqf8dd3pcj8r6da20781583rrq6585yqh4g6"; depends=[ ]; };
coda = derive { name="coda"; version="0.17-1"; type="cran"; sha256="1qjsqf4xi6xii60dscn577gmhqgbm525cgg67ax5mhs7il7br26f"; depends=[lattice ]; };
codadiags = derive { name="codadiags"; version="1.0"; type="cran"; sha256="1x243pn6qnkjyxs31h1hxy8x852r0fc952ww77g40qnrk8qw79xg"; depends=[coda ]; };
codelink = derive { name="codelink"; version="1.34.0"; type="bioc"; sha256="15rvy25zn3g7rs2h58pamrg3mb3hb4kh8ghvc7vcnbn70rpqh17f"; depends=[BiocGenerics Biobase limma annotate ]; };
codep = derive { name="codep"; version="0.4-1"; type="cran"; sha256="1jkd6k80d6vyriwmq1car5zjms304zrdrfbjib664zxzx1wadf8z"; depends=[ ]; };
codetools = derive { name="codetools"; version="0.2-11"; type="cran"; sha256="1mal1xa7san28l6rssvanndsgm90qhvbskz840ybfwwix8bqnbmh"; depends=[ ]; };
coefficientalpha = derive { name="coefficientalpha"; version="0.3.3"; type="cran"; sha256="1r38jlcl3z16xc410bcgcw1ck6nnby1mqwx5sk6g0lm3jbjcka57"; depends=[rsem lavaan ]; };
coefplot = derive { name="coefplot"; version="1.2.0"; type="cran"; sha256="1v6c3fk2wrjgs3b31vajmig6dvmp5acfm72wh0iffpg0qgvf5hh7"; depends=[ggplot2 plyr reshape2 useful scales proto ]; };
coenocliner = derive { name="coenocliner"; version="0.1-0"; type="cran"; sha256="0hys1a4ai09pax5ydcaq39ll3rdjzyhgvz72z0iv9fwv4fbmwbr9"; depends=[ ]; };
coexist = derive { name="coexist"; version="1.0"; type="cran"; sha256="15ydhrx996i6caa0360c2bgn2zvgwfg5wdhsqq1gvrggs15w7nml"; depends=[ ]; };
coin = derive { name="coin"; version="1.0-24"; type="cran"; sha256="1h1d6pi957qkmlk2j8f280sc6jkg328wnyxjk43yxj2zwmdnmgpd"; depends=[survival modeltools mvtnorm ]; };
cold = derive { name="cold"; version="1.0-4"; type="cran"; sha256="00rl2h4pirzvgwi28pr94kkn233wvm2z8yyfsz6andbkjsihp6jw"; depends=[ ]; };
coloc = derive { name="coloc"; version="2.3-1"; type="cran"; sha256="1j3m9afpkm0bzib38yqvk85b6s6l56s6j2ni96gii4a06r87ig60"; depends=[colorspace MASS BMA ]; };
colorRamps = derive { name="colorRamps"; version="2.3"; type="cran"; sha256="0shbjh83x1axv4drm5r3dwgbyv70idih8z4wlzjs4hiac2qfl41z"; depends=[ ]; };
coloredICA = derive { name="coloredICA"; version="1.0.0"; type="cran"; sha256="1xj4dsrwgqzm2644nk3y8nj47m036b4ylh6v60jccj3707spb32r"; depends=[MASS ]; };
colorfulVennPlot = derive { name="colorfulVennPlot"; version="2.4"; type="cran"; sha256="01b3c060fbnap78h9kh21v3zav547ak2crdkvraynpd2096yk51w"; depends=[ ]; };
colorspace = derive { name="colorspace"; version="1.2-6"; type="cran"; sha256="0y8n4ljwhbdvkysdwgqzcnpv107pb3px1jip3k6svv86p72nacds"; depends=[ ]; };
colortools = derive { name="colortools"; version="0.1.5"; type="cran"; sha256="0z9sx0xzfyb5ii6bzhpii10vmmd2vy9vk4wr7cj9a3mkadlyjl63"; depends=[ ]; };
colourlovers = derive { name="colourlovers"; version="0.1.4"; type="cran"; sha256="1c5g9z7cknn4z1jqb0l1w8v5zj0qbk4msaf1pqfcx9a70pw8s0m5"; depends=[XML RJSONIO png ]; };
comato = derive { name="comato"; version="1.0"; type="cran"; sha256="03jnvv0sczy13r81aljhj9kv09sl5hrs0n5bn3pdi7ba64zgbjiw"; depends=[igraph Matrix lattice gdata XML cluster clusterSim ]; };
combinat = derive { name="combinat"; version="0.0-8"; type="cran"; sha256="1h9hr88gigihc4na7lb5i7rn4az1xa7sb34zvnznaj6pdrmwy4qm"; depends=[ ]; };
comclim = derive { name="comclim"; version="0.9.4"; type="cran"; sha256="0m6ynccscsrrq70p0drwrwxp4skc630kv1l5smh48pi8kagahj1g"; depends=[ ]; };
commandr = derive { name="commandr"; version="1.0.1"; type="cran"; sha256="1d6cha5wc1nx6jm8jscl7kgvn33xv0yxwjf6h3ar3dfbvi4pp5fk"; depends=[ ]; };
commentr = derive { name="commentr"; version="0.1"; type="cran"; sha256="0kyi7xd2f2b1avk78bmkbagyjqwwx21hca670n38k1a28kvnjpix"; depends=[stringr ]; };
compEpiTools = derive { name="compEpiTools"; version="1.0.3"; type="bioc"; sha256="0rlwxxn4vj2vv2348yjay4p4wbfd5r2h3qc6s276225axv6w0nzq"; depends=[topGO GenomicRanges AnnotationDbi BiocGenerics Biostrings Rsamtools gplots IRanges GenomicFeatures XVector methylPipe S4Vectors GenomeInfoDb ]; };
compHclust = derive { name="compHclust"; version="1.0-2"; type="cran"; sha256="1h39krvz516xwsvn5987i1zbzan8vx2411qz6dad112hpss0vyk9"; depends=[ ]; };
compactr = derive { name="compactr"; version="0.1"; type="cran"; sha256="0f2yds6inmx0lixj08ibqyd2i61l2cbg1ckgpb8dl2q7kcyyd6mx"; depends=[ ]; };
compare = derive { name="compare"; version="0.2-5"; type="cran"; sha256="073apjmw5hwslhnjwhff0m8lwszv29n6vbqy0wxl39pyzg7q2x41"; depends=[ ]; };
compareC = derive { name="compareC"; version="1.3.1"; type="cran"; sha256="0dachfr23lps2jj1y5gc958k54vskmww84gdgk4amihsdgjsnphg"; depends=[ ]; };
compareGroups = derive { name="compareGroups"; version="3.0.1"; type="cran"; sha256="185lz69al72p4s354vn6gvha3zbhyvf2fsfym0knyspgl08q3m2g"; depends=[Hmisc gdata xtable SNPassoc survival epitools HardyWeinberg ]; };
compareODM = derive { name="compareODM"; version="1.2"; type="cran"; sha256="019hq8j56asjvh4x1p65785mf38xr05j3by0749gl9k9yl8645da"; depends=[XML ]; };
comparison = derive { name="comparison"; version="1.0-4"; type="cran"; sha256="0pc462rhk8gr8zrf08ksi315kmhydlp027q5gd40ap5mmhk7rd82"; depends=[isotone ]; };
compcodeR = derive { name="compcodeR"; version="1.2.1"; type="bioc"; sha256="0r221d2dbhjzh8aqsd74rbjbrfgq2s6amw9zfy3zgjv9hygli84q"; depends=[sm knitr markdown ROCR lattice gplots gtools gdata caTools KernSmooth MASS ggplot2 stringr modeest edgeR limma vioplot ]; };
compeir = derive { name="compeir"; version="1.0"; type="cran"; sha256="1bb5459wcqpjic2b9kjn0l0qdn7sqmmx34hdb2aqg80q22mhx5dv"; depends=[lattice etm ]; };
compendiumdb = derive { name="compendiumdb"; version="1.0.0"; type="cran"; sha256="14dpfyknb4rnig3k2k7684ly45mwx8b22q8bffbiqx1ah827nrna"; depends=[Biobase GEOquery RMySQL ]; };
complmrob = derive { name="complmrob"; version="0.5.8"; type="cran"; sha256="0hhn6w8kvwzs2qflqf8qiqac0n93pi4rkbh8idbcfn8shkhnjzjs"; depends=[robustbase ggplot2 boot scales ]; };
compoisson = derive { name="compoisson"; version="0.3"; type="cran"; sha256="0v5dl7xydqi4p97nipn4hyhpq2gghmx81ygvl0vc8b65jhq89y0p"; depends=[MASS ]; };
compositions = derive { name="compositions"; version="1.40-1"; type="cran"; sha256="1hn139g86bc1q3dj6kj9f21042v4x0xgrp4ni1zvx1zx8xmy3h8b"; depends=[tensorA robustbase energy bayesm ]; };
compound_Cox = derive { name="compound.Cox"; version="1.4"; type="cran"; sha256="08sdkq040zk9mb1lcy4nm32gwab26vaig8brp2n3aizagx9fv3r9"; depends=[numDeriv survival ]; };
compute_es = derive { name="compute.es"; version="0.2-4"; type="cran"; sha256="1b5i8z66zbag0vdv98mmpwmizpm68vc3ajh0n3q94zdcmhcbx12d"; depends=[ ]; };
concor = derive { name="concor"; version="1.0-0.1"; type="cran"; sha256="0hjyvi6p16cyrmq0bq7fph1r5f3adp7zpf123wkm5bkjnc5122k0"; depends=[ ]; };
concreg = derive { name="concreg"; version="0.5"; type="cran"; sha256="0psvnirl5rqicyzxs9sivh23bzzwdgviqczdl2in2gnrvdiw7m6f"; depends=[survival ]; };
cond = derive { name="cond"; version="1.2-3"; type="cran"; sha256="0y7m7valk7zn40y62348czmdvfkx59il9sl6wy565lzqfiimd9ps"; depends=[statmod survival ]; };
condGEE = derive { name="condGEE"; version="0.1-4"; type="cran"; sha256="0mqj2pc91n8h3arpd4b9f7ndbcnai21c67is22qg22wj7vhhs87h"; depends=[numDeriv rootSolve ]; };
condMVNorm = derive { name="condMVNorm"; version="2015.2-1"; type="cran"; sha256="04563jljnjhbiaiq33gn5dxjfvv05xp3lhl3w942v0smy0cdhrh4"; depends=[mvtnorm ]; };
condmixt = derive { name="condmixt"; version="1.0"; type="cran"; sha256="05q1fj7akf6lsq9rbcqqkzlx82jvk6mlvmwx6jzk8j228fwqmg90"; depends=[evd ]; };
coneproj = derive { name="coneproj"; version="1.6"; type="cran"; sha256="1bx0j9r83c944aklyq4lxdhmskyiwh4f6i2fim5fi6hpf6n9ajds"; depends=[Rcpp RcppArmadillo Rcpp ]; };
conf_design = derive { name="conf.design"; version="2.0.0"; type="cran"; sha256="06vdxljkjq1x56xkg041l271an1xv9wq79swxvzzk64dqqnmay51"; depends=[ ]; };
confidence = derive { name="confidence"; version="1.1-0"; type="cran"; sha256="11y2mjh9ykmsgf6km6f2w5rql1vqwick4jzmxg5gkfkiisvsq1cp"; depends=[knitr markdown plyr xtable ggplot2 ]; };
conformal = derive { name="conformal"; version="0.1"; type="cran"; sha256="0syb1p35r6fir7qimp2k51hpvl3xw45ma2hi7qz2xzw8cwhlii3a"; depends=[caret ggplot2 randomForest e1071 ]; };
confreq = derive { name="confreq"; version="1.3-1"; type="cran"; sha256="1d4ianimksnfwkld7cg9mkhbpwiaqy5bcilwfy45dwby5bai6cjx"; depends=[gmp ]; };
conics = derive { name="conics"; version="0.3"; type="cran"; sha256="06p6dj5dkkcy7hg1aa7spi9py45296dk0m6n8s2n3bzh3aal5nzq"; depends=[ ]; };
conjoint = derive { name="conjoint"; version="1.39"; type="cran"; sha256="0f8fwf419js9c292i3ac89rlrwxs2idhwxml1qd8xd2ggwfh6w5m"; depends=[AlgDesign clusterSim ]; };
constrainedKriging = derive { name="constrainedKriging"; version="0.2.4"; type="cran"; sha256="1a91s0b7yka37fb5pm172fmlqrhm6da370cqb9knvkg5n8vi4hys"; depends=[sp spatialCovariance rgeos RandomFields ]; };
contfrac = derive { name="contfrac"; version="1.1-9"; type="cran"; sha256="16yl96bmr16a18qfz6y5zf7p02ky1jy2iimcb1wp50g7imlcq840"; depends=[ ]; };
conting = derive { name="conting"; version="1.5"; type="cran"; sha256="02vkpzdcwsny40jdcxgjfrx89lw1gq864s3fgswa9bfxfps9p58h"; depends=[mvtnorm BMS gtools tseries coda ]; };
contrast = derive { name="contrast"; version="0.19"; type="cran"; sha256="1kc3scz3msa52lplc79mmn4z99kq1p2vlb18wqxa9q2ma133x6pl"; depends=[rms ]; };
convert = derive { name="convert"; version="1.42.0"; type="bioc"; sha256="1i8h0d7vdd0h1gk09zmf3aqvaqq3sl11nhm5yrscb2xkwz085ppn"; depends=[Biobase limma marray ]; };
convevol = derive { name="convevol"; version="1.0"; type="cran"; sha256="05nhpndixvrmiq5paswj7qwsq3k3al34q3j751bic4kb8zhby3fk"; depends=[ape geiger MASS phytools cluster ]; };
cooccur = derive { name="cooccur"; version="1.2"; type="cran"; sha256="0v26aa6j77dmm7pdij4qaz03mxn69aa71rw6n5yl3b9qb0w4k81z"; depends=[reshape2 gmp ggplot2 ]; };
cooptrees = derive { name="cooptrees"; version="1.0"; type="cran"; sha256="0izvwna1jsqik3v5fz1r4c86irvma42clw0p4rdvwswv5pk698i1"; depends=[igraph optrees gtools ]; };
copBasic = derive { name="copBasic"; version="1.7.1"; type="cran"; sha256="0qhrazzsrc429z9fsbqklvwdfgn65adck51vp74jijjd0p6pki4s"; depends=[lmomco ]; };
copCAR = derive { name="copCAR"; version="1.0-1"; type="cran"; sha256="173jv69n4g68yfrz03sg23qzlyvvlw988axgj5knq3l2cq6pjpb2"; depends=[numDeriv Rcpp spam Rcpp RcppArmadillo ]; };
copa = derive { name="copa"; version="1.34.0"; type="bioc"; sha256="1q1ydzkf7inqyc4hxwrvjkxnqwpqw9nry67lr6igsf9mdzc2lawp"; depends=[Biobase ]; };
cope = derive { name="cope"; version="0.1"; type="cran"; sha256="1g00dzy99m4212wrkhmqf8ibmilhp75hd2yv7yfzi28nr5jgir3m"; depends=[maps fields MASS mvtnorm ]; };
copula = derive { name="copula"; version="0.999-13"; type="cran"; sha256="0yjy03wn6lsiacfh7qblspklxc9kfwd3g7bz2fx2ldkd90rwhmqp"; depends=[Matrix lattice gsl ADGofTest stabledist mvtnorm pspline ]; };
copulaedas = derive { name="copulaedas"; version="1.4.1"; type="cran"; sha256="1xs02s91la4i1x1zs8k5gfvd9jhs2zqhv58431p1j3spfapzf2rc"; depends=[copula vines mvtnorm truncnorm ]; };
copynumber = derive { name="copynumber"; version="1.6.0"; type="bioc"; sha256="01l8is7f09kr1dq7xzyr65xdr0bx83a4p8yqzyfrvbrjzzildi00"; depends=[BiocGenerics S4Vectors IRanges GenomicRanges ]; };
corHMM = derive { name="corHMM"; version="1.16"; type="cran"; sha256="048bvnw2ib9x7yijlgp4d1lfm9055y79fc613y7p6240vw1ywkrh"; depends=[ape nloptr GenSA expm numDeriv corpcor phangorn ]; };
corTools = derive { name="corTools"; version="1.0"; type="cran"; sha256="0arvqk2xp19ap73zmdk0kb1fycb3v2mf65b4bhanvcqwr4kg4vdk"; depends=[ ]; };
corclass = derive { name="corclass"; version="0.1"; type="cran"; sha256="02mxypdrjwf8psk0j9ggbw14889a87c6lw11qki3s3biq52qsx3y"; depends=[igraph ]; };
corcounts = derive { name="corcounts"; version="1.4"; type="cran"; sha256="0irlx62ql5rp5s7nnjdy6jh723wl4039wn10zxri8ihxwqsyyz3f"; depends=[ ]; };
coreTDT = derive { name="coreTDT"; version="1.0"; type="cran"; sha256="14rnh61gk3m6g8rq77hm9ybds0px15di2mxm3jiyfdfynx5ng58f"; depends=[ ]; };
corpcor = derive { name="corpcor"; version="1.6.7"; type="cran"; sha256="1vfzi17vkvzbqgzhmpdhybb6lli0z9vm9p31cwb8bn8ddlkn5ll4"; depends=[ ]; };
corpora = derive { name="corpora"; version="0.4-3"; type="cran"; sha256="0zh8mabfy9yqgx7asi4yqv4c0kj59yvyxxaxjgdjy5kkr17zd4g4"; depends=[ ]; };
correlate = derive { name="correlate"; version="1.0"; type="cran"; sha256="0hv0i928f49p8n78hd3bcx923l2x0zcs4kwj71ph8gm7s8540fhc"; depends=[ ]; };
corrgram = derive { name="corrgram"; version="1.7"; type="cran"; sha256="1zs0i4dhl1c5ms70cmy8cc9qi9y3ssd62brd7jrpagz56sdwwx0k"; depends=[seriation ]; };
corrplot = derive { name="corrplot"; version="0.73"; type="cran"; sha256="0xnlkb8lhdjcc10drym9ymqzvfwa3kvf955y0k66z5jvabzyjkck"; depends=[ ]; };
corrsieve = derive { name="corrsieve"; version="1.6-8"; type="cran"; sha256="0ak3j9khcwv5rxbicck2sr260wpmd3xj254y7pdavx2fk0b72yxs"; depends=[ ]; };
cosinor = derive { name="cosinor"; version="1.1"; type="cran"; sha256="02nnqg51vq48lzk667cyarnmhcf5mifnsdij7dlgqvz2k4fdq4pl"; depends=[ggplot2 shiny ]; };
cosmiq = derive { name="cosmiq"; version="1.0.0"; type="bioc"; sha256="1vbdc6my002h7kqigkic4qclxyxfy6jpz861vj6f9m0ysjsnlsn6"; depends=[Rcpp pracma xcms MassSpecWavelet ]; };
cosmoFns = derive { name="cosmoFns"; version="1.0-1"; type="cran"; sha256="0a6xhbgxxnymlvicg99yhgny2lscxcbmvqmy17kxmahdi797dsg6"; depends=[ ]; };
cosmosR = derive { name="cosmosR"; version="1.0"; type="cran"; sha256="0w4qywnkgcybgyyhnvvg33amqi2vnkry6iajakyqr1x2hzfpf9sv"; depends=[xlsx ]; };
cosso = derive { name="cosso"; version="2.1-1"; type="cran"; sha256="1wyq27qak0kz4bbzynm24r5ksvb6ddd43h2ykh6m935xck16blyb"; depends=[quadprog Rglpk glmnet ]; };
costat = derive { name="costat"; version="2.3"; type="cran"; sha256="1kqyl89lx1amap9zgrfy1bqnl93kahrksj6yms44yrxr1as2g4nk"; depends=[wavethresh ]; };
cotrend = derive { name="cotrend"; version="1.0"; type="cran"; sha256="0h0y502wqq83wlf9ab1b9rxg1wycvi3sp4lbqfpvy46vgljrjw87"; depends=[xts ]; };
couchDB = derive { name="couchDB"; version="1.3.0"; type="cran"; sha256="153zxi2liv932r7mphhzgxw4wyizh5iyk62ad6x64av31kd2qzsn"; depends=[RCurl bitops httr rjson ]; };
countrycode = derive { name="countrycode"; version="0.18"; type="cran"; sha256="1by3xws2c43ryz4fnlq85yvgnwnvzmvjbd18cafirlwpl6liy2ic"; depends=[ ]; };
covLCA = derive { name="covLCA"; version="1.0"; type="cran"; sha256="15jsjrlaws1cqyrwvh4lzbhxkb11jmgpmddg98nfrzmjpczn2iw3"; depends=[Matrix mlogit poLCA ]; };
covRobust = derive { name="covRobust"; version="1.1-0"; type="cran"; sha256="1nvy5cqs4g565qj2hhgk5spr58ps2bhas3i752rf7wvrskb89fk7"; depends=[ ]; };
covTest = derive { name="covTest"; version="1.02"; type="cran"; sha256="0p4di8bdjghsq5jd678dprlhiwnxr5piqlx2z7hi2bjjpvvl5657"; depends=[lars glmnet glmpath MASS ]; };
covr = derive { name="covr"; version="1.0.0"; type="cran"; sha256="1svq2dcqnd5iwq75nk38lxa3dshiwil2ksd3666713agbqzikgcz"; depends=[jsonlite rex devtools httr crayon htmltools ]; };
covreg = derive { name="covreg"; version="1.0"; type="cran"; sha256="0v19yhknklmgl58zhvg4szznb374cdh65i7s8pcj2nwrarycwzaq"; depends=[ ]; };
coxinterval = derive { name="coxinterval"; version="1.2"; type="cran"; sha256="0vb7vmzbb2dsihx04jbp2yvzcr033g435mywmwimqhfqdrmjx3fi"; depends=[survival timereg Matrix ]; };
coxme = derive { name="coxme"; version="2.2-4"; type="cran"; sha256="186867w9lcx6il2nfa79g4fbljhak2imjn7hcwczmwz7k7sfa4nk"; depends=[survival bdsmatrix nlme Matrix bdsmatrix ]; };
coxphf = derive { name="coxphf"; version="1.11"; type="cran"; sha256="0494szmhc7qp1qynrqf3kmna26h4ams40qr6w7qj4al54mkp0346"; depends=[survival ]; };
coxphw = derive { name="coxphw"; version="3.0.0"; type="cran"; sha256="11pyd09dwkbixjz1riv8rz3jrp1ix6cbn1fw9nm8vnrc19x5lkz5"; depends=[survival ]; };
coxrobust = derive { name="coxrobust"; version="1.0"; type="cran"; sha256="08hp0fz5gfxgs3ipglj6qfr6v63kzxkrzg650bmzabq8dvrxd97q"; depends=[survival ]; };
coxsei = derive { name="coxsei"; version="0.1"; type="cran"; sha256="1agr0gmyy1f2x6yspj04skgpi1drpbc1fcbwhhhjsz1j6c64xagy"; depends=[ ]; };
cp4p = derive { name="cp4p"; version="0.2"; type="cran"; sha256="1rm6dgfiv2dx17svlzyaiqiqkpip24ns5wp8lddr6gmpws581ywl"; depends=[multtest qvalue limma MESS ]; };
cpa = derive { name="cpa"; version="1.0"; type="cran"; sha256="14kcxayw4cdbjfa6bvfzqp8flwc0sr3hmh2dnr1dfax0hnccd71m"; depends=[ ]; };
cpca = derive { name="cpca"; version="0.1.2"; type="cran"; sha256="1pccsjahb1qynnxa0akhfpcmhfmdg4rd1s6pfqrdl7bwbcmq4lqf"; depends=[ ]; };
cpk = derive { name="cpk"; version="1.3-1"; type="cran"; sha256="1njmk2w6zbp6j373v5nd1b6b8ni4slgzpf9qxn5wnqlws8801n73"; depends=[ ]; };
cplexAPI = derive { name="cplexAPI"; version="1.2.11"; type="cran"; sha256="1rfvq2a561dz3szvrs9s5gsizwwp0b5rn4059v9divzw23clr2a9"; depends=[ ]; };
cplm = derive { name="cplm"; version="0.7-2"; type="cran"; sha256="0vwj130r5wbax9ixcn0fdznh1zrr0wq48iivmlymqbhbqajmv8fb"; depends=[coda Matrix biglm ggplot2 minqa nlme reshape2 statmod tweedie Matrix ]; };
cqn = derive { name="cqn"; version="1.12.0"; type="bioc"; sha256="11rprdpfbjkfpdxvzkd25vr0gn5gqkydafp94bmynf02lk8hvmcq"; depends=[mclust nor1mix preprocessCore quantreg ]; };
cqrReg = derive { name="cqrReg"; version="1.2"; type="cran"; sha256="1sn8pkbqb058lbysdf2y1s734351a91kwbanplyzv3makbbdm4ca"; depends=[Rcpp quantreg Rcpp RcppArmadillo ]; };
cquad = derive { name="cquad"; version="1.0"; type="cran"; sha256="0pfga45lpq5lgw0jbvp5wasj5m6maj2xr00adsab4c0c5rm7x2wf"; depends=[ ]; };
crackR = derive { name="crackR"; version="0.3-9"; type="cran"; sha256="18fr3d6ywcvmdbisqbrbqsr92v33paigxfbslcxf7pk26nzn2lly"; depends=[Hmisc evd ]; };
cramer = derive { name="cramer"; version="0.9-1"; type="cran"; sha256="1dlapmqizff911v3jv8064ddg8viw28nq05hs77y5p4pi36gpyw4"; depends=[boot ]; };
crank = derive { name="crank"; version="1.0-7"; type="cran"; sha256="1ni5icg1c9ypvcvcxrr7dcp1zbk4iwyns421rrqsgmpns06s59w6"; depends=[ ]; };
cranlogs = derive { name="cranlogs"; version="2.0.0"; type="cran"; sha256="13c8sa3s1xvb5naj4cy7d5azcbf716l0gp4x086sqd5dg1hqdy8b"; depends=[httr jsonlite ]; };
crantastic = derive { name="crantastic"; version="0.1"; type="cran"; sha256="0y2w9g100llnyw2qwjrib17k2r2q9yws77mf6999c93r8ygzn4f5"; depends=[ ]; };
crawl = derive { name="crawl"; version="1.4-1"; type="cran"; sha256="175w5933h5hhhjnrc0l1kg5q24b8pclnf5sf36gj1pmg8s58d1gp"; depends=[mvtnorm sp raster ]; };
crayon = derive { name="crayon"; version="1.2.1"; type="cran"; sha256="0cj5vx2v8jz10ak4sx55nj37qkkj9jhl1jp9njanawnyn7ww42sc"; depends=[memoise ]; };
crblocks = derive { name="crblocks"; version="0.9-1"; type="cran"; sha256="1m6yy6jb1dld7m9jaasms5ps8sn3v039jvlk8b0c08hmm7y0rm3z"; depends=[ ]; };
crch = derive { name="crch"; version="0.1-0"; type="cran"; sha256="1f4y2dd6lxsryyjjv569bxh1b4ymcnma0m9k7j150anzvkbrgnjn"; depends=[Formula ordinal ]; };
crimCV = derive { name="crimCV"; version="0.9.3"; type="cran"; sha256="1p2cma78fb9a2ckmwdvpb6fc0818xw2mvq565dgiimgkdmmr0iid"; depends=[ ]; };
crimelinkage = derive { name="crimelinkage"; version="0.0.3"; type="cran"; sha256="018ni9jgnm4k8vybz99drsx8phb0ar3x0raa5ydkfpgqp525sayi"; depends=[igraph geosphere ]; };
crlmm = derive { name="crlmm"; version="1.24.0"; type="bioc"; sha256="1jgmgf60j1dhpqd7wva1szf8nfcdar2q111njdzx3bi1xqyfcb7s"; depends=[oligoClasses preprocessCore Biobase BiocGenerics affyio illuminaio ellipse mvtnorm SNPchip lattice ff foreach RcppEigen matrixStats VGAM preprocessCore ]; };
crmn = derive { name="crmn"; version="0.0.20"; type="cran"; sha256="1kl1k1s2gm63f9768cg8w4j6y1gq4hws3i7hdfhj7k9015s0a25p"; depends=[pcaMethods Biobase ]; };
crn = derive { name="crn"; version="1.1"; type="cran"; sha256="1fw0cwx478bs6hxidisykz444jj5g136zld1i8cv859lf44fvx2d"; depends=[chron RCurl ]; };
crossReg = derive { name="crossReg"; version="1.0"; type="cran"; sha256="1866jhfnksv9rk89vw7w4gaxi76bxfjvqxx7cfa8nlrcsmaqd7rf"; depends=[ ]; };
crossdes = derive { name="crossdes"; version="1.1-1"; type="cran"; sha256="1d7lv3ibq1rwxx8kc3ia6l9dbz2dxdd5pnf2vhhjmwm448iamcfd"; depends=[AlgDesign gtools ]; };
crossmatch = derive { name="crossmatch"; version="1.3-1"; type="cran"; sha256="082lrv2129mfhwlh99z3g8id3a29s8854skl152bl3ig8pk2gbjz"; depends=[survival nbpMatching ]; };
crossval = derive { name="crossval"; version="1.0.2"; type="cran"; sha256="1imqmrr86yr2ml9x8cycnlr7d8yymyyypi87kxqjc32s2r16s0cx"; depends=[ ]; };
crp_CSFP = derive { name="crp.CSFP"; version="2.0"; type="cran"; sha256="0ji208hn3zimql0xhy8bl7w0vg40szw28fia7k1f7g9z0wbl9xqp"; depends=[MASS ]; };
crqa = derive { name="crqa"; version="1.0.5"; type="cran"; sha256="0kiw90p89mf207mmky98g2d4l9mnhzi4dy08d810nm16wiqabkw4"; depends=[Matrix tseriesChaos fields pracma ]; };
crrSC = derive { name="crrSC"; version="1.1"; type="cran"; sha256="171cw56q2yv1vb4qd0va75i2q89jcw1126q8pcbv0235g7p2a86z"; depends=[survival ]; };
crrstep = derive { name="crrstep"; version="2015-2.1"; type="cran"; sha256="03vd97prws9gxc7iv3jfzffvlrzhjh0g6kyvclrf87gdnwifyn1z"; depends=[cmprsk ]; };
crs = derive { name="crs"; version="0.15-24"; type="cran"; sha256="08k8vim4n85ll16zpkwbf3riz641kafn699qsg0h746zqzi1kfn7"; depends=[boot np quantreg rgl ]; };
crunch = derive { name="crunch"; version="1.1.1"; type="cran"; sha256="0a1nja6nnhga4f9kq4wy330pdrl8mj9c2mr75fdqkqgdll7dd96j"; depends=[httr jsonlite RCurl ]; };
csSAM = derive { name="csSAM"; version="1.2.4"; type="cran"; sha256="1ms8w4v5m9cxs9amqyljc2hr1178cz6pbhmv7iiq9yj1ijnl4r1x"; depends=[ ]; };
csampling = derive { name="csampling"; version="1.2-2"; type="cran"; sha256="0gj85cgc3lgv7isqbkng4wgzg8gqcic89768q2p23k4jhhn6xm2w"; depends=[marg statmod survival ]; };
csaw = derive { name="csaw"; version="1.0.7"; type="bioc"; sha256="08k6d6n7pkxrg81hplp0h775bjjnh39m00k52zmc0g56krfx7dhq"; depends=[GenomicRanges Rsamtools edgeR limma GenomicFeatures AnnotationDbi GenomicAlignments S4Vectors IRanges GenomeInfoDb ]; };
cshapes = derive { name="cshapes"; version="0.4-2"; type="cran"; sha256="015mkh0iwdbhpbk8gpnq48pp026mfidd69rj70arpmg3knd2jvff"; depends=[sp maptools plyr ]; };
cslogistic = derive { name="cslogistic"; version="0.1-3"; type="cran"; sha256="1s8p3qpz81nn6zr0pzw6h9ca3p6ahd8zj640vy5gcb5waqwj6bfj"; depends=[mvtnorm ]; };
csn = derive { name="csn"; version="1.1.3"; type="cran"; sha256="102w1qh9hgz4j9lh5hnbw1z3b7p034si73q4pkk564a2mhzlksw4"; depends=[mvtnorm ]; };
csrplus = derive { name="csrplus"; version="1.03-0"; type="cran"; sha256="0kljndmiwblsvvdnxfywida9k0dmdwjq63d934l5yl6z7k4zd0xa"; depends=[sp ]; };
cstar = derive { name="cstar"; version="1.0"; type="cran"; sha256="1zws4cq5d37hqdxdk86g85p2wwihbqnkdsg48vx66sgffsf1fgxd"; depends=[ ]; };
csvread = derive { name="csvread"; version="1.2"; type="cran"; sha256="1zx43g4f4kr7jcmiplzjqk2nw1g5kmmfap85wk88phf6fp0w8l5p"; depends=[ ]; };
ctc = derive { name="ctc"; version="1.40.0"; type="bioc"; sha256="02c7fah15ci45qrydlqd2brmp8j0s5g8n7ms0akr1d203gc9jzfx"; depends=[amap ]; };
cts = derive { name="cts"; version="1.0-19"; type="cran"; sha256="16f6nah3w63bz8b9xlhi3a7mpkiywq6gqkxgm5am90g0bqg5j3py"; depends=[ ]; };
ctv = derive { name="ctv"; version="0.8-1"; type="cran"; sha256="1fmjhh4vr4vcvqg76dzp1avqappsap5piki1ixahikwbwirxcwvw"; depends=[ ]; };
cubature = derive { name="cubature"; version="1.1-2"; type="cran"; sha256="1vgyvygg37b6yhy8nkly4w6p01jsqg2kyam4cn0vvml5vjdlc18a"; depends=[ ]; };
cubfits = derive { name="cubfits"; version="0.1-0"; type="cran"; sha256="0iylwxzz2aa70q1xqk8r1rkfiiscj3blwq7dshkwshh91l2fgzfw"; depends=[ ]; };
cudaBayesreg = derive { name="cudaBayesreg"; version="0.3-16"; type="cran"; sha256="1xsamdsg4cq7l5r7czkg70j5gypf1dak3h353xfbz3rq0r0dni19"; depends=[cudaBayesregData oro_nifti ]; };
cudaBayesregData = derive { name="cudaBayesregData"; version="0.3-11"; type="cran"; sha256="1cls9xqgps7icjpi1mllkrksdxwc1jfhxgffvrcrqx2l16vw6qfx"; depends=[ ]; };
cudia = derive { name="cudia"; version="0.1"; type="cran"; sha256="1ms3bc8sp6l3bm75j418mmb707sy3gyvxznhfias3nd4sw7i074x"; depends=[MCMCpack mvtnorm ]; };
cumSeg = derive { name="cumSeg"; version="1.1"; type="cran"; sha256="01hn3j1i7bi2r9vsqwbgy1f1alcisxyf4316xx57bg82lb34d0s5"; depends=[lars ]; };
cummeRbund = derive { name="cummeRbund"; version="2.8.2"; type="bioc"; sha256="16w4c0bcn55xhqa29kh68qhmpd7hm3mm2m68fm2164lykap2k472"; depends=[BiocGenerics RSQLite ggplot2 reshape2 fastcluster rtracklayer Gviz plyr BiocGenerics Biobase ]; };
cumplyr = derive { name="cumplyr"; version="0.1-1"; type="cran"; sha256="07sz1wryl3kxbk67qyvnkrkdrp4virlsaia0y6rf9bqdw7rc6vi2"; depends=[ ]; };
curl = derive { name="curl"; version="0.7"; type="cran"; sha256="13592ilw5zln61prij5imdvknv6mfq5qwxgzc1w7zk75dqs9ziyc"; depends=[ ]; };
currentSurvival = derive { name="currentSurvival"; version="1.0"; type="cran"; sha256="0bqpfwf4v4pb024a98qwg81m6zd7ljg1ps42ifhxpqx7b9gdyi6c"; depends=[survival cmprsk ]; };
curvHDR = derive { name="curvHDR"; version="1.0-3"; type="cran"; sha256="0rq72prxv2r5nicss9mh4wpkfjvlbb885w85ag4qrqijzq6y8q04"; depends=[feature flowCore geometry hdrcde ks misc3d ptinpoly rgl ]; };
curvetest = derive { name="curvetest"; version="2.2"; type="cran"; sha256="1lz6rx9fmgyrlci1dyanscp2a18ki9lhrwnrzhp062flysffimg6"; depends=[locfit R_oo R_methodsS3 ]; };
customProDB = derive { name="customProDB"; version="1.6.0"; type="bioc"; sha256="1cp989qp1s5fwl6vy70fyymxcp23hpnvcb0xaznm21f07fnnmkcp"; depends=[IRanges AnnotationDbi biomaRt IRanges GenomicRanges Rsamtools GenomicAlignments Biostrings GenomicFeatures biomaRt stringr RCurl plyr VariantAnnotation rtracklayer RSQLite AnnotationDbi ]; };
cutoffR = derive { name="cutoffR"; version="1.0"; type="cran"; sha256="1801jylmpp4msyf07rhg4153kky1zvi4v0kkjb9d51dc7zkhh531"; depends=[ggplot2 reshape2 ]; };
cuttlefish_model = derive { name="cuttlefish.model"; version="1.0"; type="cran"; sha256="1rmkfyfd1323g2ymd5gi1aksp160cwy5ha5cjqh5r6fzd8hhqjxs"; depends=[ ]; };
cvAUC = derive { name="cvAUC"; version="1.1.0"; type="cran"; sha256="13bk97l5nn97h85iz93zxazhr63n21nwyrpnl856as9qp59yvn64"; depends=[ROCR data_table ]; };
cvTools = derive { name="cvTools"; version="0.3.2"; type="cran"; sha256="0b7xb6dmhqbvz32zyfbdvm9zjyc59snic6wp1r21ina48hchn3sj"; depends=[lattice robustbase lattice robustbase ]; };
cvplogistic = derive { name="cvplogistic"; version="3.1-0"; type="cran"; sha256="1lm66nn0q7665r64rdslxp35b7drdss4mys42ks54xdydcminns9"; depends=[ ]; };
cvq2 = derive { name="cvq2"; version="1.2.0"; type="cran"; sha256="19k95xg2y3wd4mx3wvbrc1invybd446g13vsp3dv05nw2kx4f6w8"; depends=[ ]; };
cvxclustr = derive { name="cvxclustr"; version="1.1.1"; type="cran"; sha256="0idmx4wgz4d0b1xzmlq5bsk2f2q38lpf9c117hg97xsfndzn7vqj"; depends=[Matrix igraph ]; };
cwhmisc = derive { name="cwhmisc"; version="5.0"; type="cran"; sha256="0b70ssss48kpjyimwm8hwcx82whg77j40qxaaj4vhhqc8d2bzgd2"; depends=[lattice ]; };
cwm = derive { name="cwm"; version="0.0.3"; type="cran"; sha256="1ln2l12whjhc2gx38hkf3xx26w5vz7m377kv67irh6rrywqqsyxn"; depends=[MASS matlab permute ]; };
cxxfunplus = derive { name="cxxfunplus"; version="1.0"; type="cran"; sha256="0kyy5shgkn7wikjdqrxlbpfl3zkkv4v1p8a1vv0xkncwarjs4n8d"; depends=[inline ]; };
cycle = derive { name="cycle"; version="1.20.0"; type="bioc"; sha256="00ibwn87v982k3qrx44k36dcwrs06s2qwvfdbk03pnm3mnmgaqmj"; depends=[Mfuzz Biobase ]; };
cycloids = derive { name="cycloids"; version="1.0"; type="cran"; sha256="00pdxny11mhfi8hf76bfyhd1d53557wcbl2bqwjzlpw5x3vdnsan"; depends=[ ]; };
cyphid = derive { name="cyphid"; version="1.1"; type="cran"; sha256="0ya9w8aw27n0mvvjvni4hxsr4xc8dd08pjxx7zkfl1ynfn5b08am"; depends=[fda ]; };
cytoDiv = derive { name="cytoDiv"; version="0.5-3"; type="cran"; sha256="00c0gqgypywgbhavb15bvj6ijrk4b5zk86w85n9kwr4069b7jvwc"; depends=[GenKern plotrix ]; };
d3Network = derive { name="d3Network"; version="0.5.2.1"; type="cran"; sha256="1gh979z9wksyxxxdzlfzibn0ysvf6h1ij7vwpd55fvbwr308syaw"; depends=[plyr rjson whisker ]; };
daMA = derive { name="daMA"; version="1.38.0"; type="bioc"; sha256="19ssjpr3ri1qlj6rx34ddis19rh54waysbjwfhysxzjfphnhpn0c"; depends=[MASS ]; };
dae = derive { name="dae"; version="2.7-0"; type="cran"; sha256="1pfd3zyvs29ij8xa1ngz2din4srl45rjnjc576h1mz16l7h5kx53"; depends=[ggplot2 ]; };
daewr = derive { name="daewr"; version="1.1-4"; type="cran"; sha256="0pmz4721999vf023hpvsf17k5fgqpwnisnwssmav46glhmzl2cyj"; depends=[lattice FrF2 BsMD ]; };
daff = derive { name="daff"; version="0.1.4"; type="cran"; sha256="1g08m9qyrlwxdy9w18132dc9klz6ayw5jbn700vkzvqibfc1l7cx"; depends=[V8 jsonlite ]; };
dafs = derive { name="dafs"; version="1.0-37"; type="cran"; sha256="1vdi57qaqdn39yf1ih2gzry02l289q4bffpksglsl4shs6bg2206"; depends=[s20x ]; };
dagLogo = derive { name="dagLogo"; version="1.4.1"; type="bioc"; sha256="0bzy3q7vfhd5c8aq4aj9mfdmafnnzhvq8qaygxdksv42i2affdj1"; depends=[biomaRt grImport motifStack pheatmap Biostrings ]; };
dagR = derive { name="dagR"; version="1.1.3"; type="cran"; sha256="13jyhwjvvrjjja18rqzfdcw9ck90qm5yjwd25nygxgdf1894y03b"; depends=[ ]; };
dagbag = derive { name="dagbag"; version="1.1"; type="cran"; sha256="1hpg7fs1yhnycziahscymkr0s3a2lyasfpj0cg677va73nrpdz12"; depends=[ ]; };
dams = derive { name="dams"; version="0.1"; type="cran"; sha256="0h0chh9ahsfvqhv1a0dfw88q7gdl1d0w11qcw0w4qmc2ipsl52i6"; depends=[RCurl ]; };
darch = derive { name="darch"; version="0.9.1"; type="cran"; sha256="0syrzmmz43msd51whkb4xy5n0kgcl50yw4w3i9sdd9k20glvwpsx"; depends=[futile_logger ff ]; };
darts = derive { name="darts"; version="1.0"; type="cran"; sha256="07i5349s335jaags352mdx8chf47ay41q7b0mh2xjwn2h9kzgqib"; depends=[ ]; };
dashboard = derive { name="dashboard"; version="0.1.0"; type="cran"; sha256="1znqwvz49r47lp6q48qaas0s63wclgybav82a247qvcavzns3kip"; depends=[Rook ]; };
data_table = derive { name="data.table"; version="1.9.4"; type="cran"; sha256="0gsnjjly3mxwfs6q0kjr42vr234mprp8kcyzcsa4dqf2ya2gs1s6"; depends=[chron reshape2 ]; };
data_tree = derive { name="data.tree"; version="0.1.6"; type="cran"; sha256="09pk4c5jkj69m6sxa2pbs1wh1w4rsg799w72fx9ib4jv22hjvrhc"; depends=[R6 ]; };
dataQualityR = derive { name="dataQualityR"; version="1.0"; type="cran"; sha256="0f2410sd6kldv7zkqsmbz1js0p5iq7zwlnfwmmnlbrd303p35p3j"; depends=[ ]; };
dataRetrieval = derive { name="dataRetrieval"; version="2.2.1"; type="cran"; sha256="1mq32blqdsc1zj3l7wbxdc9asl2nkrby5kijdk0rix574cxml9qm"; depends=[XML RCurl reshape2 lubridate plyr ]; };
datacheck = derive { name="datacheck"; version="1.2.2"; type="cran"; sha256="1i3n5g1b6ix8gpn4c74s7ll1dbrllrzgpb1f3hk449d6p4kmisq6"; depends=[stringr Hmisc shiny ]; };
dataframes2xls = derive { name="dataframes2xls"; version="0.4.6"; type="cran"; sha256="18m4cbr3pxdn5ynxwd8klwwli3cyfjcn83pl17sn1rbavqlnkq5c"; depends=[ ]; };
datalist = derive { name="datalist"; version="0.2"; type="cran"; sha256="0q82wira0sfi63cn66f5cfyd15f19ig7pbmpk56j38a3115l2fmn"; depends=[assertthat ]; };
datamap = derive { name="datamap"; version="0.1-1"; type="cran"; sha256="0qm4zb9ldg4wz1a7paj5ilr1dhyagq81rk9l2v43hmkv52sssgkv"; depends=[DBI ]; };
datamart = derive { name="datamart"; version="0.5.2"; type="cran"; sha256="0c0l157fzkcp30ch4ymaalcx18zhz6sa5srr50w9izhbx3pmldxp"; depends=[RJSONIO XML RCurl base64 gsubfn markdown ]; };
datamerge = derive { name="datamerge"; version="1.0-1"; type="cran"; sha256="03xb48igkh0f91iq6qc2j5xzqfy2n51ci5i850gn09mm9k4lxij1"; depends=[xtermStyle ]; };
datautils = derive { name="datautils"; version="0.1.4"; type="cran"; sha256="0adg87p9rzz62cm0s80x71mhsg3yfg93gskv1hs1l8gaj78zd1y1"; depends=[deldir gplots gtools ]; };
dataview = derive { name="dataview"; version="2.1.1"; type="cran"; sha256="1nn33h5c1h4a3zm1xm7sdz4s6sy0f3r53jhm7bv6qk7aiylwqf6v"; depends=[data_table xtermStyle ]; };
date = derive { name="date"; version="1.2-34"; type="cran"; sha256="066zsddpw87x1bhl3479k6fd1wrl3x91n5rd454diwmwq2s8i5qb"; depends=[ ]; };
dave = derive { name="dave"; version="1.5"; type="cran"; sha256="0sw9hc4y9wdfbnnk6isg7z7sky6ni68pkjxdlrph5m7jcyqphz96"; depends=[labdsv vegan ]; };
dawai = derive { name="dawai"; version="1.1"; type="cran"; sha256="0icf8iys980z0agyba94xa16400p2vdvg8hg52vvlgfc85ikqfkx"; depends=[mvtnorm ibdreg boot ]; };
db_r = derive { name="db.r"; version="0.1.3"; type="cran"; sha256="1zjsj0rxg9wysl1gzm7ggphd5mi02mj0bn80kmbx1vb7aa7bnxxh"; depends=[DBI rjson RSQLite stringr ]; };
dbConnect = derive { name="dbConnect"; version="1.0"; type="cran"; sha256="1vab5l4cah5vgq6a1b9ywx7abwlsk0kjx8vb3ha03hylcx546w42"; depends=[RMySQL gWidgets ]; };
dbEmpLikeGOF = derive { name="dbEmpLikeGOF"; version="1.2.4"; type="cran"; sha256="0vhpcxy702cp3lvlif2fzmvccys8iy7bv1fbg6ki2l8bvn2f7c5p"; depends=[ ]; };
dbEmpLikeNorm = derive { name="dbEmpLikeNorm"; version="1.0.0"; type="cran"; sha256="0h5r2mqgallxf9hin64771qqn9ilgk1kpsjsdj2dqfl3m8zg967l"; depends=[dbEmpLikeGOF ]; };
dbarts = derive { name="dbarts"; version="0.8-5"; type="cran"; sha256="1w170mdfl5qz7dv1p2kqx0wnkmbz2gxh2a4p7vak1nckhz2sgpgn"; depends=[ ]; };
dblcens = derive { name="dblcens"; version="1.1.7"; type="cran"; sha256="02639vyaqg7jpxih8cljc8snijb78bb084f4j3ns6byd09xbdwcw"; depends=[ ]; };
dbmss = derive { name="dbmss"; version="2.2.0"; type="cran"; sha256="0ngf7l7nsp03jvspa7xfhal2ccaxcvjny5sd5aypfwfgrndrd71z"; depends=[spatstat Rcpp cubature Rcpp ]; };
dbstats = derive { name="dbstats"; version="1.0.4"; type="cran"; sha256="1miba5h5hkpb79kv9v9hqb5p66sinxpqvrw9hy9l5z4li6849yy1"; depends=[cluster pls ]; };
dcGOR = derive { name="dcGOR"; version="1.0.4"; type="cran"; sha256="1vvij7f2vw9xaky32wyr7h1iwcq5m3s2s46kn9vjq1jllw85phgl"; depends=[Matrix igraph dnet ]; };
dcemriS4 = derive { name="dcemriS4"; version="0.55"; type="cran"; sha256="15x4hjc5fwpn80h90q5x9a3p84pp3mxsmcx4hq5l0j52l9dy9nv3"; depends=[oro_nifti ]; };
dclone = derive { name="dclone"; version="2.0-0"; type="cran"; sha256="1j8g955rvdgcmc9vnz3xizlkq8w1bslav5h72igvzzffcvqbj9hq"; depends=[coda ]; };
dcmle = derive { name="dcmle"; version="0.2-4"; type="cran"; sha256="0ddb0x0lwk8jgx05k747sa33d2rrj4g2p4aj0m5bw1c9d5gril0m"; depends=[dclone rjags coda lattice ]; };
dcmr = derive { name="dcmr"; version="1.0"; type="cran"; sha256="1a89wr1n8sykjbwa316zlmcffaysksrqnbd89anxqj8sgw9xv6jq"; depends=[ggplot2 KFAS plyr reshape2 tableplot ]; };
dcv = derive { name="dcv"; version="0.1.1"; type="cran"; sha256="12c716x8dnxnqksibpmyysqp2axggvy9dpd55s9bhnsvqvi6dshj"; depends=[lmtest ]; };
ddCt = derive { name="ddCt"; version="1.20.0"; type="bioc"; sha256="1dyz23i31fs35h7ay1vah8v41289vf04djxshm10bazxaa2855w4"; depends=[Biobase RColorBrewer xtable lattice ]; };
ddalpha = derive { name="ddalpha"; version="1.1.1"; type="cran"; sha256="1i0zchgp5pdfa9p1mpd9svbigbn01jqfl47nnqixzlgz1808929c"; depends=[MASS class robustbase Rcpp BH Rcpp ]; };
ddeploy = derive { name="ddeploy"; version="1.0.2"; type="cran"; sha256="115k379l39gzddvn0l45l0sr0wyd7r486i28qs2hfyjnk1288vrs"; depends=[httr jsonlite ]; };
ddgraph = derive { name="ddgraph"; version="1.10.1"; type="bioc"; sha256="05hxphpg71d4kzyv4949awdrqhw2hx22lcpmyhv4cbc388nrb9ji"; depends=[graph Rcpp bnlearn gtools pcalg RColorBrewer plotrix MASS Rcpp ]; };
ddst = derive { name="ddst"; version="1.03"; type="cran"; sha256="0zbqw4qmrh80jjgn8jzbnq3kykj1v5bsg6k751vircc0x9vnig3j"; depends=[orthopolynom evd ]; };
deSolve = derive { name="deSolve"; version="1.11"; type="cran"; sha256="014fbrgzlarg2w27kq9qy7631hvhlf7ldrn5g8x2xibb260832s1"; depends=[ ]; };
deTestSet = derive { name="deTestSet"; version="1.1.2"; type="cran"; sha256="142261xjlz6h9vakiks04rz7hgv9b5j6s77acavd5s5mpi51ysh7"; depends=[deSolve ]; };
deal = derive { name="deal"; version="1.2-37"; type="cran"; sha256="1nn2blmxz3j5yzpwfviarnmabbyivc25cbfhcf814avrhpysvpxa"; depends=[ ]; };
deamer = derive { name="deamer"; version="1.0"; type="cran"; sha256="1xbxr78n6s1yhf192ab4syi1naqlwl9z4cxzchrkw80q7bxqfiz8"; depends=[ ]; };
debug = derive { name="debug"; version="1.3.1"; type="cran"; sha256="0mpwi6sippxyr1l8xf48xqv6qw6pmfkxs13k1gjyd7bkzlbchgqd"; depends=[mvbutils ]; };
decctools = derive { name="decctools"; version="0.2.0"; type="cran"; sha256="0k5w49s9s51m7w1h5adk26nw1ypwv5g1mlal78qmx5a4jzaf5bw9"; depends=[XLConnect stringr XML reshape2 RCurl lubridate plyr ]; };
decode = derive { name="decode"; version="1.1"; type="cran"; sha256="06c6l2s32s1vri51hbnl17sxgkl7x8537prk0zzq6zlqhkwy6j77"; depends=[ ]; };
decompr = derive { name="decompr"; version="3.0.0"; type="cran"; sha256="06m2k3rjna6nii1fc9b3v2wijkjrknyhskr1ampbdgwligddnzay"; depends=[ ]; };
decon = derive { name="decon"; version="1.2-4"; type="cran"; sha256="1v4l0xq29rm8mks354g40g9jxn0didzlxg3g7z08m0gvj29zdj7s"; depends=[ ]; };
deducorrect = derive { name="deducorrect"; version="1.3-5"; type="cran"; sha256="06lcqnay36fgkzvgbiq7b67r9lfgll3lxfr1pmx14vmivshb6mmm"; depends=[editrules ]; };
deepSNV = derive { name="deepSNV"; version="1.12.0"; type="bioc"; sha256="1ff3x138hmlvpcnqsrfbsbsl51rr4a05h8qsgkjijv33k55f5319"; depends=[Rsamtools GenomicRanges IRanges Biostrings VGAM VariantAnnotation Rsamtools Rsamtools ]; };
deepnet = derive { name="deepnet"; version="0.2"; type="cran"; sha256="09crwiq12wzwvdp3yxhc40vdh7hsnm4smqamnk4i6hli11ca90h4"; depends=[ ]; };
degenes = derive { name="degenes"; version="1.1"; type="cran"; sha256="1xxn5j06qizywimrp1pl8z3yjdy1a167b9jnm77gmv87rp6j240c"; depends=[ ]; };
degreenet = derive { name="degreenet"; version="1.3-1"; type="cran"; sha256="0k0a1c1bv7zclrarfzf0d6avbd8zjnc3zd155jzmhi8dacr6r73w"; depends=[igraph network ]; };
deldir = derive { name="deldir"; version="0.1-9"; type="cran"; sha256="0shzyqfqdkbhpf4hcwjjfzzizh6z56iamx2blhj79izg8xkvl2h9"; depends=[ ]; };
deltaGseg = derive { name="deltaGseg"; version="1.6.0"; type="bioc"; sha256="0b6pxmxzrdxqj9bd8i589xb7vjs2ckygj2a79vcj7gfcigmga8fd"; depends=[ggplot2 changepoint wavethresh tseries pvclust fBasics reshape scales ]; };
deltaPlotR = derive { name="deltaPlotR"; version="1.5"; type="cran"; sha256="0hbaibl4b50pg9ypyhz4700w6kir4jiyyl0230a8hjmb92aqn303"; depends=[MASS ]; };
demi = derive { name="demi"; version="1.1.2"; type="cran"; sha256="04dq4db9ibvv91nm0gz8dfbgv1gpmalf9hv6i78dwhh1xzjg1mig"; depends=[R_utils affxparser affy oligo plyr devtools ]; };
deming = derive { name="deming"; version="1.0-1"; type="cran"; sha256="00v59qb6qwbwsvcwi59d0c0g3czfz1190ccj4dx6yarizr4g6cy8"; depends=[boot ]; };
demoKde = derive { name="demoKde"; version="0.9-3"; type="cran"; sha256="1nkvsjms1gfvjz5l7zza0cgx4yqmn2kgnax44pysn0zqmhfny8bw"; depends=[ ]; };
demography = derive { name="demography"; version="1.18"; type="cran"; sha256="17r7sz5ikngc4qg495wmn99xawmllpx7rw2gpv8q8bypbc47wlfv"; depends=[forecast rainbow ftsa cobs mgcv strucchange RCurl ]; };
dendextend = derive { name="dendextend"; version="0.18.3"; type="cran"; sha256="1s6bdkibb066yima31sn8ddp8qrwyx2zc84wf2kixs37ynhw1xi1"; depends=[magrittr whisker ]; };
dendextendRcpp = derive { name="dendextendRcpp"; version="0.6.1"; type="cran"; sha256="125kjlfcj7y282j5g62c6j5hflvwngrm70waxym0lzr7xldwx7bk"; depends=[Rcpp dendextend Rcpp ]; };
dendroextras = derive { name="dendroextras"; version="0.2.1"; type="cran"; sha256="0k1w374r4fvfcbzhrgcvklccjggyz755z7wc2vqfi3c5hvdb9ns4"; depends=[ ]; };
dendsort = derive { name="dendsort"; version="0.3.2"; type="cran"; sha256="0qj65jraj6ksmsfsrc4f3y8m7x5lqg9bqc9yb5s3bav2r8qjyhv6"; depends=[ ]; };
denovolyzeR = derive { name="denovolyzeR"; version="0.1.0"; type="cran"; sha256="0ys8pi3wp2cvywsnh07wldv6vcb8sn7f1divpaw8f6gnw7mnhimd"; depends=[dplyr reshape ]; };
denpro = derive { name="denpro"; version="0.9.2"; type="cran"; sha256="19hrpfd44jaavq81dbyj3frris4aflfc8lig0471whv0pc6jci2k"; depends=[ ]; };
densityClust = derive { name="densityClust"; version="0.1-1"; type="cran"; sha256="1apv9n871dshln5ccg8x3pwqi8yfx73ijfqsvzcljqnv36qpqpqd"; depends=[ ]; };
denstrip = derive { name="denstrip"; version="1.5.3"; type="cran"; sha256="10h8ivs7nd6gkf93zvqzqjb1lzfabvvs182636m67f86jfn6d4y4"; depends=[ ]; };
depend_truncation = derive { name="depend.truncation"; version="2.3"; type="cran"; sha256="1n0v5cwmgpdyapr185s9przdsrxwaqf32038zm1na0yna8qmj8wl"; depends=[mvtnorm ]; };
depmix = derive { name="depmix"; version="0.9.13"; type="cran"; sha256="1dkwc1bjq19hjzichh78b41qslklgwib8mglbn23q9dsys8a3ccz"; depends=[MASS ]; };
depmixS4 = derive { name="depmixS4"; version="1.3-2"; type="cran"; sha256="18xmn5fv9wszh86ph91yypfnyrxy7j2gqrzzgkb84986fjp2sxlq"; depends=[nnet MASS Rsolnp ]; };
depth = derive { name="depth"; version="2.0-0"; type="cran"; sha256="1aj4cch3iwb6vz0bzj4w5r6jp2qs39g8lxi2nmpbi3m7a6qrgr2q"; depends=[abind rgl circular ]; };
depthTools = derive { name="depthTools"; version="0.4"; type="cran"; sha256="1699r0h1ksgrlz9xafw2jnqfsc7xs0yaw97fc6dv3r11x6gxk00y"; depends=[ ]; };
derfinder = derive { name="derfinder"; version="1.0.10"; type="bioc"; sha256="1733lqy4hdq8dl44p3c5l1r0vki1pzxxjawbzx6p2fz8jd0aiilv"; depends=[AnnotationDbi BiocParallel bumphunter derfinderHelper GenomeInfoDb GenomicAlignments GenomicFeatures GenomicFiles GenomicRanges Hmisc IRanges qvalue Rsamtools rtracklayer S4Vectors ]; };
derfinderHelper = derive { name="derfinderHelper"; version="1.0.4"; type="bioc"; sha256="0yiimvsiilj8qh72xijpirdf32gjai5dz1087wgn5rwkwh7qxsi6"; depends=[IRanges Matrix S4Vectors ]; };
derfinderPlot = derive { name="derfinderPlot"; version="1.0.3"; type="bioc"; sha256="0zg3rjswi61zmji93gcslyr1jgppsbhrjcbsr1il6rjklrgkkd07"; depends=[derfinder GenomeInfoDb GenomicFeatures GenomicRanges ggbio ggplot2 IRanges plyr RColorBrewer reshape2 scales ]; };
descomponer = derive { name="descomponer"; version="1.2"; type="cran"; sha256="08hc3p4l8dy1h2z8ijifwlgidmac9b29g1k725yzwzbdr5jzvnzl"; depends=[taRifx ]; };
descr = derive { name="descr"; version="1.1.1"; type="cran"; sha256="1flnz05j390izwadsv2l5bcxgl6zmq4vzz1aycfifjz75zyqqy8s"; depends=[xtable ]; };
deseasonalize = derive { name="deseasonalize"; version="1.35"; type="cran"; sha256="1fjsa7g34dckjs6mx9b10m99byxagggm0p9pw2f1vmpjqlasin0l"; depends=[lattice FitAR ]; };
designGG = derive { name="designGG"; version="1.1"; type="cran"; sha256="1x043j36llwd7kd4skbpl2smz2ybsxjqf5yd1xwqmardq60gdv2w"; depends=[ ]; };
desirability = derive { name="desirability"; version="1.9"; type="cran"; sha256="1p3w4xk4is22gqgy2gyxj80vib8s40lgllqc2fnz66kb2cln10n6"; depends=[ ]; };
desire = derive { name="desire"; version="1.0.7"; type="cran"; sha256="0jmj644nj6ck0gsk7c30af9wbg3asf0pqv1fny98irndqv508kf6"; depends=[loglognorm ]; };
detect = derive { name="detect"; version="0.3-2"; type="cran"; sha256="1mjc8h3xb2zbj4dxala8yqbdl94knf9q0qvkc37ag1b2w4y2d2b0"; depends=[Formula ]; };
detrendeR = derive { name="detrendeR"; version="1.0.4"; type="cran"; sha256="1z10gf6mgqybb9ml6z3drq65n7g28h2pqpilc2h84l6y76sy909c"; depends=[dplR ]; };
devEMF = derive { name="devEMF"; version="2.0"; type="cran"; sha256="19wraakvf7xsf1i108dz3ipl1hdixgwa6h0bizxfyajw5yqmw8mw"; depends=[ ]; };
devtools = derive { name="devtools"; version="1.8.0"; type="cran"; sha256="14q1c6jfnvljn50ccl2irfq8awa03z8fni3n5fdsdv4l9cdwj29p"; depends=[httr RCurl memoise whisker evaluate digest rstudioapi jsonlite roxygen2 rversions git2r ]; };
dexus = derive { name="dexus"; version="1.6.0"; type="bioc"; sha256="1fyg8ll9w74qzgcjy2cbs250dbwnhmivz412i6p62yr1050h0hrp"; depends=[BiocGenerics ]; };
df2json = derive { name="df2json"; version="0.0.2"; type="cran"; sha256="10m7xn7rm4aql1bzpckjcx5kvdw44m1pxgzqkgkd40lzqb1cwk18"; depends=[rjson ]; };
dfcrm = derive { name="dfcrm"; version="0.2-2"; type="cran"; sha256="1kwgxfqnz2bcicyb27lp6bnvrj30lqjpn5fg7kaqshgkj53g0s4f"; depends=[ ]; };
dfexplore = derive { name="dfexplore"; version="0.2.1"; type="cran"; sha256="04nbhn59l1kas26nwj4qflkjvvr33sj1mm7zg7fhvya85gvlhrbf"; depends=[ggplot2 ]; };
dfmta = derive { name="dfmta"; version="1.3-2"; type="cran"; sha256="1x3hz6by82mjcs8y6h7n380wr884dlx2pjpfsbz84zrk78hhnh5g"; depends=[RcppArmadillo BH RcppProgress Rcpp ]; };
dfoptim = derive { name="dfoptim"; version="2011.8-1"; type="cran"; sha256="19j0h5xdrbmykz2nrjrwqwaw7466zvqaiwafrm1jc12mk5azfcqx"; depends=[ ]; };
dga = derive { name="dga"; version="1.2"; type="cran"; sha256="13mfampnghcs5xplzq69bw948lqhw561pn54j3gb0ydsg5bm5vmr"; depends=[chron ]; };
dglars = derive { name="dglars"; version="1.0.5"; type="cran"; sha256="02g8x4p98jv3cfwfxvh68aivb72651w4977g4xqksq0p4nqcs636"; depends=[ ]; };
dglm = derive { name="dglm"; version="1.8.1"; type="cran"; sha256="12q49nf30ji4c7vysf2s48bif7crwlmqn8cx0wy23xlhj5x2p4b3"; depends=[statmod ]; };
dgmb = derive { name="dgmb"; version="1.1"; type="cran"; sha256="134ckgq7rsdypg3c586kkhr9rx5ya34smp38i9lzvbdanzrpf33w"; depends=[MASS abind ]; };
dgof = derive { name="dgof"; version="1.2"; type="cran"; sha256="02qnb3i131hx05k8l5n3xbl5sqmmc2fh19bsgcacgj8ixs4wyjvi"; depends=[ ]; };
dhglm = derive { name="dhglm"; version="1.2"; type="cran"; sha256="14wa0xkwb1qvkynk95aw6y4rx3jjdki19wdydg3wv5nfagcc4vdz"; depends=[Matrix numDeriv boot ]; };
diagram = derive { name="diagram"; version="1.6.3"; type="cran"; sha256="1iga574r31hz7g50nmicbah4rj4l46w6lgw3sz1b69iv6hpp7sq1"; depends=[shape ]; };
diaplt = derive { name="diaplt"; version="1.2.1"; type="cran"; sha256="0pya6rqzsvc5nd3smhydvabarglc4nn04q605vbllmbhq9rv00pa"; depends=[ ]; };
dice = derive { name="dice"; version="1.2"; type="cran"; sha256="0gic7lqnsdmwv3dbzwwmcwdfyfqlq8kpr2pciqphd1j2ligzwl3s"; depends=[gtools ]; };
dichromat = derive { name="dichromat"; version="2.0-0"; type="cran"; sha256="1l8db1nk29ccqg3mkbafvfiw0775iq4gapysf88xq2zp6spiw59i"; depends=[ ]; };
dicionariosIBGE = derive { name="dicionariosIBGE"; version="1.6"; type="cran"; sha256="1rss1ydhcn6sma2lmlpq6s0h3dglwc20w499x1jzkcjnzc1rc7gl"; depends=[ ]; };
dielectric = derive { name="dielectric"; version="0.2.3"; type="cran"; sha256="1p1c0w7a67zxp1cb99yinylk5r1v89mmpfybcy94ydydhydbhivk"; depends=[ ]; };
difR = derive { name="difR"; version="4.6"; type="cran"; sha256="1803j0ql1g8gdy9i0wy4sz9sbl52dqjqcwbnknyrb34r51jmij5k"; depends=[lme4 ltm ]; };
diffEq = derive { name="diffEq"; version="1.0-1"; type="cran"; sha256="1xmb19hs0x913g45szmm26xx5xp85v182wqf0lnl4raxaf47yhkm"; depends=[deSolve rootSolve bvpSolve ReacTran deTestSet shape ]; };
diffGeneAnalysis = derive { name="diffGeneAnalysis"; version="1.48.0"; type="bioc"; sha256="0gns3f7zqilzp6zb3lyqrqy2cxzrahbv2vc5qygpnrx9pa0dpbqz"; depends=[minpack_lm ]; };
diffIRT = derive { name="diffIRT"; version="1.4"; type="cran"; sha256="13axwzsrlr1akj4viwsyaplh11krixg3l07qi58c81jrcrmqpgv1"; depends=[statmod ]; };
diffdepprop = derive { name="diffdepprop"; version="0.1-9"; type="cran"; sha256="0mgrm1isr26v2mcm6fkzc7443ji00vpnqmw4zngx81n7442b3cl2"; depends=[gee rootSolve PropCIs ]; };
diffeR = derive { name="diffeR"; version="0.0-2"; type="cran"; sha256="1dkmwr6klqx950g9214n2rbd0p3k668w5217b0nvz6vfp3gczkjz"; depends=[rgdal raster ggplot2 ]; };
diffractometry = derive { name="diffractometry"; version="0.1-8"; type="cran"; sha256="1m6cyf1kxm9xf1z4mn4iz0ggiy9wcyi8ysbgcsk7l78y7nqh1h99"; depends=[ ]; };
diffusionMap = derive { name="diffusionMap"; version="1.1-0"; type="cran"; sha256="1l985q2hfc8ss5afajik4p25dx628yikvhdimz5s0pql800q2yv3"; depends=[scatterplot3d igraph Matrix ]; };
digest = derive { name="digest"; version="0.6.8"; type="cran"; sha256="0m9grqv67hhf51lz10whymhw0g0d98466ka694kya5x95hn44qih"; depends=[ ]; };
digitalPCR = derive { name="digitalPCR"; version="1.0"; type="cran"; sha256="0gjxlw0f2msh2x5jpzkpq8xc67zpv560q4vql5nwifm44dwar753"; depends=[ ]; };
dils = derive { name="dils"; version="0.8.1"; type="cran"; sha256="1q6ba9j14hzf7xy895mzxc6n9yjgind55jf350iqscwzxf7ynp33"; depends=[igraph Rcpp Rcpp ]; };
dinamic = derive { name="dinamic"; version="1.0"; type="cran"; sha256="0mx72q83bbwm10ayr3f1dzwr5wgz7gclw7rh39yyh95slg237nzr"; depends=[ ]; };
diptest = derive { name="diptest"; version="0.75-6"; type="cran"; sha256="158azvdf76h5mp26lw2mjzwp4hwc2psqd9kn5989y4a1jmzxp2bg"; depends=[ ]; };
directPA = derive { name="directPA"; version="1.1"; type="cran"; sha256="0sri3981vk997qjl3c3zchn3vx0h3pdbnagcvds4bnrpycvn4bz8"; depends=[rgl calibrate ]; };
directlabels = derive { name="directlabels"; version="2013.6.15"; type="cran"; sha256="083cwahz320r4w4jbh62pxmzn1i1hixp398zm8f2fpzh4qp5y44g"; depends=[quadprog ]; };
dirmult = derive { name="dirmult"; version="0.1.3-4"; type="cran"; sha256="1r9bhw1z0c1cgfv7jc0pvdx3fpnwplkxwz8j8jjvw14zyx803rnz"; depends=[ ]; };
discSurv = derive { name="discSurv"; version="1.0.0"; type="cran"; sha256="0yq0vpdg6n21ar2r3jbgv2kxy7jn6gssyrrs6vfw4rk1q0bw6b2w"; depends=[functional Matrix matrixcalc mvtnorm numDeriv caret mgcv ]; };
disclap = derive { name="disclap"; version="1.5"; type="cran"; sha256="0piv9gxhxcd4pbh5qjn9c3199f32y3qiw5vy8cr77ki70dnmr66n"; depends=[ ]; };
disclapmix = derive { name="disclapmix"; version="1.6"; type="cran"; sha256="0g1yg4n4pfy0295faw2scfh45m978ymmlx9bl3h8849kfaizkysi"; depends=[Rcpp disclap cluster Rcpp ]; };
discreteMTP = derive { name="discreteMTP"; version="0.1-2"; type="cran"; sha256="13qsf1kc3rph0kkdkz31qj072www5dwjyk73lfpy141rzhcn1v1x"; depends=[ ]; };
discreteRV = derive { name="discreteRV"; version="1.2.1"; type="cran"; sha256="06gvfn5v54gbal7kpnfcxwaacbq8354yvc47kjipn29bqpw9b6mb"; depends=[plyr MASS ]; };
discretization = derive { name="discretization"; version="1.0-1"; type="cran"; sha256="00vq2qsssnvgpx7ihbi9wcafpb29rgv01r06fwqf9nmv5hpwqbmp"; depends=[ ]; };
discrimARTs = derive { name="discrimARTs"; version="0.2"; type="cran"; sha256="088v4awic4bhzqcr7nvk2nldf8cm1jqshg2pzjd2l2p1cgwmlxib"; depends=[RUnit ]; };
diseasemapping = derive { name="diseasemapping"; version="1.2.0"; type="cran"; sha256="1l6w1f4zxfp1hrhvmxgijj2kwy7x0na2yf75ifqrbh1i499j8zjq"; depends=[sp ]; };
diskmemoiser = derive { name="diskmemoiser"; version="1.0-1"; type="cran"; sha256="0lacadc3mm1w55sff3lphp3xrr1inn2r382c1z8gf6kzal7c9pd8"; depends=[digest ]; };
dismo = derive { name="dismo"; version="1.0-12"; type="cran"; sha256="1zm3z9z2ramsp85x96rrnmj5zabm8r7f0wfxrxg2sgddwwqvxpsv"; depends=[raster sp ]; };
disp2D = derive { name="disp2D"; version="1.0"; type="cran"; sha256="0q5bds2r1mqzcwmnj61dmwqv6b0s0scq5h3nim47q3wp0n4gbslz"; depends=[geometry ]; };
disparityfilter = derive { name="disparityfilter"; version="2.1"; type="cran"; sha256="0ld43hd4dr389pd8sncslp707jyfgbx7w1larq75gkzjykc29aqw"; depends=[igraph ]; };
displayHTS = derive { name="displayHTS"; version="1.0"; type="cran"; sha256="0mqfdyvn2c5c3204ykyq29ydldsq0kb3a1d7mrzqr7cvrj1ahlqa"; depends=[ ]; };
dispmod = derive { name="dispmod"; version="1.1"; type="cran"; sha256="141gzhnmxxl495cpjgd4wnvdrbz6715m6sd1pycrbaqrsdc1pv57"; depends=[ ]; };
disposables = derive { name="disposables"; version="1.0.0"; type="cran"; sha256="0xd8war6vav8swpwgmyi9hd6xv0j6j72yrk4sdcwiwzgs4l8cbfj"; depends=[ ]; };
dissUtils = derive { name="dissUtils"; version="1.0"; type="cran"; sha256="00fzlmkdfw2s3k824wp2pk3v7cvxnywi1hfp86g4mm95z2qlw9br"; depends=[ ]; };
distfree_cr = derive { name="distfree.cr"; version="1.0"; type="cran"; sha256="13y714l6b3kkpp75fdrsbdclgj1vw1xsvbj9pxi4lkwf11wwmrqr"; depends=[ ]; };
distillery = derive { name="distillery"; version="1.0-1"; type="cran"; sha256="0hfj4qbfb5219dm7yrgf2h4jrh2qsjhwrbv8gbrxcr0xf6gqbxmv"; depends=[ ]; };
distory = derive { name="distory"; version="1.4.2"; type="cran"; sha256="12j19cb1b4prm8m43gya15kia1ii1k0yy7hkngpn2vsyk7n2z65m"; depends=[ape ]; };
distr = derive { name="distr"; version="2.5.3"; type="cran"; sha256="13ssdidbh4x534f0vvhfpi5cdrhlpmrz8s0y33q7ccf3dfmdsyan"; depends=[startupmsg sfsmisc SweaveListingUtils ]; };
distrDoc = derive { name="distrDoc"; version="2.5.1"; type="cran"; sha256="02wcqy9z36lxkpxy42vj1yv7x2v3i57rngpw58s7immzp5j3dlam"; depends=[distr distrEx distrSim distrTEst distrTeach RandVar distrMod MASS SweaveListingUtils startupmsg ]; };
distrEllipse = derive { name="distrEllipse"; version="2.5"; type="cran"; sha256="1slzzmcf09mqqba287rpgpwbsq6j5lprjgxda5lrc21znvrgfxn3"; depends=[mvtnorm setRNG distr distrEx distrSim ]; };
distrEx = derive { name="distrEx"; version="2.5"; type="cran"; sha256="0mbccd53r9wl875i702j14wlrv7pjgrwzlnyc511cqa5pg3mn81i"; depends=[distr ]; };
distrMod = derive { name="distrMod"; version="2.5.3"; type="cran"; sha256="1xa6a8fxhb87z4bimvnrylm63q9m90kmm49w2dik79a9d5x5q29b"; depends=[distr distrEx RandVar MASS sfsmisc startupmsg ]; };
distrRmetrics = derive { name="distrRmetrics"; version="2.5"; type="cran"; sha256="0c7fhckw7hav68gag8ymgicywl2vbnvqpjxca0x24wpdi1gs4jf6"; depends=[distr fBasics fGarch ]; };
distrSim = derive { name="distrSim"; version="2.5.2"; type="cran"; sha256="0ipg4l2vyifaj1r9a4cc8kg32s65jpz5wxrlnrix95xk5wasdpbh"; depends=[setRNG distr ]; };
distrTEst = derive { name="distrTEst"; version="2.5"; type="cran"; sha256="1swl4v70gkkpidddsgqf0dqz9j0xz5j1wk44bhpi4ficim7hap3l"; depends=[setRNG distrSim startupmsg ]; };
distrTeach = derive { name="distrTeach"; version="2.5"; type="cran"; sha256="0a7qfqpirzcd94dvcvmprhhj2j1yl3lpizsi8mdqr19zcp6dw21k"; depends=[distr distrEx ]; };
distrom = derive { name="distrom"; version="0.3-2"; type="cran"; sha256="08brd85kg7sfvxy9xxjbpzh5zirfxyhjvl9zsxnqy0zlhq7p05q8"; depends=[Matrix gamlr ]; };
divagis = derive { name="divagis"; version="1.0.0"; type="cran"; sha256="1kcz7i3h9xxpqhlq0rl08pgcwd16ygjjmm0jjv9knn2ggc3j1jzz"; depends=[rgdal sp ]; };
diveMove = derive { name="diveMove"; version="1.3.9"; type="cran"; sha256="0782b8fvh676g6fy05g1da52q398rxmgz46vk6yxwrmnvg78wcq5"; depends=[caTools KernSmooth quantreg geosphere ]; };
diveRsity = derive { name="diveRsity"; version="1.9.73"; type="cran"; sha256="07lln4fkphwk8kgvw4hsi7rghpwza8967z2gkb2265l28irv7ffm"; depends=[ggplot2 shiny qgraph Rcpp Rcpp ]; };
diversitree = derive { name="diversitree"; version="0.9-7"; type="cran"; sha256="0hr3hzrrbmfqbzcwn18lnqmychs9f21j1x214zry0jmw9pnai0s0"; depends=[deSolve ape subplex Rcpp Rcpp ]; };
divo = derive { name="divo"; version="0.1.1"; type="cran"; sha256="10kymbvp46rzdd6a6p2fri9424sdxj2bhhv0fld7ikk71xgpfdrp"; depends=[RcppCNPy cluster ]; };
dixon = derive { name="dixon"; version="0.0-5"; type="cran"; sha256="0x7x0l7p8kmkfqqqah8hck2r96b3w8padd41skd3q35vq8kmnsqc"; depends=[splancs spatstat ]; };
dkDNA = derive { name="dkDNA"; version="0.1.0"; type="cran"; sha256="1waqj8l48yqlzi3rb3ilxyx79n5d4w0sp02flvynwaxck6jvh8gc"; depends=[ ]; };
dks = derive { name="dks"; version="1.12.0"; type="bioc"; sha256="13g027l318x4zhv2aq02cg9xciqir662xawpgq3r93z57a756473"; depends=[cubature ]; };
dlm = derive { name="dlm"; version="1.1-4"; type="cran"; sha256="0hyphl90bqc16j7in750pmiyq28hmc46kxgv7gj17c8xl9c9xqxm"; depends=[ ]; };
dlmap = derive { name="dlmap"; version="1.13"; type="cran"; sha256="0s6wlkggkm3qndwyvw72xv1n0mcjb7ss3ajbq2ll6rv30splq0db"; depends=[qtl ibdreg wgaim nlme mgcv ]; };
dlmodeler = derive { name="dlmodeler"; version="1.4-2"; type="cran"; sha256="06gqvk2wrzz4kpsh4vyrbqwmxirsvg78qj7clvcxdac0sfqn4gl7"; depends=[KFAS ]; };
dlnm = derive { name="dlnm"; version="2.1.3"; type="cran"; sha256="044khdhk4dgd09cwmidsfa2rgd43h7wnd48bmmrnsvj3314bic0f"; depends=[nlme ]; };
dma = derive { name="dma"; version="1.2-2"; type="cran"; sha256="18v40rr4qx98ap38vr77xxvl7y3a6cqfky3z4s5zc87q6y1z5g2s"; depends=[MASS mnormt ]; };
dmm = derive { name="dmm"; version="1.6-1"; type="cran"; sha256="0bls3ka8fwnsd0v74ncy8nbgxk0a3z1gw9dgm3vibz1lsypfs72a"; depends=[MASS Matrix nadiv robustbase pls ]; };
dmt = derive { name="dmt"; version="0.8.20"; type="cran"; sha256="0rwc8l9k2y46hslsb3y8a1g2yjxalcvp1l3v7jix0c5kz2q7917w"; depends=[mvtnorm MASS Matrix ]; };
dna = derive { name="dna"; version="1.1-1"; type="cran"; sha256="0gw70h1j67h401hdvd38d6jz71x1a6xlz6ziba6961zy6m3k5xbm"; depends=[ ]; };
dnet = derive { name="dnet"; version="1.0.6"; type="cran"; sha256="0zhv2yfrlhfwjbgbvjzmw3c5g5rj33n8l2npdf6b4nqz0c0hc1jn"; depends=[igraph supraHex graph Rgraphviz Matrix Biobase ]; };
doBy = derive { name="doBy"; version="4.5-13"; type="cran"; sha256="07ppghcf381wc9s9igsi3viy6p86b5bmpfm1s8iwq7ca4j89qw42"; depends=[survival MASS Matrix ]; };
doMC = derive { name="doMC"; version="1.3.3"; type="cran"; sha256="0g5psgk92b2zk9fkap3a86haay2y0kfz75cyk3d1ila9m7cd2cn4"; depends=[foreach iterators ]; };
doMPI = derive { name="doMPI"; version="0.2.1"; type="cran"; sha256="1d2pkxsap656l7h88q37ymy1jw0zd4n9h892511a1a230dxwc0xh"; depends=[foreach iterators Rmpi ]; };
doParallel = derive { name="doParallel"; version="1.0.8"; type="cran"; sha256="1z6cwqnjvqsbck44padqkv4r75cy32p5vrlkkan4mq84cc8062nx"; depends=[foreach iterators ]; };
doRNG = derive { name="doRNG"; version="1.6"; type="cran"; sha256="0yvg4052gfdh54drn6xnpiqyd77p8765yi525nag3ismw2yn9y58"; depends=[foreach rngtools iterators pkgmaker ]; };
doRedis = derive { name="doRedis"; version="1.1.1"; type="cran"; sha256="10ldfzq6m83b9w24az9bf5wbfm6y9gi233s8qgsk4dnr84n3nizx"; depends=[rredis foreach iterators ]; };
doSNOW = derive { name="doSNOW"; version="1.0.12"; type="cran"; sha256="0j71n0l9lbvwllw9iigvjgv0x8z2j57grl3yazkgcyzy0mcgf741"; depends=[foreach iterators snow ]; };
docopt = derive { name="docopt"; version="0.4.3.3"; type="cran"; sha256="1vpq5q3kfgwijrgblvfipxqkw0m75rahnlmddpiyfgziyszbmidm"; depends=[stringr ]; };
documair = derive { name="documair"; version="0.6-0"; type="cran"; sha256="1pphcbx90n9xn8a7gvfrwzfapwqgpbl3gg2grm7chfxgcp7i99i2"; depends=[ ]; };
domainsignatures = derive { name="domainsignatures"; version="1.26.0"; type="bioc"; sha256="1m8l7v2k0vl0mcbmqfqsd7ssiki8zsgn14209dzs0j6hbsikkj4j"; depends=[prada biomaRt AnnotationDbi ]; };
domino = derive { name="domino"; version="0.2-6"; type="cran"; sha256="0xbp9gb38gxfdxfbzm792g4fnjsfp2ncncm8cmyra5wja6qwcwl8"; depends=[ ]; };
dosresmeta = derive { name="dosresmeta"; version="1.3.0"; type="cran"; sha256="0yfm8dkds8abdl6jrib5vvgkyrd5cl5a99qs27safxx0fcpdiz4k"; depends=[mvmeta aod Matrix ]; };
dostats = derive { name="dostats"; version="1.3.1"; type="cran"; sha256="0xcp9arpvqb7am6caiazlgllvd3hhk4gqjd2wizr2jc5dkwfl4qn"; depends=[ ]; };
dotenv = derive { name="dotenv"; version="1.0"; type="cran"; sha256="1lxwvrhqcwj9q24x30xzrw8qqhxgyr88ja3fajm5hf3pwbw85yls"; depends=[magrittr falsy ]; };
downloader = derive { name="downloader"; version="0.3"; type="cran"; sha256="0jpq8z3i9fkgs8wwjrq5qd7qfi5w3rxmzmsi1c1dxlnxzzhg6kxq"; depends=[digest ]; };
dpa = derive { name="dpa"; version="1.0-3"; type="cran"; sha256="0dmwi68riddi1q4b10c12wx6n7pqfmv30ix5x72zpdbgm72v343h"; depends=[sem igraph ]; };
dpcR = derive { name="dpcR"; version="0.1.4.0"; type="cran"; sha256="0fv17vzlsjb5cy1f0ll5gi5y8npavp2y7frzc595na5g15xphmxc"; depends=[binom chipPCR e1071 dgof multcomp qpcR pracma rateratio_test signal shiny spatstat ]; };
dpglasso = derive { name="dpglasso"; version="1.0"; type="cran"; sha256="1mx28xbm2z2bxyp33wv2v6vgn1yfsdsa0bzjjdxasgd6lvr51myf"; depends=[ ]; };
dplR = derive { name="dplR"; version="1.6.2"; type="cran"; sha256="1w8p4pfzpvarwx9an3zm158pybif6p86k87gxqr2m2fgjsxzf9nb"; depends=[gmp digest lattice png stringi stringr XML ]; };
dplRCon = derive { name="dplRCon"; version="1.0"; type="cran"; sha256="10xnawgnhxp5y949fxs1vvadc1qz2ldy0s9w9w7kf6iqh59d35sw"; depends=[ ]; };
dplyr = derive { name="dplyr"; version="0.4.1"; type="cran"; sha256="0kcwg922gzvwz1vfazwknb2sn2z9wfg9xhndi4280lg8cjdllcmw"; depends=[assertthat R6 Rcpp magrittr lazyeval DBI Rcpp BH ]; };
dpmixsim = derive { name="dpmixsim"; version="0.0-8"; type="cran"; sha256="0paa2hmpd6bqf0m7p9j7l2h3j18lm64ya6ya8zvp55wm8pf7xgqg"; depends=[oro_nifti cluster ]; };
dpmr = derive { name="dpmr"; version="0.1.7-1"; type="cran"; sha256="0nh45hg9za9w4w4syrrg54s1fpn6iikv431qkdjyinv8y1a3klga"; depends=[digest httr jsonlite magrittr rio ]; };
dr = derive { name="dr"; version="3.0.9"; type="cran"; sha256="0gmxa5mbmkz54l75ss6kj5ka5kingf02pqj0xsfjxfv0311hwm52"; depends=[MASS ]; };
drat = derive { name="drat"; version="0.0.3"; type="cran"; sha256="1dxgicvjdkhiwkyadxwb6lfvvidx0w2y5sd5dm49chlv6zgjaa2i"; depends=[ ]; };
drawExpression = derive { name="drawExpression"; version="1.0"; type="cran"; sha256="0c2daicqrjlqf7s788cknzvw9c6rm500lgmwfr7z03bq7bd2ah90"; depends=[ ]; };
drc = derive { name="drc"; version="2.5-12"; type="cran"; sha256="1gw78n0w262wl6mdm5wvyp3f0hvrb2kj714acdxz84h2znxr9879"; depends=[MASS car gtools multcomp plotrix scales ]; };
drfit = derive { name="drfit"; version="0.6.3"; type="cran"; sha256="0vx5niw6mfg85937sbjmc0z0gdgf9aj43rmkn1gljky7pq4j3hfn"; depends=[MASS RODBC drc ]; };
drgee = derive { name="drgee"; version="1.1.2"; type="cran"; sha256="1idnwa9yy1bijwbz9ffvc4q4lynhisgjvp3jcik3z3r96wfmz2ks"; depends=[nleqslv survival ]; };
drm = derive { name="drm"; version="0.5-8"; type="cran"; sha256="1p6ixd7hnv41gfmvan3rv9xzz1279hmrnvfrl6pxwzs9zcnbb53a"; depends=[ ]; };
drmdel = derive { name="drmdel"; version="1.3.1"; type="cran"; sha256="1bpm9jj9dxk2daxp1yb7pn9jd750p27qa84vdfxpacm5r0mggnys"; depends=[ ]; };
dropR = derive { name="dropR"; version="0.1"; type="cran"; sha256="0sw5lqlfdn64dbykxdhk1pz18f83if871vkapa2nxgcfiy79b0vs"; depends=[plyr shiny ]; };
drsmooth = derive { name="drsmooth"; version="1.0"; type="cran"; sha256="1cxhj28dkll704kif040vqnp9grb61v891rswvyx7aa9216156px"; depends=[car clinfun mgcv multcomp pgirmess DTK segmented mvtnorm ]; };
ds = derive { name="ds"; version="3.0"; type="cran"; sha256="10xp575l0wh85wg32k3as02kgqm9ax9nx9i5kd5bkimfwg4qv745"; depends=[ ]; };
dsample = derive { name="dsample"; version="0.91.1"; type="cran"; sha256="0nxx3x55zj089aq2shk7cg9bgh6xw7jnrr2qmlaq6bflwn58wn1q"; depends=[ ]; };
dse = derive { name="dse"; version="2014.11-1"; type="cran"; sha256="0fl1av8zd0csbsk6fplcxgqsb50qr1baasw2jrqv6h83j2xwph2l"; depends=[tfplot tframe setRNG ]; };
dslice = derive { name="dslice"; version="1.1.4"; type="cran"; sha256="0srqw1kznbjl1v6dpgh7vsrpf9k3zj7j55zw9k50jsbw2z4xqzfw"; depends=[Rcpp ggplot2 scales Rcpp ]; };
dsm = derive { name="dsm"; version="2.2.5"; type="cran"; sha256="0sfsfzcsqnvjkc5l7h5xq8p2jsgwxfzds75sqs58a0kzagcm1b05"; depends=[mgcv mrds nlme ggplot2 statmod ]; };
dst = derive { name="dst"; version="0.3"; type="cran"; sha256="1gdf4sjk2svywx2m6z22d383xppsm6dm108w93pcwfs8fpcdwxb9"; depends=[ ]; };
dti = derive { name="dti"; version="1.2-0.1"; type="cran"; sha256="09ad7mwa53dk1jlddkql3wm1s2diyqij7prd5klh59j21kvkf0hy"; depends=[awsMethods adimpro rgl oro_nifti oro_dicom gsl quadprog ]; };
dtt = derive { name="dtt"; version="0.1-2"; type="cran"; sha256="0n8gj5iylfagdbaqirpykb01a9difsy4zl6qq55f0ghvazxqdvmn"; depends=[ ]; };
dtw = derive { name="dtw"; version="1.17-1"; type="cran"; sha256="0kbf38a14k112vdi7yaql18w0sj694smlm6pmdw5q4sqpk7azhqg"; depends=[proxy ]; };
dualKS = derive { name="dualKS"; version="1.26.0"; type="bioc"; sha256="0gf36sr7ihpzy0czn11md37hjcykcryvm6fpvnshal4jd5ak3wng"; depends=[Biobase affy ]; };
dualScale = derive { name="dualScale"; version="0.9.1"; type="cran"; sha256="11hqxprai0s5id6wk4n2q174r1sqx9fzw3fscvqd2cgw8cjn1iwl"; depends=[matrixcalc ff vcd lattice Matrix ]; };
dummies = derive { name="dummies"; version="1.5.6"; type="cran"; sha256="01f84crqx17xd6xy55qxlvsj3knm8lhw7jl26p2rh2w3y0nvqlbm"; depends=[ ]; };
dummy = derive { name="dummy"; version="0.1.3"; type="cran"; sha256="081a5h33gw6ym4isy91h6mcf247c2vsdygv9ll07a3mgjcjnk79p"; depends=[ ]; };
dunn_test = derive { name="dunn.test"; version="1.2.4"; type="cran"; sha256="01z9rxhp9mli9b21in9gvrjiyxlkx5imspfangg2qvkyrb8jl9i5"; depends=[ ]; };
dupiR = derive { name="dupiR"; version="1.2"; type="cran"; sha256="0p649yw7iz6hnp7rqa2gk3dqkjbqx1f6fzpf1xh9088nbf3bhhz3"; depends=[plotrix ]; };
dvfBm = derive { name="dvfBm"; version="1.0"; type="cran"; sha256="0gx11dxkbnh759ysd1lxdarlddgr3l5gwd5b0klwvwsgck6jv529"; depends=[wmtsa ]; };
dvn = derive { name="dvn"; version="0.3.3"; type="cran"; sha256="14ncna67qgknh20xdvxqddjhagj61niwpvz4ava9k0z68rgzmk5h"; depends=[RCurl XML ]; };
dyebias = derive { name="dyebias"; version="1.24.0"; type="bioc"; sha256="0wy8sisxzlhc2m8pcfsqdkdchhskhy3j5vn5bn2sj8fb2h4h0fm4"; depends=[marray Biobase ]; };
dygraphs = derive { name="dygraphs"; version="0.4.3"; type="cran"; sha256="1pg23lsmjg46nlb17r4shmr6aal3c3pqzkcznfadcc6cgm0afqp2"; depends=[magrittr htmlwidgets zoo xts ]; };
dyn = derive { name="dyn"; version="0.2-9"; type="cran"; sha256="16zd32567aj0gqv9chbcdgi6sj78pnnfy5k8si15v5pnfvkkwslp"; depends=[zoo ]; };
dynBiplotGUI = derive { name="dynBiplotGUI"; version="1.1.3"; type="cran"; sha256="1wgxxn0nlmza7npvjbkfq6nmp30n719yqrav6jzxcp00dk3ymg6g"; depends=[tcltk2 tkrplot ]; };
dynCorr = derive { name="dynCorr"; version="0.1-2"; type="cran"; sha256="0qzhhfhkwpq6mwg7y6sxpqvcj8klvivnfv69g7x3ycha1kw2xk3w"; depends=[lpridge ]; };
dynRB = derive { name="dynRB"; version="0.2"; type="cran"; sha256="00xpigx1bxjm03fz7x19wws7vqyaa6mgfp3zdb8f0mvw3hjkrvr0"; depends=[ ]; };
dynaTree = derive { name="dynaTree"; version="1.2-7"; type="cran"; sha256="06pw78j6wwx7yc175bns1m2p5kg5400vg8x14v4hbrz3ydagx4dn"; depends=[ ]; };
dynamicGraph = derive { name="dynamicGraph"; version="0.2.2.6"; type="cran"; sha256="1xnsp8mr3is4yyn0pyrvqhl893gdx2y1zv8d2d55aah2xbfk0fjj"; depends=[ggm ]; };
dynamicTreeCut = derive { name="dynamicTreeCut"; version="1.62"; type="cran"; sha256="1y11gg6k32wpsyb10kdv176ivczx2jlizs1xsrjrs6iwbncwzrkp"; depends=[ ]; };
dynatopmodel = derive { name="dynatopmodel"; version="1.0"; type="cran"; sha256="1dq18wqbf7y597mbqv8fwwc5fm8l618mkqvb2l95bplq7n508hng"; depends=[raster xts shape fields rgeos maptools rgdal sp spam hydroGOF topmodel intervals ]; };
dynia = derive { name="dynia"; version="0.2"; type="cran"; sha256="1swip4kqjln3wsa9xl0g92zklqafarva923nw7s44g4pjdy73d5l"; depends=[ ]; };
dynlm = derive { name="dynlm"; version="0.3-3"; type="cran"; sha256="0ym23gv2vkvvnxvzk5kh6xy4gb5wbnpdbgkb5s6zx24lh81whvcs"; depends=[zoo car lmtest ]; };
dynsim = derive { name="dynsim"; version="1.0"; type="cran"; sha256="0w4brs8kcps6gkamkic57nj61iz7zdxq972jwzs17i43wfcrw32c"; depends=[ggplot2 gridExtra MASS ]; };
dynsurv = derive { name="dynsurv"; version="0.2-2"; type="cran"; sha256="0418r7adki48pg3h7i1mgv3xpbryi520va3jpd03dx15zrq8zaqg"; depends=[survival reshape plyr nleqslv ggplot2 BH ]; };
e1071 = derive { name="e1071"; version="1.6-4"; type="cran"; sha256="0hakqawy8bz4hvjzz9dbc2pbqhaf1qjsgl0agz3qfg63974whw2i"; depends=[class ]; };
eHOF = derive { name="eHOF"; version="1.5.8"; type="cran"; sha256="19zs0krz13m7rbiw72clnhh1rbb6qgzp85ndchqbparw7f9yji1s"; depends=[mgcv lattice ]; };
eRm = derive { name="eRm"; version="0.15-5"; type="cran"; sha256="0g4avcr709brvzcbmqmq35c7zvgx1hkf5nq6djsprzkgvh6rznjn"; depends=[MASS Matrix lattice ]; };
eVenn = derive { name="eVenn"; version="2.2"; type="cran"; sha256="0k6m61z902spxxrc38504l73h022w5v74g39h4azd1ibr35yrl7j"; depends=[ ]; };
eaf = derive { name="eaf"; version="1.07"; type="cran"; sha256="0310lrqfm1l0lifak7wa6xn21bzzn27kbrrx0bidj4hibwv7sa4l"; depends=[modeltools ]; };
earlywarnings = derive { name="earlywarnings"; version="1.0.59"; type="cran"; sha256="06j5g5lrzl4p5pb1pp79h00iqpbwralzhpzxmaiymv7j8kz87nr0"; depends=[ggplot2 moments tgp tseries fields nortest quadprog Kendall KernSmooth lmtest som spam ]; };
earth = derive { name="earth"; version="4.3.0"; type="cran"; sha256="1i52gm0ib1n6ffamb29np88b665l8vdigv482kvzh545kxc1z0jh"; depends=[plotmo ]; };
easyRNASeq = derive { name="easyRNASeq"; version="2.2.1"; type="bioc"; sha256="1p5i50169qks4prw3dmy5ic6y3w7gmsxzvfg409xy1gj766xkr16"; depends=[Biobase BiocGenerics biomaRt Biostrings DESeq edgeR genomeIntervals GenomicAlignments GenomeInfoDb GenomicRanges IRanges LSD Rsamtools S4Vectors ShortRead ]; };
easyanova = derive { name="easyanova"; version="4.0"; type="cran"; sha256="1d8fkgyqzphipvla7x8ipcf0by07iqx8xran15d2q82yq9iik5g9"; depends=[car nlme ]; };
easynls = derive { name="easynls"; version="4.0"; type="cran"; sha256="1j2crqvgsf84bpwzf4qh5xkzn5mhxhfx9c0y3p8dbyn8bg7zc2rf"; depends=[ ]; };
ebGenotyping = derive { name="ebGenotyping"; version="1.0"; type="cran"; sha256="07dpvxl9xspkzvzkywclg8whgcw7vyakls38pshfypjpyd6iv8ga"; depends=[ ]; };
ebSNP = derive { name="ebSNP"; version="1.0"; type="cran"; sha256="0x3ijwg4yycsfy6jch1zvakzfvdgpiq8i7sqdp5assb8z1823w0b"; depends=[ ]; };
eba = derive { name="eba"; version="1.7-1"; type="cran"; sha256="0kxdhl7bc4f570m9rbxxzg748zvq0q7a0slvfr4w1f45vfzhyh17"; depends=[nlme ]; };
ebal = derive { name="ebal"; version="0.1-6"; type="cran"; sha256="1cpinmbrgxxv0fzi9qi2inv4hw2lz7iq4b0ggp316rdqqb5bj9r0"; depends=[ ]; };
ebdbNet = derive { name="ebdbNet"; version="1.2.3"; type="cran"; sha256="123iqp8rnm3pac5fvpzq5sqbf8nyfpf05g23nawanid6yv23ba9a"; depends=[igraph ]; };
ecespa = derive { name="ecespa"; version="1.1-7"; type="cran"; sha256="0ynyphc1jnk088041i0yk22bh4ga1v9xwrcghy70q1ipv0z279ph"; depends=[splancs spatstat ]; };
ecipex = derive { name="ecipex"; version="1.0"; type="cran"; sha256="0pzmrpnis52hvy80p3k60mg9xldq6fx8g9n3nnqi3z56wxmqpdv7"; depends=[CHNOSZ ]; };
eco = derive { name="eco"; version="3.1-7"; type="cran"; sha256="0qrl1mq0nc42j4dzqhayzzb56gmkk479wgpxikzgzpj9wv78yd5s"; depends=[MASS ]; };
ecodist = derive { name="ecodist"; version="1.2.9"; type="cran"; sha256="199f3lwwm8r2bnik595m540la1p4z6vbkwfqh9kimy9d0fjp8nps"; depends=[ ]; };
ecoengine = derive { name="ecoengine"; version="1.9.1"; type="cran"; sha256="0y1f8ylyk9jny48z5grf4r9jcdin6clhy0vg1wkg3alsqn4iiqlg"; depends=[httr plyr assertthat whisker dplyr jsonlite lubridate leafletR ]; };
ecolMod = derive { name="ecolMod"; version="1.2.6"; type="cran"; sha256="1n30faldfhpm2jkaw793vr220kgn3bmn8hxhw32rax294krmwn4v"; depends=[rootSolve shape diagram deSolve ]; };
ecolitk = derive { name="ecolitk"; version="1.38.0"; type="bioc"; sha256="1msw03bxvzzk7x15d42qrmhrf0h6ivgvsnmfn4jszxdrvpwhbv41"; depends=[Biobase ]; };
ecoreg = derive { name="ecoreg"; version="0.2"; type="cran"; sha256="08iw7w9z7zqwhvirnhdc2jr2qjp9yma8ddc831d5dvbvi2j7kq84"; depends=[ ]; };
ecoretriever = derive { name="ecoretriever"; version="0.1"; type="cran"; sha256="1iwds81pyn9c04fmnjfsri7rjanrfki8hngdwpqcx3dkbsg76ii6"; depends=[ ]; };
ecosim = derive { name="ecosim"; version="1.2"; type="cran"; sha256="1lzjd6kl2864ngyiqyfnnra5ag9bj42pxb793gwp45r7z95k32rf"; depends=[deSolve stoichcalc ]; };
ecospat = derive { name="ecospat"; version="1.1"; type="cran"; sha256="070vvx00gm36rwjz2g188jn7bkljs1c7j6ap6ssrl3ihzqvc1zdz"; depends=[ade4 ape gam gbm sp adehabitatHR adehabitatMA biomod2 dismo ecodist maptools randomForest spatstat raster rms ]; };
ecoval = derive { name="ecoval"; version="1.0"; type="cran"; sha256="1szvr2ipb7bd0cyslhwwwyx5kw7yx3kpqcyzxfd9pk263bny323g"; depends=[utility rivernet ]; };
ecp = derive { name="ecp"; version="2.0.0"; type="cran"; sha256="0cr3rzvd4bahg5idd857mgp005n075xql5kvjw0smsjbjh4p84wq"; depends=[Rcpp Rcpp ]; };
edcc = derive { name="edcc"; version="1.0-0"; type="cran"; sha256="036fi6mnn9480hkb378xb5jilkfvdydjmkyw4mcc9s1lz195f62w"; depends=[spc ]; };
edeR = derive { name="edeR"; version="1.0.0"; type="cran"; sha256="1dg0aqm5c4zyf015hz1hhn3m4lfvybc4gc1s7sp8jcsk46rxz0cc"; depends=[rJava rjson rJython ]; };
edgeR = derive { name="edgeR"; version="3.8.6"; type="bioc"; sha256="0lz9rx7v7ksmfy6jl1w8m6dv184c8gmvpgx457j2wqlg9jm939w5"; depends=[limma ]; };
edgeRun = derive { name="edgeRun"; version="1.0.9"; type="cran"; sha256="0d5nc8fwlm61dbi00dwszj1zqlij4gfds3w1mpcqnnfilr2g3di1"; depends=[edgeR data_table ]; };
editrules = derive { name="editrules"; version="2.7.2"; type="cran"; sha256="19g07caacwphvrqn900chrz3k6x4z8gmvlcvna5x2mqidcjkf25i"; depends=[igraph lpSolveAPI ]; };
edrGraphicalTools = derive { name="edrGraphicalTools"; version="2.1"; type="cran"; sha256="09y63xj3gqrz66mym20g4pmfwrb0wnc2n67692hnqq8dz31q7p3i"; depends=[rgl mvtnorm MASS lasso2 ]; };
eegAnalysis = derive { name="eegAnalysis"; version="0.0"; type="cran"; sha256="1lrwjbhm5fnf5fhyyga2b21j2snnmj3zfvfxfkvgsbdnzr3qxaxb"; depends=[e1071 wmtsa fields splus2R ]; };
eegkit = derive { name="eegkit"; version="1.0-2"; type="cran"; sha256="10dksmc5lrl0ypifvmmv96xnndl2zx191sl79qif0gfs3wq3w4s0"; depends=[bigsplines eegkitdata ica rgl ]; };
eegkitdata = derive { name="eegkitdata"; version="1.0"; type="cran"; sha256="1krsadhamv1m8im8sa1yfl7injvrc4vv3p88ps1mpn8hibk5g51m"; depends=[ ]; };
eeptools = derive { name="eeptools"; version="0.3.1"; type="cran"; sha256="0m6i0hiw565wgziknlf19rh2fq8zvzq2v5a0ppnwcv8vhbhyph3g"; depends=[ggplot2 MASS stringr maptools arm data_table memisc ]; };
effects = derive { name="effects"; version="3.0-3"; type="cran"; sha256="10v99rv18jl10q0zhd4rvkx7dgab3b8w46jv1npqk9lx172iaf1y"; depends=[pbkrtest lme4 nnet lattice colorspace ]; };
effsize = derive { name="effsize"; version="0.5.4"; type="cran"; sha256="1dc90avbnb83nrm70wh0h45g3c6dcg8zh2ynklc2x86cqk7b264b"; depends=[ ]; };
ega = derive { name="ega"; version="1.0.1"; type="cran"; sha256="02mbadv505jz6nk1yp9xl12c9l9wnwpl5bajfbhgs837pdca438g"; depends=[ggplot2 ]; };
egcm = derive { name="egcm"; version="1.0.6"; type="cran"; sha256="1j499f94ibr9rx544mwbpwjrwhzbdlvv1p156kj8pfnd7qin26xl"; depends=[zoo xts TTR ggplot2 tseries MASS urca fArma ]; };
eggCounts = derive { name="eggCounts"; version="0.4-1"; type="cran"; sha256="16prkcmpfjl1lab8m9hm0sfbdlh94ds3wi6ra9n2wnrpdn32fl20"; depends=[actuar boot coda ]; };
egonet = derive { name="egonet"; version="1.2"; type="cran"; sha256="1f0fbqyk2ilmhirxvf1iwgfappi5r7807ag77r89lbaf5jq8akl0"; depends=[sna ]; };
eha = derive { name="eha"; version="2.4-3"; type="cran"; sha256="1dfilgw9m4m78ny3fd89nl8f9c9y5z5bnj912hpbfff3v5yfm3iq"; depends=[survival ]; };
eiPack = derive { name="eiPack"; version="0.1-7"; type="cran"; sha256="1cxk31bj012ijm85sf6l4rjrwayw94j2d6aav8p9g1f0raha2s6y"; depends=[MASS coda msm ]; };
eiR = derive { name="eiR"; version="1.6.0"; type="bioc"; sha256="0d3dj5k891g00anl5nad3xfgz4jg40nvw80qiwrl3ac0nyrfa00p"; depends=[ChemmineR DBI snow snowfall RUnit ChemmineR RCurl digest BiocGenerics BH ]; };
eigeninv = derive { name="eigeninv"; version="2011.8-1"; type="cran"; sha256="18dh29js824d7mrvmq3a33gl05fyldzvgi8mmmr477573iy9r30g"; depends=[ ]; };
eigenmodel = derive { name="eigenmodel"; version="1.01"; type="cran"; sha256="0p9n28x5gg46nszzd2z9ky5fhv6qa070673i1df6bhjh962aqgaf"; depends=[ ]; };
eigenprcomp = derive { name="eigenprcomp"; version="1.0"; type="cran"; sha256="156qyv7sl8nng55n3ay6dnpayyfrqv27ndz40xf4w92is9zmymy0"; depends=[ ]; };
eisa = derive { name="eisa"; version="1.18.0"; type="bioc"; sha256="1yly3v4ic9qhlcps729vvz8y5hjwk2z5wz0xgkjzihzmfjd85kyk"; depends=[isa2 Biobase AnnotationDbi BiocGenerics Category genefilter DBI ]; };
eive = derive { name="eive"; version="2.1"; type="cran"; sha256="1vazl5dnrvljd07csy9rjs4302w09h94i411gffg9fvxn70km7qg"; depends=[Rcpp Rcpp ]; };
eiwild = derive { name="eiwild"; version="0.6.7"; type="cran"; sha256="1fp4kvlmcjjnzn2a5cmlzaf6y5q6cdbbi2nmvjyqc4y1bmwh3srf"; depends=[gtools coda lattice ]; };
elastic = derive { name="elastic"; version="0.4.0"; type="cran"; sha256="03cj0vljad4bkz7zmlp7cr6y734pddngmlzwa1h4ja1nr8nv8xf4"; depends=[httr RCurl jsonlite ]; };
elasticnet = derive { name="elasticnet"; version="1.1"; type="cran"; sha256="1x8rwqb275lz86vi044m1fy8xanmvs7f7irr1vczps1w45nsmqr2"; depends=[lars ]; };
elec = derive { name="elec"; version="0.1.2"; type="cran"; sha256="0f7ahrjb52w8a8l5v00xla6z9afpz2zrckl9v04xalp34snhdwan"; depends=[ ]; };
elec_strat = derive { name="elec.strat"; version="0.1.1"; type="cran"; sha256="09196k5c3jsikh98d33bn70izwcbx0wb5ki9fv1ij0dw9mnv4c3p"; depends=[elec ]; };
elliplot = derive { name="elliplot"; version="1.1.1"; type="cran"; sha256="1sl85kyjpxiw0gs3syhlhfrci03fl054py7m24xln5vk07665vbp"; depends=[ ]; };
ellipse = derive { name="ellipse"; version="0.3-8"; type="cran"; sha256="0ibz1qvf1qbb5sigyhpxb8hgip69z3wcimk3az1701rg2i64g3ah"; depends=[ ]; };
elliptic = derive { name="elliptic"; version="1.3-5"; type="cran"; sha256="0hi0r3z6f5yq53v6ii4z35nws2gc00xkk0dncll0sf5nshcj8fl5"; depends=[MASS ]; };
elmNN = derive { name="elmNN"; version="1.0"; type="cran"; sha256="129r6d3qa48gqvqxks53hdmyk3jjakddsj5fwj91kqq0hkm34kyd"; depends=[MASS ]; };
elrm = derive { name="elrm"; version="1.2.2"; type="cran"; sha256="0wz0l703v0iyp7nswdmh65n0cy3a7rfvyxd795a6nzk3nich8bfg"; depends=[coda ]; };
emIRT = derive { name="emIRT"; version="0.0.5"; type="cran"; sha256="0n94iqdzbml0hx3gd046958vmv3y0hymj5kly53gvvlcidsn15c4"; depends=[pscl Rcpp Rcpp RcppArmadillo ]; };
embryogrowth = derive { name="embryogrowth"; version="6.0"; type="cran"; sha256="0l08imqagn2w1q8s4f84bb1zlc17zjkfc5qz1gpmqc7dbw9nvxph"; depends=[deSolve HelpersMG coda polynom ]; };
emdatr = derive { name="emdatr"; version="0.3"; type="cran"; sha256="1ccm45al90wa467n19dqs33q2w74in4qnwdrsh94g3d67cw5fsfc"; depends=[RCurl ]; };
emdbook = derive { name="emdbook"; version="1.3.8"; type="cran"; sha256="10qmppacfww8wg1hhd9fpadrvrivrvfgfn1qgm87xlf3a8jpffjj"; depends=[MASS lattice plyr rgl coda bbmle ]; };
emdist = derive { name="emdist"; version="0.3-1"; type="cran"; sha256="1z14pb9z9nkd0f2c8pln4hzkfqa9dk9n3vg8czc8jiv0ndnqi7rq"; depends=[ ]; };
emg = derive { name="emg"; version="1.0.6"; type="cran"; sha256="1kzmxs224m6scmk8gg5ckx5c7is99hwgwv28yl26hnrbkm59skyh"; depends=[ ]; };
emil = derive { name="emil"; version="2.0.2"; type="cran"; sha256="16fkf5ns6pw0nrpysr1yy5hwwg59mkfa84skajchfvq75aw6hwbi"; depends=[dplyr data_table ggplot2 lazyeval magrittr tidyr ]; };
emma = derive { name="emma"; version="0.1-0"; type="cran"; sha256="0psd8lrbcqla8mkhp0wlassaaimgwlmqy5yv2wwcq59mc5k1v27f"; depends=[earth clusterSim ]; };
emme2 = derive { name="emme2"; version="0.9"; type="cran"; sha256="035s4h95ychqb14wib0dqbg4sjy9q01fsryr0ri25g1hsi5f8lpm"; depends=[reshape ]; };
emoa = derive { name="emoa"; version="0.5-0"; type="cran"; sha256="1wcnsnkdmpcn21dyql5dmj728n794bmfr6g9hgh9apzbhn4cri8p"; depends=[ ]; };
emov = derive { name="emov"; version="0.1"; type="cran"; sha256="1jzssxk7c26ylfb70p9s631bz63fgvrqc105p7536n0kgxy21f7b"; depends=[ ]; };
empiricalFDR_DESeq2 = derive { name="empiricalFDR.DESeq2"; version="1.0.1"; type="cran"; sha256="12w3ald2ngaj01rm98k445ai3xl3ggr58y27mfxzlsg697yrx83c"; depends=[DESeq2 GenomicRanges ]; };
emplik = derive { name="emplik"; version="1.0-1"; type="cran"; sha256="1kwgikdnxh52wsmzrzqv7sp8s55w9q40aq9kpfd3zshkflx7w8g1"; depends=[quantreg ]; };
emplik2 = derive { name="emplik2"; version="1.20"; type="cran"; sha256="0qdsfmnvds01qa4f112knv905k0fzccrqj9fwaqrqcy48cigm8pd"; depends=[ ]; };
emulator = derive { name="emulator"; version="1.2-15"; type="cran"; sha256="1rp7q7zs8b49jzdkbzm4s1g8554h41hcabf4d78k9jhhys2z28g2"; depends=[mvtnorm ]; };
enRich = derive { name="enRich"; version="2.0"; type="cran"; sha256="13ahwdifm33h4h5mvmc49v39fbhiy291rbdwm4c8kxjrqjq9ip66"; depends=[ ]; };
enaR = derive { name="enaR"; version="2.8.1"; type="cran"; sha256="1p2vhqd1zxwar5fb16ibvwrzrxl7c574ls6747bkdjzlx7vznrn1"; depends=[MASS stringr sna network gdata ]; };
endogMNP = derive { name="endogMNP"; version="0.2-1"; type="cran"; sha256="0maxcp321ngbxrg0i23nlwhj849v771xahh53367x928ss4f8v7i"; depends=[ ]; };
endorse = derive { name="endorse"; version="1.4.1"; type="cran"; sha256="0xyi2cq4k4xa8kr717i4njl6rgjf5z99056jbhp2rbzfyy4sw61d"; depends=[coda ]; };
energy = derive { name="energy"; version="1.6.2"; type="cran"; sha256="008yf4r6546mzk9q515zliqxyjx6w0z19g5wlarg7f4lrzsmqiaw"; depends=[boot ]; };
english = derive { name="english"; version="1.0-1"; type="cran"; sha256="1413axjp2icj9wwnkz3vl4gvrwlgmjpc2djzv5bllbnc4a4dgj24"; depends=[ ]; };
enigma = derive { name="enigma"; version="0.1.1"; type="cran"; sha256="1309w9nwh7kd1iivj5kq6sgi10k9ac69n3yl6a52ajqnm9rsg3lm"; depends=[httr jsonlite plyr ]; };
enpls = derive { name="enpls"; version="1.0"; type="cran"; sha256="1grnabrb0kzjvjvwp9rx1xqfljla0jd5xrkcbwfzmy2ymmbvh6ma"; depends=[pls foreach doParallel ]; };
enrichvs = derive { name="enrichvs"; version="0.0.5"; type="cran"; sha256="0x91s03hz1yprddm6mqi75bm45ki3yapfrxmap7d4qc0hi06h22k"; depends=[ ]; };
ensemblVEP = derive { name="ensemblVEP"; version="1.6.2"; type="bioc"; sha256="09k8480cgcs40zw10i5zvajb8n7s9165617faqxx62894iv6nxp5"; depends=[BiocGenerics GenomicRanges VariantAnnotation Biostrings ]; };
ensembleBMA = derive { name="ensembleBMA"; version="5.1.2"; type="cran"; sha256="0cfasrs1paz60na8by9zk0c5jc48l9djvn6c64ygjl1rapz389d4"; depends=[chron ]; };
ensembleMOS = derive { name="ensembleMOS"; version="0.7"; type="cran"; sha256="0g5qzdic5jvgn6wv7zh0jnz8malfgfxn26l7lg30y96vcmi4hk54"; depends=[ensembleBMA chron ]; };
ensurer = derive { name="ensurer"; version="1.1"; type="cran"; sha256="1gbbni73ayzcmzhxb88pz6xx418lqjbp37sdkggbrxcyhsxpdkid"; depends=[ ]; };
entropart = derive { name="entropart"; version="1.2.1"; type="cran"; sha256="14cn0zkfk6w8qrbzis9nxhs0vmhpxn4ksa95j5zxr7lxn77piznz"; depends=[ade4 ]; };
entropy = derive { name="entropy"; version="1.2.1"; type="cran"; sha256="10vg4818q5g54pv2nn9x5i7pvky5nsv96syy47pz2mgqp1273cpd"; depends=[ ]; };
enviPat = derive { name="enviPat"; version="1.9"; type="cran"; sha256="0xm23gv4ixmsal9rf0cbq0lwvlpagpmapskz3c4d8qzvhr8qrl3b"; depends=[ ]; };
enviPick = derive { name="enviPick"; version="1.3"; type="cran"; sha256="01wkijvhr8wqjzrhgkvxbnnmb9qsnq0lhkgw93s8nrf8yr3z3awj"; depends=[shiny readMzXmlData ]; };
epade = derive { name="epade"; version="0.3.8"; type="cran"; sha256="1alvsifc6i71ilm1xxs1d7sqlapb48bqd6z2n4wi6pqcjvwp7bif"; depends=[plotrix ]; };
epi2loc = derive { name="epi2loc"; version="1.0-1"; type="cran"; sha256="16abk1v177sg7gmaw42ldf6hf20l7dvyq295zwbq76nxj467khdv"; depends=[pwr ]; };
epiR = derive { name="epiR"; version="0.9-62"; type="cran"; sha256="04r0inaa04pc4nj5dippl2qxa4nysk0sabdgp4bzp5zxw33mf55v"; depends=[survival ]; };
epibasix = derive { name="epibasix"; version="1.3"; type="cran"; sha256="0d0087sa8lqw35pn7gdg2qqzw3dvz57sgavymwl1ybcj5d4lsbyk"; depends=[ ]; };
epigenomix = derive { name="epigenomix"; version="1.6.0"; type="bioc"; sha256="0xd380gzgld43k9lib66g56miak8gn65hzxnnlva5f67jwwmb4z6"; depends=[Biobase IRanges GenomicRanges BiocGenerics Rsamtools beadarray ]; };
epinet = derive { name="epinet"; version="2.0.9"; type="cran"; sha256="071svl1zcjjb3gvk3vg8xf660bvlz0ypkxy88n3d3f3ir2k26s7b"; depends=[ ]; };
episplineDensity = derive { name="episplineDensity"; version="0.0-1"; type="cran"; sha256="0nmh97xajnnh54i04yq8fdici4n5xvcbpdbjdbz79483gnils4vn"; depends=[nloptr pracma ]; };
epitools = derive { name="epitools"; version="0.5-7"; type="cran"; sha256="163sibnbihdsnkxf313fr8n8rh5d64dwjagv95vhhzr87f21sw22"; depends=[ ]; };
epivizr = derive { name="epivizr"; version="1.4.6"; type="bioc"; sha256="0n049ck7r9090hmch9q41dlzdqm05ipv9lzdbdwf0bdy2cbqjaj2"; depends=[Biobase GenomicRanges S4Vectors httpuv rjson OrganismDbi R6 mime GenomeInfoDb GenomicFeatures ]; };
epoc = derive { name="epoc"; version="0.2.5-1"; type="cran"; sha256="1r19cvcqf39yf09n3znbdy3dsr7z96yx6zib6031mqqdsxaav5qd"; depends=[lassoshooting Matrix graph irr elasticnet survival Rgraphviz ]; };
epr = derive { name="epr"; version="2.0"; type="cran"; sha256="1xqc0jhgdwwvilqpljxzpzz3wx30kigy09sxvzcfvsjmxyyvflqy"; depends=[car ]; };
eqs2lavaan = derive { name="eqs2lavaan"; version="3.0"; type="cran"; sha256="1lj6jwkfd84h9ldb6l74lrx2pnsl1c0d7mnrcrjkska87djb2nzd"; depends=[lavaan stringr ]; };
eqtl = derive { name="eqtl"; version="1.1-7"; type="cran"; sha256="0xfr8344irhzyxs9flnqn4avk3iv1scqhzac5c2ppmzqhb398azr"; depends=[qtl ]; };
equate = derive { name="equate"; version="2.0-3"; type="cran"; sha256="0y37nxily7zjx00z7h4vmpn8cs7bl3aravhjkjz9l6y0fv0rc5vv"; depends=[ ]; };
equateIRT = derive { name="equateIRT"; version="1.2"; type="cran"; sha256="07qh5awa12d1bcm504k0rpgyxyzhymg92131cl676kdlfp49aqk1"; depends=[statmod ]; };
equivalence = derive { name="equivalence"; version="0.6.0"; type="cran"; sha256="1q17c2bs36f46bmm6wzmp0g2lg7d0j9mlrfnkzxnlvmspwksc0zl"; depends=[lattice boot PairedData ]; };
erboost = derive { name="erboost"; version="1.2"; type="cran"; sha256="0afgh0zkl3h3ab4s7wl0cn24qdyhszssai9i390mi7w0p88wgba9"; depends=[lattice ]; };
erccdashboard = derive { name="erccdashboard"; version="1.0.0"; type="bioc"; sha256="074xif08r79b4m3hhvxc5iqfshb0d404xrvbz9jyhl11izn708py"; depends=[ggplot2 gridExtra edgeR gplots gtools limma locfit MASS plyr QuasiSeq qvalue reshape2 ROCR scales stringr ]; };
erer = derive { name="erer"; version="2.3"; type="cran"; sha256="165hngfzbzn403gwdcjkhvlm7jygl57nbpwdmlya2rd43z09kp77"; depends=[lmtest systemfit tseries urca ggplot2 ]; };
ergm = derive { name="ergm"; version="3.2.4"; type="cran"; sha256="004d3wrv271i0czqkp7abz9lba8g68z350b21f94ad0xfp0cwlp2"; depends=[statnet_common network robustbase coda trust Matrix Rglpk ]; };
ergm_count = derive { name="ergm.count"; version="3.1.1"; type="cran"; sha256="0l66shy5p7h9j3h5gpkn48ps069mdaqbscnnkvmwjfvcc7k5vr8m"; depends=[statnet_common ergm network ergm ]; };
ergm_graphlets = derive { name="ergm.graphlets"; version="1.0.2"; type="cran"; sha256="1wfk8kh4rqw1f7dg4vsjq8nirgwyyk21r0x7x2hrd4v4ci0mcz6j"; depends=[statnet ergm ]; };
ergm_userterms = derive { name="ergm.userterms"; version="3.1.1"; type="cran"; sha256="0pvklvyxi7sjc5041zl8vcisni0jz1283gyjw5mhas9bl47g1cwc"; depends=[network ergm statnet_common ergm ]; };
ergmharris = derive { name="ergmharris"; version="1.0"; type="cran"; sha256="1bfijhsljlykb94wi25lbpv35zkmgqpmgzmxcq98gjvzbn5j9pdq"; depends=[ ]; };
erpR = derive { name="erpR"; version="0.2.0"; type="cran"; sha256="1y6abc5fkcyyjh36maj1zbxppqzwd5wkvzvqahyvzsz5fqpjkcdx"; depends=[rpanel ]; };
esaBcv = derive { name="esaBcv"; version="1.1.1"; type="cran"; sha256="0bsdxd0spfpzkaxyv1qh5n3x31qr75wgb1lizifl5j9mfi4ks7h1"; depends=[corpcor svd ]; };
esotericR = derive { name="esotericR"; version="1.0"; type="cran"; sha256="0kl9c2z2mpg3mk8jnl0ssgcf6y0i9jpczms746j8f07ydrcxpf41"; depends=[ ]; };
estimability = derive { name="estimability"; version="1.1"; type="cran"; sha256="1inw2ir83bzz40gynwfcjzx7f6v99pqlphq7p3rmql01ikd2b6r9"; depends=[ ]; };
estout = derive { name="estout"; version="1.2"; type="cran"; sha256="0whrwlh4kzyip45s4zifj64mgsbnrllpvphs6i5csb7hi3mdb3i5"; depends=[ ]; };
etable = derive { name="etable"; version="1.2.0"; type="cran"; sha256="17xahaf2fz1qgqjaw8qbnss95il6g47m3w00yqc5nkvv37gs0q7c"; depends=[xtable Hmisc ]; };
etasFLP = derive { name="etasFLP"; version="1.2.1"; type="cran"; sha256="1jkkpzvnkf3n3jalqj90brk5n4r4znc521kgx13n45y9j8b6ni50"; depends=[mapdata rgl fields maps ]; };
etm = derive { name="etm"; version="0.6-2"; type="cran"; sha256="0sdsm6h502bkrxc9admshkrkqjczivh3av55sha7542pr6nhl085"; depends=[survival lattice ]; };
eulerian = derive { name="eulerian"; version="1.0"; type="cran"; sha256="0yhpnx9vnfly14vn1c2z009m7yipv0j59j3s826vgpczax6b48m0"; depends=[graph ]; };
eurostat = derive { name="eurostat"; version="1.0.16"; type="cran"; sha256="017ri3vvlp60r9h5b0y4j2adggkrkjbapkjynpl0vg92islspqkz"; depends=[plyr tidyr ]; };
evaluate = derive { name="evaluate"; version="0.7"; type="cran"; sha256="0sh58pysabz1iinl8gp0f2v03fwzawpagbk18jbsnfr2vvc927bk"; depends=[stringr ]; };
evd = derive { name="evd"; version="2.3-0"; type="cran"; sha256="1h3dkssgw2x7pblvknfr0l8k7q25nikxyl7kl9x95ganjpi2452v"; depends=[ ]; };
evdbayes = derive { name="evdbayes"; version="1.1-1"; type="cran"; sha256="0lfjfkvswnw3mqcjsamxnl8hpvz08rba05xcg0r47h5vkgpw5lgd"; depends=[ ]; };
eventInterval = derive { name="eventInterval"; version="1.2"; type="cran"; sha256="15g934n7flkl1g5q8qhxv60iakx8i9ndpx88yiqqr3n38hcnifrs"; depends=[MASS ]; };
events = derive { name="events"; version="0.5"; type="cran"; sha256="1zka4ygymifs8snd7cabl11b5lg3f8g8370dkm9ybl40bn8vvqq2"; depends=[ ]; };
eventstudies = derive { name="eventstudies"; version="1.1"; type="cran"; sha256="13l2yhmlpiid9r3njnmvja231l00ym7gvwfbv0m9fk2k5j6gm5id"; depends=[zoo xts boot ]; };
evir = derive { name="evir"; version="1.7-3"; type="cran"; sha256="1kn139vvzdrx5r9jayjb4b0803b0bbppxk68z00gdb50mxgvi593"; depends=[ ]; };
evmix = derive { name="evmix"; version="2.5"; type="cran"; sha256="0v1raxxxj0qhampaia2q00asprl7ra7vk3s7vvcfpzmg4476vm50"; depends=[MASS gsl SparseM ]; };
evobiR = derive { name="evobiR"; version="1.0"; type="cran"; sha256="12j01qzc4yrjpxbj39bl29f5ypxwk33c6qf0mjjbgpwn5g6fgsi4"; depends=[seqinr ape stringr geiger taxize ]; };
evolqg = derive { name="evolqg"; version="0.1-5"; type="cran"; sha256="1s9jh14ycymlajc285cczr9m529vv6la4bkv0lgk3dc0557m7q5w"; depends=[plyr Rcpp reshape2 ggplot2 magrittr tidyr vegan ape phytools mvtnorm Rcpp ]; };
evolvability = derive { name="evolvability"; version="1.0"; type="cran"; sha256="17vkmb5208q4lx6jslx96nbhsl9m2c4ra6264bparbgrg34byg9x"; depends=[coda ]; };
evora = derive { name="evora"; version="1.0"; type="cran"; sha256="0blq28ldynbq3v6rh0yk89wy1sjp4621h6iwnyyiipqwzihwrhz2"; depends=[qvalue Hmisc ]; };
evt0 = derive { name="evt0"; version="1.1-3"; type="cran"; sha256="08sbyvx49kp3jsyki60gbbnci26d6yk0yj2zcl4bhfac8c3mm6ya"; depends=[evd ]; };
evtree = derive { name="evtree"; version="1.0-0"; type="cran"; sha256="0i37lkdfzvgby98888ndd5wzxs7y11sxf9mh6pqpqgwif05p4z3i"; depends=[partykit ]; };
exCon = derive { name="exCon"; version="0.1.5"; type="cran"; sha256="08gq257qp814960ykp16qdk9xpc7ag9mxs1qhnnzlk1v2cnhilaq"; depends=[jsonlite ]; };
exact2x2 = derive { name="exact2x2"; version="1.4.1"; type="cran"; sha256="1a4cg8j8kdgwkj27qza6xm5x16m9sb2vczb1b9im8k4pas6v6jpk"; depends=[exactci ssanv ]; };
exactLoglinTest = derive { name="exactLoglinTest"; version="1.4.2"; type="cran"; sha256="0j146ih9szzks9r45vq1jf47hrwjq081q1nsja5h1gpllks8217h"; depends=[ ]; };
exactRankTests = derive { name="exactRankTests"; version="0.8-28"; type="cran"; sha256="1n6rr0wax265y9w341x7m2pqwx3cv8iqx1k5qla29z8lqn4ng1nd"; depends=[ ]; };
exactci = derive { name="exactci"; version="1.3-0"; type="cran"; sha256="03mhgpyrgm3cb0hw908wxhi6pxrvcsw4r1lmbx95xn44j1p9zpzk"; depends=[ssanv ]; };
exactmeta = derive { name="exactmeta"; version="1.0-2"; type="cran"; sha256="1v807ns799qajffky4k18iah0s3qh2ava6sz5i85hwx9dhkz19h4"; depends=[ ]; };
exams = derive { name="exams"; version="2.0-2"; type="cran"; sha256="1cv01wa3zs31zdc1qk6rsnimbs6m31r0j56syg6yjicfxiwxxm0v"; depends=[ ]; };
excursions = derive { name="excursions"; version="2.0.16"; type="cran"; sha256="10z0mix7fx4pb9jpix5d00ch4i6jlvj2337s6ja916q6cczj21qr"; depends=[Matrix sp spam ]; };
exomeCopy = derive { name="exomeCopy"; version="1.12.0"; type="bioc"; sha256="0s0z362maqk4myh4lygcv647kd8xfvjazsx8x8fv4vprdvwkf36h"; depends=[IRanges GenomicRanges Rsamtools GenomeInfoDb ]; };
exomePeak = derive { name="exomePeak"; version="1.6.0"; type="bioc"; sha256="0vl0qx88id24fpvy9kffrq2qhyapygpk1jr6lx8p4qw456vvqiwh"; depends=[Rsamtools GenomicFeatures rtracklayer ]; };
expands = derive { name="expands"; version="1.5"; type="cran"; sha256="14m5fzh302v0nchf875i4nwrr25wk7hych405psgfidq058pr985"; depends=[rJava flexmix matlab mclust moments ape permute ]; };
expectreg = derive { name="expectreg"; version="0.39"; type="cran"; sha256="1mxhv6phc3lgp0zz20wszx4nr3by9p6492wcb0x8wn8p8p1sy1b3"; depends=[mboost BayesX quadprog ]; };
experiment = derive { name="experiment"; version="1.1-1"; type="cran"; sha256="07yaf5k5fpymz2yvr52zbbi60g0v84qryvqqjq3sjq2mb1fjfz1p"; depends=[boot MASS ]; };
expert = derive { name="expert"; version="1.0-0"; type="cran"; sha256="0y9vcigvzhymalpv31b9nvmr86z1dz7x29yj838vks0dsv23rgrf"; depends=[ ]; };
explorase = derive { name="explorase"; version="1.30.0"; type="bioc"; sha256="1k19730ky08jxl293f74vl8n386k2ggpkf7mapq5h2y64x39v1mm"; depends=[limma rggobi RGtk2 ]; };
expm = derive { name="expm"; version="0.99-1.1"; type="cran"; sha256="0kcanqaqn51f437fxriw4qkpxbhzpjzlkp95wn89ip4jhy6076qn"; depends=[Matrix ]; };
expoRkit = derive { name="expoRkit"; version="0.9"; type="cran"; sha256="0raf0m2nfbdbd1pc4lincyp8y8lgn3bfi4hn0p04plc5p40l1gvc"; depends=[Matrix SparseM ]; };
expoTree = derive { name="expoTree"; version="1.0.1"; type="cran"; sha256="0hj1x4niqp0ghqik3mz733nc3zpnhyknrdpzpj6y2rfia2ysdiz8"; depends=[ape deSolve ]; };
expp = derive { name="expp"; version="1.1"; type="cran"; sha256="13zbhkkcshqrpln5gsa051d390q9ij97lawsdbd5j7fj9hxm9pwh"; depends=[sp spdep rgeos deldir ]; };
expsmooth = derive { name="expsmooth"; version="2.3"; type="cran"; sha256="0alqg777g7zzbjbg86f00p2jzzlp4zyswpbif7ndd0zr8xis6zdc"; depends=[forecast ]; };
exptest = derive { name="exptest"; version="1.2"; type="cran"; sha256="0wgjg62rjhnr206hkg5h2923q8dq151wyv54pi369hzy3lp8qrvq"; depends=[ ]; };
exsic = derive { name="exsic"; version="1.1.1"; type="cran"; sha256="1k6nqs9i4iivxnk4nkimp6zvdly274wibkmx9n0wz01gnzxqil0p"; depends=[stringr markdown ]; };
extRemes = derive { name="extRemes"; version="2.0-5"; type="cran"; sha256="1r1q26gb06db0nsd9m5r54sjhsdwbi3179ai4b71l849viragq4z"; depends=[Lmoments distillery car ]; };
extWeibQuant = derive { name="extWeibQuant"; version="1.1"; type="cran"; sha256="08dzw5xfgqx0c7ac632c5mg5jmjjw7wwpcr4c9lvz5rv72ykh2rh"; depends=[ ]; };
extfunnel = derive { name="extfunnel"; version="1.3"; type="cran"; sha256="162w5b2wjs3yqy8jisamsapav6swa8sskf1b6x5hglnrv3i4qyyy"; depends=[rmeta ]; };
extlasso = derive { name="extlasso"; version="0.2"; type="cran"; sha256="05774y0i01lrbyws6zx5ymhcglllv1wc7gzrnyx8i5d1lxdinsyd"; depends=[ ]; };
extraBinomial = derive { name="extraBinomial"; version="2.1"; type="cran"; sha256="0qmvl35f7n78kghszwyaz4wzbswqy4p98c3b6alzrc2ldsq6pq5z"; depends=[ ]; };
extraTrees = derive { name="extraTrees"; version="1.0.5"; type="cran"; sha256="1rvvp2p9j8ih8fid1n17606pa23bjg3i2659w1l6w0jkb1p23zcx"; depends=[rJava ]; };
extracat = derive { name="extracat"; version="1.7-1"; type="cran"; sha256="1vgxr9j812jjr0i188vv7c1l0d7b73aakvfgsm0agwv7vj8k0rhi"; depends=[colorspace hexbin scales ggplot2 reshape2 plyr TSP ]; };
extrafont = derive { name="extrafont"; version="0.17"; type="cran"; sha256="0b9k2n9sk23bh45hjgnkxpjyvpdrz1hx7kmxvmb4nhlhm1wpsv9g"; depends=[extrafontdb Rttf2pt1 ]; };
extrafontdb = derive { name="extrafontdb"; version="1.0"; type="cran"; sha256="115n42hfvv5h4nn4cfkfmkmn968py4lpy8zd0d6w5yylwpzbm8gs"; depends=[ ]; };
extremevalues = derive { name="extremevalues"; version="2.3.0"; type="cran"; sha256="1nn67kgf3qd41nmizkbc2cy3128kajsxbxg03fhfgkjdqa0781lq"; depends=[gWidgets gWidgetstcltk ]; };
eyetracking = derive { name="eyetracking"; version="1.1"; type="cran"; sha256="0ajas96s25hjp3yrg42hp78qjhl1aih04mjirkskx32qsyq5hfpv"; depends=[ ]; };
ez = derive { name="ez"; version="4.2-2"; type="cran"; sha256="1dk4ig137ridr4pw4afp3flm22s8l38yrgxabld1zv46slndc8mm"; depends=[car ggplot2 lme4 MASS Matrix mgcv plyr reshape2 scales stringr ]; };
ezglm = derive { name="ezglm"; version="1.0"; type="cran"; sha256="0x7ffk3ipzbdr9ddqzv0skmpj5zwazkabibhs74faxnld7pcxhps"; depends=[ ]; };
ezsim = derive { name="ezsim"; version="0.5.5"; type="cran"; sha256="03x75vmf75qsmk4zb09j7xrb11w31rpfwd3dvv12nwjgndh9bnld"; depends=[foreach ggplot2 digest plyr reshape Jmisc ]; };
fANCOVA = derive { name="fANCOVA"; version="0.5-1"; type="cran"; sha256="034m2mmm6wmsjd41sg82m9ppqjf4b1kgw5vl2w7kzqfx0lypaiwv"; depends=[ ]; };
fArma = derive { name="fArma"; version="3010.79"; type="cran"; sha256="1byxyy4afl1gq58r1cmc5p6frdr9rljr1x3pdnc8nj8rr65lkg72"; depends=[timeDate timeSeries fBasics ]; };
fAsianOptions = derive { name="fAsianOptions"; version="3010.79"; type="cran"; sha256="1w9ph3rz6cd7g275flzsnqxwd3r5xin6pkini8pbsi9s8hbqv3vl"; depends=[timeDate timeSeries fBasics fOptions ]; };
fAssets = derive { name="fAssets"; version="3011.83"; type="cran"; sha256="0i3phc8kxwhzf6010bv5k2ff5zlv7aqrwavqmhly4wwby73i39yl"; depends=[timeDate timeSeries fBasics fMultivar robustbase MASS sn ecodist mvnormtest energy ]; };
fBasics = derive { name="fBasics"; version="3011.87"; type="cran"; sha256="1x4jv4db0nr2fig6hglk0kv6j27ngkc8qzclgiklbl8wjfrrp9zh"; depends=[timeDate timeSeries gss stabledist MASS ]; };
fBonds = derive { name="fBonds"; version="3010.77"; type="cran"; sha256="00rc3i0iyqcpsqvc036csa1c8gxwcnniwj3l2irmcalx4p8650w0"; depends=[timeDate timeSeries fBasics ]; };
fCertificates = derive { name="fCertificates"; version="0.5-4"; type="cran"; sha256="1a49gkzvb83lqqw65lxlaszpicn663hwi9wrbsb3f6z7znylkzaf"; depends=[fBasics fOptions fExoticOptions ]; };
fCopulae = derive { name="fCopulae"; version="3011.81"; type="cran"; sha256="0r4g567icgiiz6cxi6ak3kzrav9qzsc6zvww5dj1pd8mkd4r1f0y"; depends=[timeDate timeSeries fBasics fMultivar ]; };
fExoticOptions = derive { name="fExoticOptions"; version="2152.78"; type="cran"; sha256="0h58prj8nh340b0fxxkgg4bk25yxvb4f8ppq677hr12x8sysf1a8"; depends=[timeDate timeSeries fBasics fOptions ]; };
fExpressCertificates = derive { name="fExpressCertificates"; version="1.2"; type="cran"; sha256="1r4qkhf7alasbwjz910b0x4dlzm72af06kv7v2vwyzvf3byn21c5"; depends=[mvtnorm tmvtnorm fCertificates Matrix ]; };
fExtremes = derive { name="fExtremes"; version="3010.81"; type="cran"; sha256="0bzgnn0wf7lqhj7b2dbbhi61s8fi2kmi87gg9hzqqi6p7krnz1n5"; depends=[timeDate timeSeries fBasics fGarch fTrading ]; };
fGarch = derive { name="fGarch"; version="3010.82"; type="cran"; sha256="08q452pasvjhsg2ks6c52lqg276hlbdwk0vh25xya2bw2bgbqy99"; depends=[timeDate timeSeries fBasics ]; };
fICA = derive { name="fICA"; version="1.0-2"; type="cran"; sha256="058kkhjksm0nrfaj0csi6dgzr83kq4cln04v9fja12cqvdij9k7k"; depends=[JADE Rcpp Rcpp RcppArmadillo ]; };
fImport = derive { name="fImport"; version="3000.82"; type="cran"; sha256="07yqppl8sbfa0x9k4n7hh6hcgyxpcvlk74hhylib4nzqm70bn0sq"; depends=[timeDate timeSeries ]; };
fMultivar = derive { name="fMultivar"; version="3011.78"; type="cran"; sha256="115hqbbxsdjs5v2rhalg8vz0m5lyg8ppjjqmbq1x21jdnbg6l0fl"; depends=[timeDate timeSeries fBasics cubature mvtnorm sn ]; };
fNonlinear = derive { name="fNonlinear"; version="3010.78"; type="cran"; sha256="0pmz16b606i3mx05zjln4nyl53ks7rlwgm45ldr9qgmw51pflwz9"; depends=[timeDate timeSeries fBasics fGarch ]; };
fOptions = derive { name="fOptions"; version="3010.83"; type="cran"; sha256="01yr3hrfiq4hjhidl5pl1gcqg0myg4acmnipjhq70l3q50cfjm8l"; depends=[timeDate timeSeries fBasics ]; };
fPortfolio = derive { name="fPortfolio"; version="3011.81"; type="cran"; sha256="1rmyp2dv1jgrfj76mnggvi98ffa0yr8d9dlxxmg5pc6pdy2g4q4c"; depends=[timeDate timeSeries fBasics fAssets fCopulae robustbase MASS Rglpk slam Rsymphony Rsolnp kernlab quadprog rneos ]; };
fRegression = derive { name="fRegression"; version="3011.81"; type="cran"; sha256="1qyacwwa2mjq9szwwwfdnny4np68bj1j4bvfkywl7q7x44p4n5b4"; depends=[timeDate timeSeries fBasics lmtest mgcv nnet polspline ]; };
fSRM = derive { name="fSRM"; version="0.6.1"; type="cran"; sha256="0d545i4sqkmimy42jgryyafzxayr62prwa47x11v5kkd63gmn3j2"; depends=[lavaan plyr reshape2 ggplot2 scales foreign tcltk2 gridExtra ]; };
fTrading = derive { name="fTrading"; version="3010.78"; type="cran"; sha256="0qakjxnr5nslw06ywlj65m3w7pjgn5hixxc2rnqhvvvmjpdxybz7"; depends=[timeDate timeSeries fBasics ]; };
fUnitRoots = derive { name="fUnitRoots"; version="3010.78"; type="cran"; sha256="04nwwazd8jvzds6p4njzq4wpcsrvvvs0y9z8v8r402myd4856ssm"; depends=[urca timeDate timeSeries fBasics ]; };
fabia = derive { name="fabia"; version="2.12.0"; type="bioc"; sha256="13709ymfdlc8xfvlqxac93znkyas56kr39gg1qb8mq5d9jdz72sb"; depends=[Biobase ]; };
facopy = derive { name="facopy"; version="1.0.0"; type="bioc"; sha256="1xkk4nbksh6bcir2n1ayvjzi12vwsg32zypcygfdl4h5kx99c4a4"; depends=[cgdsr coin ggplot2 gridExtra annotate data_table DOSE FactoMineR GOstats graphite igraph IRanges MASS nnet reshape2 Rgraphviz scales ]; };
factDesign = derive { name="factDesign"; version="1.42.0"; type="bioc"; sha256="1kf02yh4k46xcz5csn2cz4wrifxb48wax175p9850mbk6gaw5jm8"; depends=[Biobase ]; };
factorQR = derive { name="factorQR"; version="0.1-4"; type="cran"; sha256="1vl01fm5qfyhnqbl5y86vkr50b8cv07vzlqs3v6smqaqq6yp4lv4"; depends=[lattice ]; };
factorplot = derive { name="factorplot"; version="1.1-1"; type="cran"; sha256="1l8pabf32dr12l7b4dgv5jaxpsjymgdxc51miv72zczrx8adc7da"; depends=[multcomp nnet ]; };
factualR = derive { name="factualR"; version="0.5"; type="cran"; sha256="1wz8ibcmilcx62yy29nd2i1pdmjf7fm0g9i5s58gdn8cjlhnw1jl"; depends=[RJSONIO RCurl ]; };
fail = derive { name="fail"; version="1.2"; type="cran"; sha256="0xzvb71iq20ah1x1zlb9kbx0r47jhqlzxx0sxwhkibglpzskg84z"; depends=[BBmisc ]; };
faisalconjoint = derive { name="faisalconjoint"; version="1.15"; type="cran"; sha256="08sb4za8qyadvigq2z7b0r44qk2lpahpnz9nv16xfjb1zhdkz5w3"; depends=[ ]; };
falcon = derive { name="falcon"; version="0.1"; type="cran"; sha256="0yas8a8nqdp03s77k5z1xlyz59gapyx68pz0mf6i2snjwpgai59v"; depends=[ ]; };
falsy = derive { name="falsy"; version="1.0.1"; type="cran"; sha256="1n2b2h7w7p3vib4vgb9vadd3c07dx12vz5gm8bawbdx7llh2pr24"; depends=[ ]; };
fame = derive { name="fame"; version="2.18"; type="cran"; sha256="132wb59d15bs94fga5hwxxr9pklyp2rjn448nl8lx5spjrvycwf4"; depends=[tis ]; };
fanc = derive { name="fanc"; version="1.23"; type="cran"; sha256="01bsny14r3i0a0yxbq3c670vh6m17g0lcjiphm6g5427rkn70whq"; depends=[Matrix ]; };
fanovaGraph = derive { name="fanovaGraph"; version="1.4.7"; type="cran"; sha256="19bzl6yrmi5lgyx6nq3f7i0rdaz2ig580h8116axrsxpx8c4d52x"; depends=[sensitivity igraph DiceKriging ]; };
fanplot = derive { name="fanplot"; version="3.4.0"; type="cran"; sha256="1arb10jxksicrdpgj8fq8r0sdnzvvdjjbw357aplqh422x54w4mp"; depends=[ ]; };
faoutlier = derive { name="faoutlier"; version="0.5"; type="cran"; sha256="1via1gggcj6cpdkyn61fbvlvhl47dwv9hi81x2jlq15lh340ljd4"; depends=[sem mvtnorm lattice lavaan mirt MASS ]; };
far = derive { name="far"; version="0.6-4"; type="cran"; sha256="166lhswdd1shx591wvx8a3lwzjini60mc37rbb3qvm6fxrb6fl55"; depends=[nlme ]; };
faraway = derive { name="faraway"; version="1.0.6"; type="cran"; sha256="10vj38chfnlz595pdi16v8gcwsbmn8a7p4gb0mm98dncyin5p2a3"; depends=[ ]; };
farms = derive { name="farms"; version="1.18.0"; type="bioc"; sha256="03gi6lsjhchjgjc7vvbzmm2w454fia5fpb3ba9jc1w2hz22razld"; depends=[affy MASS affy MASS Biobase ]; };
farsi = derive { name="farsi"; version="1.0"; type="cran"; sha256="0y14f86bccwjirdx33383wa605y7l7lr0w7ygvg8r7f7izkv7r3n"; depends=[ ]; };
fast = derive { name="fast"; version="0.63"; type="cran"; sha256="00ag9d0dwn9al104y93m8dclbjqabr9liif8gr19v3gv6k2k6p2c"; depends=[zoo ]; };
fastGHQuad = derive { name="fastGHQuad"; version="0.2"; type="cran"; sha256="0yv3wdyj7hs1gr3rq08k520v0ldmv5zzng709xjx2kchhwhmy8ah"; depends=[Rcpp Rcpp ]; };
fastHICA = derive { name="fastHICA"; version="1.0.2"; type="cran"; sha256="1h794ybbii0k7v3x0r1499zxdqa1i1dpi3i7idzqdrffnb5kmwlv"; depends=[fastICA energy ]; };
fastICA = derive { name="fastICA"; version="1.2-0"; type="cran"; sha256="0ykk78fsk5da2g16i4wji85bvji7nayjvkfp07hyaxq9d15jmf0r"; depends=[ ]; };
fastLiquidAssociation = derive { name="fastLiquidAssociation"; version="1.2.2"; type="bioc"; sha256="1bq1n4hbcbpcw10sxbibc149075wx3lqhxj8npddz7m0aa4y3ma9"; depends=[LiquidAssociation Hmisc WGCNA ]; };
fastM = derive { name="fastM"; version="0.0-2"; type="cran"; sha256="0q5dz47sqj6d4r3k6l6q34l5ajb8fjbf7xam75scp0mg3czswnfn"; depends=[Rcpp Rcpp RcppArmadillo ]; };
fastR = derive { name="fastR"; version="0.8-1"; type="cran"; sha256="08p03i72zn0cbwjsxpnsknk0148dx3pfwkw740x7f52c3jgbb1gi"; depends=[mosaic lattice mosaicData ]; };
fastSOM = derive { name="fastSOM"; version="0.9"; type="cran"; sha256="03501d5289lrlr4qcgxciz160hqc6nhqb9ab266fr132fkbiv4id"; depends=[ ]; };
fastclime = derive { name="fastclime"; version="1.2.5"; type="cran"; sha256="12k7bkq4gkkyh8lr2whmi73mzcy7wmfzwgi20kli7r4g39n3a1kv"; depends=[lattice igraph MASS Matrix ]; };
fastcluster = derive { name="fastcluster"; version="1.1.16"; type="cran"; sha256="0x2prrsnqi5iqx23ki6y2agndjq8058ph6s703i4avrqi1q1w1q8"; depends=[ ]; };
fastcox = derive { name="fastcox"; version="1.1.1"; type="cran"; sha256="1a5i0ragl0r6p29iamkn04igakiwyysykfbs2p6ybgy8pfdq69sv"; depends=[Matrix ]; };
fastmatch = derive { name="fastmatch"; version="1.0-4"; type="cran"; sha256="16gfizfb1p7rjybrfm57nb6hdm30iirbppva8p8xf8pndz35fjbs"; depends=[ ]; };
fastpseudo = derive { name="fastpseudo"; version="0.1"; type="cran"; sha256="0paag4pjh3gs270j663bsl65sfrq43gk2zzqmalr03fmcckp6aaj"; depends=[ ]; };
fastseg = derive { name="fastseg"; version="1.12.0"; type="bioc"; sha256="19awyg0l6bm9kqh9dlvls17vil15sngh58q15yb0yds1c7qy4ff5"; depends=[GenomicRanges Biobase IRanges BiocGenerics ]; };
fat2Lpoly = derive { name="fat2Lpoly"; version="1.1.1"; type="cran"; sha256="0xgxlx9m6lgcn784892g2xvnabyq8k45wi3xrszrbdxxa7zqd1i4"; depends=[kinship2 multgee ]; };
fbRanks = derive { name="fbRanks"; version="2.0"; type="cran"; sha256="17kbmdpgqkj2n951c6mdsrgfga6kiij1gqiw1wpi0q3fq4dlfrzx"; depends=[igraph stringr ]; };
fbati = derive { name="fbati"; version="1.0-1"; type="cran"; sha256="1ia67dg9b61kc14mjg7065v0c6n6agdp8cjdviasyzga00wzsyxj"; depends=[pbatR fgui rootSolve ]; };
fbroc = derive { name="fbroc"; version="0.1.0"; type="cran"; sha256="1zpg796day8qlvah3d4qy8118knxx7vfa3gf50jcsv97b8r15dmz"; depends=[ggplot2 Rcpp Rcpp ]; };
fcd = derive { name="fcd"; version="0.1"; type="cran"; sha256="091wbf5iskcgyr7jv58wrf590qijb0qcpninmvm3xrwxi34r37xr"; depends=[glmnet MASS combinat ]; };
fclust = derive { name="fclust"; version="1.1.1"; type="cran"; sha256="0gxgyvz6nzqp5sdjhfdjmm3r4lf1b4min3s5rfddwdqiswzxg8m8"; depends=[ ]; };
fcros = derive { name="fcros"; version="1.3"; type="cran"; sha256="1ylkma69gfc5ij3vvf1axyasya31qm5bwj2bjlvj12byf52wsiy8"; depends=[ ]; };
fda = derive { name="fda"; version="2.4.4"; type="cran"; sha256="05rvrp29ip1wrk2wly06wdry2a2riynkx677nx5lg240lz12d6yw"; depends=[Matrix ]; };
fda_usc = derive { name="fda.usc"; version="1.2.1"; type="cran"; sha256="1w0dw06vgviia4yy2v5mrq0jvnfvdp7y8f2x246v3xliqgjmg7as"; depends=[fda MASS mgcv rpart ]; };
fdaMixed = derive { name="fdaMixed"; version="0.4"; type="cran"; sha256="15m13v71kqxd9gqiymgfkq0dvcpzp05576m8zkg08m0k067ga9bd"; depends=[Formula Rcpp Rcpp RcppArmadillo ]; };
fdakma = derive { name="fdakma"; version="1.2"; type="cran"; sha256="17nbaal3m2rz423fq34fia8pb75dzdzsj5d8w6g2iwckqbapszn0"; depends=[ ]; };
fdasrvf = derive { name="fdasrvf"; version="1.4.2"; type="cran"; sha256="12x04fi0sxs9yh1mf9iykk69zlz6m31j7s01in28p5hgk6wqf8fi"; depends=[foreach mvtnorm matrixcalc numDeriv ]; };
fdatest = derive { name="fdatest"; version="2.1"; type="cran"; sha256="0zdnmssir5jz2kbfz4f4xshjfv4pivqx7cbh2arlx6ypkjrjws8n"; depends=[fda ]; };
fdrDiscreteNull = derive { name="fdrDiscreteNull"; version="1.0"; type="cran"; sha256="1388a9hjbgblmhx5f3ddk16kigzsik9bvw179d1szk33kadfq2vp"; depends=[MCMCpack edgeR ]; };
fdrame = derive { name="fdrame"; version="1.38.0"; type="bioc"; sha256="1hqb6d5vc03p7fbqghyk247l72vl9ivr82zgs90h3f9h2ipq4szn"; depends=[ ]; };
fdrci = derive { name="fdrci"; version="2.0"; type="cran"; sha256="0smyl9phl02wghimawvff3h267w3h213jbqpka155i6cfzig9qjy"; depends=[ ]; };
fdrtool = derive { name="fdrtool"; version="1.2.14"; type="cran"; sha256="0q4mxm3vxhvxxbkgl9vxs3q93icipg9hz7qcr4vas8cks1hmzbdw"; depends=[ ]; };
fds = derive { name="fds"; version="1.7"; type="cran"; sha256="164f2cbywph7kyn712lfq4d86v22j4y3fg5i9zyz956hipqv0qvw"; depends=[rainbow RCurl ]; };
fdth = derive { name="fdth"; version="1.2-1"; type="cran"; sha256="0rr9p2rns5ws111iqcicrlpcv47fkbxf161yxkkzfs2l3f1kgw14"; depends=[ ]; };
feature = derive { name="feature"; version="1.2.11"; type="cran"; sha256="0dgiv9gwyklnw8w0cpchakadc1vqcngjg39cha6gvl2i3csgxz4p"; depends=[ks rgl misc3d ]; };
features = derive { name="features"; version="2011.8-2"; type="cran"; sha256="0yshwqv2mzl5jj323jwxscpz2ygb4ywxh6q0zwphb24bhv7h9lwd"; depends=[lokern ]; };
fechner = derive { name="fechner"; version="1.0-2"; type="cran"; sha256="0yhiqr0wlka3wq0nhwy9n02ax3x5b0y803iadbsr3xb54pxbfbqd"; depends=[ ]; };
federalregister = derive { name="federalregister"; version="0.1.2"; type="cran"; sha256="0f73jhzhqi3a97iyfx5c5i09vxwnyypgw6668z7nch8lvq337s8x"; depends=[RCurl RJSONIO ]; };
ff = derive { name="ff"; version="2.2-13"; type="cran"; sha256="1nvd6kx46xzyc99a44mgynd94pvd2h495m5a7b1g67k5w2phiywb"; depends=[bit ]; };
ffbase = derive { name="ffbase"; version="0.11.3"; type="cran"; sha256="0n65i2a91jjjpzfw3placf6j6sbf8azzd1sck4adha6iiwpi8b1n"; depends=[ff bit fastmatch ]; };
ffmanova = derive { name="ffmanova"; version="0.2-2"; type="cran"; sha256="0sw8br73mx552m4b5zi4qgjcrwxflmgsnvs4mlnxh8g2gaf5bx4j"; depends=[ ]; };
ffpe = derive { name="ffpe"; version="1.10.0"; type="bioc"; sha256="1x9x759dxnbfd2yhskbalgvqv6lw3mazsjgnf5wgnr4bs4s5zgql"; depends=[TTR Biobase BiocGenerics affy lumi methylumi sfsmisc ]; };
fftw = derive { name="fftw"; version="1.0-3"; type="cran"; sha256="01nncrf2p0yq49lhd5aq4hvhp87f25r0x7siqnaldv5zq24krl30"; depends=[ ]; };
fftwtools = derive { name="fftwtools"; version="0.9-7"; type="cran"; sha256="1pd6ri9qh8rj5dahznl38l6haa1x6f2w91mxi83lic76lpddnxly"; depends=[ ]; };
fgac = derive { name="fgac"; version="0.6-1"; type="cran"; sha256="0paddf5a4w0g2i0ay7my0bppwh534d8ghy6csfxl5jj034xjgwkk"; depends=[ ]; };
fgof = derive { name="fgof"; version="0.2-1"; type="cran"; sha256="0bclkb3as0fl2gyggqxczndfyj9pfnni5pa3inpn5msrnjg4g2j2"; depends=[mvtnorm numDeriv ]; };
fgpt = derive { name="fgpt"; version="2.3"; type="cran"; sha256="1d0qzsn4b68jhk07k97iv765jpmzzh1gwqpid0r76vg4cwqfs3n7"; depends=[ ]; };
fgui = derive { name="fgui"; version="1.0-5"; type="cran"; sha256="0gzwxzvf2y9p5rlfk862d7l1dm2sdwjhjpcb8p494cj4g1xshazg"; depends=[ ]; };
fheatmap = derive { name="fheatmap"; version="1.0.0"; type="cran"; sha256="0braywpc0zghv1lnwb0c83p8ls2w7b8d2gbvv0p4123rhax5limw"; depends=[RColorBrewer gdata ggplot2 reshape2 gplots ]; };
fields = derive { name="fields"; version="8.2-1"; type="cran"; sha256="1zsi3ngp50f61nn93lh1v895as4lp63znf7bzn2q3hsl6ncaylbc"; depends=[spam maps ]; };
fifer = derive { name="fifer"; version="1.0"; type="cran"; sha256="0vbkks6y6pacgpiixm10fbfa34lmk5r9kwd30lfjf0g7r51fhvv9"; depends=[xtable MASS ]; };
filehash = derive { name="filehash"; version="2.2-2"; type="cran"; sha256="0766wrc42qh7r99bd2zy50vvdnqlz0vkzplskzkm5f4g63qdhjxh"; depends=[ ]; };
filehashSQLite = derive { name="filehashSQLite"; version="0.2-4"; type="cran"; sha256="1higvkmj4wvnwpvayqinzaygiksij20d77dx118q0gffsczadamh"; depends=[filehash DBI RSQLite filehash DBI ]; };
filenamer = derive { name="filenamer"; version="0.2"; type="cran"; sha256="0f2xvqp75b8v59707z26y746vvag3f2mcykafqp5cy8cqrf7x61j"; depends=[ ]; };
financial = derive { name="financial"; version="0.2"; type="cran"; sha256="1v6jgs3rq57byin5mynslfjk3zrx91qz36558nn17mv6z0qsf10v"; depends=[ ]; };
findpython = derive { name="findpython"; version="1.0.1"; type="cran"; sha256="0fa01znc9cckj4ay4zmwmssm2lkhmsw6h07y1pwgd6z1b2pj7bns"; depends=[ ]; };
fingerprint = derive { name="fingerprint"; version="3.5.2"; type="cran"; sha256="042aycxs00rglqh2y27bjlwkk6z312gavli7g8xvqfx1lisijrjk"; depends=[ ]; };
finiteruinprob = derive { name="finiteruinprob"; version="0.4"; type="cran"; sha256="0wcllbqkryll3v3fjb6k210pcgkskzrpa78gg8nda0jvkij11zb7"; depends=[sdprisk numDeriv ]; };
fishMod = derive { name="fishMod"; version="0.25"; type="cran"; sha256="0mg1bziz2ia406m4ilc7hw1bghrgdibm537hnlf9ffhfayjc4kid"; depends=[ ]; };
fisheyeR = derive { name="fisheyeR"; version="0.9"; type="cran"; sha256="1w6va7gakqq2q8hsvdszpn8s2ysdfc648bk5p5v3wbl5s403bci8"; depends=[tkrplot ]; };
fishmethods = derive { name="fishmethods"; version="1.7-0"; type="cran"; sha256="0kgfv78f8a460nfvpfrrqfiy3ipbl3775axydal3vm1zf4l6k2z3"; depends=[MASS boot bootstrap ]; };
fishmove = derive { name="fishmove"; version="0.3-3"; type="cran"; sha256="1knbv087cg0czjcgdbrlpg69pp1dxb57b7ak5j1mcy7ay3a41a9h"; depends=[ggplot2 plyr MASS boot ]; };
fit_models = derive { name="fit.models"; version="0.5-10"; type="cran"; sha256="06pj26dbnq6mf9wxinvjzwyn36656f66a4bmky36r7fzi92gf3d8"; depends=[lattice ]; };
fit4NM = derive { name="fit4NM"; version="3.3.3"; type="cran"; sha256="0k2194521yby6xxi77bpjp6ywz8kpnzws217m7n0hw6xwz5mqj1g"; depends=[gWidgets tkrplot RGtk2 gWidgetsRGtk2 cairoDevice ]; };
fitDRC = derive { name="fitDRC"; version="1.1"; type="cran"; sha256="1f6avw8ia9ks17zdagpmh6yvcmi53h5cvm0wwv9hsb92x5zfhxn9"; depends=[ ]; };
fitTetra = derive { name="fitTetra"; version="1.0"; type="cran"; sha256="0ia6wk4gicpmn6kclsd28p7v1npwfv2blagiz0cxzwfw3njv103g"; depends=[ ]; };
fitbitScraper = derive { name="fitbitScraper"; version="0.1.3"; type="cran"; sha256="0fh8qm4ws9idx0868rda7v1cs8g61q8zdx1ncyxijbvijhdslfgj"; depends=[httr stringr RJSONIO ]; };
fitdistrplus = derive { name="fitdistrplus"; version="1.0-4"; type="cran"; sha256="02ds5vmxc3rk50c33rxdnpqf2hbx186ss6br29n6538q7734nra9"; depends=[survival ]; };
flagme = derive { name="flagme"; version="1.22.0"; type="bioc"; sha256="0cs608irzag4ql0lxa34fw6y46k1vqvgg2iv1d5s2y36jmbhx202"; depends=[xcms CAMERA gplots MASS SparseM ]; };
flam = derive { name="flam"; version="1.0"; type="cran"; sha256="0jyx0wff5zdpnhgxz74k6fxgwdnl7khanahv63af22y0mqpd066f"; depends=[MASS ]; };
flare = derive { name="flare"; version="1.5.0"; type="cran"; sha256="03bq40lwwq49vvbarf37y7c3smm29mxqfxsc66gkg8l5pak4l38i"; depends=[lattice MASS Matrix igraph ]; };
flashClust = derive { name="flashClust"; version="1.01-2"; type="cran"; sha256="0l4lpz451ll7f7lfxmb7ds24ppzhfg1c3ypvydglcc35p2dq99s8"; depends=[ ]; };
flexCWM = derive { name="flexCWM"; version="1.5"; type="cran"; sha256="1q6nkw6al56wc53sj719c94iv20a9a82pq4s62jnb2flq1pwdaml"; depends=[numDeriv mnormt mclust ellipse mixture Flury adehabitat MASS statmod ]; };
flexclust = derive { name="flexclust"; version="1.3-4"; type="cran"; sha256="1x9gyg69kb3wn02w885kl6hcwpf2ki66gzfayvc83jisrwxvdfvv"; depends=[lattice modeltools ]; };
flexmix = derive { name="flexmix"; version="2.3-13"; type="cran"; sha256="1i205yw3kkxs27gqcs6zx0c2mh16p332a2p06wq6fdzb20bazg3z"; depends=[lattice modeltools nnet ]; };
flexsurv = derive { name="flexsurv"; version="0.6"; type="cran"; sha256="10y6v1m8w5h92y37pi26xqsb4l6wk6dz43593dngpfr9ww1j4aaa"; depends=[survival muhaz mvtnorm deSolve ]; };
flip = derive { name="flip"; version="2.4.3"; type="cran"; sha256="04zf2gnk5w57gxnlnh26pn1ir1wfrzxhfhchr33ghk7prhc7k4b8"; depends=[e1071 someMTP cherry Rcpp Rcpp RcppArmadillo ]; };
flipflop = derive { name="flipflop"; version="1.4.1"; type="bioc"; sha256="1cl9p78zgpa7153b296i3azwx0f303np4cqkpmm0sb2v4sb1r4vk"; depends=[Matrix IRanges GenomicRanges ]; };
flora = derive { name="flora"; version="0.2.4"; type="cran"; sha256="1rdwdx7mphfr7sk3yba0vhbsh3xggz2k6ip8dmfiqjjhv2vxji5k"; depends=[shiny ]; };
flowBeads = derive { name="flowBeads"; version="1.4.0"; type="bioc"; sha256="1azhw92jxiw2b2q046a6hlb3n0wld5ccg9m9grp4rkwsc1sabv0f"; depends=[Biobase rrcov flowCore flowCore rrcov knitr xtable ]; };
flowBin = derive { name="flowBin"; version="1.2.0"; type="bioc"; sha256="08qwjc4yq28r4q4y71a4x79x8razljm64xpvyhfzq7rg06aqdg5w"; depends=[flowCore flowFP class limma snow BiocGenerics ]; };
flowCHIC = derive { name="flowCHIC"; version="1.0.2"; type="bioc"; sha256="1i8cvnbhpdk5z1k6mpaw2z7xx092x6kaqh3jz3fj14dqd6vas1g1"; depends=[flowCore EBImage vegan hexbin ggplot2 ]; };
flowCL = derive { name="flowCL"; version="1.4.0"; type="bioc"; sha256="0gags4slbjgb97khcsrnzar2s3xpkck77n8ji50m0yha8h31g9m7"; depends=[Rgraphviz SPARQL ]; };
flowClean = derive { name="flowClean"; version="1.2.0"; type="bioc"; sha256="1l11chqaj0in4gsj869crx9z5ib36acjq0sa5lwflzy99xd179ky"; depends=[flowCore bit changepoint sfsmisc ]; };
flowClust = derive { name="flowClust"; version="3.4.11"; type="bioc"; sha256="0v6p70m948wz5hln0fp1bq9z80vkw5xw7lqhv9lpxgwa7k0gzh8r"; depends=[Biobase graph RBGL ellipse flowViz mnormt corpcor flowCore clue BiocGenerics MCMCpack ]; };
flowCore = derive { name="flowCore"; version="1.32.2"; type="bioc"; sha256="03ykfhc8vfc4ss5dgrzi7qn6y99qn78b9j5y1fdmslsdsm81n2mq"; depends=[Biobase BiocGenerics graph rrcov corpcor ]; };
flowCyBar = derive { name="flowCyBar"; version="1.2.2"; type="bioc"; sha256="0ndpw0nh1hkpw8fis8v0850pargfrih96ybv8gi6sks3r127ji11"; depends=[gplots vegan ]; };
flowDensity = derive { name="flowDensity"; version="1.0.0"; type="bioc"; sha256="14z5100z8kh3xmd2dic274nfyj996dc7vhz5mjp91aifj9igjjss"; depends=[flowCore car gplots RFOC GEOmap ]; };
flowFP = derive { name="flowFP"; version="1.24.0"; type="bioc"; sha256="0nbx7yh8nzjzfb1dcxzfmyhgm6f8yljqc9ngnywx1gs3gxbm6drx"; depends=[flowCore flowViz Biobase BiocGenerics flowCore flowViz ]; };
flowFit = derive { name="flowFit"; version="1.4.0"; type="bioc"; sha256="1p4k2gmjghk7xnfkkv14vbw5ambq7ik577yqyf1vfx4sqnpjp5k7"; depends=[flowCore flowViz kza minpack_lm gplots ]; };
flowFlowJo = derive { name="flowFlowJo"; version="1.24.0"; type="bioc"; sha256="0cx1bn64gwcffzdxa3fbk2pi8bwfpbllbrgvsh4g020yqlgrnxml"; depends=[MASS flowCore XML Biobase ]; };
flowMap = derive { name="flowMap"; version="1.4.0"; type="bioc"; sha256="0qfpmmi6dw3vj3kkyygl12w6r5sq5ncd9gk31hd91dhm3ph3q44l"; depends=[ade4 doParallel abind reshape2 ggplot2 scales ]; };
flowMatch = derive { name="flowMatch"; version="1.2.0"; type="bioc"; sha256="0k3vc9b1clp65abb702402srbahgsb36lk4ii76mhz965gnss024"; depends=[Rcpp flowCore Biobase Rcpp ]; };
flowMeans = derive { name="flowMeans"; version="1.18.0"; type="bioc"; sha256="18nx0b889zyiihcg6lxqiqwgcg3xzw4xwdlm4q47nb564f82b52l"; depends=[Biobase rrcov feature flowCore ]; };
flowMerge = derive { name="flowMerge"; version="2.14.0"; type="bioc"; sha256="1kaq8l0ackcmkair4pjm94337qlig9vvl018dz0v8mhplzlsdg91"; depends=[graph feature flowClust Rgraphviz foreach snow rrcov flowCore ]; };
flowPeaks = derive { name="flowPeaks"; version="1.8.0"; type="bioc"; sha256="1ppgxywm1hvinj45f0bxh2vj25mrq7l10yxr6ayk49vlg3filia2"; depends=[ ]; };
flowPhyto = derive { name="flowPhyto"; version="1.18.0"; type="bioc"; sha256="1b55fswncz00ij4237m9ayki5hvjhv0j58xa9p4r56495cxfj8f3"; depends=[flowClust flowCore flowMeans TTR caroline ]; };
flowPlots = derive { name="flowPlots"; version="1.14.0"; type="bioc"; sha256="117nxr4y65bx6qrm8kg9y0afdyyj87j3m8p03s5naigbc7xl660p"; depends=[ ]; };
flowQ = derive { name="flowQ"; version="1.26.0"; type="bioc"; sha256="0rrkxnhxmy18cbrafzlhkpdw2vbjv8bqrxix0xn60z6c45y7w02n"; depends=[BiocGenerics outliers lattice flowViz mvoutlier bioDist parody RColorBrewer latticeExtra BiocGenerics geneplotter flowCore flowViz IRanges ]; };
flowQB = derive { name="flowQB"; version="1.10.0"; type="bioc"; sha256="11qz76h5897jwlh6ql6x8dalpzigimbkqvicr3vzh5lxnprw63kl"; depends=[Biobase flowCore MASS ]; };
flowStats = derive { name="flowStats"; version="3.24.8"; type="bioc"; sha256="0ph3czaz1w6dsnyianp6133fwlfx9afxwv3q9ykca53sq6vblg30"; depends=[flowCore fda mvoutlier cluster flowWorkspace BiocGenerics MASS flowViz flowCore fda Biobase KernSmooth lattice ks ]; };
flowTrans = derive { name="flowTrans"; version="1.18.0"; type="bioc"; sha256="0wivpq2hx4rr89fd85sz3qpa4g7barz3pvp91nc8h4pngj769312"; depends=[flowCore flowViz flowClust flowCore flowViz flowClust ]; };
flowType = derive { name="flowType"; version="2.4.0"; type="bioc"; sha256="0kp8nh4hd09m65kfhh0jcj9hyyak69sb6mjqhn3j81imnwr1g981"; depends=[Rcpp BH Biobase flowCore flowMeans sfsmisc rrcov flowClust flowMerge Rcpp BH ]; };
flowUtils = derive { name="flowUtils"; version="1.30.0"; type="bioc"; sha256="1cm8jh3xsbmm88p28yri47iviwd2b0pp6xh8bbgjmsgnibrsagym"; depends=[flowCore Biobase graph flowViz corpcor RUnit XML ]; };
flowViz = derive { name="flowViz"; version="1.30.1"; type="bioc"; sha256="1i3sm5bgp6y7y8s2gzlbckacszjcvdfx9khnqyflspw3p7pppwaq"; depends=[flowCore lattice Biobase flowCore KernSmooth lattice latticeExtra MASS RColorBrewer hexbin IDPmisc ]; };
flowWorkspace = derive { name="flowWorkspace"; version="3.12.06"; type="bioc"; sha256="12sk1dkxm85mgsyh41qjgzg9lyyj44250gkib00a8kl2ss37skbk"; depends=[flowCore flowViz ncdfFlow gridExtra Biobase BiocGenerics graph lattice RBGL graph XML Biobase IDPmisc Cairo gridExtra Rgraphviz data_table plyr latticeExtra Rcpp RColorBrewer Rcpp ]; };
flowcatchR = derive { name="flowcatchR"; version="1.0.3"; type="bioc"; sha256="0w3wnnq1snh6v59lim8av5wbg2bvs4xmd24vv3kjrs9d4v68qbwz"; depends=[EBImage rgl colorRamps abind BiocParallel ]; };
flower = derive { name="flower"; version="1.0"; type="cran"; sha256="1h2fvpjrvpbyrqb8hd51sslr1ibpwa7h9fiqy9anvf2yim5j11yq"; depends=[ ]; };
flowfield = derive { name="flowfield"; version="1.0"; type="cran"; sha256="1cx3i0w3xq781mmms4x20fshlf1i9bwxw9bxx562crix3fq3m50j"; depends=[ ]; };
flsa = derive { name="flsa"; version="1.05"; type="cran"; sha256="07z2b1pnpnimgbzkjgjl2b074pl9mml7nac2p8qvdgv7aj070cmh"; depends=[ ]; };
flux = derive { name="flux"; version="0.3-0"; type="cran"; sha256="0pc9cab2pwrfl0fnz29wp7a398r49hvbi50jp8i2fk2rfvck21a7"; depends=[caTools ]; };
fma = derive { name="fma"; version="2.01"; type="cran"; sha256="1j5mvhbrdnkyj4svibpahnz7d4221nkhja5b7fnh68mbmil607fc"; depends=[tseries forecast ]; };
fmcsR = derive { name="fmcsR"; version="1.8.0"; type="bioc"; sha256="08mk2kmaxxflimfahdpfpclqyg550y9dr0p0s232l6zghp97vshr"; depends=[ChemmineR RUnit ChemmineR BiocGenerics ]; };
fmri = derive { name="fmri"; version="1.5-1"; type="cran"; sha256="0dla5w8x4njw2njryb35nqh4r31wdps9bl5wzab2grzl546wwmwm"; depends=[ ]; };
fmsb = derive { name="fmsb"; version="0.5.1"; type="cran"; sha256="0y9h29a2wsngx73vn07f31l8ffrrm0si3qqx60hgxmb57v501kqz"; depends=[ ]; };
fmt = derive { name="fmt"; version="1.0"; type="cran"; sha256="13gsywnyvf9zy5n644g2xyd60f92w2dp7vil2dncjvjcqsib22a0"; depends=[ ]; };
foba = derive { name="foba"; version="0.1"; type="cran"; sha256="1af8whgl66v0vwzdf03b6141k3dysdc0svymlgifcga5gqkwzsl0"; depends=[ ]; };
focalCall = derive { name="focalCall"; version="1.0.0"; type="bioc"; sha256="096wps0kcglw3vrw9rbm2abs6qpq4fbll7w67w5gi36s1mba4azn"; depends=[CGHcall ]; };
fontcm = derive { name="fontcm"; version="1.1"; type="cran"; sha256="1z6b4qdgj5vhvjqj90sm1hp0fffi1vxzvq71p0flxybzyb7d15la"; depends=[ ]; };
foodweb = derive { name="foodweb"; version="1-0"; type="cran"; sha256="1zm2a87g9bkpz90j9lax28s5hq1w7ia28qqb6vnvr1d7a47g9zi9"; depends=[rgl ]; };
forams = derive { name="forams"; version="2.0-4"; type="cran"; sha256="1kvxlqdyzb3rqa45hp7jxjm009w0r6h78nr3yh9bqcz594zqidbq"; depends=[vegan ]; };
foreach = derive { name="foreach"; version="1.4.2"; type="cran"; sha256="097zk7cwyjxgw2i8i547y437y0gg2fmyc5g4i8bbkn99004qzzfl"; depends=[codetools iterators ]; };
forecTheta = derive { name="forecTheta"; version="1.0"; type="cran"; sha256="1ip6l27d37xqnmg8w285lq1y5j6akrjrviq4338c8sq075d8hckn"; depends=[forecast ]; };
forecast = derive { name="forecast"; version="6.1"; type="cran"; sha256="1hwv3arcpkkhpj5n2dvpw2fyx687b6x6yakxx55cw9rrka70rx1k"; depends=[zoo timeDate tseries fracdiff Rcpp nnet colorspace Rcpp RcppArmadillo ]; };
foreign = derive { name="foreign"; version="0.8-63"; type="cran"; sha256="1g5hl8drcmh2c9kpkr4443nw7dsxjwqsqs1q4bnhvw2lizs8bfb2"; depends=[ ]; };
forensic = derive { name="forensic"; version="0.2"; type="cran"; sha256="0kn8wn6p3fm67w88fbarg467vfnb42pc2cdgibs0vlgzw8l2dmig"; depends=[genetics combinat ]; };
forensim = derive { name="forensim"; version="4.3"; type="cran"; sha256="1jhlv9jv832qxxw39zsfgsf4gbkpyvywg11djldlr9vav7dlh3iw"; depends=[tcltk2 tkrplot ]; };
forestplot = derive { name="forestplot"; version="1.1"; type="cran"; sha256="1h28lwqdizs450bm5hb8zfbmx633n8v5bj2p8mi4cl814sjjylr0"; depends=[ ]; };
formatR = derive { name="formatR"; version="1.2"; type="cran"; sha256="0dlj728qdm7wmxcxvw1ip64pl4ajgmi8ax69zafrn3306pg9y136"; depends=[ ]; };
formula_tools = derive { name="formula.tools"; version="1.3.4"; type="cran"; sha256="1xxl45x88fpskwvfj6sbcbfng84plpf8sjrkwawzki9a41ydhwaq"; depends=[operator_tools ]; };
fortunes = derive { name="fortunes"; version="1.5-2"; type="cran"; sha256="1wv1x055v388ay4gnd1l8y6dgvamyfvmsd0ik9fziygwsaljb049"; depends=[ ]; };
forward = derive { name="forward"; version="1.0.3"; type="cran"; sha256="0swn5ysp3f660kl9jpmkck9324j1g3yhj2hl238rfrcr5wihxifc"; depends=[MASS ]; };
fossil = derive { name="fossil"; version="0.3.7"; type="cran"; sha256="188hyb3r1dnxkmqf2czh1kdzmk4mjc0v1kn1zml2yvxaxk7adsrz"; depends=[sp maps shapefiles ]; };
fpCompare = derive { name="fpCompare"; version="0.2.0"; type="cran"; sha256="0s8gfnyj6kjwy3ymiy232bb5wzgkd1ainaqzlki7mcafa3dyzq0a"; depends=[ ]; };
fpc = derive { name="fpc"; version="2.1-9"; type="cran"; sha256="01x7zcsbz9n10dxx8plb37c7z7pfz1xd5dvfrij3na327mny3pxs"; depends=[MASS cluster mclust flexmix prabclus class diptest mvtnorm robustbase kernlab trimcluster ]; };
fpca = derive { name="fpca"; version="0.2-1"; type="cran"; sha256="13b102026xlfb7c2rb3xsqsymm7xpmaxppaafjkb5dx0b1lz0jrc"; depends=[sm ]; };
fpow = derive { name="fpow"; version="0.0-2"; type="cran"; sha256="0am3nczimcfrm9hi02vl2xxsh703qjmr2j11y014mll3f2v1l8cy"; depends=[ ]; };
fpp = derive { name="fpp"; version="0.5"; type="cran"; sha256="1jqnx6bgpvnbbj2fa2b6m6aj8jd5cb9kz877r8kp7a5qj62xv1ww"; depends=[forecast fma expsmooth lmtest tseries ]; };
fptdApprox = derive { name="fptdApprox"; version="2.0"; type="cran"; sha256="152bajs76wrapp0zdbkckff6kdkkm6sqqlqd2w220hsi96l2p9dh"; depends=[ ]; };
fracdiff = derive { name="fracdiff"; version="1.4-2"; type="cran"; sha256="03l5dqpqwwi5c8fwc2vissfawcsignai60h2zalknkibvk782dwq"; depends=[ ]; };
fracprolif = derive { name="fracprolif"; version="1.0.6"; type="cran"; sha256="1cpb71yk1245j6qz4mqvpqc3s3lrmav4blp5wlxasjizn3ilwh66"; depends=[emg numDeriv ]; };
fractal = derive { name="fractal"; version="2.0-0"; type="cran"; sha256="17wz3c9f1l1rphzdn7j27j5nb1ll6j84f9ihk0z6fni41050szv7"; depends=[splus2R ifultools sapa wmtsa scatterplot3d ]; };
fractaldim = derive { name="fractaldim"; version="0.8-4"; type="cran"; sha256="0fln4qn0d79agnnlzi8b9g9qn90zynq1cg9v5isiyi71345v45nr"; depends=[abind ]; };
fractalrock = derive { name="fractalrock"; version="1.1.0"; type="cran"; sha256="15f4w8hq3d8khgq269669ri16qxhar9646w40cw7wzh79r9gpf00"; depends=[futile_any futile_logger timeDate quantmod ]; };
frailtyHL = derive { name="frailtyHL"; version="1.1"; type="cran"; sha256="1xjdph0ixanf9w4b6hx6igfhkcp8h93sclrg0pgqgmbvm41lhb1x"; depends=[Matrix numDeriv survival ]; };
frailtypack = derive { name="frailtypack"; version="2.7.5"; type="cran"; sha256="1wjb8l6aj1lsmbgczfag8a96r0z235yj315kr7dpkqkninn2bqwk"; depends=[survival boot MASS survC1 ]; };
frair = derive { name="frair"; version="0.4"; type="cran"; sha256="1g52ykj1m9znpp0pvry7dnmhg4m73nbkw0bp31zl6pcsdgmxxqjr"; depends=[bbmle emdbook boot ]; };
frbs = derive { name="frbs"; version="3.1-0"; type="cran"; sha256="0ngvi7lg6aviwic8f4ya03khyzh3ksglpmsnrdjjznwj874y2wim"; depends=[ ]; };
freeknotsplines = derive { name="freeknotsplines"; version="1.0"; type="cran"; sha256="19zs42q9njknirdbrbnp8bv4vr32kd8wxmkqj0a0nh06i5fcx67r"; depends=[ ]; };
freestats = derive { name="freestats"; version="0.0.3"; type="cran"; sha256="0b18n8idap089gkmjknzzb94dvs2drpdqs0mrw7dqnacxgbbqwfj"; depends=[MASS mvtnorm ]; };
freqMAP = derive { name="freqMAP"; version="0.2"; type="cran"; sha256="02hpkqqrxifrr1cxn5brp166jwa8lgl1mcgmq7s8csrbbd900ziv"; depends=[ ]; };
freqparcoord = derive { name="freqparcoord"; version="1.0.0"; type="cran"; sha256="0hn5y10yp3j76lqrmj6dsaafamgy4pfxx1p4y92z17s79x29j59q"; depends=[ggplot2 GGally FNN mvtnorm ]; };
freqweights = derive { name="freqweights"; version="1.0.1"; type="cran"; sha256="13wy8nzs888yn7ld96qq3p7k3xjn6s38qdlfb3nqmh52daqcnn7m"; depends=[plyr dplyr data_table biglm fastcluster FactoMineR ]; };
frm = derive { name="frm"; version="1.2.2"; type="cran"; sha256="1dl0vca9r2dams99sc13pfpi0b3yb02x59f4c1jz07zz005c8l23"; depends=[ ]; };
frma = derive { name="frma"; version="1.18.0"; type="bioc"; sha256="036x1q0fwyafavzs1q8hpm9ipwn3qiqn7sfkh032vphhghp8hgli"; depends=[Biobase Biobase MASS DBI affy oligo oligoClasses preprocessCore BiocGenerics ]; };
frmaTools = derive { name="frmaTools"; version="1.18.0"; type="bioc"; sha256="1y6lgv2cja7zz9qmid46lfj83rs3i7as9mjpgn30qmdghswrp04f"; depends=[affy Biobase DBI preprocessCore ]; };
frmhet = derive { name="frmhet"; version="1.1.2"; type="cran"; sha256="1a6q5qz22b4sx5l1jz50x1q3bz8sj91dj2cahq28h6ss5b8vfn0y"; depends=[ ]; };
frmpd = derive { name="frmpd"; version="1.0.1"; type="cran"; sha256="104frdraawj8g76589kz4csbgzkvs4rgdhgwmb77srhqp5nc8v96"; depends=[ ]; };
frmqa = derive { name="frmqa"; version="0.1-5"; type="cran"; sha256="0vd5jnjzhkc0vd4cqn4cs6a3limd4fxwyb5i7845rwmkzk1944aj"; depends=[partitions Rmpfr ]; };
frontier = derive { name="frontier"; version="1.1-0"; type="cran"; sha256="0k2ap22qddzki63biikr1jzi5vmqz4j06d7qrf1y8axdq1q1cr44"; depends=[micEcon lmtest moments Formula miscTools ]; };
frontiles = derive { name="frontiles"; version="1.2"; type="cran"; sha256="08qq25wbylvhvmq34wggyj0hwdlxfs9rfs8gjqsrg50xccchniqi"; depends=[classInt colorspace rgl sp ]; };
frt = derive { name="frt"; version="0.1"; type="cran"; sha256="1qy76a1wkznaqzlyj1nq74mf1pnyly1s8gnff8q30zfccqk68cxv"; depends=[ ]; };
fscaret = derive { name="fscaret"; version="0.9.4"; type="cran"; sha256="0cna1cixq021lka7c8jgfqr6h8vvyvylckkbfay10ng7cxpqa44c"; depends=[caret gsubfn hmeasure ]; };
fsia = derive { name="fsia"; version="1.0"; type="cran"; sha256="0qa4avd1xiwh1ih1cj067r7vipab2ngspq7hfd0xbapwx87fggrg"; depends=[ ]; };
fslr = derive { name="fslr"; version="1.4.4"; type="cran"; sha256="0k6973hd1q54q6243lir4xi3wlrsiqb526qsh9gryx9ha4iv0rmc"; depends=[stringr oro_nifti matrixStats R_utils scales ]; };
fso = derive { name="fso"; version="2.0-1"; type="cran"; sha256="02dr12bssiwn8s1aa1941hfpa4007gd65f3l4s74gs2vgjzdxf8s"; depends=[labdsv rgl ]; };
ftnonpar = derive { name="ftnonpar"; version="0.1-88"; type="cran"; sha256="0df9zxwjpfc939ccnm1iipwhpf76b34v0x74nsi1mm1g927dfl0i"; depends=[ ]; };
fts = derive { name="fts"; version="0.9.9"; type="cran"; sha256="1qgp8xdwr5pp2b7nd8r717a6p8b6izwqrindx2d1d0lhhnqlcwhv"; depends=[zoo BH ]; };
ftsa = derive { name="ftsa"; version="4.3"; type="cran"; sha256="0hf3v83a5mh6s8y3hhvnwqmj55n707c8lgkpmxlc52gxykgnayjz"; depends=[forecast rainbow colorspace MASS pcaPP ]; };
fueleconomy = derive { name="fueleconomy"; version="0.1"; type="cran"; sha256="1svy5naqfwdvmz98l80j38v06563vknajisnk596yq5rwapl71vj"; depends=[ ]; };
fugeR = derive { name="fugeR"; version="0.1.2"; type="cran"; sha256="0kd90s91vzv0g3v9ii733h10d8y6i05lk21p5npb3csizqbdx94l"; depends=[snowfall Rcpp Rcpp ]; };
fun = derive { name="fun"; version="0.1-0"; type="cran"; sha256="0z4nq2w1wz1clc7cf87pf870hayxq5mpzhllfgwj4mmh2xpphnrf"; depends=[ ]; };
funFEM = derive { name="funFEM"; version="1.1"; type="cran"; sha256="08798lvryykrxfvp2297anzl4gi81gwvc1qyyzq16nafjf65kwfy"; depends=[MASS fda elasticnet ]; };
funHDDC = derive { name="funHDDC"; version="1.0"; type="cran"; sha256="038m64yv27wz7ki2gcn94q011p8mv0ggmli5n27y0f5bnkfh6d6w"; depends=[fda ]; };
functional = derive { name="functional"; version="0.6"; type="cran"; sha256="120qq9apg6bf39n9vnp68db5rdhwvnj2vi12a8j8243vq8kqxdqr"; depends=[ ]; };
funreg = derive { name="funreg"; version="1.1"; type="cran"; sha256="1sxr4mylcpbya197d55yi6d7g5pfspaf59xxbwjgmwgjw06rl76r"; depends=[MASS mgcv mvtnorm ]; };
funtimes = derive { name="funtimes"; version="1.0"; type="cran"; sha256="0jdl09x0fvfz08xyg1yfyhn0lgg8ycqbli4ag9js0yva8pwab7lh"; depends=[Jmisc ]; };
futile_any = derive { name="futile.any"; version="1.3.0"; type="cran"; sha256="1c7pj64kz09qzwrxvkp1w1w8mvxwq36zkj6w4b7yyi8v7x3daq2a"; depends=[lambda_r ]; };
futile_logger = derive { name="futile.logger"; version="1.4.1"; type="cran"; sha256="1plld1icxrcay7llplbd4i8inpg97crpnczk58mbk26j8glqbr51"; depends=[lambda_r futile_options ]; };
futile_matrix = derive { name="futile.matrix"; version="1.2.2"; type="cran"; sha256="1cb975n93ck5fma0gvvbzainp7hv3nr8fc6b3qi8gnxy0d2i029m"; depends=[lambda_r lambda_tools futile_logger RMTstat ]; };
futile_options = derive { name="futile.options"; version="1.0.0"; type="cran"; sha256="1hp82h6xqq5cck67h7lpf22n3j7mg3v1mla5y5ivnzrrb7iyr17f"; depends=[ ]; };
futile_paradigm = derive { name="futile.paradigm"; version="2.0.4"; type="cran"; sha256="14xsp1mgwhsawwmswqq81bv6jfz2z6ilr6pmnkx8cblyrl2nwh0v"; depends=[futile_options RUnit ]; };
fuzzyFDR = derive { name="fuzzyFDR"; version="1.0"; type="cran"; sha256="0zd8i9did0d9gp42xjmwrccm32glabvvy08kl8phhwb1yaq53h7w"; depends=[ ]; };
fuzzyMM = derive { name="fuzzyMM"; version="1.0.1"; type="cran"; sha256="1pqfc9b9l2xx5pl45hfildikqjsdgqfhqzi2nbb34026nla5m8vk"; depends=[osmar frbs igraph rgeos rgdal ]; };
fuzzyRankTests = derive { name="fuzzyRankTests"; version="0.3-5"; type="cran"; sha256="1g09506bbpk05a2r2wxjynjs8dmjd2q7x74d83vjscg1kdk4kazq"; depends=[ ]; };
fwdmsa = derive { name="fwdmsa"; version="0.2"; type="cran"; sha256="0p0kh8am6gajfaixkvq61f12hfbm6chl9372yzn1yilhiyvqdxgp"; depends=[ ]; };
fwi_fbp = derive { name="fwi.fbp"; version="1.5"; type="cran"; sha256="08ngg70vi2fca5yblm2gf1lkjjmb6m39d8q6429n7i3jn6ca5nzf"; depends=[ ]; };
fwsim = derive { name="fwsim"; version="0.3.3"; type="cran"; sha256="1ix4sl2krlr0b0wfgvy73qhpmkjymqcci3q3v60j20zapi55gxn2"; depends=[Rcpp Rcpp ]; };
fxregime = derive { name="fxregime"; version="1.0-3"; type="cran"; sha256="15fh8yhcba2gw2xfd0yiw5ssvbgb62l6vb28bxz71ckdyv9nsahk"; depends=[zoo strucchange car sandwich ]; };
g_data = derive { name="g.data"; version="2.4"; type="cran"; sha256="14a4m0v38p3j1k1kymkxwydlgm8b73hlx9m80sg1l4aj38fvflzl"; depends=[ ]; };
gCMAP = derive { name="gCMAP"; version="1.10.2"; type="bioc"; sha256="0yxczlsf1q3ibbcr668fsgya10jx6871kxpkr332yhn87zshp80s"; depends=[GSEABase limma Biobase BiocGenerics GSEAlm Category Matrix annotate genefilter AnnotationDbi ]; };
gCMAPWeb = derive { name="gCMAPWeb"; version="1.6.0"; type="bioc"; sha256="0k2g0vl0xllir75haajgqarqn19ycsqypsnwc1x66q022aq08l52"; depends=[brew gCMAP yaml Rook Biobase annotate AnnotationDbi BiocGenerics brew GSEABase hwriter IRanges ]; };
gCat = derive { name="gCat"; version="0.1"; type="cran"; sha256="10990ilsjk52kqkcdngj4nq0kcbn4w1syxl1mqjq2n5g1l002yjy"; depends=[ ]; };
gIPFrm = derive { name="gIPFrm"; version="2.0"; type="cran"; sha256="1syjsnna7b7y27yf7zsxjwq8z5f4wxf2hfadhgjaw898gvfcnrbc"; depends=[ ]; };
gMCP = derive { name="gMCP"; version="0.8-8"; type="cran"; sha256="0568pqvcbrpqbppvpvmgxf23rzy1fgl892asq9lhcjslzsz89an5"; depends=[rJava JavaGD xlsxjars MASS PolynomF multcomp mvtnorm Matrix CommonJavaJars ]; };
gMWT = derive { name="gMWT"; version="0.9"; type="cran"; sha256="0c91bwwfm0qyqrrd3n9g6l8kackqm58hmamypn1awzpz1p13axyv"; depends=[clinfun Rcpp RcppArmadillo Rcpp RcppArmadillo ]; };
gPCA = derive { name="gPCA"; version="1.0"; type="cran"; sha256="1ylb1d24dxnzpws9bbanwhyizjr3ljky2bhrph4c5yaq0zwwbrkw"; depends=[ ]; };
gPdtest = derive { name="gPdtest"; version="0.4"; type="cran"; sha256="00dlhnklfg2yp4hp7yjgr2nfswv22c007xq1mxdbkll62zgd94mq"; depends=[ ]; };
gProfileR = derive { name="gProfileR"; version="0.5.3"; type="cran"; sha256="0kv01b1ihwggzjd9plznz3il3b97pja11nqki3378zvpgfy5wzdn"; depends=[RCurl plyr ]; };
gRain = derive { name="gRain"; version="1.2-3"; type="cran"; sha256="0cxlni9b4p4g02zhhsbbpkwhx9y3x83vm7qd6lsca02yi96palsi"; depends=[gRbase igraph graph ]; };
gRapHD = derive { name="gRapHD"; version="0.2.4"; type="cran"; sha256="0fxd04s6zh23chks4k6nwb5w408xjy89b44pa42kv6qnqj86ylvm"; depends=[graph ]; };
gRapfa = derive { name="gRapfa"; version="1.0"; type="cran"; sha256="07yzwzna9pdyzndxk6wwyl6v3gkfc7dvy1ixmdl3d38mcl1ahwyq"; depends=[igraph ]; };
gRbase = derive { name="gRbase"; version="1.7-0.1"; type="cran"; sha256="1x52i4c5jbry17y1pfnjq03kz4xxnk3anidva41z5alp7c73zlqv"; depends=[Matrix RBGL igraph graph Rcpp Rcpp RcppArmadillo RcppEigen ]; };
gRc = derive { name="gRc"; version="0.4-1"; type="cran"; sha256="1a6q24yj7js1sk0lfqbm7kdv605cby6i711w4dlygsxdvwxbrsdr"; depends=[gRbase graph Rgraphviz ]; };
gRim = derive { name="gRim"; version="0.1-17"; type="cran"; sha256="0vn031r318kp78cx00n43fc42bv6sjyb8dm6q0l08s0g9n2w17dp"; depends=[gRbase gRain igraph Rcpp RcppArmadillo ]; };
gSeg = derive { name="gSeg"; version="0.1"; type="cran"; sha256="0qnv3c0rla0g2fb4s4x1i0zdp3dlvi98qf80wlr54gnn7s9vpjf1"; depends=[ ]; };
gWidgets = derive { name="gWidgets"; version="0.0-54"; type="cran"; sha256="13lbbbnmkvb559klgsnz0q27qlyv102xakb6yccxsxjw249hm8c2"; depends=[ ]; };
gWidgets2 = derive { name="gWidgets2"; version="1.0-5"; type="cran"; sha256="1y6vm6ds77yr1qiqlcaixbsarbwx5w53ba343svla7wva80ajbpl"; depends=[digest ]; };
gWidgets2RGtk2 = derive { name="gWidgets2RGtk2"; version="1.0-3"; type="cran"; sha256="041d510rxghcj5h6zw5258f4jnj1j9ycq2kdh0kl81fjr8n992jv"; depends=[memoise RGtk2 gWidgets2 ]; };
gWidgets2tcltk = derive { name="gWidgets2tcltk"; version="1.0-4"; type="cran"; sha256="1c9vfnr6j4lvshvdzp88a45pjrdl0dfhr1rxlpz95d3cks9rfq1f"; depends=[digest memoise gWidgets2 ]; };
gWidgetsRGtk2 = derive { name="gWidgetsRGtk2"; version="0.0-83"; type="cran"; sha256="1kn2095jx1amyzbkvgf7m466zqfv548n232xc555bpsrw9ma5qhk"; depends=[RGtk2 gWidgets cairoDevice ]; };
gWidgetstcltk = derive { name="gWidgetstcltk"; version="0.0-55"; type="cran"; sha256="06991rqh4927bal7j718bn2ziy6rws8yq682lmp5vbqhdd36afv2"; depends=[gWidgets digest ]; };
gaga = derive { name="gaga"; version="2.12.0"; type="bioc"; sha256="14jf02535hrf3117ih89nslz55snj8vw9vznny7nnhnlq29hqwfy"; depends=[Biobase coda EBarrays mgcv ]; };
gage = derive { name="gage"; version="2.16.0"; type="bioc"; sha256="19y270z9sq1q91f44013r10hms903zrhy7wx7q4i10yf7ch8zakj"; depends=[graph KEGGREST AnnotationDbi ]; };
gaggle = derive { name="gaggle"; version="1.34.0"; type="bioc"; sha256="16flb2xx4n840kmq2c5sc0j0p03gi0bz8sc3ry240nch5i15jqmx"; depends=[rJava graph RUnit ]; };
gaia = derive { name="gaia"; version="2.10.0"; type="bioc"; sha256="18j3ws2j2nj4j30wvhgjjqvwd2dmb3qf17rsdw9hgfx2xi5c1a2a"; depends=[ ]; };
gains = derive { name="gains"; version="1.1"; type="cran"; sha256="1mn8db8yxgkf8z6nm6k76g5l3i3vnw750ksg3w9ysd2pcabb65g1"; depends=[ ]; };
galts = derive { name="galts"; version="1.3"; type="cran"; sha256="0b18hsdcsx43rn8l4x9nhy9hgggjr5b8kvjnbxrf6r23qsdk43mn"; depends=[genalg DEoptim ]; };
gam = derive { name="gam"; version="1.12"; type="cran"; sha256="00rx8y7pcxabwjvg0ch6c76xqs43drjg3ih3kflqxdcl2rmaapnd"; depends=[foreach ]; };
gamair = derive { name="gamair"; version="0.0-8"; type="cran"; sha256="11qwmhrzks8gi9is2n9xcy6cviy7a8mwh2v78fw78x7g7ccd8i9x"; depends=[ ]; };
gambin = derive { name="gambin"; version="1.1"; type="cran"; sha256="197k8j6mvf8236gwg8vvfnskf4hic9y075chsd8214n1nk7i6jmz"; depends=[ ]; };
gamboostLSS = derive { name="gamboostLSS"; version="1.1-3"; type="cran"; sha256="1gdsrizr4q5zyfs2g8c8fdwriqz0xrpq9vyy4wd2ywdh5lbi995b"; depends=[mboost ]; };
gamboostMSM = derive { name="gamboostMSM"; version="1.1.87"; type="cran"; sha256="0if0x92lch57ksll8d5i3jzk0kh40593b20c17g3hvc33920c7r0"; depends=[mboost ]; };
gamclass = derive { name="gamclass"; version="0.55"; type="cran"; sha256="0nhy1qdc221hsnby8j0m2a4x4a8qwfixbaq4gd22rn1xpbsdnfw3"; depends=[car mgcv DAAG MASS rpart randomForest lattice latticeExtra ape KernSmooth ]; };
games = derive { name="games"; version="1.1.2"; type="cran"; sha256="01hbbr2hsxi5j9axpdl0jihpd55pa9hacjxmab8p7cixk3xqqqbf"; depends=[maxLik Formula MASS stringr ]; };
gamlr = derive { name="gamlr"; version="1.13-1"; type="cran"; sha256="1y97zsb9shll93f6j7r95296c26dbmxwa1z67ziy0yh4gsgbijc8"; depends=[Matrix ]; };
gamlss = derive { name="gamlss"; version="4.3-4"; type="cran"; sha256="0qbxcfvhy8blswzv8194x9f08p25vhknnm3h4hhz9lp5gh536fbk"; depends=[gamlss_data gamlss_dist nlme MASS survival ]; };
gamlss_add = derive { name="gamlss.add"; version="4.3-3"; type="cran"; sha256="0cs4mcpm0ckaim3g8q7m4yb6y3izqgvndzgkqgrwr75cxz0wd4vh"; depends=[gamlss_dist gamlss mgcv nnet rpart ]; };
gamlss_cens = derive { name="gamlss.cens"; version="4.3.1"; type="cran"; sha256="1y3a4b6n86h0r287065kr574ix0qpc2nnjpp8fp49nbpxwxlz962"; depends=[gamlss_dist gamlss survival ]; };
gamlss_data = derive { name="gamlss.data"; version="4.2-7"; type="cran"; sha256="0g3fmqrwxmj14r0p0ai1adq6cs3bd3ys47gjcja035xjiajg6cs2"; depends=[ ]; };
gamlss_demo = derive { name="gamlss.demo"; version="4.3-1"; type="cran"; sha256="04xl2ddf8wg2j8m05y8j5avcgfrr55a7g6m9wzxx4k599m0c7c8i"; depends=[rpanel gamlss_dist gamlss_tr ]; };
gamlss_dist = derive { name="gamlss.dist"; version="4.3-4"; type="cran"; sha256="0aymwh1lrjalravqf6nfz716v4r805aw82dsi0sn2nlb00fi8w2x"; depends=[MASS ]; };
gamlss_mx = derive { name="gamlss.mx"; version="4.3-1"; type="cran"; sha256="1sjm8a44nh88mvscpspyqsp2agjhwibi4kbyizyi78dmzf2sakiq"; depends=[gamlss_dist gamlss nnet ]; };
gamlss_nl = derive { name="gamlss.nl"; version="4.1-0"; type="cran"; sha256="083l5lsb0csxcp4vffvdv2nr7jk3s2gkcavx66m8inzw16j7xilz"; depends=[gamlss survival ]; };
gamlss_spatial = derive { name="gamlss.spatial"; version="0.2"; type="cran"; sha256="0sjb47gnzrab4y23c0z7cxqq5k46k2rb31lmqws2c9zgf4n7aqbi"; depends=[gamlss_dist gamlss spam mgcv ]; };
gamlss_tr = derive { name="gamlss.tr"; version="4.3-1"; type="cran"; sha256="1fdy61i2dmz2qafk92kl9acjbxx5gm8s9kkc8k9nnx6230qg8iq6"; depends=[gamlss_dist gamlss ]; };
gamlss_util = derive { name="gamlss.util"; version="4.3-2"; type="cran"; sha256="13facgyd14jl4j09d446jjzs91zwmv85g22gkyyi1hl4i5v5nfc4"; depends=[gamlss_dist gamlss zoo ]; };
gamm4 = derive { name="gamm4"; version="0.2-3"; type="cran"; sha256="19vy5wik9nh77cm25gp3j3j8w8vinwzx5pv90nzdzvx84yvvf0y3"; depends=[Matrix lme4 mgcv ]; };
gammSlice = derive { name="gammSlice"; version="1.3"; type="cran"; sha256="1vw8d0v0awyflh4gmbcf1g9nfx52cys8gpqvag5djri59p0y945a"; depends=[KernSmooth lattice mgcv ]; };
gaoptim = derive { name="gaoptim"; version="1.1"; type="cran"; sha256="04igpn73k6f6652y496igwypfxmz4igg4jgxx6swqyi37182rqhm"; depends=[ ]; };
gap = derive { name="gap"; version="1.1-12"; type="cran"; sha256="1760jwfrlfmb8crk8kba0swpazcznlv80c6j8fiyd9zxjhnq7zf5"; depends=[ ]; };
gapmap = derive { name="gapmap"; version="0.0.2"; type="cran"; sha256="0xykpy3cmbiwwa3s8f4777585r7l441qb9ks6ajym01scqcj3nwl"; depends=[ggplot2 reshape2 ]; };
gapminder = derive { name="gapminder"; version="0.1.0"; type="cran"; sha256="06hi4m9i86nkdyz7w9wa4qkpbsl2178qskzzy8168wlzayx820ad"; depends=[ ]; };
gaselect = derive { name="gaselect"; version="1.0.5"; type="cran"; sha256="0xzx00n46x6x7w1xbx8nvabkkrna45pv1i70787m8h05q1yrjjij"; depends=[Rcpp Rcpp RcppArmadillo ]; };
gaucho = derive { name="gaucho"; version="1.2.0"; type="bioc"; sha256="024ca4709pymhja36iz5p1xaca0ihhk0i1cjs6fyllhz9s91h8zg"; depends=[GA graph heatmap_plus png Rgraphviz ]; };
gaussDiff = derive { name="gaussDiff"; version="1.1"; type="cran"; sha256="0fqjdxp2ibbami75ba16d02dz4rz5sk8mni45di9anydx44g9d45"; depends=[ ]; };
gaussquad = derive { name="gaussquad"; version="1.0-2"; type="cran"; sha256="0bcvkssmwwngcd4cnv924n9h3c8z1w3x9c9bkwn5jbz9zyv1lfms"; depends=[polynom orthopolynom ]; };
gazepath = derive { name="gazepath"; version="1.0"; type="cran"; sha256="00k6617wra9pcvyr94mr48c21l7z6grlpgf9g02lh23p6900fjxq"; depends=[ ]; };
gb = derive { name="gb"; version="1.1.8-8"; type="cran"; sha256="18n9wqz82mjxjgzk8vc68kyz3b6lk21d2f16551d6fikjla03adf"; depends=[boot ]; };
gbRd = derive { name="gbRd"; version="0.4-11"; type="cran"; sha256="06x97rw5i6v6cgjxkfhxnw4dn7lghn5q6ra7ri5ag1x9dkfzcl82"; depends=[ ]; };
gbm = derive { name="gbm"; version="2.1.1"; type="cran"; sha256="0jkjr09w9cgfb21aznvr9nivxjmj1zxfsl7gafy4mwh719jzygy0"; depends=[survival lattice ]; };
gbm2sas = derive { name="gbm2sas"; version="1.0"; type="cran"; sha256="0khw1nqc4yl2719h3zc70yl26s4lmngfz5iqw00pcv838z8myc0i"; depends=[gbm ]; };
gbs = derive { name="gbs"; version="1.0"; type="cran"; sha256="19zcsvd258ibrj356zlwgryjqylcs56agg3z6d44xbnf8prg05ig"; depends=[nlme ]; };
gcbd = derive { name="gcbd"; version="0.2.5"; type="cran"; sha256="0fkg6vk0jkl6680n1hljyv783j4hd84mql0k4pfblvqafwv4nhm3"; depends=[RSQLite plyr reshape lattice ]; };
gcdnet = derive { name="gcdnet"; version="1.0.4"; type="cran"; sha256="0fmy0li06rahch4ir0xa81yilvrd0zqyhmpl4hfxjahhl3npw370"; depends=[Matrix ]; };
gclus = derive { name="gclus"; version="1.3.1"; type="cran"; sha256="02ba6zj9bjwrzykamjp40ajynx9xjx9h2i85n0ym0r5lcki4x6fn"; depends=[cluster ]; };
gcmr = derive { name="gcmr"; version="0.7.0"; type="cran"; sha256="17wv1qgshakn390719r8zzd8fbbvnkfjhlbcwk2rd2pic05x8msm"; depends=[nlme sandwich geoR betareg Formula car sp ]; };
gconcord = derive { name="gconcord"; version="0.41"; type="cran"; sha256="1n3pfwk6vip19q1zhbz1n164f9vi7mig8pcd07c4wxnm5ir9dagy"; depends=[ ]; };
gcookbook = derive { name="gcookbook"; version="1.0"; type="cran"; sha256="0hb52zfi5bl2j0h8lazz4gzhhcvpicb4ld6xm2vkvi4cj47piyy8"; depends=[ ]; };
gcrma = derive { name="gcrma"; version="2.38.0"; type="bioc"; sha256="1rv87jwqca62xgg3a14lak3am2vm3qb4cdsl0d3iqhr833pgmil3"; depends=[affy Biobase affy affyio XVector Biostrings BiocInstaller ]; };
gdalUtils = derive { name="gdalUtils"; version="0.3.1"; type="cran"; sha256="1a6sg3x5yfffa9xrkvc98i2hm3lvna4jw7p89gn2bf74kzphqpmy"; depends=[sp foreach R_utils ]; };
gdata = derive { name="gdata"; version="2.16.1"; type="cran"; sha256="14ssq8z45zf1wwgfgxlc33i6hsdhc0b71kfncfclxz5ahxaqdkdm"; depends=[gtools ]; };
gdimap = derive { name="gdimap"; version="0.1-9"; type="cran"; sha256="0ksbpcy739bvsiwis0pzd03zb4cvbd8d5wdf8whfn9k6mkj4x9rs"; depends=[rgl oro_nifti movMF gridExtra colorspace geometry gsl abind ]; };
gdistance = derive { name="gdistance"; version="1.1-7"; type="cran"; sha256="1wcpjx76pnkpc6kmqx7bq73qbvzfzjb9s46qb7gi7kabpkya97il"; depends=[raster igraph Matrix sp ]; };
gdm = derive { name="gdm"; version="1.0"; type="cran"; sha256="08wafxvds4sxaxv7mbbkbzilkpfz1xnzdc5jdw3pldvmbgk861vd"; depends=[Rcpp raster reshape2 vegan plyr Rcpp ]; };
gdsfmt = derive { name="gdsfmt"; version="1.2.2"; type="bioc"; sha256="0vk6y1ma3pxdwqnk1zv5vkc768lj65xmm49ib4zkawj5ndc71rzx"; depends=[ ]; };
geNetClassifier = derive { name="geNetClassifier"; version="1.6.3"; type="bioc"; sha256="0sigqjw6xpqbdai00mwwbpzcxm0fdmqclqyjz167whkhgdyvrza8"; depends=[Biobase EBarrays minet e1071 ]; };
gee = derive { name="gee"; version="4.13-18"; type="cran"; sha256="1s2cjgg4ypw72g710m93g6az763xz6sxw91nd6cwm5jjvr9vb91f"; depends=[ ]; };
geeM = derive { name="geeM"; version="0.7.3"; type="cran"; sha256="15qbfki7ds75ws0ymwncr0y26ddnky5a882d7vh04145s1prl6xw"; depends=[Matrix ]; };
geecc = derive { name="geecc"; version="1.0.0"; type="bioc"; sha256="0prhm27ni2m457fmvh7n4898kkvpqkpq30cnjkd15k9hsnpag3zc"; depends=[MASS hypergea gplots ]; };
geepack = derive { name="geepack"; version="1.2-0"; type="cran"; sha256="1pxh9nsyj9a40znm4zza4nbi3dkhb96s3azi43p9ivvfj3l21m74"; depends=[ ]; };
geesmv = derive { name="geesmv"; version="1.0"; type="cran"; sha256="1xxsiz6rwqxx113vmlddx89g190nmv1yaimmibz8ai0sam5hqnp9"; depends=[nlme gee matrixcalc MASS ]; };
geigen = derive { name="geigen"; version="1.5"; type="cran"; sha256="06k4fc7j8asqv1winmz28hb3r8fvlgikrvi064ysvj2fqwh7jnq1"; depends=[ ]; };
geiger = derive { name="geiger"; version="2.0.3"; type="cran"; sha256="1wqihvscmq44i34205fzv79wk7j2a72qd8y6ycgrv74plql0316c"; depends=[ape MASS mvtnorm subplex deSolve digest Rcpp coda Rcpp ]; };
gelnet = derive { name="gelnet"; version="1.1"; type="cran"; sha256="1d77v44azqpk6hzi7fl2ba6z3nyzh33xn0yp7ydp86nmf1gcgwlh"; depends=[ ]; };
gems = derive { name="gems"; version="1.0.0"; type="cran"; sha256="0h8z3ih24hxdv8bah4xf8f797pnwihby8hj93z6zw5sq9dyszxwa"; depends=[MASS msm plyr data_table ]; };
gemtc = derive { name="gemtc"; version="0.6-2"; type="cran"; sha256="0bkcbyh71aq3p7w75w78l472gfschfb2qf9wcv7s2vyy6ypbvh2q"; depends=[coda igraph meta XML plyr ]; };
gemtc_jar = derive { name="gemtc.jar"; version="0.14.3"; type="cran"; sha256="18hbiygpsv67flc4v6z6mir0rfq41v1vsh11dg9phmdr8bx4kcl1"; depends=[rJava ]; };
genArise = derive { name="genArise"; version="1.42.0"; type="bioc"; sha256="1glhv4d0x6imlqnyddq9pfd3ggzg719qm2pka3rxqjl7p2mivwsn"; depends=[locfit tkrplot xtable ]; };
genMOSS = derive { name="genMOSS"; version="1.2"; type="cran"; sha256="18qinckzz7wsw222skrq30izbj6s85i8hq6iicj9nng8gh6jydr8"; depends=[ROCR ]; };
genMOSSplus = derive { name="genMOSSplus"; version="1.0"; type="cran"; sha256="1n3ngx1piy3l14k5k95wrgvrjw9238jkygfqanl3xg2na2mmkr26"; depends=[ ]; };
genSurv = derive { name="genSurv"; version="1.0.2"; type="cran"; sha256="0hvkrlcl8jrj0x0ixrl34484p9kxlwxfaa64ynz6jf3dcyghp9l0"; depends=[ ]; };
genalg = derive { name="genalg"; version="0.2.0"; type="cran"; sha256="1wzfamq8k5yhwbdx0wy1w5bks93brj0p890xxc4yqrja4w38ja3s"; depends=[ ]; };
genasis = derive { name="genasis"; version="1.0"; type="cran"; sha256="1r0733cc2hss3f8dp19s1ji55yp72mds7p3x1zvvpiks2r7w712p"; depends=[Kendall fitdistrplus ]; };
gendata = derive { name="gendata"; version="1.1"; type="cran"; sha256="1r5bhmfblhk6d31v0byhp4a0pmpri6vk697zmmx9b0hvhda7mllf"; depends=[ ]; };
gender = derive { name="gender"; version="0.4.3"; type="cran"; sha256="0dhwhv2b86arpmyr89g69h8ikw0f2x27ig420jngfb9gxljj9phc"; depends=[devtools dplyr httr jsonlite ]; };
genderizeR = derive { name="genderizeR"; version="1.1.0"; type="cran"; sha256="0hdphzmjqlzwk1gnhncidsdqrbc1lra3a4nl992ap9gfk890rvi4"; depends=[stringr httr tm data_table magrittr ]; };
geneListPie = derive { name="geneListPie"; version="1.0"; type="cran"; sha256="0z2gawfzhm05dafj4zlj6ifmf0dy7p1hrpa59lzxrnrc0wr6laji"; depends=[ ]; };
geneRecommender = derive { name="geneRecommender"; version="1.38.0"; type="bioc"; sha256="00v4sj89303izigaaq58jh2170ybf6plwzxa087sr1gfzhxgab01"; depends=[Biobase Biobase ]; };
geneRxCluster = derive { name="geneRxCluster"; version="1.2.0"; type="bioc"; sha256="0hc57j5kvv3kzgkf5y403jjdvmav1fbi9f029jkgwnsrgfn07gid"; depends=[GenomicRanges IRanges ]; };
geneSignatureFinder = derive { name="geneSignatureFinder"; version="2014.02.17"; type="cran"; sha256="1s9jj87wnzzgm9hnws09yhrxdlb6jw56i3ddwznvmh8vpzrspv4h"; depends=[survival cluster class ]; };
genefilter = derive { name="genefilter"; version="1.48.1"; type="bioc"; sha256="1xlijvr11js9kxq1s1i4y4glhn5jssfczv94c7zb9mpcmf76yd9i"; depends=[AnnotationDbi annotate Biobase survival ]; };
genefu = derive { name="genefu"; version="1.16.0"; type="bioc"; sha256="0w1031bc11h4hf3z9fy6yp7lnwlvcasd1kmsazz8lxmjpv2pslk9"; depends=[survcomp mclust biomaRt amap ]; };
genepi = derive { name="genepi"; version="1.0.1"; type="cran"; sha256="1whhdlq9p8gmygv7464hvfz6dhm65gqq1dqls6hgpmw822zxgbd5"; depends=[ ]; };
geneplotter = derive { name="geneplotter"; version="1.44.0"; type="bioc"; sha256="13asb62sawiwbj2rv85ndyc07x0957i743gnrgq0r6y7shyq3xmn"; depends=[Biobase BiocGenerics lattice annotate AnnotationDbi RColorBrewer ]; };
genetics = derive { name="genetics"; version="1.3.8.1"; type="cran"; sha256="0gfbrpz0zp5bgw3s21wrhjfy70laif47wcrjrm6mjgs6xapiw790"; depends=[combinat gdata gtools MASS mvtnorm ]; };
genlasso = derive { name="genlasso"; version="1.3"; type="cran"; sha256="1q4ybg8xzphnqwywwdb7i2q94dlxwpggvisjqqdj39jh2cabda57"; depends=[MASS Matrix igraph ]; };
genoCN = derive { name="genoCN"; version="1.18.0"; type="bioc"; sha256="01dh4z1377znp9yi6k8rq3ai0jzp7apqapx69cmd9kf4qxr39ay5"; depends=[ ]; };
genoPlotR = derive { name="genoPlotR"; version="0.8.2"; type="cran"; sha256="0q12sg13yn5f3j5gk0qzszp81x52lpwpk3z4cg0bgxi9zbwmw467"; depends=[ade4 ]; };
genomeIntervals = derive { name="genomeIntervals"; version="1.22.3"; type="bioc"; sha256="1rsvrk2l9wvji370kcyrvj97rfxh2ylrmzry3347khks46dmsc7r"; depends=[intervals BiocGenerics ]; };
genomes = derive { name="genomes"; version="2.12.0"; type="bioc"; sha256="1ll3nnfrpb575cmra99vibsda33xc822l5mm08mldkazzg8xf0nr"; depends=[XML RCurl GenomicRanges IRanges Biostrings ]; };
genoset = derive { name="genoset"; version="1.20.0"; type="bioc"; sha256="13jvc5qczkkm2a4kq06pdi9pzhcskk7fp6vl8x4gvzr9srvq4ca4"; depends=[BiocGenerics Biobase GenomicRanges S4Vectors GenomeInfoDb IRanges ]; };
genpathmox = derive { name="genpathmox"; version="0.2"; type="cran"; sha256="1m08j10mrvkrnlgxbhjn3qmjz29p121fc4haww5qrici06nipfdm"; depends=[plspm quantreg mice diagram ]; };
genridge = derive { name="genridge"; version="0.6-5"; type="cran"; sha256="0ms8n1yrga5qqg9ni41ifyw6320aajyrwvjh6d27q1k96j2dicp4"; depends=[car ]; };
gensemble = derive { name="gensemble"; version="1.0"; type="cran"; sha256="0yyi7djzqx4yhxp6yy1rjgvzidjlna79ds89bgj6m6zj3aav6yw2"; depends=[ ]; };
geoBayes = derive { name="geoBayes"; version="0.2.150402"; type="cran"; sha256="123b2xds69clkgjvczkdbl673cahmiprrr1cki2alspryy37icar"; depends=[coda sp ]; };
geoCount = derive { name="geoCount"; version="1.150120"; type="cran"; sha256="1kcjqls91r6p8ykn901c5p3v2lzbyainahhjpnr5c3a57v8s73ms"; depends=[Rcpp Rcpp RcppArmadillo ]; };
geoR = derive { name="geoR"; version="1.7-5.1"; type="cran"; sha256="10rxlvlsg2avrf63p03a22lnq4ysyc4zq06mxidkjpviwk1kvzqy"; depends=[MASS sp splancs RandomFields ]; };
geoRglm = derive { name="geoRglm"; version="0.9-8"; type="cran"; sha256="1zncqsw62m0p4a1wchhb8xsf0152z2xxk3c4xqdr5wbzxf32jhvh"; depends=[geoR sp ]; };
geocodeHERE = derive { name="geocodeHERE"; version="0.1.2"; type="cran"; sha256="0sr8r6f41bpi0rncjcf0aydda68wnsrbmqzsgc1f1has2rb1g9p0"; depends=[httr ]; };
geojsonio = derive { name="geojsonio"; version="0.1.0"; type="cran"; sha256="17nv7xn80sf2nn6fvmlbnbcgg66n6bh8x725wdfnhk3gg1rb64g5"; depends=[sp rgdal rgeos httr maptools jsonlite magrittr V8 ]; };
geomapdata = derive { name="geomapdata"; version="1.0-4"; type="cran"; sha256="1g89msnav87kim32xxbayqcx1v4439x4fsmc8xhlvq4jwlhd5xxw"; depends=[ ]; };
geometry = derive { name="geometry"; version="0.3-5"; type="cran"; sha256="1x1dhdbqnq1wi1r4njj3l1g8yag2dig19rna3a5pwf1j1gxbl0i8"; depends=[magic ]; };
geomorph = derive { name="geomorph"; version="2.1.5"; type="cran"; sha256="0xys2gwin16h4ahcjy3m49sslypilxlcgrnky19vv4aagrydq776"; depends=[rgl jpeg ape geiger phytools ]; };
geonames = derive { name="geonames"; version="0.998"; type="cran"; sha256="1p0x260i383ddr2fwv54pxpqz9vy6vdr0lrn1xj7178vxic1dwyy"; depends=[rjson ]; };
geophys = derive { name="geophys"; version="1.3-8"; type="cran"; sha256="0nw4m30r46892cf1n575jkfjgdjc14wic9xzmzcnskbk8cd50hp2"; depends=[RPMG RSEIS RFOC GEOmap cluster ]; };
georob = derive { name="georob"; version="0.1-5"; type="cran"; sha256="0awcqcpv82pn2z7lgir73pg2b0whvrrfy55gi0jrjn7lzyakhqaq"; depends=[sp constrainedKriging lmtest nlme nleqslv quantreg RandomFields robustbase snowfall ]; };
geoscale = derive { name="geoscale"; version="2.0"; type="cran"; sha256="0gisds0in32xhw54fxfyxvwxgrfjs871wmqf6l915nr896rlx0bm"; depends=[ ]; };
geospacom = derive { name="geospacom"; version="0.5-7"; type="cran"; sha256="00yi2wwnjh2z8xhzfbp1jhh5fhq2z885s0gv937xsin4a63m76fd"; depends=[rgeos classInt sp maptools geosphere ]; };
geosphere = derive { name="geosphere"; version="1.3-13"; type="cran"; sha256="124l1mfqf4qq5qsa0k3r5hkky9q2m2waq2rp4xcym49wr3jysf6c"; depends=[sp ]; };
geospt = derive { name="geospt"; version="1.0-1"; type="cran"; sha256="1nv5wn8s4vlbyyzi8is7zsa1vrijp1va0vhi8l2yny8fh22qhjij"; depends=[gstat genalg MASS sp minqa limSolve fields gsl plyr TeachingDemos sgeostat ]; };
geostatsp = derive { name="geostatsp"; version="1.2.1"; type="cran"; sha256="0p93b8mmjsqg7qg1c6v7c5ism8jqf7w21rydck7agh4i64q47s7y"; depends=[Matrix raster sp abind numDeriv pracma ]; };
geotools = derive { name="geotools"; version="0.1"; type="cran"; sha256="0d0vf9dvrrv68ivssp58qzaj8vra26ms33my097jmzmgagwy1spd"; depends=[ ]; };
geotopbricks = derive { name="geotopbricks"; version="1.3.6"; type="cran"; sha256="1c4v590r27lsz2ld2dsi9dv7fsbfklyqgsjvcrbk4di18nc1hygp"; depends=[raster stringr zoo rgdal ]; };
geozoo = derive { name="geozoo"; version="0.4.3"; type="cran"; sha256="0nmmmyk0ih5aqpsn7ip4dhgfm7jhcnca8pigyr9794b110icq1rv"; depends=[bitops ]; };
getopt = derive { name="getopt"; version="1.20.0"; type="cran"; sha256="00f57vgnzmg7cz80rjmjz1556xqcmx8nhrlbbhaq4w7gl2ibl87r"; depends=[ ]; };
gets = derive { name="gets"; version="0.2"; type="cran"; sha256="0vdg8g588asyzkld9v3rmscx3k727ncxnjzi8qxinlr2zhw9nbcq"; depends=[zoo ]; };
gettingtothebottom = derive { name="gettingtothebottom"; version="3.2"; type="cran"; sha256="1cz2vidh7k346qc38wszs2dg6lvya249hvcsn6zdpbx0c0qs3y72"; depends=[ggplot2 Matrix ]; };
gfcanalysis = derive { name="gfcanalysis"; version="1.2"; type="cran"; sha256="147vgv4z14xn0j94g7z0y099gz8xj2yb02r6j3mfi4412dg5f5fp"; depends=[raster rgdal geosphere RCurl rgeos plyr ggplot2 sp stringr animation rasterVis ]; };
ggExtra = derive { name="ggExtra"; version="0.1.0"; type="cran"; sha256="12b2bd8n3hyp5azdxh14dslq6mwaplvxph90dhiydkhzmya27i7i"; depends=[ggplot2 ]; };
ggROC = derive { name="ggROC"; version="1.0"; type="cran"; sha256="0p9gdy7ia59d5m84z9flz5b03ri7nbigb3fav2v2wrml300d24vn"; depends=[ggplot2 ]; };
ggRandomForests = derive { name="ggRandomForests"; version="1.1.4"; type="cran"; sha256="0h55593mr2x0kvp97rrm1spj17zbr1p9pqrpngsxmp11iahhccqh"; depends=[randomForestSRC ggplot2 survival reshape2 ]; };
ggbio = derive { name="ggbio"; version="1.14.0"; type="bioc"; sha256="1pbx15f4gax3kc7crggizjasvs8h6y22qz3b7ya77cjzc5j90pb1"; depends=[BiocGenerics ggplot2 biovizBase reshape2 gtable Biobase S4Vectors IRanges GenomeInfoDb GenomicRanges Biostrings Rsamtools GenomicAlignments BSgenome gridExtra scales VariantAnnotation Hmisc rtracklayer GenomicFeatures OrganismDbi GGally ]; };
ggdendro = derive { name="ggdendro"; version="0.1-15"; type="cran"; sha256="11g7jkf3zsil0z5mzbrfxwrgkpw6p5p1d4jkr0qq853b6rsxn5iw"; depends=[MASS ggplot2 ]; };
ggenealogy = derive { name="ggenealogy"; version="0.1.0"; type="cran"; sha256="0shy6ylrx49yccyydhahqk1nnljqgf1cm11fl4cmb44la5zd3wjn"; depends=[ggplot2 igraph plyr reshape2 ]; };
gglasso = derive { name="gglasso"; version="1.3"; type="cran"; sha256="0qqp5zak4xsakhydn9cfhpb19n6yidgqj183il1v7yi90qjfyn66"; depends=[ ]; };
ggm = derive { name="ggm"; version="2.3"; type="cran"; sha256="1n4y459x2i0jil8chjjqqjs28a8pzfxrws2fcjkg3il7zy0zwbw3"; depends=[igraph ]; };
ggmap = derive { name="ggmap"; version="2.4"; type="cran"; sha256="06mdczacjnlzyr5sm1d099sqyf6anhlnn2bnjxni8h36100m5nm2"; depends=[ggplot2 proto scales RgoogleMaps png plyr reshape2 rjson mapproj jpeg geosphere digest ]; };
ggmcmc = derive { name="ggmcmc"; version="0.6"; type="cran"; sha256="12z0six1swpmisbm8x9a9dk19cd0f9yvzm92gc9qs484ihpcscvq"; depends=[dplyr tidyr ggplot2 ]; };
ggparallel = derive { name="ggparallel"; version="0.1.1"; type="cran"; sha256="1z8w4bm4ahmmwbr87qlqhm8jlrqf7dhdvm1cf0xrwjlkmy6dqjvg"; depends=[ggplot2 reshape2 plyr ]; };
ggplot2 = derive { name="ggplot2"; version="1.0.1"; type="cran"; sha256="0794kjqi3lrxb33lr1mykd58959hlgkhdn259vj8fxrh65mqw920"; depends=[plyr digest gtable reshape2 scales proto MASS ]; };
ggsubplot = derive { name="ggsubplot"; version="0.3.2"; type="cran"; sha256="1rrq47rf95hnwz8c33sbnpvc37sb6v2w37863hyjl6gc0bhyrvzb"; depends=[ggplot2 plyr proto scales stringr ]; };
ggswissmaps = derive { name="ggswissmaps"; version="0.0.2"; type="cran"; sha256="1cl8m9j3d2kf8dbpq09q36v7nwkgz7khqds431l0kmkzq02qhddf"; depends=[ggplot2 ]; };
ggtern = derive { name="ggtern"; version="1.0.5.0"; type="cran"; sha256="0ykgz3268381glkrv1gbn9qnyrkxsmihc3srv8zrldbq18zbr0a8"; depends=[ggplot2 plyr gtable scales reshape2 proto MASS sp ]; };
ggthemes = derive { name="ggthemes"; version="2.1.2"; type="cran"; sha256="049fjk0f960sjsnqns2kgk7dvr6jr5rrpxgl8qbxx4idz95bvdi7"; depends=[ggplot2 colorspace proto scales ]; };
ggvis = derive { name="ggvis"; version="0.4.1"; type="cran"; sha256="1sl6ygglgsg7xhzzkxaap8pzb2zmfw0y481w7r7s1nyg7pdgr0r2"; depends=[assertthat jsonlite shiny magrittr dplyr lazyeval htmltools ]; };
ghyp = derive { name="ghyp"; version="1.5.6"; type="cran"; sha256="0y3915jxb2rf01f7r6111p88ijhmzyz4qsmy7vfijlilkz0ynn20"; depends=[numDeriv gplots ]; };
giRaph = derive { name="giRaph"; version="0.1.2"; type="cran"; sha256="137c39fz4vz37lpws3nqhrsf4qsyf2l0mr1ml3rq49zz4146i0rz"; depends=[ ]; };
gibbs_met = derive { name="gibbs.met"; version="1.1-3"; type="cran"; sha256="1yb5n8rkphsnxqn8rv8i54pgycv9p7x1xhinx4l5wzrds3xhf2dc"; depends=[ ]; };
gimme = derive { name="gimme"; version="0.1-1"; type="cran"; sha256="1snzlwq6d86ygpn778m3inlfqpymp0l05pdlrdkm8ip4wgir0hvs"; depends=[lavaan qgraph ]; };
girafe = derive { name="girafe"; version="1.18.0"; type="bioc"; sha256="1ipxbg07m52d82gr59b3gbmasrjqi5d9665qdzrg7jfs3vx00dqf"; depends=[BiocGenerics S4Vectors IRanges Rsamtools ShortRead intervals genomeIntervals Biobase Biostrings BSgenome IRanges ]; };
gistr = derive { name="gistr"; version="0.2.0"; type="cran"; sha256="1812qh3f4nwbpqaiq4gfkalfckwqvn84j7v7qfj69gd4jzxcwywz"; depends=[jsonlite httr magrittr assertthat knitr rmarkdown dplyr ]; };
git2r = derive { name="git2r"; version="0.10.1"; type="cran"; sha256="1damlhxf3ma0flqw4am42wj2dxk3m232wh0wpl1ikgx0dcfn9l8f"; depends=[ ]; };
gitter = derive { name="gitter"; version="1.0.4"; type="cran"; sha256="1pvl8k8mb15mcfz1074y246s9basmi5vbpw2n1ca0d8wm5wdidap"; depends=[jpeg tiff logging PET ggplot2 EBImage ]; };
glarma = derive { name="glarma"; version="1.3-0"; type="cran"; sha256="0fp354zxkddc4giynhwjlf9mg4sklcmqi0gdn8nxm1pkdpb86rba"; depends=[MASS ]; };
glasso = derive { name="glasso"; version="1.8"; type="cran"; sha256="0gcapw7kyxb19wvdyxq1vsmc5j7yyd0rvqxs2i71k31q352sg6zw"; depends=[ ]; };
glassomix = derive { name="glassomix"; version="1.2"; type="cran"; sha256="13a2ly0by58z8djq8nbakpyacgb6nkdsqxjq44yw4v2fy3s22z3n"; depends=[mvtnorm glasso huge ]; };
glba = derive { name="glba"; version="0.2"; type="cran"; sha256="0ckcz6v6mfbv34s8sp086czhb5l58sky79k84332rrz6wj47p3md"; depends=[ ]; };
glcm = derive { name="glcm"; version="1.2"; type="cran"; sha256="00bkhd4arvg7ahdr5kfvran46b2sywv9i0rlwalx9pmyvjwnzm5b"; depends=[Rcpp Rcpp RcppArmadillo ]; };
gld = derive { name="gld"; version="2.2.1"; type="cran"; sha256="1x9xlqj87xmk90hn20k1yvnvyndxdbi67yrxrfdhr3lhxabq5msw"; depends=[ ]; };
gldist = derive { name="gldist"; version="2160.2"; type="cran"; sha256="1dcf3pb4xqvhqj4m3xc3ihzjbzxjspjrnc8819hmlnmdd0csghmx"; depends=[ ]; };
glinternet = derive { name="glinternet"; version="1.0.0"; type="cran"; sha256="0aa75xq2w64iknbyl6qw9ckk8v64a96xz0ar1mbqd8zhx0xvibyy"; depends=[ ]; };
gllm = derive { name="gllm"; version="0.35"; type="cran"; sha256="1m9asamh2yha9q8mrllvvc9qj2im6cspvfpafzc8krmh17zq4ins"; depends=[ ]; };
glm2 = derive { name="glm2"; version="1.1.2"; type="cran"; sha256="1x9pq2ddsz9al8w044qch34s3fahca63dz85lvm5qn16945ccw1s"; depends=[ ]; };
glmc = derive { name="glmc"; version="0.2-4"; type="cran"; sha256="03m1ym9w0b0gqib13pnh1yrjijlcwsn5lijg0nsr4hd6gxw29cla"; depends=[emplik ]; };
glmdm = derive { name="glmdm"; version="2.60"; type="cran"; sha256="09vljki24fccqkvxkmg2i6a8pxqhfwm155b41m2q51lqaq29bfw7"; depends=[ ]; };
glmgraph = derive { name="glmgraph"; version="1.0.1"; type="cran"; sha256="1jzkz2lri7nbxxkryhf95503wd651ic59h6iafkx9ahwpmibyv4l"; depends=[Rcpp Rcpp RcppArmadillo ]; };
glmlep = derive { name="glmlep"; version="0.1"; type="cran"; sha256="0jnm3cf2r9fyncxzpk87g4pnxbryqcxxrc5y2a80pv48al3sxlzk"; depends=[ ]; };
glmm = derive { name="glmm"; version="1.0.3"; type="cran"; sha256="0bs543x9czg8mbgpy0zhgnfll2nrmj8xz5kwkddf3k6hp859h0v8"; depends=[trust mvtnorm Matrix ]; };
glmmBUGS = derive { name="glmmBUGS"; version="2.3"; type="cran"; sha256="1j96c1c2lqplhjvyigpj494yxj85bpmc7cnd1hl1rc8b552jr192"; depends=[MASS abind ]; };
glmmGS = derive { name="glmmGS"; version="0.5-1"; type="cran"; sha256="1aqyxw3nrjri8k8wlwvddy25dj7mjqndssd5p5arax8vaqgrdnjz"; depends=[ ]; };
glmmLasso = derive { name="glmmLasso"; version="1.3.4"; type="cran"; sha256="14x74640vvyrg72pq19gqb8db7wq97xhc30iakh84fdh1llyykpn"; depends=[minqa ]; };
glmmML = derive { name="glmmML"; version="1.0"; type="cran"; sha256="0b1q5mj325xga3lfks28r03363bjfa31rlgjzwk4s0a6g21bdl4a"; depends=[ ]; };
glmnet = derive { name="glmnet"; version="2.0-2"; type="cran"; sha256="1nfbh1y41ly09lcdb5z02dy8l4qkll21yicmwg25wlkzk5sxb3z3"; depends=[Matrix foreach ]; };
glmnetcr = derive { name="glmnetcr"; version="1.0.2"; type="cran"; sha256="1pyg23hdqksiaqdcrsaqz9vb7mgclm41hh0vb7ndkdv284bzzlbz"; depends=[glmnet ]; };
glmpath = derive { name="glmpath"; version="0.97"; type="cran"; sha256="054v188ffjl6x11cld5s9py22kxcs0iq58x4yhxb0ny7mbma5hkn"; depends=[survival ]; };
glmpathcr = derive { name="glmpathcr"; version="1.0.3"; type="cran"; sha256="0qa63c7kwpxf6smczgzf4fmvczw1ynqq5vgcw3bxdbs37q4ypj8n"; depends=[glmpath mvtnorm ]; };
glmulti = derive { name="glmulti"; version="1.0.7"; type="cran"; sha256="154s72sjp6pz7ki7s4mgn5v62j7h0lfz9mngf40wvmy31da2s8ix"; depends=[rJava ]; };
glmvsd = derive { name="glmvsd"; version="1.2"; type="cran"; sha256="0p99sanr95vcjfyjx7khwd1l59d319j1i49iv3isgsh3fwikhpgf"; depends=[glmnet ncvreg MASS ]; };
glmx = derive { name="glmx"; version="0.1-0"; type="cran"; sha256="0i0p1xk5yk1l274gfr4ijmqnnbq7yyzmi577pb7igwvi3hjn7g7k"; depends=[MASS Formula lmtest sandwich ]; };
globalGSA = derive { name="globalGSA"; version="1.0"; type="cran"; sha256="1f3xv03m6g2p725ff0xjhvn2xcfm7r7flyrba080i4ldy6fd8jg8"; depends=[ ]; };
globalOptTests = derive { name="globalOptTests"; version="1.1"; type="cran"; sha256="0yf4p82dpjh36ddpfrby7m3fnj2blf5s76lncflch917sq251h4f"; depends=[ ]; };
globalboosttest = derive { name="globalboosttest"; version="1.1-0"; type="cran"; sha256="1k7kgnday27sn6s1agzlj94asww81655d2zprx6qg7liv677bxvf"; depends=[mboost survival ]; };
globaltest = derive { name="globaltest"; version="5.20.0"; type="bioc"; sha256="0rpmylm3pfkbmbarga6zn3705kn9cz5cpngqj9ad6z1rgc1xxb83"; depends=[Biobase survival AnnotationDbi annotate multtest ]; };
glogis = derive { name="glogis"; version="1.0-0"; type="cran"; sha256="19h0d3x5lcjipkdvx4ppq5lyj2xzizayidx0gjg9ggb1qljpyw9m"; depends=[zoo sandwich ]; };
glpkAPI = derive { name="glpkAPI"; version="1.3.0"; type="cran"; sha256="0173wljx13jali2jxz4k5za89hc64n2j9djz5bcryrqhq4rmkp87"; depends=[ ]; };
glrt = derive { name="glrt"; version="2.0"; type="cran"; sha256="0p2b0digndvnn396ynv56cdg436n3ll7pxkb81rs3dhwbyqyc948"; depends=[survival ]; };
gmailr = derive { name="gmailr"; version="0.6.0"; type="cran"; sha256="1l0lnlq5vrxrab8d9b5hwm8krg8zgx8f8m0kfnryyyrqkjrksky5"; depends=[httr base64enc magrittr jsonlite mime ]; };
gmapR = derive { name="gmapR"; version="1.8.0"; type="bioc"; sha256="02kxlfd2xnl2ki7604wy6gwf18j6x9sxfm3acraiwwyxa9n3qfkp"; depends=[GenomeInfoDb GenomicRanges S4Vectors IRanges Rsamtools rtracklayer GenomicFeatures Biostrings VariantAnnotation Biobase BSgenome GenomicAlignments BiocParallel ]; };
gmatrix = derive { name="gmatrix"; version="0.2"; type="cran"; sha256="1w83m6q8xflifqqgkkg2my4fkjfjyv0qq4ly8yqk12k77lb03hxq"; depends=[ ]; };
gmm = derive { name="gmm"; version="1.5-2"; type="cran"; sha256="1phd8mmfyhjb72a45gavckb3g8qi927hdq0i8c7iw1d28f04lc70"; depends=[sandwich ]; };
gmnl = derive { name="gmnl"; version="1.0"; type="cran"; sha256="1nvk6x5412bfqdg54051hnisbnfm3d4yv9l2568jcz49pa8lay4d"; depends=[maxLik Formula plotrix msm mlogit truncnorm ]; };
gmodels = derive { name="gmodels"; version="2.15.4.1"; type="cran"; sha256="1yizjw181bg0ml6j96calflz3k3wpvpxh61hfd3pdba013ixjib5"; depends=[MASS gdata ]; };
gmp = derive { name="gmp"; version="0.5-12"; type="cran"; sha256="10fpvcli526a8j6jaryn0mwk78c24xy7whdpcvqzzvb41l6nnkma"; depends=[ ]; };
gmt = derive { name="gmt"; version="1.2-0"; type="cran"; sha256="09az2iwwhyrls4mr619vwzhzmaks6klm67lnir48bh40hynsvibp"; depends=[ ]; };
gnm = derive { name="gnm"; version="1.0-8"; type="cran"; sha256="1581lzkb1v3y0arrq7x1bg7c91cii87bifxcdi1jzyc5rxj261la"; depends=[MASS Matrix nnet qvcalc relimp ]; };
gnmf = derive { name="gnmf"; version="0.7"; type="cran"; sha256="00y1dx1c66gv769yiwnb91xbr77wpidf36x0n0dzaqfn7s9yh6xq"; depends=[ ]; };
gnumeric = derive { name="gnumeric"; version="0.7-2"; type="cran"; sha256="14c7a8aiqvqfbrjb1akpfjwidrzdhrw8a07ask083krki6vbi7hh"; depends=[XML ]; };
goProfiles = derive { name="goProfiles"; version="1.28.0"; type="bioc"; sha256="0l1n93j7zc3mzydhgykcy1ys5vljm0ka2wzld9l0i79dwcsjsap5"; depends=[Biobase AnnotationDbi ]; };
goTools = derive { name="goTools"; version="1.40.0"; type="bioc"; sha256="0b2p46r643mjbcx8q1g6qpbvb1qc2mwz9l58snilbqv214fh1khd"; depends=[AnnotationDbi ]; };
goalprog = derive { name="goalprog"; version="1.0-2"; type="cran"; sha256="1h3nd3d53hbz5hl3494lpfjnp1ddklc17nhgw18362jd1nk14awy"; depends=[lpSolve ]; };
gof = derive { name="gof"; version="0.9.1"; type="cran"; sha256="1s12gga9d6yizn2y7lzql4jd80lp5jpyml8ybn7xqswp8am82vpg"; depends=[ ]; };
goft = derive { name="goft"; version="1.1"; type="cran"; sha256="19mb2i2iri09v2dgkyl1ral2m7bzyizncnz24niwg13afpwbq12h"; depends=[gPdtest mvShapiroTest ]; };
goftest = derive { name="goftest"; version="1.0-2"; type="cran"; sha256="11xw0cfj71z5smywsds9ijbhf3glxkqnhxmwwdqkv4gjrrr2y1bv"; depends=[ ]; };
gogarch = derive { name="gogarch"; version="0.7-2"; type="cran"; sha256="03gpl73zc6kx4gni59xbg7b38dkpd7p4c7kvlqm46f58j257viik"; depends=[fGarch fastICA ]; };
gooJSON = derive { name="gooJSON"; version="1.0.01"; type="cran"; sha256="02sldh5lsrjprc9mbf99jyid7ij62db5f1h60z719gxl4pk6fjms"; depends=[rjson ]; };
googleVis = derive { name="googleVis"; version="0.5.8"; type="cran"; sha256="185pp2sgdw81p9vjkxzx4nrv9fp9jw24mqng7k98ql98p3kw9y21"; depends=[RJSONIO ]; };
goric = derive { name="goric"; version="0.0-8"; type="cran"; sha256="0ayac0yfkxrl13ckc2pwfqnmsrhmbg5bi6iwzx0fmh81vrlp0zrm"; depends=[nlme quadprog mvtnorm MASS Matrix ]; };
goseq = derive { name="goseq"; version="1.18.0"; type="bioc"; sha256="0srsf83nic4lqa8ab3qcsjid8djblbqgddpxih7dvykxc3yh84x1"; depends=[BiasedUrn mgcv AnnotationDbi BiocGenerics ]; };
govStatJPN = derive { name="govStatJPN"; version="0.1"; type="cran"; sha256="03sywa7rl5rblvv370mfszz5ngp850qf32yydy1fdx10lv5amrfl"; depends=[ ]; };
gpairs = derive { name="gpairs"; version="1.2"; type="cran"; sha256="09mkdbs9hklxnmqcsnf65s3dfsfcr7kppp6zxj08v5hxym1gpz3l"; depends=[barcode lattice vcd MASS colorspace ]; };
gpclib = derive { name="gpclib"; version="1.5-5"; type="cran"; sha256="08j81b8wymsgin20n54gvm6m54rmdic51p6qzs9cz4pmgl7dkkjv"; depends=[ ]; };
gpk = derive { name="gpk"; version="1.0"; type="cran"; sha256="1zfhkqyypb24mhbj2zi9qy3gw0kqxvlp8j5ni3zm7k5rz1bnrygg"; depends=[ ]; };
gplm = derive { name="gplm"; version="0.7-2"; type="cran"; sha256="0pr39fbkv61iwd110lq76p2fi4dvx9qz6mjsvg6bpja9pfbb6wc0"; depends=[AER ]; };
gplots = derive { name="gplots"; version="2.17.0"; type="cran"; sha256="0dyysysl595khv00m4h68s7zx7xlfnpxzfkc49av1s3fc58bvmr5"; depends=[gtools gdata caTools KernSmooth ]; };
gpls = derive { name="gpls"; version="1.38.0"; type="bioc"; sha256="036cqbrs388snhcfg09zmrq7s5ggp45z7pbyhfhzs4g0f8kzgb2d"; depends=[ ]; };
gpmap = derive { name="gpmap"; version="0.1.1"; type="cran"; sha256="00jhslbxbp6dgq7bw346hfpw0gans048vsn7chyzjhyr7ah5xrfg"; depends=[isotone plyr ggplot2 foreach ]; };
gpr = derive { name="gpr"; version="1.1"; type="cran"; sha256="03ywik11kc6cnaqrzzzi94jkrdbd378m3sf26f2vpb7d834nl728"; depends=[ ]; };
gprege = derive { name="gprege"; version="1.10.0"; type="bioc"; sha256="1bgb9q5wdl0ha1499khp0wrmckibjhgfm5p2xrygxijhd0yb0iff"; depends=[gptk ]; };
gptk = derive { name="gptk"; version="1.08"; type="cran"; sha256="0fk6c8f8fni4y2n2cbfwywlfyz74xlb8lx25wajsxr2v4x74pa7l"; depends=[Matrix fields ]; };
gputools = derive { name="gputools"; version="0.28"; type="cran"; sha256="0ria03ggcfqgn93gjv2anhvkd3k73c6vfwgka16kf66g1nfzxs4l"; depends=[ ]; };
grImport = derive { name="grImport"; version="0.9-0"; type="cran"; sha256="1d8fd7502qj7cirjqdkr1qj51rylw2fz5hs06avfvc2dxs2xwfw1"; depends=[XML ]; };
grade = derive { name="grade"; version="0.2-1"; type="cran"; sha256="085hfvqn880yk19axdjv3z9jr33kls212vs172a8mzhnkallph1r"; depends=[ ]; };
gramEvol = derive { name="gramEvol"; version="2.0-2"; type="cran"; sha256="1xrn5gkr9rxw53i5l2sqcgai9q0w4kyrychf0nq17cvcynw1y1lx"; depends=[ ]; };
granova = derive { name="granova"; version="2.1"; type="cran"; sha256="161fznqlnwmw53abmg2n62lhxxda7400ljnadvcdvsm8f6kcjf80"; depends=[car ]; };
granovaGG = derive { name="granovaGG"; version="1.3"; type="cran"; sha256="1bsxad2h7rmbkmmg5zx6wbpws62dmp7n905gnp17n8cl8c6w2jp9"; depends=[ggplot2 RColorBrewer plyr gridExtra reshape2 ]; };
graph = derive { name="graph"; version="1.44.1"; type="bioc"; sha256="1s8va4zn2w1rg91m7ascp03gk3cfzymjpbwb3xr6clrpbnbw8g7g"; depends=[BiocGenerics ]; };
graphicalVAR = derive { name="graphicalVAR"; version="0.1.2"; type="cran"; sha256="0vc2x58z4w1hhvkqpxya3wr78p2b1irfyivc7njxw8a2595rc347"; depends=[Rcpp Matrix glasso glmnet mvtnorm qgraph Rcpp RcppArmadillo ]; };
graphicsQC = derive { name="graphicsQC"; version="1.0-6"; type="cran"; sha256="07kzz0r8rh4m7qqxnlab0d4prr56jz5kspx782byspkcm5l4xrsl"; depends=[XML ]; };
graphite = derive { name="graphite"; version="1.12.0"; type="bioc"; sha256="1pjaf7zrrrfw5h15zk9qzpw6dh3lwfv41fk5clmg0aa1gsln7s0y"; depends=[AnnotationDbi graph ]; };
graphscan = derive { name="graphscan"; version="1.0"; type="cran"; sha256="15kdpp2k2gpfr8qq6wr08gva5hlxqha2h48zi1j3p6r766j07082"; depends=[ape sp snowfall rgl ]; };
greport = derive { name="greport"; version="0.5-3"; type="cran"; sha256="0cd7rqzrk1yb22ksbmva1fl9k388bxxm586c20j8k8z5zympi9g1"; depends=[Hmisc data_table rms lattice latticeExtra ggplot2 Formula survival ]; };
greyzoneSurv = derive { name="greyzoneSurv"; version="1.0"; type="cran"; sha256="115i0d4fy4p4g4vd419hj9f23hi8cbiyfilgpgmag91ilr1xpcdp"; depends=[survival Hmisc survAUC ]; };
gridBase = derive { name="gridBase"; version="0.4-7"; type="cran"; sha256="09jzw4rzwf2y5lcz7b16mb68pn0fqigv34ff7lr6w3yi9k91i1xy"; depends=[ ]; };
gridDebug = derive { name="gridDebug"; version="0.4-0"; type="cran"; sha256="1nbcdjip6ghnlv0j7cf45bpqdpirwn636pg324f0hgiqj4rifn09"; depends=[gridGraphviz gridSVG ]; };
gridExtra = derive { name="gridExtra"; version="0.9.1"; type="cran"; sha256="15pj5w5wlrf8gw4z01i9j88gk6bm4kni64fpip9icmxkn887y3hx"; depends=[ ]; };
gridGraphics = derive { name="gridGraphics"; version="0.1-3"; type="cran"; sha256="09ml9vy4lz0q235xy2m5l8qd3rb3r73gf3bwz35dgn7qcxps8jjp"; depends=[ ]; };
gridGraphviz = derive { name="gridGraphviz"; version="0.1"; type="cran"; sha256="14zcr0w2c9cgdw6ij93w52k3bkmgdmx809snh9jjf2amy08p2gbg"; depends=[graph Rgraphviz ]; };
gridSVG = derive { name="gridSVG"; version="1.4-3"; type="cran"; sha256="1jgrhckjbvccp5zqbkkiw9glhdljwxlc8kkr1fgkbrwmsi053iwk"; depends=[RJSONIO XML ]; };
grnn = derive { name="grnn"; version="0.1.0"; type="cran"; sha256="1dxcmar42g9hz4zlyszlmmnnsnja0gxfggav5jxv0gkp32rkd0wh"; depends=[ ]; };
groHMM = derive { name="groHMM"; version="1.0.2"; type="bioc"; sha256="1gvb4h54hs65c7sckx4k3832698p9gppbmx4gqbspswrqf6izr2k"; depends=[MASS S4Vectors IRanges GenomicRanges GenomicAlignments rtracklayer ]; };
groc = derive { name="groc"; version="1.0.5"; type="cran"; sha256="1kqcdyq1y80gd62jpn38yz6q1qmg84b7k8qcniip5h948vfzkddg"; depends=[rrcov pls mgcv robust robustbase MASS ]; };
grofit = derive { name="grofit"; version="1.1.1-1"; type="cran"; sha256="1rnym5fxbg3bin2idmymrwvf1fcd646bipbgjd6wby8my69zy4c5"; depends=[ ]; };
groupRemMap = derive { name="groupRemMap"; version="0.1-0"; type="cran"; sha256="1bfp746j0dx7kk44nyjqmimvgw14par9ayvqxnzldc05qsazjdwx"; depends=[ ]; };
grouped = derive { name="grouped"; version="0.6-0"; type="cran"; sha256="1glxgacpwk7yjbkwg5ci6bmb2il6hf5zhydwi5bbq6hc032m9976"; depends=[MASS ]; };
growcurves = derive { name="growcurves"; version="0.2.3.9"; type="cran"; sha256="1f8hh8ppp6bgrb8crm46xrria3vdnz62aya9lhwcdaggfmy7j25l"; depends=[Rcpp RcppArmadillo reshape2 scales ggplot2 Formula testthat Rcpp RcppArmadillo ]; };
growfunctions = derive { name="growfunctions"; version="0.11"; type="cran"; sha256="087qpykjj46a5zp48dx59k51mdyqckc39zgmrnhc5rhgm5df8sv3"; depends=[Rcpp Matrix spam mvtnorm ggplot2 reshape2 scales Rcpp RcppArmadillo ]; };
growthmodels = derive { name="growthmodels"; version="1.2.0"; type="cran"; sha256="1wy5z77819s3daa0mifafcjfkggsq0ac522yagj86ml3vf7yqppj"; depends=[ ]; };
growthrate = derive { name="growthrate"; version="1.3"; type="cran"; sha256="1ak3yqlm7dnkdjlmikwa57qnf7yd9n1ixz36gv3shr252750x9cd"; depends=[Matrix clime mvtnorm ]; };
grplasso = derive { name="grplasso"; version="0.4-5"; type="cran"; sha256="15bqckq9qjdlllhfpb21vzgi9msbl544alkrz01w1vvb3hk1847y"; depends=[ ]; };
grppenalty = derive { name="grppenalty"; version="2.1-0"; type="cran"; sha256="12hbghmg96dwlscjy6nspgkmqqj4vwq2qcwcz1gp50a08qbmdcrk"; depends=[ ]; };
grpreg = derive { name="grpreg"; version="2.8-0"; type="cran"; sha256="1mfd3hzzv720zhl8s6ghw0vfpqkz8q050dwnvmmb0smhdvahd2zj"; depends=[Matrix ]; };
grt = derive { name="grt"; version="0.2"; type="cran"; sha256="0cqjk7yqk2ryx1pgvjd3x8l25hqv92p8rvdr7xw4jkzillllwmhz"; depends=[MASS rgl misc3d ]; };
gsDesign = derive { name="gsDesign"; version="2.9-3"; type="cran"; sha256="0dd96hciiksf436lpm1q35in06b82p4h09spklf28n0p5hgc9225"; depends=[ggplot2 xtable stringr RUnit plyr ]; };
gsalib = derive { name="gsalib"; version="2.1"; type="cran"; sha256="1k3zjdydzb0dfh1ihih08d4cw6rdamgb97cdqna9mf0qdjc3pcp1"; depends=[ ]; };
gsarima = derive { name="gsarima"; version="0.1-4"; type="cran"; sha256="1ay3iamnvg7mbnl1xaxxcyic559bdnfspy883w2bwgy20yhr34yg"; depends=[MASS ]; };
gsbDesign = derive { name="gsbDesign"; version="0.96-2"; type="cran"; sha256="0sk4a66z9bqi3aa2ky9472p9znfm93kc9p5igdmvii4dr0syyfxd"; depends=[gsDesign lattice ]; };
gset = derive { name="gset"; version="1.1.0"; type="cran"; sha256="1gingqw6la8n7mnl47wpz9sicxca4zi2m8p35n6cnihrniibhajc"; depends=[Hmisc mvtnorm MCMCpack ]; };
gsg = derive { name="gsg"; version="2.0"; type="cran"; sha256="17fjl7aw1s814krnszxd4y1d4210bnkrf4kb2fwsycqwcwms5pm7"; depends=[mgcv mvtnorm boot numDeriv ]; };
gsheet = derive { name="gsheet"; version="0.1.0"; type="cran"; sha256="02mclvkq9lpp57ii8k3wj8cqjii9zsg4nl4i7zsa8b88r2bjmf9r"; depends=[dplyr rvest stringr ]; };
gskat = derive { name="gskat"; version="1.0"; type="cran"; sha256="19mbif7wr88vk5wlc7m2l4xghjmfj2qd3s8yvjlkawbnjk8x6ib0"; depends=[CompQuadForm e1071 gee geepack Matrix ]; };
gsl = derive { name="gsl"; version="1.9-10"; type="cran"; sha256="06n21p0k2ki6nb725a6sxwlb4p7xc5jhg11nq9c3z3dj39r0qgbd"; depends=[ ]; };
gsmoothr = derive { name="gsmoothr"; version="0.1.7"; type="cran"; sha256="00z9852vn5pj04dhl3w36yk0xjawniay6iifw1i7fd8g98mgspxp"; depends=[ ]; };
gss = derive { name="gss"; version="2.1-4"; type="cran"; sha256="0vmyz3q7b2chzmvrwx6bk2yj5kmaxym6lznyrddxgf7xzjipvlii"; depends=[ ]; };
gsscopu = derive { name="gsscopu"; version="0.9-2"; type="cran"; sha256="0hg2ry9rhnn51g368fg1zxswx826y3m0yn2wjb2g5rw4a4zn1frr"; depends=[gss ]; };
gstat = derive { name="gstat"; version="1.0-22"; type="cran"; sha256="1jbjl2irg0a2jdxwk7nr3c33jf3dzbcydpxxjmld23zzx94qy1iv"; depends=[lattice sp zoo spacetime FNN ]; };
gstudio = derive { name="gstudio"; version="1.3"; type="cran"; sha256="1ddifizswm41y4sxnnfw8j90clba6zf022x0z4xipccaznim2gy9"; depends=[ggplot2 raster sp reshape2 ggmap popgraph ]; };
gsubfn = derive { name="gsubfn"; version="0.6-6"; type="cran"; sha256="196x4c3ihf4q3i0v7b1xa6jm8jjld2rsx00qz03n90wfnjdx5idv"; depends=[proto ]; };
gsw = derive { name="gsw"; version="1.0-3"; type="cran"; sha256="0ca3h567r23bdldic7labk1vbz8hhslw568lacbdcikm8q16hk72"; depends=[ ]; };
gtable = derive { name="gtable"; version="0.1.2"; type="cran"; sha256="0k9hfj6r5y238gqh92s3cbdn34biczx3zfh79ix5xq0c5vkai2xh"; depends=[ ]; };
gtcorr = derive { name="gtcorr"; version="0.2-1"; type="cran"; sha256="1n56zmyv58jwr95p453jb86j82pdnq57gfc8m15jndjc9p31zl0m"; depends=[ ]; };
gte = derive { name="gte"; version="1.2-2"; type="cran"; sha256="1x528iakyjhh4j92cgm6fr49a3rdi4cqy28qhsfr2dwvxzxchl6h"; depends=[survival ]; };
gtools = derive { name="gtools"; version="3.4.2"; type="cran"; sha256="1s0vfi07gxaqvllidsws4f9admvc61sw19g2hvffa74sccqiwr6a"; depends=[ ]; };
gtop = derive { name="gtop"; version="0.2.0"; type="cran"; sha256="1nvvbf181x0miw3q0r2g0nklz29ljdsd07cazaajfls7pmhi0xw9"; depends=[hts quadprog lassoshooting ]; };
gtx = derive { name="gtx"; version="0.0.8"; type="cran"; sha256="0x71jji2yldi9wpx8d3nldbjfj4930j7zcasayzbylf9094gmg26"; depends=[survival ]; };
gumbel = derive { name="gumbel"; version="1.05"; type="cran"; sha256="0d7isx7bhvryhaa25kxb4fm58ph81xaqscj19aaqzs8yg79ac2ar"; depends=[ ]; };
gvc = derive { name="gvc"; version="0.2.0"; type="cran"; sha256="0d7plcd5yy6xw1i6dvh2df8jg6fcyfd6kjypbflppnbl5n1zab12"; depends=[decompr ]; };
gvcm_cat = derive { name="gvcm.cat"; version="1.9"; type="cran"; sha256="1kwfcmnl1ivv1lh3zxccwls2xfyx3l8v71ngc0bg6441i81d4xp5"; depends=[Matrix MASS mgcv ]; };
gvlma = derive { name="gvlma"; version="1.0.0.2"; type="cran"; sha256="0gj52hg665nmlwgbjh9yvz7a3sbzlbj41ksxchnnlxaxipdf6sl8"; depends=[ ]; };
gwascat = derive { name="gwascat"; version="1.10.0"; type="bioc"; sha256="1s27idaikm22yqdhnvnkilk1jm3r50h1hriswpis9gbjnfmma1kn"; depends=[BiocGenerics S4Vectors IRanges GenomeInfoDb GenomicRanges snpStats Biostrings Rsamtools rtracklayer ]; };
gwerAM = derive { name="gwerAM"; version="1.0"; type="cran"; sha256="1c3rzd1jf52a4dn63hh43m9s9xnjvqn67amlm9z1ndrnn6fwfg1b"; depends=[MASS Matrix ]; };
gwrr = derive { name="gwrr"; version="0.2-1"; type="cran"; sha256="1fjk217pimnmxsimqp9sn02nr1mwy3hw3vsr95skbfsd6vdda14d"; depends=[fields lars ]; };
h2o = derive { name="h2o"; version="2.8.4.4"; type="cran"; sha256="03mj2p5wsgdn0jnv1fsrj7012v2am0mvyayj24zp7q56sfsgxigf"; depends=[statmod survival RCurl rjson ]; };
h5vc = derive { name="h5vc"; version="2.0.6"; type="bioc"; sha256="122s8jx03ilx9zg8yg4ir7fysyk8hq6fqz87mqjvprzhy8c1f2ip"; depends=[gridExtra ggplot2 rhdf5 reshape S4Vectors IRanges Biostrings Rsamtools GenomicRanges abind BiocParallel BatchJobs GenomeInfoDb ]; };
hSDM = derive { name="hSDM"; version="1.4"; type="cran"; sha256="1jq6hdnyv446ng62srip0b48kccf0qw3xqym3fprg74mjdy3inqr"; depends=[coda ]; };
haarfisz = derive { name="haarfisz"; version="4.5"; type="cran"; sha256="1qmh4glwzqwqx3pvxc71rlcimp1l0plgdf380v9hk0b4gj7g3pkf"; depends=[wavethresh ]; };
hamlet = derive { name="hamlet"; version="0.7"; type="cran"; sha256="0f3gl5xvgdksaxk76dyv46hahc41f2j3pf9wp0rc0q7wpp5nfsjl"; depends=[ ]; };
hapFabia = derive { name="hapFabia"; version="1.8.0"; type="bioc"; sha256="0zmbwyjs96zhr2qa27i9vig4vmafkkr3sl00pr90p2zs2g1m5gqj"; depends=[Biobase fabia ]; };
hapassoc = derive { name="hapassoc"; version="1.2-8"; type="cran"; sha256="0qs5jl0snzfchgpp6pabncwywxcmi743g91jvjiyyzw0lw85yv4s"; depends=[ ]; };
haplo_ccs = derive { name="haplo.ccs"; version="1.3.1"; type="cran"; sha256="0cs90zxxbvglz1af0lh37dw1gxa04k0kawzxamz2was3dbh19lbz"; depends=[haplo_stats survival ]; };
haplo_stats = derive { name="haplo.stats"; version="1.6.11"; type="cran"; sha256="0j3zh4n2rly8dij8srm8ck6fl63haw6d27m3nfnrxywr87pljg14"; depends=[ ]; };
haplotypes = derive { name="haplotypes"; version="1.0"; type="cran"; sha256="0pwihfi6g4jrnkha9s9rksq0fc8j04mlrwf0295rmy49y19rg84s"; depends=[network ]; };
harvestr = derive { name="harvestr"; version="0.6.0"; type="cran"; sha256="1jg4d98bwx2cm3hliayqrazq43sa9kd9ynpaid6x4ld3mz5y8mlq"; depends=[plyr digest ]; };
hash = derive { name="hash"; version="2.2.6"; type="cran"; sha256="0mkx59bmni3b283znvbndnkbar85fzavzdfgmwrhskidsqcz34yz"; depends=[ ]; };
hashFunction = derive { name="hashFunction"; version="1.0"; type="cran"; sha256="1v57xj8xwv6xhxvgp0zxgvs5vcjw8z5k2ciwbn0jxf4ilyd66cgj"; depends=[ ]; };
hasseDiagram = derive { name="hasseDiagram"; version="0.1.1"; type="cran"; sha256="1szj5pi9i5ijqakxx4vwvwpz7y76jbgcgm76vfg4cnxvndf7sf4l"; depends=[Rgraphviz ]; };
haven = derive { name="haven"; version="0.2.0"; type="cran"; sha256="1ww55ciibq62bix3pdwabpycxv1dh01zsrf0vb6jxxh1idxbm5hg"; depends=[Rcpp Rcpp BH ]; };
hawkes = derive { name="hawkes"; version="0.0-4"; type="cran"; sha256="1ghwq3icxwmrai3xn9r8cnvlh3z3j18lznhw1bm31h9mkkp2dk0a"; depends=[Rcpp Rcpp RcppArmadillo ]; };
hazus = derive { name="hazus"; version="0.1"; type="cran"; sha256="1c0ahjdy9di1683nk5k4rmr6rhb66523ny039nyv842rgqdy625j"; depends=[reshape2 ]; };
hbim = derive { name="hbim"; version="1.0.3"; type="cran"; sha256="1480nydsi2xj7zbfk4zw24mhsjadf83d827kpqzbmn0yh6srp3ps"; depends=[mvtnorm ]; };
hbm = derive { name="hbm"; version="1.0"; type="cran"; sha256="0qz28azm91a6pbss1mfc47a21d3q9rs3mmw0kgwc7i2a2m43mysm"; depends=[Matrix foreach doParallel ]; };
hbmem = derive { name="hbmem"; version="0.3"; type="cran"; sha256="0ylxp77ack874sadwfnry84a6bg8gdl9xbw821lp5q05nnyg0dcj"; depends=[ ]; };
hbsae = derive { name="hbsae"; version="1.0"; type="cran"; sha256="1iwmpi0pn5fxyxkwqkbmy6w1f1wcx0p809jnviim0ypwib32mhh7"; depends=[Matrix arm ]; };
hcc = derive { name="hcc"; version="0.54"; type="cran"; sha256="14b3pamkywb0wsjpbm0wpflcds0b5mfymvgk92rmf6ngz1bkpdbq"; depends=[ ]; };
hcci = derive { name="hcci"; version="1.0.0"; type="cran"; sha256="11piy1ajg3j3dbh66szzf7lhc3x28fz75ai39vlx0gl5nc2v5zs5"; depends=[ ]; };
hcp = derive { name="hcp"; version="0.1"; type="cran"; sha256="0hhcy70g13kclxv733kgiys7qn5bi28abpkli5n2vj0a58ac333m"; depends=[ ]; };
hda = derive { name="hda"; version="0.2-12"; type="cran"; sha256="11z9p35dvhi7bdw09d2yawh46nxk8axw76b51vk089g12nr2b9x7"; depends=[e1071 ]; };
hddplot = derive { name="hddplot"; version="0.56"; type="cran"; sha256="0s9iijwq8zfvavqq2bkqm2884sg0957ppkggsv6mmm3cbdi2xrlc"; depends=[MASS multtest ]; };
hddtools = derive { name="hddtools"; version="0.2.4"; type="cran"; sha256="001cm07jvbxzsp64mkjymnsncyrd6r1nxwhjqkk2mb5ldz0541ir"; depends=[sp rgdal raster RCurl XML zoo ]; };
hdeco = derive { name="hdeco"; version="0.4.1"; type="cran"; sha256="04nggwckvn1kwi238qd33l4pryzn4aq5bmi30bvfi99gwnrlgfgq"; depends=[ ]; };
hdi = derive { name="hdi"; version="0.1-2"; type="cran"; sha256="19lc2h34jlj198gchnhbfbb8igwlan2b977a47j8p3q6haj5bcv1"; depends=[glmnet linprog MASS scalreg ]; };
hdlm = derive { name="hdlm"; version="1.2"; type="cran"; sha256="0s4lzg3s2k7f7byygb11s7f78l3rkkb0zn03kh3d7h8250wg9fax"; depends=[glmnet foreach MASS iterators ]; };
hdrcde = derive { name="hdrcde"; version="3.1"; type="cran"; sha256="027nxpzk1g0yx8rns7npdz30afs5hwpdqjiamc7yjrsi0rzm71lw"; depends=[mvtnorm locfit ash ks KernSmooth ]; };
heatex = derive { name="heatex"; version="1.0"; type="cran"; sha256="0c7bxblq24m80yi24gmrqqlcw8jh0lb749adsh51yr6nzpap6i9n"; depends=[ ]; };
heatmap_plus = derive { name="heatmap.plus"; version="1.3"; type="cran"; sha256="0rzffm15a51b7l55k0krk6w7v8czy3vpwz1qmbybr7av0pln7wn3"; depends=[ ]; };
heatmap3 = derive { name="heatmap3"; version="1.1.1"; type="cran"; sha256="14zkij0gr9awzic71k2j7pniamkywfvwrifdk7jbds70zsi30ph5"; depends=[fastcluster ]; };
heatmapFit = derive { name="heatmapFit"; version="2.0.2"; type="cran"; sha256="00p39y6x13yxrxfqx6gzmb80fk1hsyi8wa6brx40hj37pyyfis0p"; depends=[ ]; };
heavy = derive { name="heavy"; version="0.2-35"; type="cran"; sha256="04aw0r2hgnxf9nsd18q2b5d130vj578nyv5wacivikgfifyy0y39"; depends=[ ]; };
helloJavaWorld = derive { name="helloJavaWorld"; version="0.0-9"; type="cran"; sha256="1a8yxja54iqdy2k8bicrcx1y3rkgslas03is4v78yhbz42c9fi8s"; depends=[rJava ]; };
helsinki = derive { name="helsinki"; version="0.9.27"; type="cran"; sha256="1vhzlxjkk2hgzjlin9ksvjk3bi2ly5nm4361777m49lb84ncs7dr"; depends=[maptools RCurl rjson sp ]; };
heplots = derive { name="heplots"; version="1.0-15"; type="cran"; sha256="0sl5pqc57lhhh8s8hym0l874saq974hms6vsq7ll6g60rifx4lbq"; depends=[car MASS ]; };
hergm = derive { name="hergm"; version="2.2-2"; type="cran"; sha256="0jshhf57kybrayk94vv7p1sjvhlfcdya6jllaj9kgn46kkvci54p"; depends=[ergm latentnet network sna ]; };
heritability = derive { name="heritability"; version="1.1"; type="cran"; sha256="05vcprf3rk65197njnhw7n5l19hvy7hfp4fdigkwzvch4rnicidf"; depends=[MASS ]; };
hermite = derive { name="hermite"; version="1.1.0"; type="cran"; sha256="184f7iixsmpli5hp4f0frjxfwpxpicjn1yrk6sf8y4il49cx0s4v"; depends=[maxLik ]; };
het_test = derive { name="het.test"; version="0.1"; type="cran"; sha256="08kxp81dx32anh0k5b65x7w7madwnn9hiabdrk6ck6b6mx37x26v"; depends=[vars ]; };
hett = derive { name="hett"; version="0.3-1"; type="cran"; sha256="1y0hr9g2pjwzc5azh095h33qidxhhmlvd1csamjnhwdphj5drzz0"; depends=[MASS lattice ]; };
hexView = derive { name="hexView"; version="0.3-3"; type="cran"; sha256="0cx5hl70sk1wk24na21vjyv50b2358z1plvvcw604qf1zij4icwn"; depends=[ ]; };
hexbin = derive { name="hexbin"; version="1.27.0"; type="cran"; sha256="0fs5nsaalic6fj7b347yjczws310y3q2v37yr8sg74yq8wqzsdj8"; depends=[lattice ]; };
hflights = derive { name="hflights"; version="0.1"; type="cran"; sha256="1rb6finck13i6949i6hsgfk90q4ybxh1m3is2mlw2m6087bpzfbd"; depends=[ ]; };
hgam = derive { name="hgam"; version="0.1-2"; type="cran"; sha256="1flcc67n8kbh9m5phdfl587xg1x935zbp305y0gdmkc8vpkiwpcf"; depends=[grplasso lattice rgl ]; };
hglasso = derive { name="hglasso"; version="1.2"; type="cran"; sha256="1qq41ma33wz7qjs5zx72yvngpsiq62z9sd6d5hvvl83brq0fcr4b"; depends=[glasso mvtnorm igraph fields ]; };
hglm = derive { name="hglm"; version="2.1-0"; type="cran"; sha256="02d5m7j7c1z40kih1ywvnd32sdlshgsgagsbh9avhhpcg7lxswj9"; depends=[Matrix MASS hglm_data ]; };
hglm_data = derive { name="hglm.data"; version="1.0-0"; type="cran"; sha256="1hrq1jac658z5xjsg03nfkb4kwm9z44bhciv5chk74ww8gjr9j9q"; depends=[Matrix MASS ]; };
hgm = derive { name="hgm"; version="1.11"; type="cran"; sha256="1p6391bcvsgf2mvkdrwc3fj3h6hkzshqmzb6f31kmpiihjwv3392"; depends=[deSolve ]; };
hht = derive { name="hht"; version="2.1.2"; type="cran"; sha256="10lpndwpddcqxyrk9pq9dwaqpj4apxdic971nd68cn3pql6fssdn"; depends=[EMD fields spatstat ]; };
hiAnnotator = derive { name="hiAnnotator"; version="1.0.0"; type="bioc"; sha256="1l4kdp4ra7svjwi4zfkgsi6z363nvjr5ihs8pn9y32xyfp31swc8"; depends=[GenomicRanges foreach iterators rtracklayer plyr BSgenome ggplot2 scales ]; };
hiPOD = derive { name="hiPOD"; version="1.0"; type="cran"; sha256="1i15ickz2s0kffh99qq30pl5hsl0lbj0kp55jnbv4x72hndzhmla"; depends=[rgl ]; };
hiReadsProcessor = derive { name="hiReadsProcessor"; version="1.0.0"; type="bioc"; sha256="14p37x0qbv6jgv2mb071zwn675y4nx4h4kbzsqgzdaqa0y467hd4"; depends=[Biostrings GenomicAlignments xlsx BiocParallel hiAnnotator sonicLength plyr ]; };
hiddenf = derive { name="hiddenf"; version="1.3"; type="cran"; sha256="02vdvvhfas8ziyipm13ihmvas4krgzifz5dg513p5qy2lzvz6xd3"; depends=[ ]; };
hier_part = derive { name="hier.part"; version="1.0-4"; type="cran"; sha256="03acdgzkhbk4p0wxw2g1hzklmq9hzmdkkvfj742vzfswdd803yg9"; depends=[gtools ]; };
hierDiversity = derive { name="hierDiversity"; version="0.1"; type="cran"; sha256="1n4jg003h9hvr2n43jwxgfpazvc5ij5lqvspxi49w8fpzpcrqrjj"; depends=[ ]; };
hierNet = derive { name="hierNet"; version="1.6"; type="cran"; sha256="08lifk92caa4l9nfb89rl6vby8sd1ba3ay7z29ffirsg7cx07qiw"; depends=[ ]; };
hierarchicalDS = derive { name="hierarchicalDS"; version="2.9"; type="cran"; sha256="0ckxy4pww5iik4m4kqs714f00g7lfzsarjdbpd0bcalvq4lmaal2"; depends=[truncnorm mvtnorm Matrix coda xtable mc2d ggplot2 rgeos ]; };
hierfstat = derive { name="hierfstat"; version="0.04-14"; type="cran"; sha256="0zbl5cq0cidv0glgi1g2q0azfw393lnb7hp8m69sxwdjn3y3912c"; depends=[gtools ade4 ]; };
hiertest = derive { name="hiertest"; version="1.1"; type="cran"; sha256="17maf1w4vkqknxff3f00fzv136j3dbbigyzl4vq4sln9j27w10r3"; depends=[ ]; };
highD2pop = derive { name="highD2pop"; version="1.0"; type="cran"; sha256="1s4v6m2d3vzvxsgmjzczv1zj3kv3ygvv6gbkkbjwsdhkvc1rdmf0"; depends=[fastclime ]; };
highTtest = derive { name="highTtest"; version="1.1"; type="cran"; sha256="18hgxlr0y8y1d4ldqmfcg4536lhyn5p6w88sq1vj74qr5wzydga1"; depends=[ ]; };
highfrequency = derive { name="highfrequency"; version="0.4"; type="cran"; sha256="0kzadnkvmxcrb8flsxlx8vd9c2yad7hh1pij05dhdcpaidrc9acq"; depends=[xts zoo ]; };
highr = derive { name="highr"; version="0.5"; type="cran"; sha256="0jnab5pk5sg4f5krsg5jdamr4y40z2pzxhp5h6fb6wys3m75hzny"; depends=[ ]; };
hillmakeR = derive { name="hillmakeR"; version="0.2"; type="cran"; sha256="1baynibgn4xqmpsxna8irggxvdc484mq5nza00rwg58vh1bc7wzq"; depends=[ ]; };
hint = derive { name="hint"; version="0.1-1"; type="cran"; sha256="1n18j2hcb1qynhsln10nzryi20l5aqhr7i1aanww10y5dz573zi3"; depends=[ ]; };
hisemi = derive { name="hisemi"; version="1.0-319"; type="cran"; sha256="0pm7dsaaqrdhkvxsk2cjvk6qd2rqqmddmv012smnrivi7mpnvd4w"; depends=[Matrix Iso fda ]; };
hisse = derive { name="hisse"; version="1.0"; type="cran"; sha256="0vbwc006ypn9jcaw86dcvmg2hyjwb88h45zx8kjr5w506818phjp"; depends=[ape deSolve GenSA subplex ]; };
histmdl = derive { name="histmdl"; version="0.4-1"; type="cran"; sha256="0kiz95hdi658j5s7aqlf8n9k35s30pshc5nymif88gjik9gvrxd0"; depends=[ ]; };
histogram = derive { name="histogram"; version="0.0-23"; type="cran"; sha256="0hrhk423wdybqbvgsjn7dxgb95bkvmbh573q1696634hvzfdm68c"; depends=[ ]; };
historydata = derive { name="historydata"; version="0.1"; type="cran"; sha256="1h69x3iig542d43p9zm8x83p4dq48iwsw606j4fndnqhx99vzkw6"; depends=[ ]; };
hitandrun = derive { name="hitandrun"; version="0.5-1"; type="cran"; sha256="0qgja0xw6687hr9qw4cwl9gq1vbv8gdnh6fkq2wx5cahgjz1p3bj"; depends=[rcdd ]; };
hive = derive { name="hive"; version="0.1-16"; type="cran"; sha256="1xaxnr8nfkji2b5f5dq2h01pkl20rm24wxnf1y1xv695v3j58ibd"; depends=[rJava XML ]; };
hlr = derive { name="hlr"; version="0.0-4"; type="cran"; sha256="04w1hzjfg2ly9vm9ynh676fy74d9ncy3a1mak209z2ddgr3m7r2y"; depends=[MASS ]; };
hmeasure = derive { name="hmeasure"; version="1.0"; type="cran"; sha256="0wr0xq956glmhvy4yis3qq7cfqv9x82ci9fzx3wjvaykd16h0sx9"; depends=[ ]; };
hmm_discnp = derive { name="hmm.discnp"; version="0.2-3"; type="cran"; sha256="1r9xxgsqh5pw9incldaxnsqhyanhd4jwm6w0ix1k43i53dw4diyr"; depends=[ ]; };
hmmm = derive { name="hmmm"; version="1.0-3"; type="cran"; sha256="0yjx5i13jbv7vzxn84m6305124ri7jnym0bxbdj46s6l7lw025a9"; depends=[quadprog MASS mvtnorm ]; };
hnp = derive { name="hnp"; version="1.0"; type="cran"; sha256="1sxbgz57js1vxhz309dnj6jhw4y6c0pzk0a9xk8avacicnv0bxhr"; depends=[MASS ]; };
hoardeR = derive { name="hoardeR"; version="0.0-2"; type="cran"; sha256="1k9a469h6fmr1br93dsk4q14h2bw8225l0v5sfp2wyr8sfpwm1dg"; depends=[httr XML stringr ]; };
holdem = derive { name="holdem"; version="1.1"; type="cran"; sha256="07h4cbg7hx91hc6ypi6hbalzdd9qz9rfhjgk5sq1srnangwwnxlw"; depends=[ ]; };
homals = derive { name="homals"; version="1.0-5"; type="cran"; sha256="1azrwvdzn379in2sz9d94w2f2xp0d6iiayrv0bws44kvdzr95aqm"; depends=[rgl ape scatterplot3d ]; };
homeR = derive { name="homeR"; version="0.1"; type="cran"; sha256="0yq93b3wkgbnwzpyhx9c73sb9xgz7m3z4p5rflk3lmc0p53h81g5"; depends=[ ]; };
homtest = derive { name="homtest"; version="1.0-5"; type="cran"; sha256="1lnqlg3dwq174ic6dbjllysw5fjy5kvvgbl6gvabjmcs66z27fp0"; depends=[ ]; };
hopach = derive { name="hopach"; version="2.26.0"; type="bioc"; sha256="0vc1ji0n12k1q812539163n5vw99sh2z885gw9p97llr3aazr3x6"; depends=[cluster Biobase BiocGenerics ]; };
hornpa = derive { name="hornpa"; version="1.0"; type="cran"; sha256="0pfvk2jkrwgvshgq9g55qijgpjh0677rpbya0r8759n92v3axbp4"; depends=[ ]; };
hot_deck = derive { name="hot.deck"; version="1.0"; type="cran"; sha256="11dxj676y55p4n0c27l7f3ns8kk308f6b6lhwfpjqfz0wgysnfq9"; depends=[mice ]; };
hotspots = derive { name="hotspots"; version="1.0.2"; type="cran"; sha256="1cwcwin86y7afjhs8jwlz1m63hh70dcjag0msds4ngksvjh9gj2q"; depends=[lattice ineq ]; };
howmany = derive { name="howmany"; version="0.3-1"; type="cran"; sha256="045ck8qahfg2swbgyf7dpl32ryq1m4sbalhr7m5qdgpm62vz8h7f"; depends=[ ]; };
hpar = derive { name="hpar"; version="1.8.1"; type="bioc"; sha256="10n9bnzhvnms4bj8db441hil0i4kxdmvqpf8c39xvpyq7a1brv5k"; depends=[ ]; };
hpcwld = derive { name="hpcwld"; version="0.5"; type="cran"; sha256="17k4mw41gygwgvh7h78m0jgzh1bivrvrsr8lgxxw3sbkw88lwb40"; depends=[multicool partitions ]; };
hpoPlot = derive { name="hpoPlot"; version="2.0"; type="cran"; sha256="080jzi1zw510clbbkmf2wkwbfgna06kfz91i7d90b9pqi7krj28j"; depends=[Rgraphviz functional magrittr ]; };
hqmisc = derive { name="hqmisc"; version="0.1-1"; type="cran"; sha256="0jcy2hb3dmzf9j4n92aq7247mx9w7n30wpsx0dkchqnjwlqwwncw"; depends=[ ]; };
hrr = derive { name="hrr"; version="1.1.1"; type="cran"; sha256="17jzsgh2784y7jdwpa50v7qz99dw6k2n25sisnam6h1a39b96byn"; depends=[ ]; };
hsdar = derive { name="hsdar"; version="0.1.5"; type="cran"; sha256="1ii83dpndshq8d00f3dxrzcxqplcc5b85b9cixxbda5bpvrlkpg1"; depends=[sp raster rgdal rootSolve signal ]; };
hsicCCA = derive { name="hsicCCA"; version="1.0"; type="cran"; sha256="1d4lkjrihwhl3jrsj7250ccd90nfwpllyavc3mp15fhcy2jnjci8"; depends=[ ]; };
hsmm = derive { name="hsmm"; version="0.4"; type="cran"; sha256="1fh8c5kfv4brygdq6bfkrhrhkm99mxl4ljb1mhp9nf2bjlla11mc"; depends=[mvtnorm ]; };
hsphase = derive { name="hsphase"; version="2.0.1"; type="cran"; sha256="1z7yxbknldxn780dxw9xz984b3i8pj5hmdnbynvxc5k0ss8g7isy"; depends=[snowfall Rcpp RcppArmadillo Rcpp ]; };
htSeqTools = derive { name="htSeqTools"; version="1.12.0"; type="bioc"; sha256="1wb847k7bvr5y4kc48lhwyfl6ng8r42qpaqqwccb2q5mfz5cqxzf"; depends=[BiocGenerics Biobase IRanges MASS BSgenome GenomeInfoDb GenomicRanges ]; };
htmlTable = derive { name="htmlTable"; version="1.3"; type="cran"; sha256="00zcismapanyb68657gng5l6g3hsmpls84naracshj4gfk2l1cfs"; depends=[stringr knitr magrittr ]; };
htmltools = derive { name="htmltools"; version="0.2.6"; type="cran"; sha256="1gp6f6388xy3cvnb08q08vraidjp740gfxlafdd19m2s04v5hncz"; depends=[digest ]; };
htmlwidgets = derive { name="htmlwidgets"; version="0.4"; type="cran"; sha256="079y3b3d4na582a1wmb5nc5cyrmmld4v7c1vc08cbfsg43w026zn"; depends=[htmltools jsonlite yaml ]; };
hts = derive { name="hts"; version="4.4"; type="cran"; sha256="1dpm669lc4khjkcs49m1nh7i61sclsqy7xbcn4mqqjhfgs7sg7sk"; depends=[forecast SparseM ]; };
httk = derive { name="httk"; version="1.2"; type="cran"; sha256="016njh1cm21bmdrn94cbsmf36gzcwfg21bqp8nl100qb16d6yqq6"; depends=[deSolve msm ]; };
httpRequest = derive { name="httpRequest"; version="0.0.10"; type="cran"; sha256="0f6mksy38p9nklsr44ki7a79df1f28jwn2jfyb6f9kbjzh98746j"; depends=[ ]; };
httpuv = derive { name="httpuv"; version="1.3.2"; type="cran"; sha256="0vp3bz1nxi0ladlgi1r6wd480y0m2m0gsba2hrs73s9b8afrfh6v"; depends=[Rcpp Rcpp ]; };
httr = derive { name="httr"; version="0.6.1"; type="cran"; sha256="111l6ygwnrzcqwny6ds62np0r2f6x0il7abapq00j1y86nk4p6l6"; depends=[digest jsonlite mime RCurl R6 stringr ]; };
huge = derive { name="huge"; version="1.2.6"; type="cran"; sha256="11njfd4i8q950apga6sdk84p4wk4qvp8bpg6yz9lgjrgj2hn14n2"; depends=[Matrix lattice igraph MASS ]; };
humanFormat = derive { name="humanFormat"; version="1.0"; type="cran"; sha256="0zwjbl8s5dx5d57sfmq6myc6snximc56zl88h8y1s1jqphyn9sir"; depends=[testthat ]; };
hwde = derive { name="hwde"; version="0.64"; type="cran"; sha256="1is39zknssqm98577sdjg8gn3h9wsraih19a9nd6n8mxdcsqivh4"; depends=[ ]; };
hwriter = derive { name="hwriter"; version="1.3.2"; type="cran"; sha256="0arjsz854rfkfqhgvpqbm9lfni97dcjs66isdsfvwfd2wz932dbb"; depends=[ ]; };
hwriterPlus = derive { name="hwriterPlus"; version="1.0-3"; type="cran"; sha256="1sk95qgpyxwk1cfkkp91qvn1iklad9glrnljdpidj20lnmpwyikx"; depends=[hwriter TeachingDemos ]; };
hwwntest = derive { name="hwwntest"; version="1.3"; type="cran"; sha256="1b5wfbiwc542vlmn0l2aka75ss1673z8bcszfrlibg9wwqjxlwk5"; depends=[polynom wavethresh ]; };
hybridEnsemble = derive { name="hybridEnsemble"; version="0.1.1"; type="cran"; sha256="1hn6zfz22mgxv5qpwdgmn7a9snha7hdkbbqq3xicy37j8xypsab5"; depends=[kernelFactory ada rpart ROCR nnet e1071 NMOF GenSA Rmalschains pso AUC soma genalg reportr nnls quadprog tabuSearch glmnet ]; };
hybridHclust = derive { name="hybridHclust"; version="1.0-4"; type="cran"; sha256="1967p6crkrbnlfghd9x1alr2x57nqjl1zh58hhyshgla3xmdmhx5"; depends=[cluster ]; };
hydroApps = derive { name="hydroApps"; version="0.1-1"; type="cran"; sha256="1ycv7l2ywwnx2mgklg6rry7n24jyhi4spvp1xl345yvyn9kf15dz"; depends=[nsRFA ]; };
hydroGOF = derive { name="hydroGOF"; version="0.3-8"; type="cran"; sha256="1ljk2dk5ydsg7qdizyzkbw0b2zdhnb3x9h965d94ygzg8nw5kbak"; depends=[zoo hydroTSM xts ]; };
hydroPSO = derive { name="hydroPSO"; version="0.3-4"; type="cran"; sha256="12md94g78m7m1np36sadx0wxpb149pn5gd8yj2kw7fphb8g6a218"; depends=[Hmisc sp lattice zoo lhs ]; };
hydroTSM = derive { name="hydroTSM"; version="0.4-2-1"; type="cran"; sha256="0z5xw25w2fn67x2dw61msfdnp2dr2s2yi525fcjxn77339x9ksfr"; depends=[zoo xts e1071 gstat automap sp ]; };
hydrogeo = derive { name="hydrogeo"; version="0.2-3"; type="cran"; sha256="1kvzpdjrzbxy4rbfhjqmxdipaamd2rjdyxjv6vfxv1ixs1bm8cwm"; depends=[ ]; };
hydrostats = derive { name="hydrostats"; version="0.2.3"; type="cran"; sha256="1hd4jcdkdl546kqvx9swnqn7gjvd7ppz034cqflpckhn68rc62g7"; depends=[ ]; };
hyperSpec = derive { name="hyperSpec"; version="0.98-20150304"; type="cran"; sha256="0fjww2h6vlm53dsnaxb3i11cmary1w8l0jr9c5dy16y7n9cc3hqb"; depends=[lattice ggplot2 mvtnorm latticeExtra svUnit ]; };
hyperdirichlet = derive { name="hyperdirichlet"; version="1.4-9"; type="cran"; sha256="03c2xgfhfbpn1za84ajhvm0i5cpmfnz1makidrr2222addgyp9zx"; depends=[aylmer abind mvtnorm cubature ]; };
hyperdraw = derive { name="hyperdraw"; version="1.18.0"; type="bioc"; sha256="18l0lcwaki5fqw4hmf481irmikgc45a5n7h225zvh5j78ci207mj"; depends=[graph hypergraph Rgraphviz ]; };
hypergea = derive { name="hypergea"; version="1.2.3"; type="cran"; sha256="13a8r7f2qq7wi0h7jrg29mn573njzi1rwna0ch9sj8sdy8w26r6w"; depends=[ ]; };
hypergeo = derive { name="hypergeo"; version="1.2-9"; type="cran"; sha256="0ydwza0h8ykzbrsvvp4wd5jiy05rx5bj93c7bplx68j3c68c9f1q"; depends=[elliptic contfrac ]; };
hypergraph = derive { name="hypergraph"; version="1.38.1"; type="bioc"; sha256="05w2l5y16xrw309hsgy283qn48gn95l6c754jiwxkmn2cap8zqwp"; depends=[graph ]; };
hypervolume = derive { name="hypervolume"; version="1.2.2"; type="cran"; sha256="1nc5hybw5aa5pdrf9j1jv6d69q1im7whz0d05rmyskcayy2x3pyi"; depends=[Rcpp rgl MASS geometry pdist Rcpp ]; };
hypothesestest = derive { name="hypothesestest"; version="1.0"; type="cran"; sha256="0g8sm386m1zm9i3900r62x83wb600cy8hqk7dlvbx6wcgrxg82sm"; depends=[ ]; };
hysteresis = derive { name="hysteresis"; version="2.5"; type="cran"; sha256="1b1dd2367pjbg4jnn65l2jcj38ljz7adpdg8f5b9rj1rw7qgikfl"; depends=[car msm MASS ]; };
hzar = derive { name="hzar"; version="0.2-5"; type="cran"; sha256="000l4ki3hvznnhkxc5j422h5ifnsfqalv666j48yby1hsf1lc3kg"; depends=[MCMCpack foreach coda ]; };
iASeq = derive { name="iASeq"; version="1.10.0"; type="bioc"; sha256="0m1i6f0ngk94kr8wmanhf26g6pnym0lcvak82nmprdzhnkxh8y9c"; depends=[ ]; };
iBATCGH = derive { name="iBATCGH"; version="1.2"; type="cran"; sha256="0py83q8fcrh0kjysvljx22b7s2gsccq19rzvwf3alq8vl59sm48i"; depends=[Rcpp msm Rcpp RcppArmadillo ]; };
iBBiG = derive { name="iBBiG"; version="1.10.0"; type="bioc"; sha256="0d0d0v6fn6xsm6j4p2z924sspxvs1kdf93vsn5wwgfb86rh205sk"; depends=[biclust xtable ade4 ]; };
iBMQ = derive { name="iBMQ"; version="1.6.0"; type="bioc"; sha256="0d6w6b276p48c65h4zk6dfzmn9i6vsam5lry9p7pyz6xzmdbx84z"; depends=[Biobase ggplot2 ]; };
iBUGS = derive { name="iBUGS"; version="0.1.4"; type="cran"; sha256="0vsxy8pnbix0rg7ksgywx7kypqb5ngkxhldh3cisjkvdv638ybps"; depends=[R2WinBUGS gWidgetsRGtk2 ]; };
iC10 = derive { name="iC10"; version="1.1.2"; type="cran"; sha256="1ncxdjw9ary0bs3fvnvyqp356gi4wa177sllkizq71fzn75a03x3"; depends=[pamr iC10TrainingData ]; };
iC10TrainingData = derive { name="iC10TrainingData"; version="1.0.1"; type="cran"; sha256="1x1kgxiib9l7whm2kmbv1s912hgpl7rdpqpn67nlkiswnr27hqn4"; depends=[ ]; };
iChip = derive { name="iChip"; version="1.20.0"; type="bioc"; sha256="13rs1j0l9nh5dir725kcbzhp6b741gn8xnv67w5pj9bmx3q1njkk"; depends=[limma ]; };
iCluster = derive { name="iCluster"; version="2.1.0"; type="cran"; sha256="09j36xv87d382m5ijkhmp2mxaajc4k97cf9k1hb11ksk7fxdqz6r"; depends=[lattice caTools gdata gtools gplots ]; };
iClusterPlus = derive { name="iClusterPlus"; version="1.2.0"; type="bioc"; sha256="1f4hg8phzza2dlw7svabbpxwyjplc3xxzzd267axvq4pkxyz7f5z"; depends=[ ]; };
iDynoR = derive { name="iDynoR"; version="1.0"; type="cran"; sha256="01702vl10191mbq2wby1m0y6h8i6y6ic4pa83d27cg3yccsrhziz"; depends=[XML vegan ]; };
iFad = derive { name="iFad"; version="3.0"; type="cran"; sha256="0jrl9bayihp3wb4k5w9kc71qlsdxk7vl83ydfibx2bg79c4hf3cs"; depends=[Rlab MASS coda ROCR ]; };
iFes = derive { name="iFes"; version="1.0"; type="cran"; sha256="0in6wy6w567188gylnlvcsk3r3w2nln9h60rj7ng1qwqawrvgwxp"; depends=[ROCR doParallel foreach ]; };
iGasso = derive { name="iGasso"; version="1.2"; type="cran"; sha256="123487slizsmw5b0imwqll8n03navx30kvawr6jfibbjfdd8vfn7"; depends=[lattice CompQuadForm ]; };
iPAC = derive { name="iPAC"; version="1.10.0"; type="bioc"; sha256="0dav5mrfk9gy07lavf2f7am78zb3jcy4scbglajr7bf212v16awj"; depends=[gdata scatterplot3d Biostrings multtest ]; };
iRefR = derive { name="iRefR"; version="1.13"; type="cran"; sha256="17kjfga62xc4s1kii5clxszbag2dr1dyxfm7jasr20prx28ya6pp"; depends=[igraph graph RBGL ]; };
iRegression = derive { name="iRegression"; version="1.2"; type="cran"; sha256="1fn25xnrvgx2ayhss136rxn1h3c9pvq2gmb5kbp92vsf07klvh6v"; depends=[mgcv ]; };
iRepro = derive { name="iRepro"; version="1.0"; type="cran"; sha256="1knncn47pl411r31z1r5ipsiyagcpjbc2gb972n7l3539pcpf0zy"; depends=[ ]; };
iSeq = derive { name="iSeq"; version="1.18.0"; type="bioc"; sha256="14pdjh6i0xr6ihy7jz30prwv2s9q5wib8d5s1crpk72bz9dqbn59"; depends=[ ]; };
iWeigReg = derive { name="iWeigReg"; version="1.0"; type="cran"; sha256="09ajbqllr4ajmpk8qs6qw019fx8a7vsabm37867zycssn77z9nc8"; depends=[MASS trust ]; };
ibd = derive { name="ibd"; version="1.2"; type="cran"; sha256="0681v7lgx697yj2d60cw3p5axbbaxanzj291vdf7ailn7300p1ms"; depends=[lpSolve MASS car lsmeans multcompView ]; };
ibdreg = derive { name="ibdreg"; version="0.2.5"; type="cran"; sha256="1kaa5q1byi30wzr0mw4w2cv1ssxprzcwf91wrpqwkgcsdy7dkh2g"; depends=[ ]; };
ibeemd = derive { name="ibeemd"; version="1.0.1"; type="cran"; sha256="115z13q02gzixziknix2l53mi12zzg30ra9h35pv6qzrr11ra1ic"; depends=[fields deldir rgeos sp spdep ]; };
ibelief = derive { name="ibelief"; version="1.1"; type="cran"; sha256="164cd68qq0z68n5j0b192krpk73y8cy15wr5wnb52rzxv5k7rfd4"; depends=[ ]; };
ibh = derive { name="ibh"; version="1.14.0"; type="bioc"; sha256="05kiqbfkd6a865y7ckn2hv3kagyab91i57f27327b42hqzi3v7dy"; depends=[ ]; };
ibmdbR = derive { name="ibmdbR"; version="1.36.7"; type="cran"; sha256="0v6l8cm0sww2gm8yal4ffk2wcxfnvfsd76i92f2khank7bhga06r"; depends=[RODBC MASS ]; };
ibr = derive { name="ibr"; version="1.4.5"; type="cran"; sha256="0nw2j232br06l30v3cn4qcr25vbh911v2mz7nfail40sqxc6wwc4"; depends=[ ]; };
ic_infer = derive { name="ic.infer"; version="1.1-5"; type="cran"; sha256="0nmx7ijczzvrv1j4321g5g5nawzll8srf302grc39npvv1q17jyz"; depends=[quadprog mvtnorm boot kappalab ]; };
ic50 = derive { name="ic50"; version="1.4.2"; type="cran"; sha256="1a5ddmbdfr3ls132fvalbkh4yaawv9k58rgpy54s5qddrm6aas2s"; depends=[ ]; };
ica = derive { name="ica"; version="1.0-0"; type="cran"; sha256="009xv1ycgbnw6ysx1wxrgygny7qa2wd2mcjrg2fwxg958mzyrx4z"; depends=[ ]; };
icaOcularCorrection = derive { name="icaOcularCorrection"; version="3.0.0"; type="cran"; sha256="1vmvarc2apipd0vlhprc5wpgh8i38m5myj1gqdymjrnky0azq17f"; depends=[fastICA mgcv ]; };
icamix = derive { name="icamix"; version="1.0.2"; type="cran"; sha256="0rpqx9q5p3nb5gd76zlkqls52a8qiw7y9r26jwxs71nxl85clqcs"; depends=[Rcpp Rcpp RcppArmadillo ]; };
icapca = derive { name="icapca"; version="1.1"; type="cran"; sha256="131gdrk8vsbac0krmsryvsp21bn9hzxqxq847zn16cxjf6y5i3xb"; depends=[ ]; };
iccbeta = derive { name="iccbeta"; version="1.0"; type="cran"; sha256="0zsf2b5nrv39pssi5walf82892fr8p1f802c96hjjknh78q7gh0h"; depends=[lme4 Rcpp Rcpp RcppArmadillo ]; };
icd9 = derive { name="icd9"; version="1.2"; type="cran"; sha256="0d0dgd5951chyfimzjb00cphdvqzml8p8wr7sad3qfhv44dsypn7"; depends=[Rcpp checkmate Rcpp ]; };
icenReg = derive { name="icenReg"; version="1.1.1"; type="cran"; sha256="0q1h94r6sv56jxrg1lxc8ms1drrcrqf7k888jb63qmg4wscp33bi"; depends=[survival foreach ]; };
icensmis = derive { name="icensmis"; version="1.2.1"; type="cran"; sha256="1h4l9irip4hv34hr92j8756qgmy455mfdblr7ypgsgvr27cgax8h"; depends=[Rcpp Rcpp ]; };
idbg = derive { name="idbg"; version="1.0"; type="cran"; sha256="1rxmj04hswxybrg7dfib3mjy8v8mdiv13zwbscp2q55z55hhf1m5"; depends=[ ]; };
identity = derive { name="identity"; version="0.2-1"; type="cran"; sha256="1j5wb5cj5j49in2g6r1shdm4ri4cfzj22hpqazvcmq4dm291sdi9"; depends=[ ]; };
idiogram = derive { name="idiogram"; version="1.42.0"; type="bioc"; sha256="1k257rdqxqa8mncdanzjy5vcmp7l3jzfzr5sbcpr1fml30jpljmh"; depends=[Biobase annotate plotrix ]; };
idr = derive { name="idr"; version="1.2"; type="cran"; sha256="05nvgw1xdg670bsjjrxkgd1mrdkciccpw4krn0zcgdf2r21dzgwb"; depends=[ ]; };
ieeeround = derive { name="ieeeround"; version="0.2-0"; type="cran"; sha256="0xaxrlalyn8w0w4fva8fd86306nvw3iyz44r0hvay3gsrmgn3fjh"; depends=[ ]; };
ifa = derive { name="ifa"; version="7.0"; type="cran"; sha256="1cxafd7iwvyidzy27lyk1b9m27vk785ipj9ydkyx9z1v0zna2wnl"; depends=[mvtnorm ]; };
ifs = derive { name="ifs"; version="0.1.4"; type="cran"; sha256="0fzani8rnn4rdwlghq967hhi4zfjnk3gwpk3v6wys738xj7yfwp1"; depends=[ ]; };
ifultools = derive { name="ifultools"; version="2.0-1"; type="cran"; sha256="16lrmajyfa15akgjq71w9xlfsr4y9aqfw7y0jf6gydaz4y6jq9b9"; depends=[splus2R MASS ]; };
ig_vancouver_2014_topcolour = derive { name="ig.vancouver.2014.topcolour"; version="0.1.2.0"; type="cran"; sha256="0yclvm6xppf4w1qf25nf82hg1pliah68z7h3f683svv0j62q748h"; depends=[ ]; };
igraph = derive { name="igraph"; version="0.7.1"; type="cran"; sha256="1nvb30zjjw861idbd8zap9qqg22k87zdi6qqvjf1s29v7hkx7kq7"; depends=[Matrix ]; };
igraphdata = derive { name="igraphdata"; version="0.2.2"; type="cran"; sha256="0lmgz9zglz0rn0iyjs9kdcm1xp09kh21sv91wnj74666jp0wsg4x"; depends=[ ]; };
igraphtosonia = derive { name="igraphtosonia"; version="1.0"; type="cran"; sha256="0vy9jnpjp68l8s0hi1l57j9p41c543h3iqv16pwl550f38zqp8j6"; depends=[igraph ]; };
ihs = derive { name="ihs"; version="1.0"; type="cran"; sha256="1c5c9l6kdalympb19nlgz1r9zq17575ivp3zrayb9p6w3fn2i06h"; depends=[maxLik ]; };
iki_dataclim = derive { name="iki.dataclim"; version="1.0"; type="cran"; sha256="1yhvgr8d3j2r8y9c02rzcg80bz4cx58kzybm4rch78m0207wqs7p"; depends=[zoo lubridate climdex_pcic PCICt ]; };
ilc = derive { name="ilc"; version="1.0"; type="cran"; sha256="0hs0nxv7cd300mfxscgvcjag9f2igispcskfknb7sn7p8qvwr5ki"; depends=[demography rainbow forecast date survival ]; };
illuminaio = derive { name="illuminaio"; version="0.8.0"; type="bioc"; sha256="17lcdl401xcf4dc8rs3nz9nrycrvyq1smdk73v4g07mj1mkydbyg"; depends=[base64 ]; };
imageHTS = derive { name="imageHTS"; version="1.16.0"; type="bioc"; sha256="0iq1mhr9ic5hwrylb9ffblk5rfm8vkqvzi4wj69dga5khc3bvi7x"; depends=[EBImage cellHTS2 Biobase hwriter vsn e1071 ]; };
imguR = derive { name="imguR"; version="1.0.0"; type="cran"; sha256="0yhlir0qxi6hjmqlmmklwd4vkymc5bzv9id9dlis1fr1f8a64vwp"; depends=[RCurl httr png jpeg ]; };
import = derive { name="import"; version="1.0.2"; type="cran"; sha256="1m6xnj08faf5ahb0ga4z13x3pwhvw2gh4wg72m9wcfcyr0rp74lx"; depends=[ ]; };
imprProbEst = derive { name="imprProbEst"; version="1.0.1"; type="cran"; sha256="09y8yd9sw0b79ca45ryi7p82vy5s8cx0gg603rlc39lgwcdv45i3"; depends=[inline lpSolve ]; };
impute = derive { name="impute"; version="1.40.0"; type="bioc"; sha256="0m4wfrgax6hxjwb6fgyn9dh0z3vnj1pqwgafyp7ic0ifd3zn7nbg"; depends=[ ]; };
imputeLCMD = derive { name="imputeLCMD"; version="2.0"; type="cran"; sha256="10v3iv1iw6mnss6ry836crq9zdgid2y1h3pvigzjsrmnp5n89mfz"; depends=[tmvtnorm norm pcaMethods impute ]; };
imputeMDR = derive { name="imputeMDR"; version="1.1.2"; type="cran"; sha256="0ds5a4wav9vb9z5nji8hv5l76310rd970xf702fd0ckx1sh6rgd7"; depends=[ ]; };
imputeR = derive { name="imputeR"; version="1.0.0"; type="cran"; sha256="18rx70w7xb33m84ifxl3p599js78pa748c9lmlkic6yqrgsabcip"; depends=[caret reshape2 glmnet pls rda Cubist ridge gbm mboost rpart ]; };
in2extRemes = derive { name="in2extRemes"; version="1.0-1"; type="cran"; sha256="0k5qczs54b7bl71my8xmnqly91g7c5skj0lm2g8dk4hgrx6wwsrf"; depends=[extRemes ]; };
inSilicoDb = derive { name="inSilicoDb"; version="2.2.1"; type="bioc"; sha256="1c4kkcljwvl1xaxr8i23zvf6m73bbs4yydw3rvimbn39a55dp26g"; depends=[rjson Biobase RCurl ]; };
inSilicoMerging = derive { name="inSilicoMerging"; version="1.10.1"; type="bioc"; sha256="0c73zrxnbpixlmdx24rqrhv7h03agk3ckss64wr03r8zc1z6wrd8"; depends=[Biobase ]; };
inTrees = derive { name="inTrees"; version="1.1"; type="cran"; sha256="1b88zy4rarcx1qxzv3089gzdz1smga6ssj8cxxccyyzci6px85j1"; depends=[RRF arules gbm xtable ]; };
inarmix = derive { name="inarmix"; version="0.4"; type="cran"; sha256="11a1vaxq22d5lab07jp5pw0znkaqj6bmkn6vsx62y6m4mmqk04yr"; depends=[Matrix Rcpp Rcpp ]; };
incReg = derive { name="incReg"; version="1.0"; type="cran"; sha256="1kckx64hn8g9wvjg7g9xild5hclim1rs7z2m7rgmbdwlbayxpwgv"; depends=[car ]; };
indicoio = derive { name="indicoio"; version="0.3"; type="cran"; sha256="04c2j4l103fiiibf83z7iq95wfnlv9rj46cyp9xy68bzqkbwdi3m"; depends=[httr rjson stringr png ]; };
indicspecies = derive { name="indicspecies"; version="1.7.5"; type="cran"; sha256="16m4pnfnmaskin4aaalm2cmv3vwzg94045max8nhkgw02kpskz1r"; depends=[permute ]; };
ineq = derive { name="ineq"; version="0.2-13"; type="cran"; sha256="09fsxyrh0j7mwmb5hkhmrzgcy7kf85jxkh7zlwpgqgcsyl1n91z0"; depends=[ ]; };
inference = derive { name="inference"; version="0.1.0"; type="cran"; sha256="0j92isfkbhk13yx2hd3a5dd7ikcbgjc04zisd1n5kmg6ajw2aj6r"; depends=[sandwich ]; };
inferference = derive { name="inferference"; version="0.4.61"; type="cran"; sha256="02rsirwh4arqkgxpw3vnd0m2k055ir2074mlz27gbzmwz0ycpfzk"; depends=[numDeriv lme4 Formula ]; };
inflection = derive { name="inflection"; version="1.1"; type="cran"; sha256="1nb1pf07c371vwgplfyjs3q1iqgb5hyk9czxqrjiy18g8p7zdln2"; depends=[ ]; };
influence_ME = derive { name="influence.ME"; version="0.9-5"; type="cran"; sha256="0sjrajhc198g391xa78l4gicmpyq4h7dnrnncji3qpgbqi772pkn"; depends=[lme4 Matrix lattice ]; };
influence_SEM = derive { name="influence.SEM"; version="1.4"; type="cran"; sha256="1grsnp8xwmhh9qx0yc5fy8b3g4i4cfqbg6sfzbmn39si2z34wrxw"; depends=[lavaan ]; };
infoDecompuTE = derive { name="infoDecompuTE"; version="0.5.1"; type="cran"; sha256="1aigd1fvpdqjplq1s1js0sy8px68q73lbp5q591rn52c77smdhaj"; depends=[MASS ]; };
informR = derive { name="informR"; version="1.0-5"; type="cran"; sha256="16pz47wlr1gr8z5hdnrjpczm967khqiqgdfiw15a0bby6qdvni2y"; depends=[abind relevent ]; };
infotheo = derive { name="infotheo"; version="1.2.0"; type="cran"; sha256="18xacczfq3z3xpy434js4nf3l19lczngzd0lq26wh22pvg1yniwv"; depends=[ ]; };
infra = derive { name="infra"; version="0.1.2"; type="cran"; sha256="0jycnnmrrjq37lv67xbvh6p63d6l4vbgf3i1z9y7r75d6asspzn1"; depends=[ ]; };
infuser = derive { name="infuser"; version="0.1"; type="cran"; sha256="0hqvw42a92jb3ql34zn5z2v4q7rmq115qx4a2lcfvfp6mpcbq7al"; depends=[ ]; };
infutil = derive { name="infutil"; version="1.0"; type="cran"; sha256="02d0hfbkdqjj0lm1fzwwxy60831kbcjn2m4rfblpib0krkbpz72n"; depends=[ltm ]; };
inline = derive { name="inline"; version="0.3.14"; type="cran"; sha256="0cf9vya9h4znwgp6s1nayqqmh6mwyw7jl0isk1nx4j2ijszxcd7x"; depends=[ ]; };
inlinedocs = derive { name="inlinedocs"; version="2013.9.3"; type="cran"; sha256="13vk6v9723wlfv1z5fxmvxfqhaj68h0x3s2qq9j6ickr4wakb4ar"; depends=[ ]; };
insideRODE = derive { name="insideRODE"; version="2.0"; type="cran"; sha256="1ffndk8761cpkririb3g1qsq9nwmh82lcrpql9i5fksdprvdjzcw"; depends=[deSolve nlme lattice ]; };
insol = derive { name="insol"; version="1.1.1"; type="cran"; sha256="0zbawkp4qb0kqb7y9ibiyy8sa9rfgbzwmcdswx6s87p0h7brrqn6"; depends=[ ]; };
install_load = derive { name="install.load"; version="1.0.3"; type="cran"; sha256="0fvync9v712r4l6053bncl8a0rgjq0nfnrnpc0yxc2m3mxf5hzvr"; depends=[ ]; };
insuranceData = derive { name="insuranceData"; version="1.0"; type="cran"; sha256="0wryh8i1v3bnpbqn6d6dpxr9bwwl6mnh5cb5igz0yanh4m1rx96w"; depends=[ ]; };
intReg = derive { name="intReg"; version="0.2-8"; type="cran"; sha256="0cqf6lbn8aiyj5j7gg1qz80i477bfxbmxp7fjs25ish4bcdsbjja"; depends=[miscTools maxLik sets ]; };
intRegGOF = derive { name="intRegGOF"; version="0.85-1"; type="cran"; sha256="0fyvhl6jmi6krfbimsq61dhixlz9h9jxk4yjvwbx2vl8d9fnnr54"; depends=[ ]; };
intamap = derive { name="intamap"; version="1.3-37"; type="cran"; sha256="17l1bifks0vsk0a3bj2g4w8qrvhmdh0p145kmd09223x9yc4mc9v"; depends=[sp gstat automap mvtnorm MASS evd ]; };
intamapInteractive = derive { name="intamapInteractive"; version="1.1-10"; type="cran"; sha256="073k6sdds40fmlbw1xnp3x5sc9qdyq2s1bhp7av4jjm930hsvsrn"; depends=[intamap spcosa spatstat automap gstat ]; };
intansv = derive { name="intansv"; version="1.6.2"; type="bioc"; sha256="11zvsgpyl712qdjz8mfkbyl4d09f6lb0wbnr3c50crw76flhp5m2"; depends=[plyr ggbio GenomicRanges BiocGenerics IRanges ]; };
intcox = derive { name="intcox"; version="0.9.3"; type="cran"; sha256="1m1lzmymh2pk570k6nxq3nj7wxkvs1s3nvz8cb456fnv72ng8fap"; depends=[survival ]; };
interAdapt = derive { name="interAdapt"; version="0.1"; type="cran"; sha256="06ki36l1mrnd9lbm696a6gapr488dz8na4wvl9y1fif9hfv4zk25"; depends=[shiny knitcitations RCurl mvtnorm knitr ]; };
interactiveDisplay = derive { name="interactiveDisplay"; version="1.4.1"; type="bioc"; sha256="14mpww5ijwlkdyl3hxdyd95zik0s5vrb1dmhdpfhcbd18xj6gkcs"; depends=[BiocGenerics interactiveDisplayBase shiny RColorBrewer ggplot2 reshape2 plyr gridSVG XML Category AnnotationDbi ]; };
interactiveDisplayBase = derive { name="interactiveDisplayBase"; version="1.4.0"; type="bioc"; sha256="0ahd8ja8f6d7lcn6kz9wm8g7ly5ngda8zva44120r6df3n6ij2dg"; depends=[BiocGenerics shiny ]; };
interferenceCI = derive { name="interferenceCI"; version="1.1"; type="cran"; sha256="19ky10nn6ygma6yy5h1krxx61aikh3yx5y39p68a944mz8f72vsn"; depends=[gtools ]; };
intergraph = derive { name="intergraph"; version="2.0-1"; type="cran"; sha256="03ycay3x4wd3j7r0mad9qgi4h77krapg613ans3jf9qa4ys2njlv"; depends=[network igraph ]; };
internetarchive = derive { name="internetarchive"; version="0.1.2"; type="cran"; sha256="08gbkqbzx963c1jy3a540fsd0ff9ylr7la1clwjn46lp4cc4yv1h"; depends=[httr jsonlite dplyr ]; };
interpretR = derive { name="interpretR"; version="0.2.2"; type="cran"; sha256="048qhq9mf3qna48v8ml7hfa7imrsrhrl0hrb44arh1ik3i5a2xx6"; depends=[randomForest AUC ]; };
interval = derive { name="interval"; version="1.1-0.1"; type="cran"; sha256="1lln9jkli28i4wivwzqrsxvv2n15560f7msjy5gssrm45vxrxms8"; depends=[survival perm Icens MLEcens ]; };
intervals = derive { name="intervals"; version="0.15.0"; type="cran"; sha256="0lvxaq5ia7hj65n00awz454a2vdxpskxjw45wsakgh0sc60hk8yz"; depends=[ ]; };
interventionalDBN = derive { name="interventionalDBN"; version="1.2.2"; type="cran"; sha256="0wpp4bfi22ncvl0vdivniwwvcqgnpifpgxb4g5jbyvr0z735cd9w"; depends=[ ]; };
intpoint = derive { name="intpoint"; version="1.0"; type="cran"; sha256="0zcv64a0clgf1k3ylh97q1w5ddrv227846gy9a68h6sgwc0ps88b"; depends=[ ]; };
introgress = derive { name="introgress"; version="1.2.3"; type="cran"; sha256="1j527gf7pmfy5365p2j2jbxq0fb0xh2992hj4d7dxapn4psgmvsk"; depends=[nnet genetics RColorBrewer ]; };
intsvy = derive { name="intsvy"; version="1.6"; type="cran"; sha256="1bv8qap3d8yssfm80ilrn6wg3207hiy34sd92wl64bwpvqyi6i7p"; depends=[memisc foreign plyr ggplot2 reshape ]; };
invGauss = derive { name="invGauss"; version="1.1"; type="cran"; sha256="0l93pk2sh74dd6a6f3970nval5p29sz47ynzqnphx0wl3yfmmg9c"; depends=[survival optimx ]; };
inveRsion = derive { name="inveRsion"; version="1.14.0"; type="bioc"; sha256="1zmb0h949sc9xvyc3qjc8xhg1iq9lpff3h98zn6zq4lr9hv542w3"; depends=[haplo_stats ]; };
investr = derive { name="investr"; version="1.3.0"; type="cran"; sha256="057wq6c5r7hrg1nz7460alsjsk83cvac2d1d4mjjx160q3m0zcvj"; depends=[nlme ]; };
io = derive { name="io"; version="0.2.2"; type="cran"; sha256="07vifr1h8ldiam8ngp6yrx6mvdnmmnnsq3hcs2pyphws6hgdmwwh"; depends=[filenamer stringr ]; };
ionflows = derive { name="ionflows"; version="1.1"; type="cran"; sha256="1k9yz82hbjwljyg4cmi675ppykrc2yq9md8x1hhkfxmp070whcxl"; depends=[Biostrings ]; };
iontree = derive { name="iontree"; version="1.12.0"; type="bioc"; sha256="1z62n0y2x569s5f3dxrbya70sbx5zjfhv17awnzw4bxsl2iwdlsw"; depends=[rJava RSQLite XML ]; };
iosmooth = derive { name="iosmooth"; version="0.91"; type="cran"; sha256="03kyzhcl5lipaiajs53dc8jaazxv877nl0njbq88cp4af3gd6s82"; depends=[ ]; };
ipdmeta = derive { name="ipdmeta"; version="2.4"; type="cran"; sha256="0k9wqpmrvqdh73brmdzv86a2dbyddjyyyqzqgp1vqb3k48k009s2"; depends=[nlme ]; };
ipdw = derive { name="ipdw"; version="0.2-2"; type="cran"; sha256="1mvxs1039hv9m36jhi11qvjysmpmh7ms522q9phwmljv2nnl7ylz"; depends=[gdistance sp raster ]; };
ipfp = derive { name="ipfp"; version="1.0"; type="cran"; sha256="1hpfbgygnpnl3fpx7zl728jyw00y3kbbc5f0d407phm56sfqmqwi"; depends=[ ]; };
iplots = derive { name="iplots"; version="1.1-7"; type="cran"; sha256="052n8jdhj8gy72xlr23dwd5gqycqnph7s1djg1cdx2f05iy693y6"; depends=[rJava png ]; };
ipred = derive { name="ipred"; version="0.9-4"; type="cran"; sha256="0rig1sj0jqv2rrkgcr6fhr8477wxirxwnwk533l7rn6qr90prjwp"; depends=[rpart MASS survival nnet class prodlim ]; };
ips = derive { name="ips"; version="0.0-7"; type="cran"; sha256="0r4394xbchv6czad9jz4ijnfz8ss3wfdvh7ixrdxic2xrw0ic90v"; depends=[ape colorspace XML ]; };
iqLearn = derive { name="iqLearn"; version="1.3"; type="cran"; sha256="05f2spnzyqzbbgwz9llf4x5r6fsz5gxa1ckykv6wxg4sirdqccm1"; depends=[ ]; };
irace = derive { name="irace"; version="1.06"; type="cran"; sha256="10dizzjds1aszvyh0fn6ahqvgn2x6sg3lwb7rca8zhgphrjg92bl"; depends=[ ]; };
irlba = derive { name="irlba"; version="1.0.3"; type="cran"; sha256="1h2ymk9hg9xj2075w715742j23jl7kqa4cgzl1jvr48gcysq5byy"; depends=[Matrix ]; };
irr = derive { name="irr"; version="0.84"; type="cran"; sha256="0njxackqj8hyf9j1yszwxbnaxgp27fc2bwyyf7dip72wc12f81n5"; depends=[lpSolve ]; };
irtProb = derive { name="irtProb"; version="1.2"; type="cran"; sha256="12wnvbzkh0mx9i3iyh1v2n2f2wjsjj7ad3dgv9xj949x4nbz16j0"; depends=[lattice moments ]; };
irtoys = derive { name="irtoys"; version="0.1.7"; type="cran"; sha256="11nz675haigs6vg08qjibs8yccy2pbz0b9r8761fs8gw3n7bpfz4"; depends=[sm ltm ]; };
irtrees = derive { name="irtrees"; version="0.1.0"; type="cran"; sha256="03jmfyx1ia987zhi74fmmcdz70wnm8c7z5z30rwzd1cs11dijjwv"; depends=[ ]; };
isa2 = derive { name="isa2"; version="0.3.4"; type="cran"; sha256="12qbfvcj8whhy7d68l7ra5wnkpx87ldl6mir7r5n8afb3fkww0kp"; depends=[lattice ]; };
isdals = derive { name="isdals"; version="2.0-4"; type="cran"; sha256="15p432fskdz2r8523cw122mfhvrq8vdsdsrd0kz9yfin4b5z3zfh"; depends=[ ]; };
isingLenzMC = derive { name="isingLenzMC"; version="0.2.3"; type="cran"; sha256="1rkry39yhxvq3ypnnxgdv15kd5w0l5w56ywmkcsgkwlxdfrvlyn2"; depends=[ ]; };
ismev = derive { name="ismev"; version="1.40"; type="cran"; sha256="1isxgq62q6dk50c3w1l0j4nfgwsj6c2wnx2sm3ncxzlqml0ih6jn"; depends=[mgcv ]; };
isobar = derive { name="isobar"; version="1.12.2"; type="bioc"; sha256="1paxykz7b400cxmdbwh0xw3crvlrd63i612w1bkm8n5d508wij8k"; depends=[Biobase plyr distr ]; };
isocir = derive { name="isocir"; version="1.1-3"; type="cran"; sha256="1bx68n9wyfs2dcgph66rsy0jw8hjkl5kw212l0563kz3m1nik9sr"; depends=[circular combinat ]; };
isopam = derive { name="isopam"; version="0.9-13"; type="cran"; sha256="0y1yy0922kq5jxyc40gz8sk9vlzwfkfg5swmc6lk4007g9mgc8fm"; depends=[vegan cluster ]; };
isopat = derive { name="isopat"; version="1.0"; type="cran"; sha256="0fznvgycyd35dh7pbq1xhp667gsficlmycn5pcrqcbs89069xr1s"; depends=[ ]; };
isotone = derive { name="isotone"; version="1.0-2"; type="cran"; sha256="0qcad691c1dk61a75813hxbc61jllvfc3j21gn85f0kcf4hn6dnz"; depends=[ ]; };
isotonic_pen = derive { name="isotonic.pen"; version="1.0"; type="cran"; sha256="1lgw15df08f4dhrjjfr0jqkcvxwad92kflj2px526pcxwkj7cj3i"; depends=[coneproj Matrix ]; };
isva = derive { name="isva"; version="1.8"; type="cran"; sha256="09mrvvk09j460dzi45z8hwdpmibfshsii5dcp38g13czr40d48na"; depends=[qvalue fastICA ]; };
iteRates = derive { name="iteRates"; version="3.1"; type="cran"; sha256="1dycmlm3vldc60wz2jjdfbla14383911zfahgal5mx8whxwq95c5"; depends=[partitions VGAM MASS ape apTreeshape geiger gtools ]; };
iterLap = derive { name="iterLap"; version="1.1-2"; type="cran"; sha256="0ixh9aw115496ib0iswfsj97rjcd2f02z116dg57vl9hhzh28f13"; depends=[quadprog randtoolbox ]; };
iterativeBMA = derive { name="iterativeBMA"; version="1.24.0"; type="bioc"; sha256="14ri5m9lk77w5clsh0jsidsx8xwxizky5mrvhk136x20pd13vp8n"; depends=[BMA leaps Biobase ]; };
iterativeBMAsurv = derive { name="iterativeBMAsurv"; version="1.24.0"; type="bioc"; sha256="0wg07ass90ha2z460vddlchw2vjcn6sfzmrwfdjak1b9cckhgg7f"; depends=[BMA leaps survival survival ]; };
iterators = derive { name="iterators"; version="1.0.7"; type="cran"; sha256="1zwqawhcpi95fx4qqj4cy31v5qln2z503f7cvv9v5ch3ard4xxqv"; depends=[ ]; };
iterpc = derive { name="iterpc"; version="0.2.7"; type="cran"; sha256="041gihbcv9i7f1jzvlldkyfm58p86pyv2sf4hbk09xp00azp8ahf"; depends=[Rcpp polynom Rcpp ]; };
itertools = derive { name="itertools"; version="0.1-3"; type="cran"; sha256="1ls5biiva10pb1dj3ph4griykb9vam02hkrdmlr5a5wf660hg6xn"; depends=[iterators ]; };
itertools2 = derive { name="itertools2"; version="0.1.1"; type="cran"; sha256="0yra3x9ddvn5pp3jibm69205zazv81bz0cflw4mdvxpqadaf9f96"; depends=[iterators ]; };
itree = derive { name="itree"; version="0.1"; type="cran"; sha256="164zgr142hcp9plnbccs6m823p4m0prk73bvp54bc7bqnqmc3d9a"; depends=[ ]; };
its = derive { name="its"; version="1.1.8"; type="cran"; sha256="1g9qmdrw7qiw0xiryf7bf5m9prrba7r11jyzprzdglc1akizav8a"; depends=[Hmisc ]; };
itsadug = derive { name="itsadug"; version="0.8"; type="cran"; sha256="1lphbw1d1x1bs625rnr9jl3zyaqr8rka8d0v2v3cf3crywc3lzhn"; depends=[mgcv ]; };
itsmr = derive { name="itsmr"; version="1.5"; type="cran"; sha256="0l9m5is6d6pkpfkihx0jir5iv8zmqqav8vh9bkkpqv5iz61p4kxb"; depends=[ ]; };
ivbma = derive { name="ivbma"; version="1.05"; type="cran"; sha256="0d7kg6pkdx1aj1i6kqs2r7j1klxxwymml63qnrq6a6fia3ck9kk9"; depends=[ ]; };
ivfixed = derive { name="ivfixed"; version="1.0"; type="cran"; sha256="0a26zrkvz0ffq4zxdx5vhr1nvsi9c15s6gvc1zy2pddjz31x2xi5"; depends=[Formula ]; };
ivivc = derive { name="ivivc"; version="0.2.2"; type="cran"; sha256="1qychbszcg9lmbmrnpv65xcv1i5k2xarsa374fs6gw7zlp5nrvap"; depends=[reshape optimx sciplot png deSolve minpack_lm ]; };
ivlewbel = derive { name="ivlewbel"; version="1.1"; type="cran"; sha256="0ykcfikm2i28s3fm6zzx8cjvpwhksg8an0rfr0b35gf7p69brgag"; depends=[gmm plyr lmtest ]; };
ivmodel = derive { name="ivmodel"; version="1.0"; type="cran"; sha256="14ic49vyikx5fiz2ccjmd53f0vcg3jh3fs6fqhl8w3hm9z9x4qvz"; depends=[Matrix ]; };
ivpack = derive { name="ivpack"; version="1.2"; type="cran"; sha256="0cr5acjrn41d3q0b77hlg2jmsbf1msvys9gcavm1blsryg2bc03c"; depends=[AER sandwich lmtest ]; };
ivpanel = derive { name="ivpanel"; version="1.0"; type="cran"; sha256="0irjmkw3nnd8ssidvj23lr0hihlhd9acsbaznh88lknx53ijc2qv"; depends=[Formula ]; };
ivprobit = derive { name="ivprobit"; version="1.0"; type="cran"; sha256="1kijq7k6iv2ybaxb08kqzm2s2k6wp2z50r01kxcq023pmyfjczwy"; depends=[ ]; };
jSonarR = derive { name="jSonarR"; version="1.1.1"; type="cran"; sha256="054q3ly471xa64yyz2as6vkr440ip1y8n5wl6s3zbhqy3bqkdqif"; depends=[RCurl jsonlite ]; };
jaatha = derive { name="jaatha"; version="2.7.0"; type="cran"; sha256="1ibk84x38j03hbdrf9pi0bi025fxlk2ysqxmfrqiqr4zq2rzhbvp"; depends=[phyclust Rcpp reshape2 Rcpp ]; };
jackstraw = derive { name="jackstraw"; version="1.0"; type="cran"; sha256="1irfzivy7c9fb2pr98flx05s5hkk6sid1hkd5b3k9m9mgs6ixbfy"; depends=[corpcor ]; };
jagsUI = derive { name="jagsUI"; version="1.3.1"; type="cran"; sha256="18g755dxmlwv5abjdv3sip5qxpd13sx79f85wb0ji5i4fjax26ky"; depends=[lattice rjags coda ]; };
james_analysis = derive { name="james.analysis"; version="1.0.0"; type="cran"; sha256="01nbwhph22nfl0biwcgvb1q76jp79qj7qfn2fxpyx2dkkhzxzrmv"; depends=[rjson naturalsort ]; };
jiebaR = derive { name="jiebaR"; version="0.5"; type="cran"; sha256="1x41jqc1ai3v1fn9f65dk7k4g2llf3pk9z3bwqihb95qf80mhd4v"; depends=[jiebaRD Rcpp Rcpp ]; };
jiebaRD = derive { name="jiebaRD"; version="0.1"; type="cran"; sha256="1wadpcdca4pm56r8q22y4axmqdbb2dazsh2vlhjy73rpymqfcph4"; depends=[ ]; };
jmetrik = derive { name="jmetrik"; version="1.0"; type="cran"; sha256="0xnbvby03fqbxgg0i0qxrrzjv98783n6d7c1fywj81x487qlj77j"; depends=[ ]; };
jmosaics = derive { name="jmosaics"; version="1.6.0"; type="bioc"; sha256="1kif1ms3v4askg9sf43fgrw8flxpzp36a7pwflnbfg035xkjdwgn"; depends=[mosaics ]; };
joda = derive { name="joda"; version="1.14.0"; type="bioc"; sha256="09xyk761825hpjpffv2d6bmj8snprm9k8fdaslyh4clx0r9nsm13"; depends=[bgmm RBGL ]; };
joineR = derive { name="joineR"; version="1.0-3"; type="cran"; sha256="0q98nswbxk5dz8sazzd66jhlg7hv5x7wyzcvjc6zkr6ffvrl8xj7"; depends=[nlme MASS boot survival lattice statmod gdata ]; };
joint_Cox = derive { name="joint.Cox"; version="1.0"; type="cran"; sha256="1460i8ydwd0ix3slm9bn8jca5b1vs0w2wwx1md4npbmf5ly5x42l"; depends=[ ]; };
jointDiag = derive { name="jointDiag"; version="0.2"; type="cran"; sha256="0y1gzrc79vahfhn4jrj5xys8pmkzxj4by7361730gi347f0frs0a"; depends=[ ]; };
jointPm = derive { name="jointPm"; version="2.3.1"; type="cran"; sha256="1c2cn9sqwfyv9ksd63w8rrz0kh18jm2wv2sfdkgncjb7vfs4hbv9"; depends=[ ]; };
jomo = derive { name="jomo"; version="0.2-0"; type="cran"; sha256="09vccbvy9y5p5w049l2v5qr1xbs915sihpddnrrjr4cc1w17ifzs"; depends=[ ]; };
jpeg = derive { name="jpeg"; version="0.1-8"; type="cran"; sha256="05hawv5qcb82ljc1l2nchx1wah8mq2k2kfkhpzyww554ngzbwcnh"; depends=[ ]; };
js = derive { name="js"; version="0.2"; type="cran"; sha256="1dxyyrmwwq07l6pdqsvxscpciy4h1021h9ymx8hi2vqvv0mdrz76"; depends=[V8 ]; };
jsonlite = derive { name="jsonlite"; version="0.9.16"; type="cran"; sha256="12whrj9shnf8wd3a5yi9zcvinhgvik9nb2wp6202j869jdwxq5ym"; depends=[ ]; };
jtrans = derive { name="jtrans"; version="0.2.1"; type="cran"; sha256="18zggqdjzjhjwmsmdhl6kf35w9rdajpc2nffag4rs6134gn81i3m"; depends=[ ]; };
kSamples = derive { name="kSamples"; version="1.0.1"; type="cran"; sha256="11qylllwpm3rhrzmdlkbdqixpmx4qlvgmfwp9s4jfy5h3q68mfw7"; depends=[SuppDists ]; };
kappaSize = derive { name="kappaSize"; version="1.1"; type="cran"; sha256="0jrjal8cvy2yg0qiyilmv3jl3ib5k9jg8gp2533kdsx4m0sack04"; depends=[ ]; };
kappalab = derive { name="kappalab"; version="0.4-6"; type="cran"; sha256="0dmzy0d7azzfpnzbf8b7a6zgmmfwzfiybz8610asajyfsj36gszl"; depends=[lpSolve quadprog kernlab ]; };
kaps = derive { name="kaps"; version="1.0.2"; type="cran"; sha256="0jg4smbq51v88i3815icb284j97iam09pc52rv3izxa57nv9a0gz"; depends=[survival Formula coin ]; };
kcirt = derive { name="kcirt"; version="0.6.0"; type="cran"; sha256="1gm3c89i5dq7lj8khc12v30j1c0l1gwb4kv24cyy1yw6wg40sjig"; depends=[mvtnorm snowfall corpcor ]; };
kdetrees = derive { name="kdetrees"; version="0.1.5"; type="cran"; sha256="1plf2yp2vl3r5znp5j92l6hx1kgj0pzs7ffqgvz2nap5nf1c6rdg"; depends=[ape distory ggplot2 ]; };
kebabs = derive { name="kebabs"; version="1.0.5"; type="bioc"; sha256="0jphbpbv5r8s0q4f985yvrckjx58g94nw9mccqfsrjlz2ka8kpls"; depends=[Biostrings kernlab Rcpp Matrix XVector S4Vectors e1071 LiblineaR IRanges XVector Biostrings Rcpp S4Vectors ]; };
kedd = derive { name="kedd"; version="1.0.2"; type="cran"; sha256="11mfgjr1pl56y4rcychs8xjgazy3vhg1xasr37fd0g32g7w3lxqg"; depends=[ ]; };
keggorthology = derive { name="keggorthology"; version="2.18.0"; type="bioc"; sha256="0iwwp3zv94ci89l1wd19l4ryjlggq9naairzsifrajnq3ivq07fg"; depends=[graph AnnotationDbi graph DBI graph ]; };
kelvin = derive { name="kelvin"; version="1.2-2"; type="cran"; sha256="0fl2yxc0dpmkhq3f7711gd08i7jlzlfncin1d6q251dfnmwd7rzf"; depends=[Bessel ]; };
kequate = derive { name="kequate"; version="1.4.0"; type="cran"; sha256="0vr45y4f6x3080pf3k53nifavf8mfhikz54nis66c53fs9rp0jwf"; depends=[ltm equateIRT ]; };
kerdiest = derive { name="kerdiest"; version="1.2"; type="cran"; sha256="16xj2br520ls8vw5qksxq9hqlpxlwmxccfk5balwgk5n2yhjs6r3"; depends=[date chron evir ]; };
kernelFactory = derive { name="kernelFactory"; version="0.2.1"; type="cran"; sha256="1vfd1nlkb6cdj88vg8hmgfdfvjwlq0l4mlvkpvf9vznjizfqy5kf"; depends=[randomForest AUC genalg kernlab ]; };
kernlab = derive { name="kernlab"; version="0.9-20"; type="cran"; sha256="0gwl3v8gxidzfmvwa2icqla8ypdgnmvcwxf54iwrvvy2csjx0w27"; depends=[ ]; };
kfigr = derive { name="kfigr"; version="1.1.0"; type="cran"; sha256="1mnnd603s741h1vp99q6d8lwvc46k9hmbhylng66wc7a5j6k8psz"; depends=[knitr ]; };
kimisc = derive { name="kimisc"; version="0.2-1"; type="cran"; sha256="1nbhw1q0p87w4z326wj5b4k0xdv0ybkgcc59b3cqbqhrdx8zsvql"; depends=[plyr ]; };
kin_cohort = derive { name="kin.cohort"; version="0.6"; type="cran"; sha256="13gnjk58m5kya9wj87klwm6h7cdqi61ba6y0cg9k1hgbc1ajy3s8"; depends=[survival ]; };
kinfit = derive { name="kinfit"; version="1.1.13"; type="cran"; sha256="1av33f4wns6qp79wyww70f7fsfybcqm83nby1ia65sjp2dz04dk1"; depends=[ ]; };
kinship2 = derive { name="kinship2"; version="1.6.0"; type="cran"; sha256="06f544yk61i1xq0rm0r5gpzwfl6rvzyg7gz8z86bjyxg0z44h3vy"; depends=[Matrix quadprog ]; };
kintone = derive { name="kintone"; version="0.1.1"; type="cran"; sha256="13c82vkapks9j2crrb4awnhl60ld8b1r7xmy9yv4zzch868kcl5g"; depends=[RCurl rjson ]; };
kissmig = derive { name="kissmig"; version="1.0-3"; type="cran"; sha256="1pi1x3gdbqrhr1km1hqj15k8wyrgs697fnxgjgxga1irbn8bi482"; depends=[raster ]; };
kitagawa = derive { name="kitagawa"; version="2.1-0"; type="cran"; sha256="1ddyd0rwwmdpbq823qass5dlp2lvi9d64wpl61ik6fghms2p9ryr"; depends=[kelvin ]; };
kknn = derive { name="kknn"; version="1.2-5"; type="cran"; sha256="0c1qnn1lnypjybk2p0dpfrg6hzxflzbwmjb5biq45r57bzji7im7"; depends=[igraph Matrix ]; };
klaR = derive { name="klaR"; version="0.6-12"; type="cran"; sha256="10nkqb1zradbvifgv1fm373mhyydgdjjgmnw2442a2lark59z3vs"; depends=[MASS combinat ]; };
klausuR = derive { name="klausuR"; version="0.12-10"; type="cran"; sha256="12fjs4dnwaki8sz718xgsg8qrqhsgf87cs0bylf0p3f5k8hrmk4b"; depends=[xtable psychometric polycor ]; };
klin = derive { name="klin"; version="2007-02-05"; type="cran"; sha256="0j0hr4bppzk754a66q5z42h7jzfavqpxgl7y266804aginfqm1ax"; depends=[Matrix ]; };
km_ci = derive { name="km.ci"; version="0.5-2"; type="cran"; sha256="1l6kw8jppaa1802yc5pbfwwgac56nhwc9p076ivylhms4w7cdf8v"; depends=[survival ]; };
kmc = derive { name="kmc"; version="0.1-2"; type="cran"; sha256="16lv8wk24cp91qg5202zhfmdhg83qw8bwiycknaml5ki820ffdlx"; depends=[rootSolve emplik Rcpp Rcpp ]; };
kmconfband = derive { name="kmconfband"; version="0.1"; type="cran"; sha256="10n5w8k57faqcclwshs4m66i2i5b70i6f3xq5nqlgsi2ldkysbc9"; depends=[survival ]; };
kmi = derive { name="kmi"; version="0.5.1"; type="cran"; sha256="0519mi7kwrsfpili7y8nmyiky6qwf8xkd0n7cwj02c8d119bk9sa"; depends=[survival mitools ]; };
kml = derive { name="kml"; version="2.3"; type="cran"; sha256="0954z6gy5qbi117vfxipcz3cq91qq4g968xzcphb1dd7w328wvb1"; depends=[clv longitudinalData ]; };
kml3d = derive { name="kml3d"; version="2.3"; type="cran"; sha256="0dlpxp8bbrwgblrl1hnc1ip592abc6sdcl87s4m6jwgfaxjcq7a8"; depends=[clv rgl misc3d longitudinalData kml ]; };
kmlcov = derive { name="kmlcov"; version="1.0.1"; type="cran"; sha256="09s9ganfsnwp22msha78g6pjr45ppyfyqjf6ci64w3w15q5qlcd9"; depends=[ ]; };
kmodR = derive { name="kmodR"; version="0.1.0"; type="cran"; sha256="1y1pqrrralklflyb1dw8bslfcyqrw8ryijfbhkwba7ykpxcf9fda"; depends=[ ]; };
knitcitations = derive { name="knitcitations"; version="1.0.5"; type="cran"; sha256="1a9lw9gdb31akdwiif5xzbs4s0s9xkhm3n735xnkiyc9n6afwzn3"; depends=[RefManageR digest httr ]; };
knitr = derive { name="knitr"; version="1.10.5"; type="cran"; sha256="1qxpsnjwb4bdq44k3nglfrznpvqaqj18njx4imbpk3njzcjif7a7"; depends=[evaluate digest formatR highr markdown stringr yaml ]; };
knitrBootstrap = derive { name="knitrBootstrap"; version="0.9.0"; type="cran"; sha256="1cw5dvhjiypk6847qypxphfl9an54qjvd6qv029znhwijsg56mmg"; depends=[knitr markdown ]; };
knnGarden = derive { name="knnGarden"; version="1.0.1"; type="cran"; sha256="1gmhgr42l6pvc6pzlq5khrlh080795b0v1l5xf956g2ckgk5r8m1"; depends=[cluster ]; };
knnIndep = derive { name="knnIndep"; version="2.0"; type="cran"; sha256="1fwkldgs2994svf3sj90pwsfx6r22cwwa22b30hdmd24l8v9kzn7"; depends=[ ]; };
knncat = derive { name="knncat"; version="1.2.2"; type="cran"; sha256="1d392910y3yy46j8my1a7m0xkij2rc6vwq5fg22qk00vqli8drz2"; depends=[ ]; };
knockoff = derive { name="knockoff"; version="0.2.1"; type="cran"; sha256="197icnyxxmi6f0v0p2zm4910grbgkfjkd3xql79ny04ik047v0kp"; depends=[glmnet RJSONIO ]; };
koRpus = derive { name="koRpus"; version="0.05-5"; type="cran"; sha256="03rw0yb67y652j8hcr5m4c0py0rr3gp87y0hdxpypd81rkikwhfm"; depends=[ ]; };
kobe = derive { name="kobe"; version="1.3.2"; type="cran"; sha256="1z64jwrq6ddpm22cvk2swmxl1j7qyz0ddk3880c7zfq6gk7f9bxl"; depends=[plyr reshape ggplot2 MASS emdbook coda ]; };
kofnGA = derive { name="kofnGA"; version="1.1"; type="cran"; sha256="1ykk3rmyrv8c556rl3wp0i1d522dghaq4qk5acg06hhk9j9962fg"; depends=[ ]; };
kohonen = derive { name="kohonen"; version="2.0.18"; type="cran"; sha256="08inl7rx30gjpqbdbhccy65bingimzgi4lckfvs0r6lba04a1f8l"; depends=[class MASS ]; };
kolmim = derive { name="kolmim"; version="0.2"; type="cran"; sha256="1cq1miny83shxas4zijcbzcnxv29vjyxj3pip8brf52sjvrj4max"; depends=[ ]; };
kpodclustr = derive { name="kpodclustr"; version="1.0"; type="cran"; sha256="1fywgdj4q3kg8y9lwnj6vxg9cwgs5ccwj6m3knfgg92f8ghnsbsw"; depends=[clues ]; };
kriging = derive { name="kriging"; version="1.1"; type="cran"; sha256="04bxr34grf2nlrwvgrlh84pz7yi0r8y7dc2wk0v5h5z6yf5a085w"; depends=[ ]; };
krm = derive { name="krm"; version="2015.3-4"; type="cran"; sha256="0zm2d3naprvv10ac28k4h2r6f1ygi8wic0gwbm6mvgwpb530gga1"; depends=[kyotil ]; };
ks = derive { name="ks"; version="1.9.4"; type="cran"; sha256="0gi93d981y2i5q80wxh7f4dwwh7sjw6iy63y7571nzf01yw00gbx"; depends=[KernSmooth misc3d mvtnorm rgl multicool ]; };
kselection = derive { name="kselection"; version="0.2.0"; type="cran"; sha256="1arg96r2pldvb89rfqnfpjxwksyac2mhmbimbkwzm7wrnbnrcn5d"; depends=[ ]; };
kst = derive { name="kst"; version="0.2-1"; type="cran"; sha256="1wy9cvvln994qgr0p7qa9qs1jd7gjv6ch65gg6i42cf9681m9h65"; depends=[proxy relations sets ]; };
ktsolve = derive { name="ktsolve"; version="1.1"; type="cran"; sha256="0b5myr093v3qaj9gzbw1w728i5ij418whxxpicj51w657dcy647k"; depends=[ ]; };
ktspair = derive { name="ktspair"; version="1.0"; type="cran"; sha256="1v63982jidxlcf2syahcb29myv34kc790l7lwyfxx9l50ssb812n"; depends=[Biobase ]; };
kulife = derive { name="kulife"; version="0.1-14"; type="cran"; sha256="070ayy6fr9nsncjjljikn2i5sp2cx3xjjqyc64y2992yx74jgvvd"; depends=[ ]; };
kyotil = derive { name="kyotil"; version="2015.5-20"; type="cran"; sha256="08rpprs58c100x7sjxhvxm76msy888pvr1hy40k1b8gw0yw7fks7"; depends=[ ]; };
kza = derive { name="kza"; version="3.0.0"; type="cran"; sha256="0v811ln9vg7msvks9lpgmdi39p01342yi8fj180aclha3mfk6gfw"; depends=[polynom ]; };
kzft = derive { name="kzft"; version="0.17"; type="cran"; sha256="1y6almhs1x21cr4bbf5fj3mnhp65ivzs869660cyg70sva853sv7"; depends=[polynom ]; };
kzs = derive { name="kzs"; version="1.4"; type="cran"; sha256="1srffwfg0ps8zx0c6hs2rc2y2p01qjl5g1ypqsbhq88vkcppx1w9"; depends=[lattice ]; };
l2boost = derive { name="l2boost"; version="1.0"; type="cran"; sha256="1p0sbvlnax4ba4wjkh3r0bmjs601k590g7bdfk6wxvlj42jxcnkl"; depends=[MASS ]; };
laGP = derive { name="laGP"; version="1.1-3"; type="cran"; sha256="11blzdnil0nw3q5vf4y1rv7l4zxjx8ilynv9jpkm14azv5dsr8jw"; depends=[tgp ]; };
labdsv = derive { name="labdsv"; version="1.7-0"; type="cran"; sha256="1r5vbmdijcrw0n3phdmfv8wiy7s08pidvhac4pnsxfmf98f74jby"; depends=[mgcv MASS rgl cluster ]; };
label_switching = derive { name="label.switching"; version="1.3"; type="cran"; sha256="05kbxvrp0lm5913lhy7pgxr9cq64sm5hiz6ydmmgfmbmfirrcqyx"; depends=[combinat lpSolve ]; };
labeledLoop = derive { name="labeledLoop"; version="0.1"; type="cran"; sha256="0gq392h0sab8k7k8bzx6m7z5xpdsflldhwbpdf92zbmkbzxsz00m"; depends=[ ]; };
labeling = derive { name="labeling"; version="0.3"; type="cran"; sha256="13sk7zrrrzry6ky1bp8mmnzcl9jhvkig8j4id9nny7z993mnk00d"; depends=[ ]; };
labeltodendro = derive { name="labeltodendro"; version="1.3"; type="cran"; sha256="13kpmv26zzjf5iwpr4vs797irplmaixp1agx5v80wr4lvd2hirvg"; depends=[ ]; };
labstatR = derive { name="labstatR"; version="1.0.7"; type="cran"; sha256="1p6xav9cb7yx3n8rkh8xm1jkykf3xw974id49j558hmayq47ad4f"; depends=[ ]; };
laeken = derive { name="laeken"; version="0.4.6"; type="cran"; sha256="1rhkv1kk508pwln1d325iq4fink2ncssps0ypxi52j9d7wk78la6"; depends=[boot MASS ]; };
laercio = derive { name="laercio"; version="1.0-1"; type="cran"; sha256="0la6fxv5k9zq4pyn8dxjiayx3vs9ksm9c6qg4mnyr9vs12z53imm"; depends=[ ]; };
lakemorpho = derive { name="lakemorpho"; version="1.0"; type="cran"; sha256="0kxd493cccs24qqyw58110d2v5w8560qfnbm6qz7aki0xa7kaqrg"; depends=[maptools rgdal raster rgeos sp geosphere ]; };
laketemps = derive { name="laketemps"; version="0.5.1"; type="cran"; sha256="04742r379bzgbfr4243wwkb26cvfmnw50jzgygq7vblq00grzska"; depends=[dplyr reshape2 ]; };
lamW = derive { name="lamW"; version="0.1-1"; type="cran"; sha256="1ndf3rkkp87pivhymyqa3n5ng5y1kaa79ay84p4yk4z4h2887nq3"; depends=[Rcpp Rcpp ]; };
lambda_r = derive { name="lambda.r"; version="1.1.7"; type="cran"; sha256="1lxzrwyminc3dfb07pbn1rmj45kplxgsb17b06pzflj728knbqwa"; depends=[ ]; };
lambda_tools = derive { name="lambda.tools"; version="1.0.6"; type="cran"; sha256="13yxrgsam47adv08zl01harjq37pccfsar105b6ccf2qv3lrkdk7"; depends=[lambda_r ]; };
landpred = derive { name="landpred"; version="1.0"; type="cran"; sha256="1bl17xkx18i8i7arccnjmxvhjn4yiy7w64hg4n0xmhk8pg0l3mrg"; depends=[survival ]; };
landsat = derive { name="landsat"; version="1.0.8"; type="cran"; sha256="07zvj1yyryxk7rwgcrf1kl32p2karkkqz6xrnwy1096dg9iw2js7"; depends=[rgdal sp lmodel2 mgcv ]; };
languageR = derive { name="languageR"; version="1.4.1"; type="cran"; sha256="0grkhdjz9dcrgq6qwv7wpwmckn3mfv022c5wrx29b1dxafd0qzm0"; depends=[ ]; };
lapmix = derive { name="lapmix"; version="1.32.0"; type="bioc"; sha256="16gqhmyd5yl2myk9b7dad9mr3agxh5a1hgd2xdszrnya61r7kvnw"; depends=[Biobase ]; };
lar = derive { name="lar"; version="0.1-2"; type="cran"; sha256="0qda0y4ag10kg83wxs3z754kc8c1dg2rwciy64klk7an4ln43i5b"; depends=[data_table treemap xlsx ]; };
lars = derive { name="lars"; version="1.2"; type="cran"; sha256="0blj44wqrx6lmym1m9v6wkz8zxzbjax2zl6swgdczci0ixb5nx34"; depends=[ ]; };
laser = derive { name="laser"; version="2.4-1"; type="cran"; sha256="1f6j3xdks0w63fqjj9q8ng2m6ss90kcnsrigwal0bqskpvrpiqyz"; depends=[ape geiger ]; };
lasso2 = derive { name="lasso2"; version="1.2-19"; type="cran"; sha256="0zkwjsd42a6z4gylq9xbs4z8n1v7ncwvssjnn3h4yz1icjfzzlvk"; depends=[ ]; };
lassoscore = derive { name="lassoscore"; version="0.6"; type="cran"; sha256="1i3i07da8sw9w47rcflhylz8zxvzkyycbc1a4gf6hbcpp21rqd7d"; depends=[glasso glmnet Matrix ]; };
lassoshooting = derive { name="lassoshooting"; version="0.1.5-1"; type="cran"; sha256="0ixjw8akplcfbzwyry9p4bhbcm128yghz2bjf9yr8np6qrn5ym22"; depends=[ ]; };
latdiag = derive { name="latdiag"; version="0.2-1"; type="cran"; sha256="1xjy6as3wjrl2y1lc5fgrbhqqcvrhdan89mpgvk9cpx71wxv95vc"; depends=[ ]; };
latentnet = derive { name="latentnet"; version="2.7.0"; type="cran"; sha256="0g0a2s00f6rc9r6vmwm32489qqiwihcllmypc2wgqwayfmy8innn"; depends=[statnet_common network ergm sna mvtnorm abind coda ]; };
lattice = derive { name="lattice"; version="0.20-31"; type="cran"; sha256="1b3m3rg1zd8ssk5jjswk5y93js89vh6939kfajh6i6wphndxigb1"; depends=[ ]; };
latticeDensity = derive { name="latticeDensity"; version="1.0.7"; type="cran"; sha256="1y33p8hfmpzn8zl4a6zxg1q3zx912nhqlilca6kl5q156zi0sv3d"; depends=[splancs spdep spatstat spam ]; };
latticeExtra = derive { name="latticeExtra"; version="0.6-26"; type="cran"; sha256="16x00sg76mga8p5q5ybaxs34q0ibml8wq91822faj5fmg7r1050d"; depends=[RColorBrewer lattice ]; };
lava = derive { name="lava"; version="1.4.0"; type="cran"; sha256="0zf62xk2j1gbwxqglq6lsxs3f7fb0hynnlfh1w870xz8imgf20yp"; depends=[numDeriv ]; };
lava_tobit = derive { name="lava.tobit"; version="0.4-7"; type="cran"; sha256="1da98d5pndlbbw37k64fmr2mi1hvkhjxsmm3y9p4b772pz9i1pvj"; depends=[lava mvtnorm survival ]; };
lavaan = derive { name="lavaan"; version="0.5-18"; type="cran"; sha256="0ih5wvhmxln3w5h7q5w6gsmbs3w8118l9hc2afgsnzpg8a5jy1n3"; depends=[MASS mnormt pbivnorm quadprog ]; };
lavaan_survey = derive { name="lavaan.survey"; version="1.1"; type="cran"; sha256="1vscv165kilkc00pgs2s9qn404l3rv45zc9kzmrghxz42jsy04zc"; depends=[lavaan survey MASS Matrix ]; };
lawn = derive { name="lawn"; version="0.1.0"; type="cran"; sha256="0vv2qmz6a692ammh3jxnpq3b669s8cx61krmb97jlwjy2nb6r81i"; depends=[V8 jsonlite magrittr ]; };
lawstat = derive { name="lawstat"; version="2.5"; type="cran"; sha256="01y00jfapmh3bmrmz740flkahw0b8im8sp5ac8hsp4pf9k09cvws"; depends=[mvtnorm VGAM Kendall Hmisc ]; };
lazy = derive { name="lazy"; version="1.2-15"; type="cran"; sha256="1pdqgvn0qpfg5hcg5159ccf5qj2nd1ibai9p85rwjpddfynk6jks"; depends=[ ]; };
lazyData = derive { name="lazyData"; version="1.0.3"; type="cran"; sha256="1i4jry54id8hhfla77pwk3rj2cci6na36hxj7k35k8lx666fdam2"; depends=[ ]; };
lazyWeave = derive { name="lazyWeave"; version="2.2.5"; type="cran"; sha256="18j31lbbplxvrz4wnq7hfw9qcx1s0y4c34lbxwly2wyrvzjhxybl"; depends=[Hmisc survival ]; };
lazyeval = derive { name="lazyeval"; version="0.1.10"; type="cran"; sha256="02qfpn2fmy78vx4jxr7g7rhqzcm1kcivfwai7lbh0vvpawia0qwh"; depends=[ ]; };
lba = derive { name="lba"; version="1.0"; type="cran"; sha256="108kfffwpvl6rjcmmxswprxxqcv1sj7w9mmca4pwaiprad7p7x59"; depends=[MASS alabama plotrix ca ]; };
lbfgs = derive { name="lbfgs"; version="1.2.1"; type="cran"; sha256="0p99g4f3f63vhsw0s1m0y241is9lfqma86p26pvja1szlapz3jf5"; depends=[Rcpp Rcpp ]; };
lbfgsb3 = derive { name="lbfgsb3"; version="2015-2.13"; type="cran"; sha256="1jpy0j52w8kc8qnwcavjp3smvdwm1qgmswa9jyljpf72ln237vqw"; depends=[numDeriv ]; };
lbiassurv = derive { name="lbiassurv"; version="1.1"; type="cran"; sha256="1i6l3y4rasqpqka7j39qjx22wjbilgc9pkp05an52aysfvfxy193"; depends=[actuar ]; };
lcd = derive { name="lcd"; version="0.7-3"; type="cran"; sha256="1jnnw15d4s8yb5z5jnzvmlrxv5x6n3h7wcdiz2nw4vfiqncnpwx4"; depends=[igraph MASS ggm ]; };
lcda = derive { name="lcda"; version="0.3"; type="cran"; sha256="1ximsyn6qw2gfn7b1hdpbjs6h6nk7hrignlii0np1lbf0k8l4xxl"; depends=[poLCA ]; };
lcmm = derive { name="lcmm"; version="1.7.2"; type="cran"; sha256="1sg5vx3nx8ik5z2c2pi3p9h5b5k0z7m1jc404jkv3gr17nilcp4i"; depends=[survival ]; };
lctools = derive { name="lctools"; version="0.2-2"; type="cran"; sha256="0yf30gjqp7adjw0l129xzmaj2wmc6hbqhdw35dfwwcxk5nys5dq0"; depends=[reshape weights ]; };
lda = derive { name="lda"; version="1.3.2"; type="cran"; sha256="1iizsksp8wz34ji7p2kc6npxz9rzhs6217793nfri6y6mq23vs8z"; depends=[ ]; };
ldbounds = derive { name="ldbounds"; version="1.1-1"; type="cran"; sha256="15ixrq615x64zmi6dryq3ww0dqxd0qf5xx1bs3w934sf99l46bhs"; depends=[lattice ]; };
ldlasso = derive { name="ldlasso"; version="3.2"; type="cran"; sha256="0ij68zvgm8dfd2qwx6h6ygndac29qa0ddpf11z959v06n8jsnk11"; depends=[GenABEL quadprog ]; };
ldr = derive { name="ldr"; version="1.3.3"; type="cran"; sha256="1c48qm388zlya186qmsbxxdcg1mdv3nc3i96lqb40yhcx2yshbip"; depends=[GrassmannOptim Matrix ]; };
leaderCluster = derive { name="leaderCluster"; version="1.2"; type="cran"; sha256="1lqhckarqffm2l3ynji53a4hrfn0x7zab7znddia76r2h6nr02zb"; depends=[ ]; };
leafletR = derive { name="leafletR"; version="0.3-2"; type="cran"; sha256="183qrfmcanb4c5n3w0vd9xb5mcygjfjc4qr1mzz5jxgjd039g28n"; depends=[brew jsonlite ]; };
leapp = derive { name="leapp"; version="1.2"; type="cran"; sha256="1yiqzmhgl5f3zwpcc5sz3yqrvp8p6r4w2ffdfyirirayqc96ar17"; depends=[sva MASS corpcor ]; };
leaps = derive { name="leaps"; version="2.9"; type="cran"; sha256="1ax9v983401hvb6cdswkc1k7j62j8yk6ds22qdj24vdidhdz5979"; depends=[ ]; };
learningr = derive { name="learningr"; version="0.29"; type="cran"; sha256="1nr4ydcq2mskv4c0pmf0kxv5wm8pvjqmv19xz5yaq0j834b0n5q7"; depends=[plyr ]; };
learnstats = derive { name="learnstats"; version="0.1.0"; type="cran"; sha256="03rlyh7ynxxvnkx8r8611ss36aqc8mdk6w2kjajmmsdwzp81lgnc"; depends=[RcmdrPlugin_epack ggplot2 shiny rmarkdown Rcmdr ]; };
lefse = derive { name="lefse"; version="0.1"; type="cran"; sha256="1zdmjxr5xa5p3miw79mhsswsh289hgzfmn3mpj1lyzal1qgw1h5m"; depends=[ape picante geiger fBasics SDMTools vegan ]; };
leiv = derive { name="leiv"; version="2.0-7"; type="cran"; sha256="15ay50886xx9k298npyksfpva8pck7fhqa40h9n3d7fzvqm5h1jp"; depends=[ ]; };
les = derive { name="les"; version="1.16.0"; type="bioc"; sha256="1g7hqm61z66qf6cw5dl8xc0ndw7hak2034kc2zdp2i7gl5ww8iad"; depends=[fdrtool boot gplots RColorBrewer ]; };
lessR = derive { name="lessR"; version="3.3.1"; type="cran"; sha256="1nwvkxi9q7fsjgrfpa16ry54cyk2ja5cy4cq0xzqya6wn04mbicg"; depends=[car leaps MBESS foreign gdata triangle ]; };
lestat = derive { name="lestat"; version="1.8"; type="cran"; sha256="12w3s5yr9lsnjkr3nsay5sm4p241y4xz0s3ir56kxjqw23g6m80v"; depends=[MASS ]; };
letsR = derive { name="letsR"; version="2.1"; type="cran"; sha256="0jgc6k2hbpbr7kl42n01mff7pzjz60zd8mchrfhzgd797pwcqlbq"; depends=[raster maps XML geosphere fields maptools sp rgdal ]; };
lfactors = derive { name="lfactors"; version="0.4.0"; type="cran"; sha256="1f4p5mp6m11njrj421vjl5398laicgyg8m04srshfmpi74hf1nb9"; depends=[ ]; };
lfe = derive { name="lfe"; version="2.2-1699"; type="cran"; sha256="1a2y4f25isvnvk0yg6j36s729makr8b1bzwivx4x67aqg8fd09rv"; depends=[Matrix Formula xtable ]; };
lfl = derive { name="lfl"; version="1.0"; type="cran"; sha256="10ypsnzjzygihz019clwnf3gv5b64d873231pjkp772k1n3wgv9a"; depends=[Rcpp foreach forecast plyr tseries e1071 zoo Rcpp ]; };
lfstat = derive { name="lfstat"; version="0.6.1"; type="cran"; sha256="0i3zrinvjxlg9w5zqrv8wzy15vxvi2gw3jrlfs4rddkxnp98ya9d"; depends=[lattice lmom lmomRFA latticeExtra ]; };
lga = derive { name="lga"; version="1.1-1"; type="cran"; sha256="1nkvar9lmdvsc3c21xmrnpn0haqk03jwvc9zfxvk5nwi4m9457lg"; depends=[boot lattice ]; };
lgarch = derive { name="lgarch"; version="0.5"; type="cran"; sha256="01y5p3w4i1yfxb647pkdazqn9yac1p6jp7rk92ddxnvvjb6fdp59"; depends=[zoo ]; };
lgcp = derive { name="lgcp"; version="1.3-9"; type="cran"; sha256="093rxvb4irmf04nx1j5zrgh8k0jw78zl9qrmkn314vaqyn3b4608"; depends=[spatstat sp raster RandomFields iterators ncdf rpanel fields maptools Matrix rgeos ]; };
lgtdl = derive { name="lgtdl"; version="1.1.3"; type="cran"; sha256="00lffc60aq1qjyy66nygaypdky9rypy607mr8brwimjn8k1f0gx4"; depends=[ ]; };
lhs = derive { name="lhs"; version="0.10"; type="cran"; sha256="1hc23g04b6nsg8xffkscwsq2mr725r6s296iqll887b3mnm3xaqz"; depends=[ ]; };
libamtrack = derive { name="libamtrack"; version="0.6.1"; type="cran"; sha256="0kg3lp1f40hymr2nxq7immxnqryavad91xp6l6x4qyp0cb02870a"; depends=[ ]; };
lifecontingencies = derive { name="lifecontingencies"; version="1.1.6"; type="cran"; sha256="07gvq93p2f8s4a43h596xmzifnx1jwnfyg5giqhlfvxnq6wdbvrr"; depends=[markovchain Rcpp Rcpp ]; };
likeLTD = derive { name="likeLTD"; version="5.5.0"; type="cran"; sha256="111wdszkk2bdi9sz6gfih32kib0ig9bp4xlq6wl5r5zx3nrlj5zb"; depends=[DEoptim ggplot2 gtools rtf gdata ]; };
likelihood = derive { name="likelihood"; version="1.7"; type="cran"; sha256="0q8lvwzlniijyzsznb3ys4mv1cqy7ibj9nc3wgyb4rf8676k4f8v"; depends=[nlme ]; };
likert = derive { name="likert"; version="1.2"; type="cran"; sha256="1x1mlaqzwr15xzcfq9934jxb3m5irvw6yivirrj45wscxn3kz5s1"; depends=[ggplot2 xtable psych reshape gridExtra plyr ]; };
limSolve = derive { name="limSolve"; version="1.5.5.1"; type="cran"; sha256="0anrbhw07mird9fj96x1p0gynjnjcj07gpwlq0ffjlqq2qmkzgqs"; depends=[quadprog lpSolve MASS ]; };
limitplot = derive { name="limitplot"; version="1.2"; type="cran"; sha256="0wj1xalm80fa5pvjwh2zf5hpvxa3r1hnkh2z9z285wkbrcl0qfl2"; depends=[ ]; };
limma = derive { name="limma"; version="3.22.7"; type="bioc"; sha256="0qa5kfph80j4ykngaj300bkvk464chpnlsaffqwnv0g70r1af7hy"; depends=[ ]; };
limmaGUI = derive { name="limmaGUI"; version="1.42.0"; type="bioc"; sha256="0236bmwxdppgpw0fb4sw8wg16k2pijzxm8a6qy2kxd3a77ci034k"; depends=[limma ]; };
linLIR = derive { name="linLIR"; version="1.1"; type="cran"; sha256="1v5bwki5j567x2kndfd5nli5i093a33in31025h9hsvkbal1dxgp"; depends=[ ]; };
linbin = derive { name="linbin"; version="0.1.0"; type="cran"; sha256="0812m19kfscb0d23rv0llziapd269r7zlm2yq8h3yp8c8jl8gdb1"; depends=[ ]; };
lineup = derive { name="lineup"; version="0.34-1"; type="cran"; sha256="0p6gxbv8xdrhgk8zdlnqrybald9vqz717czb49b123h84rjr2f19"; depends=[qtl class ]; };
linkR = derive { name="linkR"; version="1.0.0"; type="cran"; sha256="1l936i74h1s42w1d7nn220rjygc6n0jkjidvix1df2wlacnswzpg"; depends=[svgViewR ]; };
linkcomm = derive { name="linkcomm"; version="1.0-11"; type="cran"; sha256="1w5sfmzvrk30fr161pk0cy5nj8kasqm6hqgyafq6r280b5s272cb"; depends=[igraph RColorBrewer dynamicTreeCut ]; };
linkim = derive { name="linkim"; version="0.1"; type="cran"; sha256="0yvyid9x59ias8h436a202hd2kmqvn8k1zcrgja2l4z2pzcvfn91"; depends=[ ]; };
linprog = derive { name="linprog"; version="0.9-2"; type="cran"; sha256="1ki14an0pmhs2mnmfjjvdzd76pshiyvi659zf7hqvqwj0viv4dw9"; depends=[lpSolve ]; };
lint = derive { name="lint"; version="0.3"; type="cran"; sha256="0lkrn5nsizyixhdp5njxgrgwmygwr663jxv5k9a22a63x1qbwpiq"; depends=[plyr harvestr stringr dostats foreach ]; };
lintr = derive { name="lintr"; version="0.2.0"; type="cran"; sha256="14jaghvd0kz271j6wl8j0y31h48ajvgzd68drdi6pv9nrxqs046n"; depends=[rex crayon codetools stringdist testthat digest igraph ]; };
liso = derive { name="liso"; version="0.2"; type="cran"; sha256="072l7ac1fbkh8baiiwx2psiv1sd7h8ggmgk5xkzml069ihhldj5i"; depends=[MASS Iso ]; };
lisp = derive { name="lisp"; version="0.1"; type="cran"; sha256="025sq46277q9i21189cbmx5dnrh5wfshc5k6la1wjilhr1iqf6nj"; depends=[ ]; };
lisrelToR = derive { name="lisrelToR"; version="0.1.4"; type="cran"; sha256="0zicq0z3hhixan1p1apybnf3v5s6v6ysll4pcz8ivygwr2swv3p5"; depends=[ ]; };
llama = derive { name="llama"; version="0.8.1"; type="cran"; sha256="0pv411kj4n3pi2yg35jzjd4zfxkqksbp049v6d9xd2q14i9kphv2"; depends=[mlr rJava parallelMap ggplot2 checkmate ]; };
lle = derive { name="lle"; version="1.1"; type="cran"; sha256="09wq7mzw48czp5k0b4ij399cflc1jz876fqv0mfvlrydc9igmjhk"; depends=[scatterplot3d MASS snowfall ]; };
lllcrc = derive { name="lllcrc"; version="1.2"; type="cran"; sha256="06n1fcd3g3z5rl2cyx8jhyscq9fb52mmh0cxg81cnbmai3sliccb"; depends=[data_table combinat VGAM plyr ]; };
lm_beta = derive { name="lm.beta"; version="1.5-1"; type="cran"; sha256="0p224y9pm72brbcq8y1agkcwc82j7clsnszqzl1qsc0gw0bx9id3"; depends=[ ]; };
lm_br = derive { name="lm.br"; version="2.6"; type="cran"; sha256="1f7cxd6ksspgpz2lnppyb466lgis5isk0bj8z4bjiwk4abg4lg3i"; depends=[Rcpp Rcpp ]; };
lmSupport = derive { name="lmSupport"; version="2.9.1"; type="cran"; sha256="11c86ji7srv80zlrp6c8ark312xzvajig8flc5qm77dgacik8daq"; depends=[car psych gvlma AICcmodavg lme4 pbkrtest ]; };
lmdme = derive { name="lmdme"; version="1.8.0"; type="bioc"; sha256="0pidyb48ranx4a9k6zk69sh5dd51q81wig1h5qbv1irsdjrl5k51"; depends=[pls limma ]; };
lme4 = derive { name="lme4"; version="1.1-7"; type="cran"; sha256="0v9vl9rspakyw2dmcl5lbhv1nlg10yhgdvi3gpfnizln7xw9ksyp"; depends=[Matrix Rcpp MASS nlme lattice minqa nloptr Rcpp RcppEigen ]; };
lmeNB = derive { name="lmeNB"; version="1.3"; type="cran"; sha256="03khn9wgjbz34sx0p5b9wd3mhbknw8qyvyd5pvllmjipnir63d3q"; depends=[numDeriv statmod lmeNBBayes ]; };
lmeNBBayes = derive { name="lmeNBBayes"; version="1.3.1"; type="cran"; sha256="13shfsh9x6151xy8gicb25sind90imrwclnmfj96b76p5dvhzabm"; depends=[ ]; };
lmeSplines = derive { name="lmeSplines"; version="1.1-10"; type="cran"; sha256="0fy6hspk7rqqkzv0czvvs8r4ishvs7zsf4ykvia65nj26w7yhyia"; depends=[nlme ]; };
lmeVarComp = derive { name="lmeVarComp"; version="1.0"; type="cran"; sha256="17zrl33h4lcd8lpdv3d12h5afj8nxr2lyw6699zq4fds2chbq66l"; depends=[ ]; };
lmec = derive { name="lmec"; version="1.0"; type="cran"; sha256="09shj01h2dl5lh7ch0wayr7qyhlmk0prv3p1vfgy91sn0wpbqlxr"; depends=[mvtnorm ]; };
lmenssp = derive { name="lmenssp"; version="1.0"; type="cran"; sha256="0a1q9ax0pnz9gcv4nzgay9lznaz9gp27jj6vp6la7vfhrfg5qcg6"; depends=[MASS nlme ]; };
lmerTest = derive { name="lmerTest"; version="2.0-25"; type="cran"; sha256="13psyrll5srxahyk4fhp77fds9mxgnargpv2wxjpy3cv8f5b1vpm"; depends=[Matrix lme4 plyr MASS Hmisc ggplot2 ]; };
lmf = derive { name="lmf"; version="1.2"; type="cran"; sha256="1xqlqmjl7wf5b2s2a1k1ara21v74b3wvwl4mhbj9dkdb0jcrgfva"; depends=[ ]; };
lmfor = derive { name="lmfor"; version="1.1"; type="cran"; sha256="0bbcgpcx0xjla128w80xlxp6i6hnrk4wjwqih66zvyjaf5sz7wx9"; depends=[nlme MASS ]; };
lmm = derive { name="lmm"; version="1.0"; type="cran"; sha256="0x5ikb1db99dsn476mf4253dlznlxa1cwnykg1nwnm2vy5qym2fq"; depends=[ ]; };
lmmfit = derive { name="lmmfit"; version="1.0"; type="cran"; sha256="06mzmx7md7qw5mfhgdljc7i40sx9yrx7j57xbbp3fhl2zs1dpb4g"; depends=[nlme MASS ]; };
lmmlasso = derive { name="lmmlasso"; version="0.1-2"; type="cran"; sha256="1mvd38k9npyc05a2x7z0908qz9x4srqgzq9yjyyggplqfrl4dgsz"; depends=[emulator miscTools penalized ]; };
lmmot = derive { name="lmmot"; version="0.1.2"; type="cran"; sha256="1c7cn1g1fl8nwjzm78a8qgw9da170f1q0z5vxl446f167ix5ppkp"; depends=[maxLik MASS ]; };
lmms = derive { name="lmms"; version="1.2"; type="cran"; sha256="12wli7iwnihq42pa1jy1ml4y3l93grwrv9n7vpgp5wp1hj4d1s8c"; depends=[nlme lmeSplines reshape gdata gplots ggplot2 ]; };
lmodel2 = derive { name="lmodel2"; version="1.7-2"; type="cran"; sha256="0dyzxflr82k7ns824zlycj502jx3qmgrck125im2k2da34ir3m3q"; depends=[ ]; };
lmom = derive { name="lmom"; version="2.5"; type="cran"; sha256="0s2x8k6p71hxdqggy8ajk7p9p040b9xr3lm49g31z3kcsmzvk23q"; depends=[ ]; };
lmomRFA = derive { name="lmomRFA"; version="3.0-1"; type="cran"; sha256="0lf8n6bhdv3px6p60smghvmwsbgawvjrmgy2dfhs517n67pxg30i"; depends=[lmom ]; };
lmomco = derive { name="lmomco"; version="2.1.4"; type="cran"; sha256="02c2yhfr08hzlyn2nmfdfvmc3xrc3pp4agc6nkg4w6kk74r003h1"; depends=[ ]; };
lmtest = derive { name="lmtest"; version="0.9-33"; type="cran"; sha256="1ycmxjrxf41mnbgakdmn4y2kmgp4rkj7v3nqwqnlc6gdfdmac73s"; depends=[zoo ]; };
loa = derive { name="loa"; version="0.2.22"; type="cran"; sha256="13j4d4d35nd2ssmkghpd6azysmy7g8mc9y3glkzjnddp1xxz8icn"; depends=[lattice MASS png RgoogleMaps RColorBrewer ]; };
localdepth = derive { name="localdepth"; version="0.5-7"; type="cran"; sha256="0h0y74xnhdqa7y51ljmpz7ayznppvy2ll06wfds6200lb9cxgr7k"; depends=[circular ]; };
localgauss = derive { name="localgauss"; version="0.34"; type="cran"; sha256="04bn777kcxaa5s4zf0r9gclar32y9wpzqnx2rxxhqrxyy419gw37"; depends=[ggplot2 MASS foreach matrixStats ]; };
localsolver = derive { name="localsolver"; version="2.3"; type="cran"; sha256="1d18rihzqf1f5j9agfp8jysll7lqk1ai23hkdqkn6wwxj442llv4"; depends=[ ]; };
locfit = derive { name="locfit"; version="1.5-9.1"; type="cran"; sha256="0lafrmq1q7x026m92h01hc9cjjiximqqi3v1g2hw7ai9vf7i897m"; depends=[lattice ]; };
locits = derive { name="locits"; version="1.4"; type="cran"; sha256="1q9vsf5h4n7r4gy1dwdhfyq3n0rn33akb3nx6yzinncj4w4cqq0h"; depends=[wavethresh igraph ]; };
locpol = derive { name="locpol"; version="0.6-0"; type="cran"; sha256="1zpdh3g7yx3rcn3rhlc3dm19c4b9kx2k8wy8vkwh744a1kysvdga"; depends=[ ]; };
lodGWAS = derive { name="lodGWAS"; version="1.0-3"; type="cran"; sha256="1fb70p2mvp742557ns44ilb9m85aqq59p5x6vdrmb22hczsjj6q4"; depends=[survival rms ]; };
loe = derive { name="loe"; version="1.0"; type="cran"; sha256="11wjzq4h7qjrnrj1zg3msg1ksld9c3r3n3biamf2hz8zvi1asvqv"; depends=[igraph MASS vegan Matrix ]; };
log4r = derive { name="log4r"; version="0.2"; type="cran"; sha256="07q8m7z2sxm6n25a62invf76qakxdsijfh3272spc8xrmdmyw6rj"; depends=[ ]; };
logbin = derive { name="logbin"; version="1.2"; type="cran"; sha256="1jfkg5rx51hm2skwwafqiw6ajdijdm0cniral3j5flidinsbsbcm"; depends=[glm2 ]; };
logconPH = derive { name="logconPH"; version="1.5"; type="cran"; sha256="05fkibgh5nzs8c4f39kzg4zyh2dfhg1k69hlx7l8p442snajsg92"; depends=[ ]; };
logconcens = derive { name="logconcens"; version="0.16-4"; type="cran"; sha256="11bk03kjlb747g54axmb0nayz226g41xvanbw79aij76vjbglv7y"; depends=[ ]; };
logcondens = derive { name="logcondens"; version="2.1.2"; type="cran"; sha256="0lnsyjl77l9024pqncyxwivmj05f5mfa3563jql47jajaai0my8y"; depends=[ks ]; };
logcondens_mode = derive { name="logcondens.mode"; version="1.0.1"; type="cran"; sha256="1i2c2prk5j863p3a3q3xnsv684igfi5czz3dib7zfjldpf0qyaq7"; depends=[logcondens distr ]; };
logcondiscr = derive { name="logcondiscr"; version="1.0.5"; type="cran"; sha256="170rg4rqch0mlhmc1zc59h271b57y3xfxrc3gh9pwvc9r11gw7k5"; depends=[Matrix mvtnorm cobs ]; };
logging = derive { name="logging"; version="0.7-103"; type="cran"; sha256="1sp7q217awizb6l8c9p5dix6skpq8j7w8i088x4mm0fc0qr1ba5c"; depends=[ ]; };
logicFS = derive { name="logicFS"; version="1.36.0"; type="bioc"; sha256="0hyqfcb3lz0ylgf21mklwam2w7vrii2k0bsazwx02kp1z918qzax"; depends=[LogicReg mcbiopi ]; };
logistf = derive { name="logistf"; version="1.21"; type="cran"; sha256="0cwbmd0mvj4wywpx7p4lhs70nhab7bfl6fzz2c4snn3ma6sy7x8c"; depends=[mice mgcv ]; };
logitT = derive { name="logitT"; version="1.24.0"; type="bioc"; sha256="09b7wk51hbvfhvmvwfqjd194ywgqyp728nvwbi44ln04v4d1834h"; depends=[affy ]; };
logitchoice = derive { name="logitchoice"; version="0.9.4"; type="cran"; sha256="1vkw7cwp7nwrsj9ifn4gz21zbw9da5rph9lr3w466zxkzdkbldqj"; depends=[ ]; };
logitnorm = derive { name="logitnorm"; version="0.8.29"; type="cran"; sha256="0wbdxh3n44nzb6c0ahyd8gndfql1y56fns2bkmzqi3nxy9blhx18"; depends=[ ]; };
loglognorm = derive { name="loglognorm"; version="1.0.1"; type="cran"; sha256="0rhx769a5nmidpbpngs2vglsbkpgw9badz3kj3jfmpj873jfnbln"; depends=[ ]; };
logmult = derive { name="logmult"; version="0.6.2"; type="cran"; sha256="0i6sabg56x52aw5n7i61ick4n0hsbs28iagyzp0nvd2qrvz8p9ma"; depends=[gnm qvcalc ]; };
logspline = derive { name="logspline"; version="2.1.5"; type="cran"; sha256="18hpzcg71v3zjzp92whgxgn7w87cadgxr65pp7nv6m5pvj130i3p"; depends=[ ]; };
lokern = derive { name="lokern"; version="1.1-6"; type="cran"; sha256="0iixxs23zsb0qadppcwmwf6vbxcjnm8zmwyz1xkkmhrpp06sa3jw"; depends=[sfsmisc ]; };
lol = derive { name="lol"; version="1.14.0"; type="bioc"; sha256="0y78yfbyjy40cybqyxhfsg3ay9kacv75a7xi71npkqii04f7cszq"; depends=[penalized Matrix Matrix penalized ]; };
lomb = derive { name="lomb"; version="1.0"; type="cran"; sha256="06lbk7s1ilqx6xsgj628wzdwmnvbs0p03hdpx8665fhddcxh3ryy"; depends=[ ]; };
longCatEDA = derive { name="longCatEDA"; version="0.17"; type="cran"; sha256="1yb0117ycj4079590mrx3lg9m5k7xd1dhb779r3rmnww94pmvja9"; depends=[ ]; };
longclust = derive { name="longclust"; version="1.2"; type="cran"; sha256="1m270fyvfz0w19p9xdv7ihy19nhrhjq2akymbp774073crznmmw0"; depends=[ ]; };
longitudinal = derive { name="longitudinal"; version="1.1.11"; type="cran"; sha256="0rzi177v9k6gy1wv06vf81r1q0ml81ssf83v0z8rpmx5j91d71ac"; depends=[corpcor ]; };
longitudinalData = derive { name="longitudinalData"; version="2.3"; type="cran"; sha256="0ld2saga04if2zp3ylz720q8451f7a7aiva5hpj471wxd0948592"; depends=[clv class rgl misc3d ]; };
longmemo = derive { name="longmemo"; version="1.0-0"; type="cran"; sha256="1jnck5nfwxywj74awl4s9i9jn431655mmi85g0nfbg4y71aprzdc"; depends=[ ]; };
longpower = derive { name="longpower"; version="1.0-11"; type="cran"; sha256="1l1icy653d67wlvigcya8glhqh2746cr1vh1khx36qjhfjz6wgyf"; depends=[Matrix lme4 nlme ]; };
loop = derive { name="loop"; version="1.1"; type="cran"; sha256="1gr257fm92rfh1sdhsb4hy0fzwjkwvwm3v85302gzn02f86qr5dm"; depends=[MASS ]; };
lordif = derive { name="lordif"; version="0.2-2"; type="cran"; sha256="0898k5w9wky318k8x0zknjqdzdify0yyrnb1506j341l4n1bm04s"; depends=[MASS msm mvtnorm polycor sfsmisc ltm Hmisc rms ]; };
lorec = derive { name="lorec"; version="0.6.1"; type="cran"; sha256="0mgypd8awixh1lzbh5559br4k7vi3pfmwniqhgh68wc06sc6bn65"; depends=[ ]; };
lpNet = derive { name="lpNet"; version="1.6.0"; type="bioc"; sha256="1qk4v6wq01218r17a1daj7h9jsb9i7l867r2m4ry0bjgnz2h6lk2"; depends=[lpSolve nem ]; };
lpSolve = derive { name="lpSolve"; version="5.6.11"; type="cran"; sha256="0mgpns9wflqaz9ynwxwkvmc1694yhf275wgrqfjfy3qxz1hxq7s0"; depends=[ ]; };
lpSolveAPI = derive { name="lpSolveAPI"; version="5.5.2.0-14"; type="cran"; sha256="1ffmb9xv6m25ii4n7v576g8xw31qlsxd99ka8cjdhqs7fbr4ng5x"; depends=[ ]; };
lpc = derive { name="lpc"; version="1.0.2"; type="cran"; sha256="1r6ynkhqjic1m7fqrqsp7f8rpxqih5idn4j96fqrdj8nj01znv29"; depends=[ ]; };
lpint = derive { name="lpint"; version="2.0"; type="cran"; sha256="0p1np8wlfbax0c7ysc5fs9dai8s00h1v0gan89dbd6bx06307w2r"; depends=[ ]; };
lpme = derive { name="lpme"; version="1.0.1"; type="cran"; sha256="0f0xphlxl0ma3s2miadl74cb1l20cikqgk3nc1dg5ml05cqzhyxr"; depends=[Rcpp Rcpp RcppArmadillo ]; };
lpmodeler = derive { name="lpmodeler"; version="0.2-1"; type="cran"; sha256="17k67l03dkjx61p4hwswghjm6awk0zx173x9xafxrfd8jrgsf6kf"; depends=[slam ]; };
lpridge = derive { name="lpridge"; version="1.0-7"; type="cran"; sha256="0nkl70fwzra308bzlhjfpkxr8hpd8v1xdnah7nscxa10qlisgr2k"; depends=[ ]; };
lqa = derive { name="lqa"; version="1.0-3"; type="cran"; sha256="141r2cd9kybi6n9jbdsvhza8jdxxqch4z3qizvpazjy8qifng29q"; depends=[ ]; };
lqmm = derive { name="lqmm"; version="1.5.1"; type="cran"; sha256="1myv2v2059vlni1npxyv6ii846aiqz1mvyz9r9n5vpzgz92abizi"; depends=[SparseGrid nlme ]; };
lrmest = derive { name="lrmest"; version="1.0"; type="cran"; sha256="1gdj8pmmzvs1li05pwhad63blhibq45xd1acajxsx06k7k21ajs7"; depends=[MASS ]; };
lsa = derive { name="lsa"; version="0.73.1"; type="cran"; sha256="1af8s32hkri1hpngl9skd6s5x6vb8nqzgnkv0s38yvgsja4xm1g5"; depends=[SnowballC ]; };
lsbclust = derive { name="lsbclust"; version="1.0.2"; type="cran"; sha256="03vaf9l0fy3pdr3cqb937nw8s7ky25njc3fnl4hdpc8rj7m44hwf"; depends=[ggplot2 plyr clue gridExtra reshape2 Rcpp Rcpp ]; };
lsdv = derive { name="lsdv"; version="1.1"; type="cran"; sha256="0rl1xszr9r8v71j98gjpav30n2ncsci19hjlc9flzs1s20sb1xpr"; depends=[ ]; };
lsgl = derive { name="lsgl"; version="1.0.123.1"; type="cran"; sha256="10q3f56yjgs3kvyk7b7d1xi06sa16pv9y3c6lsp1461whqvinpj4"; depends=[sglOptim Matrix sglOptim Rcpp RcppProgress RcppArmadillo BH ]; };
lshorth = derive { name="lshorth"; version="0.1-6"; type="cran"; sha256="0nbjakx0zx4fg09fv26pr9dlrbvb7ybi6swg84m2kwjky8399vvx"; depends=[ ]; };
lsmeans = derive { name="lsmeans"; version="2.17"; type="cran"; sha256="0jpyqrc84w1zxgw7vbrp2263fcbk8rahxq2lqhcf8by47xcgk5kk"; depends=[estimability coda multcomp plyr mvtnorm ]; };
lspls = derive { name="lspls"; version="0.2-1"; type="cran"; sha256="1g27fqhnx9db0zrxbhqr76agvxy8a5fx1bfy58j2ni76pki1y4rl"; depends=[pls ]; };
lsr = derive { name="lsr"; version="0.5"; type="cran"; sha256="0q385a3q19i8462lm9fx2bw779n4n8azra5ydrzw59zilprhn03f"; depends=[ ]; };
lss = derive { name="lss"; version="0.52"; type="cran"; sha256="1fvs8p9rhx81xfn450smnd0i1ym06ar6nwwcpl74a66pfi9a5sbp"; depends=[quantreg ]; };
ltbayes = derive { name="ltbayes"; version="0.3"; type="cran"; sha256="1b35bwli08yzgv3idg86wz8fzpx7r5sx0ryr950rdh0n2jdml09q"; depends=[mcmc MHadaptive numDeriv ]; };
ltm = derive { name="ltm"; version="1.0-0"; type="cran"; sha256="1igkgb0jy3mzlnp9s6avhcpplwijz5g3x26a3lavyy3d9fjpmfpa"; depends=[MASS msm polycor ]; };
ltmle = derive { name="ltmle"; version="0.9-5"; type="cran"; sha256="07z576ry6i73l4jp073l360gvhzfdq845x43vrpfq258h7mqhgg4"; depends=[Matrix ]; };
ltsa = derive { name="ltsa"; version="1.4.4"; type="cran"; sha256="06db0d4j0kqp4q6rpa3sawcsm5rfgdhzl8fl7cxivjbbyrfnszqp"; depends=[ ]; };
ltsbase = derive { name="ltsbase"; version="1.0.1"; type="cran"; sha256="16p5ln9ak3h7h0icv5jfi0a3fbw5wdqs3si69sjbn8f5qs2hz7yp"; depends=[MASS robustbase ]; };
ltsk = derive { name="ltsk"; version="1.0.3"; type="cran"; sha256="17l4mwggd4s39l6x1b6gvwgd6gjl0h37wfis1i6l9k6hiaqhb6vr"; depends=[fields ]; };
lubridate = derive { name="lubridate"; version="1.3.3"; type="cran"; sha256="1f07z3f90vbghsarwjzn2nj6qz8qyfkqalszx8cb5kliijdkwy8z"; depends=[plyr stringr memoise ]; };
luca = derive { name="luca"; version="1.0-5"; type="cran"; sha256="1jiqwibkrgga4ahz0qgpfkvrsxjqc55i2nwnm60xddb8hpb6a6qx"; depends=[survival genetics ]; };
lucid = derive { name="lucid"; version="1.2"; type="cran"; sha256="1rvc5d7sb0bcncw79g13i1rxjicngbpln9hq0qfdi7yx9hhrdpnz"; depends=[nlme ]; };
lumi = derive { name="lumi"; version="2.18.0"; type="bioc"; sha256="1f0fcz7vlkc062fn248hgx3p1msz3hna34aa0g1gcnv51rxb5him"; depends=[Biobase affy methylumi GenomicFeatures GenomicRanges annotate Biobase lattice mgcv nleqslv KernSmooth preprocessCore RSQLite DBI AnnotationDbi MASS ]; };
lunar = derive { name="lunar"; version="0.1-04"; type="cran"; sha256="0nkzy6sf40hxkvsnkzmqxk4sfb3nk7ay4rjdnwf2zym30qax74kk"; depends=[ ]; };
lvm4net = derive { name="lvm4net"; version="0.2"; type="cran"; sha256="0al0answp3rngq69bl3ch6ylil22wdp1c047yi5gbga853p7db0c"; depends=[MASS ergm network ellipse igraph ]; };
lxb = derive { name="lxb"; version="1.3"; type="cran"; sha256="0mvjk0s9bzvznjy0cxjsqv28f6jjzvr713b2346ym4cm0y4l3mir"; depends=[ ]; };
lymphclon = derive { name="lymphclon"; version="1.3.0"; type="cran"; sha256="1jns41sk2rx1j3mg06dzy434k30gpfhbkn6s47fmyv1y8701vfl0"; depends=[MASS expm corpcor ]; };
m4fe = derive { name="m4fe"; version="0.1"; type="cran"; sha256="06lh45591z2lc6lw91vyn066x0m1zwxxfp6nbirp1rz901v843ph"; depends=[ ]; };
mAr = derive { name="mAr"; version="1.1-2"; type="cran"; sha256="0i9zp8n8i3fxldgvwj045scss533zsv8p476lsla294gp174njr7"; depends=[MASS ]; };
mBPCR = derive { name="mBPCR"; version="1.20.0"; type="bioc"; sha256="1l7ybvnh00grfjdvpn45ns8kg6jfs8hn7z4ijyghzmm70w9527xk"; depends=[oligoClasses SNPchip Biobase ]; };
mFilter = derive { name="mFilter"; version="0.1-3"; type="cran"; sha256="1cz9d8447iiy7sq47civ1lcjafqdqs40lzxm2a4alw4wy57hc2h6"; depends=[ ]; };
mGSZ = derive { name="mGSZ"; version="1.0"; type="cran"; sha256="08l98i75h2h8kx9ksvzp5qr8jhf0l6n4j7rg8fcn7hk8chn8v5zh"; depends=[Biobase GSA limma MASS ismev ]; };
mQTL = derive { name="mQTL"; version="1.0"; type="cran"; sha256="0k80xvkr0b0mp3bj2s558fjxi2zf4k7ggnw6hsjm8lr84i108dks"; depends=[qtl MASS outliers ]; };
mQTL_NMR = derive { name="mQTL.NMR"; version="1.0.0"; type="bioc"; sha256="0dbpkbgbpzv8vzmgcs4s3ppfwy88aj79cd3cnf18jqg43b56w4fi"; depends=[qtl GenABEL MASS outliers ]; };
mRMRe = derive { name="mRMRe"; version="2.0.5"; type="cran"; sha256="0h9ilbkyjqwiyiys1l66zhxwlxlygkkzx59saf0a68nyq2b69afy"; depends=[survival igraph ]; };
mRm = derive { name="mRm"; version="1.1.5"; type="cran"; sha256="0sbpk7z4ij917nw8wyvnm87iav95ybqrzvmsjy3r8nyq55bjzyn7"; depends=[ ]; };
maCorrPlot = derive { name="maCorrPlot"; version="1.36.0"; type="bioc"; sha256="12k4f427xipcbhz6ffv25rxpk799vpv2g15lpj15pmjpspi43q10"; depends=[lattice lattice ]; };
maPredictDSC = derive { name="maPredictDSC"; version="1.4.0"; type="bioc"; sha256="1bnkfpicb3pfr2rymnwc5n56zk1fyzhg58b823xdjpdv3p4d806h"; depends=[MASS affy limma gcrma ROC class e1071 caret ROCR AnnotationDbi ]; };
maRketSim = derive { name="maRketSim"; version="0.9.2"; type="cran"; sha256="1cq17zjwyf4i5lcqgxqkw805s4mr6qp89blgpmpxy8gdrbfj93m4"; depends=[ ]; };
maSAE = derive { name="maSAE"; version="0.1-2"; type="cran"; sha256="18a1zbfmjhrmi3fgqd7vaicpsca59kp8r1003pwl7l4032p32fxk"; depends=[ ]; };
maSigPro = derive { name="maSigPro"; version="1.38.0"; type="bioc"; sha256="1pk8mnzvrsp0x229r91xdx0f7v18dizw2pjkhyh3xblx4mgbryyh"; depends=[Biobase MASS Biobase limma Mfuzz MASS ]; };
maanova = derive { name="maanova"; version="1.36.0"; type="bioc"; sha256="0ygwzxl89rng52vf4ai41mbsn0yiv580l0xfwykqai81qjk97kgy"; depends=[Biobase ]; };
maboost = derive { name="maboost"; version="1.0-0"; type="cran"; sha256="18d36cgvn8p75nidfr6al458jbzwc1i7x77y1ks50y9phrz3wf65"; depends=[rpart C50 ]; };
macat = derive { name="macat"; version="1.40.0"; type="bioc"; sha256="14azwx7719wqi4n4k17y90w3ypcz8kmmkf25lwgf1mx8jpqdfnn6"; depends=[Biobase annotate ]; };
mada = derive { name="mada"; version="0.5.7"; type="cran"; sha256="0a2m1rb4d143v9732392xzvbg6x1k3l0g3zscgbx64m21kxshmgb"; depends=[mvtnorm ellipse mvmeta ]; };
made4 = derive { name="made4"; version="1.40.0"; type="bioc"; sha256="1hxaz11k0kcidm9krf9a63hhxkcrk9g3lrljd1bphj6kwjs0zyfg"; depends=[ade4 RColorBrewer gplots scatterplot3d ]; };
mads = derive { name="mads"; version="0.1.2"; type="cran"; sha256="1hbanfa1wnfvfs0g8dcf5z4439v0pp3rqhxahiis03jlfxzgd841"; depends=[mrds ]; };
madsim = derive { name="madsim"; version="1.1"; type="cran"; sha256="1d9mv769zia43krdfl43hp22cp5mdi3ycwj3kxyfcjrg23bjnyc0"; depends=[ ]; };
magic = derive { name="magic"; version="1.5-6"; type="cran"; sha256="1399w1zhz79nj8cdhslybncd9h6rylfhb548nv22ip0dxxdkyv0v"; depends=[abind ]; };
magicaxis = derive { name="magicaxis"; version="1.9.3"; type="cran"; sha256="0dxlqpxw82v9cxfp475ppd02ywvlg96b1cfj02fjvs04xfprhar0"; depends=[MASS plotrix sm ]; };
magma = derive { name="magma"; version="1.3.0-2"; type="cran"; sha256="0hgwjq30ksx2qg4q9fj57m27i96sci8hrfrqc2lw4hz18b6kkph4"; depends=[ ]; };
magrittr = derive { name="magrittr"; version="1.5"; type="cran"; sha256="1s1ar6rag8m277qcqmdp02gn4awn9bdj9ax0r8s32i59mm1mki05"; depends=[ ]; };
maigesPack = derive { name="maigesPack"; version="1.30.0"; type="bioc"; sha256="0dmxikyw045b0q6vkq7l5rh6rkvjzjjrppi07yx2849hvd78sv74"; depends=[convert graph limma marray ]; };
mail = derive { name="mail"; version="1.0"; type="cran"; sha256="1m89cvw5ba4d87kp2dj3f8bvd6sgj9k56prqmw761q919xwprgw6"; depends=[ ]; };
mailR = derive { name="mailR"; version="0.4.1"; type="cran"; sha256="1bfh3fxdqx9f9y3fgklxyslpcvhr9gcj7wsamaxzgrcsaxm8fdlw"; depends=[rJava stringr R_utils ]; };
makeProject = derive { name="makeProject"; version="1.0"; type="cran"; sha256="09q8xa5j4s5spgzzr3y06l3xis93lqxlx0q66s2nczrhd8nrz3ca"; depends=[ ]; };
makecdfenv = derive { name="makecdfenv"; version="1.42.0"; type="bioc"; sha256="1z0p3piyaj8577hmvmainng3csbcwszk4mijdbw5i6pzv4j7qlzc"; depends=[affyio Biobase affy zlibbioc ]; };
mallet = derive { name="mallet"; version="1.0"; type="cran"; sha256="06rksf5nvxp4sizgya7h4sb6fgw3yz212a01dqmc9p5a5wqi76x0"; depends=[rJava ]; };
managelocalrepo = derive { name="managelocalrepo"; version="0.1.5"; type="cran"; sha256="180b7ikas1kb7phm4l2z1d8wi45wi0qyz2c8rl8ml3f71b4mlzgc"; depends=[stringr assertthat ]; };
manifestoR = derive { name="manifestoR"; version="1.0-1"; type="cran"; sha256="1008bz2vsmhx0sx6kc55z8dhlfinbadagz4hd0p50c4q86ibl7lh"; depends=[NLP tm dplyr httr jsonlite functional zoo psych ]; };
manipulate = derive { name="manipulate"; version="1.0.1"; type="cran"; sha256="1klknqdfppi5lf6zbda3r2aqzsghabcsaxmvd3vw3cy3aa984zky"; depends=[ ]; };
manta = derive { name="manta"; version="1.12.0"; type="bioc"; sha256="0kkfdvd6b1fz289di5h3pbnh5lm6ixcg0vdancxrqh23xcmzn020"; depends=[edgeR Hmisc caroline ]; };
mapDK = derive { name="mapDK"; version="0.3.0"; type="cran"; sha256="03ksg47caxx3y97p3nsflwpc7i788jw874cixr9gjz756avwkmwp"; depends=[ggplot2 stringi ]; };
mapStats = derive { name="mapStats"; version="2.4"; type="cran"; sha256="18pp1sb9p4p300ffvmzjrg5bv1i7f78mhpggq83myc26c3a593na"; depends=[survey lattice maptools RColorBrewer Hmisc classInt sp colorspace reshape2 ]; };
mapdata = derive { name="mapdata"; version="2.2-3"; type="cran"; sha256="1fhj34cgq6rniy0339qv2ghbs0aiq38h9jfwx7szb83yj37v7wm6"; depends=[maps ]; };
mapfit = derive { name="mapfit"; version="0.9.7"; type="cran"; sha256="16a318bz3my27qj0xzf40g0q4bh9alg2bm6c8jbwgswf1paq1xmx"; depends=[Matrix ]; };
mapmisc = derive { name="mapmisc"; version="1.2.4"; type="cran"; sha256="07h237sgsycagn61rharb09q9s8da777hzngh4py1sbv6gfyqpv8"; depends=[sp raster ]; };
mapplots = derive { name="mapplots"; version="1.5"; type="cran"; sha256="09sk78a0p8hlwhk3w2dwvpb0a6p7fqdxyskvz32p1lcav7y3jfrb"; depends=[ ]; };
mapproj = derive { name="mapproj"; version="1.2-2"; type="cran"; sha256="1fdb72hvcp6jm7rhvs8zdkya6ifs92lfqnmq5vj5amwckkxfidc6"; depends=[maps ]; };
maps = derive { name="maps"; version="2.3-9"; type="cran"; sha256="1gzy81sl4vpr4hsnh4jsp5rd26jdkzsw99qxwfmbadjyf55q06wv"; depends=[ ]; };
maptools = derive { name="maptools"; version="0.8-36"; type="cran"; sha256="0064b9qqv7241298dswv5kkkqf6y2iyn7dhjcyvfkqn4kvc9g2m8"; depends=[sp foreign lattice ]; };
maptpx = derive { name="maptpx"; version="1.9-2"; type="cran"; sha256="1i5djmjg0lsi7xlkbvn90njq1lbyi74zwc2nldisay4xsbgqg7fj"; depends=[slam ]; };
maptree = derive { name="maptree"; version="1.4-7"; type="cran"; sha256="1k7v84wvy6wz6g0dyiwvd3lvf78rlfidk60ll4fz7chvr2nrqdp4"; depends=[cluster rpart ]; };
mar1s = derive { name="mar1s"; version="2.1"; type="cran"; sha256="0psjva7nsgar5sj03adjx44pw0sdqnsd96m4g6k8d76pv30m1g7l"; depends=[cmrutils fda zoo ]; };
marelac = derive { name="marelac"; version="2.1.4"; type="cran"; sha256="0mm1rmaxrbhk6r9z62ns832p2q9fajq0jpvd3if3rg2wgdbb1505"; depends=[shape seacarb ]; };
marg = derive { name="marg"; version="1.2-2"; type="cran"; sha256="0j08zzcrj8nqsargi6xi50gy9pl4smmsp4b7ywlga7r1ga38g82r"; depends=[statmod survival ]; };
markdown = derive { name="markdown"; version="0.7.7"; type="cran"; sha256="00j1hlib3il50azs2vlcyhi0bjpx1r50mxr9w9dl5g1bwjjc71hb"; depends=[mime ]; };
marked = derive { name="marked"; version="1.1.8"; type="cran"; sha256="1xsg0iy8mcy9b98bxmjr3y413xwblbhks3fcydbvjnry0k03gd5i"; depends=[lme4 R2admb truncnorm coda ggplot2 Matrix numDeriv Rcpp plyr optimx expm Rcpp ]; };
markovchain = derive { name="markovchain"; version="0.2.1"; type="cran"; sha256="0ix7sdcnsc4bl9diddfl4q0lmq1nq8bp1d7arxzcjj4zy35vhkv5"; depends=[igraph Matrix matlab expm Rcpp RcppParallel Rcpp RcppParallel ]; };
marl = derive { name="marl"; version="1.0"; type="cran"; sha256="0rndnf3rbcibv3gsrw1kfp5zhg37cw9wwlz0b7dbwprd0m71l3pm"; depends=[ ]; };
marmap = derive { name="marmap"; version="0.9.2"; type="cran"; sha256="1csi6v6z2p3nmyqwy8bmbj036693rzmxrc317g0a45gsqxggp3n4"; depends=[DBI RSQLite gdistance geosphere sp raster ncdf plotrix shape reshape2 adehabitatMA ggplot2 ]; };
marqLevAlg = derive { name="marqLevAlg"; version="1.1"; type="cran"; sha256="1wmqi68g0flrlmj87vwgvyxap0miss0n42qiiw7ypyj4jw9kwm8j"; depends=[ ]; };
marray = derive { name="marray"; version="1.44.0"; type="bioc"; sha256="1cg2qkg2pyf2vy9j2c2iw2z3mppmz7hvknm207dky594sh38azsm"; depends=[limma ]; };
maskBAD = derive { name="maskBAD"; version="1.10.0"; type="bioc"; sha256="02dy1y7z0s2g3kp5dn5scrvqfwbdp57fyrc85bb576ncbckd89gl"; depends=[gcrma affy ]; };
massiR = derive { name="massiR"; version="1.2.0"; type="bioc"; sha256="0x7ip2w8vrh0pa5rw8s53a7kmb4aixmd32y1y9vwm8q19p1fn91c"; depends=[cluster gplots diptest Biobase ]; };
matR = derive { name="matR"; version="0.9"; type="cran"; sha256="0lih3g2z6rxykprl3s529xcf466bpzpsv4l20dkgx1fgfslfcl2p"; depends=[MGRASTer BIOM_utils ]; };
matchBox = derive { name="matchBox"; version="1.8.0"; type="bioc"; sha256="1g44cbac3k4d5krpi93nrxk3w43sihfblnji5hknavny7z2k57k1"; depends=[ ]; };
matchingMarkets = derive { name="matchingMarkets"; version="0.1-4"; type="cran"; sha256="096yknmzla2qq2vkaxna5f8mclayjn5baff3cm8ik95zy7j3lrjp"; depends=[Rcpp lpSolve partitions Rcpp RcppArmadillo RcppProgress ]; };
matchingR = derive { name="matchingR"; version="1.0.1"; type="cran"; sha256="0qqk2zcyj0m3r9q0lclb39gdrjqqjlaxvk3cxpfah7hxhhkrk4mc"; depends=[Rcpp Rcpp RcppArmadillo ]; };
mathgraph = derive { name="mathgraph"; version="0.9-11"; type="cran"; sha256="0xikgzn24p0qqlrmaydmjk5yz5pq2rilsvpx86n3p2k2fc3wpwjy"; depends=[ ]; };
matie = derive { name="matie"; version="1.2"; type="cran"; sha256="1ymx49cyvz63imqw5n48grilphiqvvdirwsrv82p7jgxdyav2xv0"; depends=[dfoptim mvtnorm seriation igraph gplots cba ]; };
matlab = derive { name="matlab"; version="1.0.2"; type="cran"; sha256="0m21k2vzbc5d3c93p2hk4208xyd2av2slg55q5j1ibjidiryqgd2"; depends=[ ]; };
matpow = derive { name="matpow"; version="0.1.1"; type="cran"; sha256="1a6q21ba16qfdpykmjwgmrb1kkvvyx48qg8cbgpdmch0vhibcgcp"; depends=[ ]; };
matrixStats = derive { name="matrixStats"; version="0.14.0"; type="cran"; sha256="1glm3h6d4c6bl3svnfk6fyj59linfc7s6fyrs0nlcwizs4371nis"; depends=[ ]; };
matrixcalc = derive { name="matrixcalc"; version="1.0-3"; type="cran"; sha256="1c4w9dhi5w98qj1wwh9bbpnfk39rhiwjbanalr8bi5nmxkpcmrhp"; depends=[ ]; };
matrixpls = derive { name="matrixpls"; version="0.5.0"; type="cran"; sha256="0r1qpfbvaq24d30ck5c5zwsss4rqhl12g3hhmij3cn55hmv26azq"; depends=[assertive matrixcalc lavaan psych MASS ]; };
maxLik = derive { name="maxLik"; version="1.2-4"; type="cran"; sha256="1b2qr16s2w76nxqdlq3hflpg0sjnn8mlzas7082y8xpxw3cknpdz"; depends=[miscTools sandwich ]; };
maxent = derive { name="maxent"; version="1.3.3.1"; type="cran"; sha256="1skc7d0p6kg0gi1bpgaqn2dmxjzbvcphx5x3idpscxfbplm5v96p"; depends=[SparseM tm Rcpp Rcpp ]; };
maxlike = derive { name="maxlike"; version="0.1-5"; type="cran"; sha256="0h544wr7qsyb70vmbk648hfyb6arrsb41gw39svcin412rhw9k9j"; depends=[raster ]; };
maxstat = derive { name="maxstat"; version="0.7-22"; type="cran"; sha256="0fgpc5y3c5cidy7hxil10hxzdjxfmag2pp2ksh02z9smb8m0sdqb"; depends=[exactRankTests mvtnorm ]; };
mbbefd = derive { name="mbbefd"; version="0.7"; type="cran"; sha256="0l8dq1j1ky83jl1cka0mrjcf7rcby36jkp0zn7wmpnxjrmdrixgb"; depends=[actuar gsl Rcpp Rcpp ]; };
mbest = derive { name="mbest"; version="0.3"; type="cran"; sha256="0j6v6c1s11gvzwcnj5dnd9anj11hpmy7c83c8ribb7lx75mwj4k4"; depends=[lme4 ]; };
mblm = derive { name="mblm"; version="0.12"; type="cran"; sha256="17h65bapvz89g5in3gkxq541bxgpj9pciz6i5hzhqn0bdbsb3k6r"; depends=[ ]; };
mbmdr = derive { name="mbmdr"; version="2.6"; type="cran"; sha256="0ss5w66hcgd8v8j9bbbp12a720sblhr2hy9kidqfr8hgjaqlch86"; depends=[logistf ]; };
mboost = derive { name="mboost"; version="2.4-2"; type="cran"; sha256="104qs8hbsm4ps5ybzxrdz6lz0lqn925xy4k3m4rmbk4r62wj9v61"; depends=[stabs Matrix survival lattice nnls quadprog ]; };
mc2d = derive { name="mc2d"; version="0.1-15"; type="cran"; sha256="1kp2l1gvw3caplq9916s1dmpmfp6fb2xscys9gj6dykl6gi4h4hb"; depends=[mvtnorm ]; };
mcGlobaloptim = derive { name="mcGlobaloptim"; version="0.1"; type="cran"; sha256="1p8841y9a4yq51prv6iirgw9ln8jznx8nk547sc5xlznksjy1g9n"; depends=[randtoolbox snow ]; };
mcIRT = derive { name="mcIRT"; version="0.41"; type="cran"; sha256="0pbwydl4zjzwdlpzwpqm4xhq716zgq9s7bvcbrqp6q0jkba9zjnw"; depends=[Rcpp Rcpp RcppArmadillo ]; };
mcaGUI = derive { name="mcaGUI"; version="1.14.0"; type="bioc"; sha256="188zganyc5wqm87nk160w6zhrzwjxs3mpiin17mr13kr609cs03j"; depends=[lattice MASS proto foreign gWidgets gWidgetsRGtk2 OTUbase vegan bpca ]; };
mcbiopi = derive { name="mcbiopi"; version="1.1.2"; type="cran"; sha256="12h4bv3hx1m6bsqdxj5n3b5gh98ms508am8pigz7ckmv0xkyhx85"; depends=[ ]; };
mcc = derive { name="mcc"; version="1.0"; type="cran"; sha256="0p661a870bvh3xhcahqqq85azn9rjl3vacjy96jsdn86irj4s0vi"; depends=[ ]; };
mcclust = derive { name="mcclust"; version="1.0"; type="cran"; sha256="00qprmsjwbn2d0jl7p9mz8pv7k8ld3mzk862pr1grigk0lqwhx06"; depends=[lpSolve ]; };
mcga = derive { name="mcga"; version="2.0.9"; type="cran"; sha256="197yldx03c634f3x0mpxxvqrys93n7z7n3x0alvqa42z3vdkrz7b"; depends=[ ]; };
mcgibbsit = derive { name="mcgibbsit"; version="1.1.0"; type="cran"; sha256="09ydcbjz3abmh46966v01dh26fy79dfklk3zjf262zp3c62ld9yf"; depends=[coda ]; };
mcheatmaps = derive { name="mcheatmaps"; version="1.0.0"; type="cran"; sha256="1gglm32xpmim38m7fziczgqfbpcq2899lxardsrzg6j1vhmf765y"; depends=[gridBase ]; };
mcll = derive { name="mcll"; version="1.2"; type="cran"; sha256="0i9zqbh0l9a9mv4558gbdq9mh52chanykyfwmiymmxygxhp809sz"; depends=[statmod locfit ]; };
mclogit = derive { name="mclogit"; version="0.3-1"; type="cran"; sha256="0zyms6v9qjh6a5ccahfanarp4sg49yingb8wpjcz61skqvm8j7qx"; depends=[Matrix ]; };
mclust = derive { name="mclust"; version="5.0.1"; type="cran"; sha256="10h8y4a0v1vq01v8i92yr3dcxfq74xsm44nh0ldh1a4d6j270zyp"; depends=[ ]; };
mcmc = derive { name="mcmc"; version="0.9-3"; type="cran"; sha256="148l28nb1qv82x2hj46c26yhn0lw8x5jsrp2dav9sbysv1bdj2f8"; depends=[ ]; };
mcmcplots = derive { name="mcmcplots"; version="0.4.2"; type="cran"; sha256="0ws2la6ln016l98c1rzf137jzhzx82l4c49p19yihrmrpfrhr26l"; depends=[coda sfsmisc colorspace denstrip ]; };
mcmcse = derive { name="mcmcse"; version="1.0-1"; type="cran"; sha256="1jn5hl6aw83qmwccyfmcsvcymx9cp4d3qnfzzqvlw22x26rx88r6"; depends=[ ]; };
mco = derive { name="mco"; version="1.0-15.1"; type="cran"; sha256="14y10zprpiflqsv5c979fsc2brgxay69kcwm7y7s3gziq74fn4rw"; depends=[ ]; };
mcprofile = derive { name="mcprofile"; version="0.2-1"; type="cran"; sha256="0q1d236mcmgp5p5gl474myp1zz8cbxffd0kvsd8338jijalj05p0"; depends=[ggplot2 quadprog mvtnorm ]; };
mcr = derive { name="mcr"; version="1.2.1"; type="cran"; sha256="0237w41xichd418ax9xviq4wxbcc6c0cgr5gvzkca67nnqgc4jaz"; depends=[ ]; };
mcsm = derive { name="mcsm"; version="1.0"; type="cran"; sha256="13sx7s3ywis5n4a70ld2szld9fb8jkfsc82dy6iskhy17vy8pml0"; depends=[MASS coda ]; };
mda = derive { name="mda"; version="0.4-6"; type="cran"; sha256="0v6avsq1j3vd8pmnilxcbx6v42kb5gvsy03q2srwzf3z04807n8i"; depends=[class ]; };
mdatools = derive { name="mdatools"; version="0.6.0"; type="cran"; sha256="13pfzr3lvqifln9lzdd0dpnygdibxp9ka7zwfisxjrw21m8mhmm3"; depends=[ ]; };
mded = derive { name="mded"; version="0.1-2"; type="cran"; sha256="1j8fcz5yc70p9qd9l010xj1b625scdps8z1pqh75b45p2hiqbhlc"; depends=[ ]; };
mdqc = derive { name="mdqc"; version="1.28.0"; type="bioc"; sha256="06bb1il2r9pfnnja6nmdx1k7pq827xnnr67q6l3k262rj3j0nfk2"; depends=[cluster MASS ]; };
mdscore = derive { name="mdscore"; version="0.1-2"; type="cran"; sha256="1g473rwffkb2x6y6wcm98i6xr5dhz11ypnbrvhb2klbvi81jj511"; depends=[MASS ]; };
mdsdt = derive { name="mdsdt"; version="1.0"; type="cran"; sha256="0ngf2p6lm32124qyfh18zlgf0dipj3njn6d0m8f192563kp50q0p"; depends=[ellipse mnormt polycor ]; };
measuRing = derive { name="measuRing"; version="0.3"; type="cran"; sha256="16lgvk9lm0vjy50das0qq0h0z683hh94spjcdmkljmxxzwmzfl4b"; depends=[pastecs png tiff ]; };
meboot = derive { name="meboot"; version="1.4-5"; type="cran"; sha256="1h33f3dpx906q5nmd57hhkq07mbs2kg8mv6mi4imaa2zpr5vc4py"; depends=[dynlm nlme ]; };
medSTC = derive { name="medSTC"; version="1.0.0"; type="cran"; sha256="1f7w6jbxairqvghr5b7vgdllg3ian16a1fgi7vqlq0mhy2j6phan"; depends=[ ]; };
mederrRank = derive { name="mederrRank"; version="0.0.7"; type="cran"; sha256="08jbqmb418qb7v2x6lm4wig1pfzzfx6fhb49mbfhlkbmssbqsjfq"; depends=[BB numDeriv ]; };
medflex = derive { name="medflex"; version="0.5-0"; type="cran"; sha256="06zp0la99ly2vpm97l3qm289inyd0bxgkjd4cv15mvc47w9c9x9x"; depends=[multcomp boot Matrix sandwich ]; };
mediation = derive { name="mediation"; version="4.4.4"; type="cran"; sha256="00w4c51v0xvc8pfpxqn73l8r2j12sv1wf5kj3yjq8g08dgzynham"; depends=[MASS Matrix mvtnorm sandwich lpSolve Hmisc ]; };
medicalrisk = derive { name="medicalrisk"; version="1.1"; type="cran"; sha256="1fb8zp426zcqsnb35sgywnz44lpssa1acfa2aha9bnvyazif3s90"; depends=[plyr reshape2 hash ]; };
mefa = derive { name="mefa"; version="3.2-5"; type="cran"; sha256="037vpnwclyj6xgycznh6g6qlirlgy3sjnkjqb1046q80b5ywv2ni"; depends=[ ]; };
mefa4 = derive { name="mefa4"; version="0.3-1"; type="cran"; sha256="0zyjhq80krnb11wh8p8006qz0znrps3qsd2qnhkw7zwl5282i1zp"; depends=[Matrix ]; };
megaptera = derive { name="megaptera"; version="1.0-0"; type="cran"; sha256="1fczhdydqca1jcdc315kwrhxcjisxfq23l4sm7m2011k5nrjmv37"; depends=[snowfall ips ape seqinr RPostgreSQL XML ]; };
meifly = derive { name="meifly"; version="0.3"; type="cran"; sha256="1x3lhy7fmasss0rq60z5qp74ni32sahw62s8cnp2j431sp95pczc"; depends=[plyr leaps MASS ]; };
mem = derive { name="mem"; version="1.4"; type="cran"; sha256="1d3fgllh7fhlfz3rz2jm31r8vn7msz4na4762iaw161qp2j101db"; depends=[sm boot ]; };
memgene = derive { name="memgene"; version="1.0"; type="cran"; sha256="00b1mi2hvzzps542mh2p96s27kjqkpcic7djklfcwnfn1m4bz0i5"; depends=[ade4 raster gdistance vegan ]; };
memisc = derive { name="memisc"; version="0.97"; type="cran"; sha256="069siqkw7ll9n1crsl3yjhybwz0w52576q504cylpvlxx3jm9hfs"; depends=[lattice MASS ]; };
memoise = derive { name="memoise"; version="0.2.1"; type="cran"; sha256="19wm4b3kq6xva43kga3xydnl7ybl5mq7b4y2fczgzzjz63jd75y4"; depends=[digest ]; };
memuse = derive { name="memuse"; version="1.1"; type="cran"; sha256="1i6l3d885b4v01hlkl50m401bwi7akydhh52gf4kya5khanb8n2b"; depends=[ ]; };
merror = derive { name="merror"; version="2.0.1"; type="cran"; sha256="09v62f7ycywasid3b7x52dhidplwdbx9fd0855b40jklfy469bkn"; depends=[ ]; };
meshr = derive { name="meshr"; version="1.2.7"; type="bioc"; sha256="014lj15kk2aq49hys0cdrxr7c6psxpah91jbwkw9mk57s0vw3fja"; depends=[fdrtool Category BiocGenerics cummeRbund MeSHDbi S4Vectors ]; };
messina = derive { name="messina"; version="1.2.0"; type="bioc"; sha256="054hznxclhv9b9inis2xc0y1028hqc9fwl15z0hrqld9z4jsl5vc"; depends=[survival Rcpp plyr ggplot2 foreach Rcpp ]; };
metRology = derive { name="metRology"; version="0.9-17"; type="cran"; sha256="1g4gv3mpii71i6imfwqg9d5iwfx03bq4lizzhx7dy39b2mj7jd4q"; depends=[MASS numDeriv ]; };
meta = derive { name="meta"; version="4.2-0"; type="cran"; sha256="1cbrgy3ry70l52da02vx2qflxhnqw7kmy6r10d9wzhmc1gf85snp"; depends=[ ]; };
metaArray = derive { name="metaArray"; version="1.44.0"; type="bioc"; sha256="0nbvz094xgm4k25z77d1frq72mjdy9ck2a8fy2zkb97gpnsii10h"; depends=[Biobase MergeMaid ]; };
metaLik = derive { name="metaLik"; version="0.41.0"; type="cran"; sha256="08wiriq6cm02d0b0q34056y5249daidpjzkwzgjq6dh55v5fp2s4"; depends=[ ]; };
metaMA = derive { name="metaMA"; version="3.1.2"; type="cran"; sha256="1mjyz06q1kc8lhfixpym4ndpnisi1r849fj3da6riwfd6ab1v181"; depends=[limma SMVar ]; };
metaMS = derive { name="metaMS"; version="1.2.0"; type="bioc"; sha256="0137zd25mr0pwclbnnf06si79ja1kn0czfw698cnd38fjkz300sg"; depends=[CAMERA xcms Matrix robustbase BiocGenerics ]; };
metaMix = derive { name="metaMix"; version="0.2"; type="cran"; sha256="0xlsdgincxwjzyr4i8qfmfw2wvgf41qbmyhf2rxcbarf7rmwhmqf"; depends=[data_table Matrix gtools Rmpi ggplot2 ]; };
metaRNASeq = derive { name="metaRNASeq"; version="1.0.2"; type="cran"; sha256="1xz7df7ypq4326yg429pgxd6aldp14c3h3qi20j5nqr5xgsdgzqa"; depends=[ ]; };
metaSeq = derive { name="metaSeq"; version="1.6.0"; type="bioc"; sha256="04yfs1zhd35w9zjn71cnm9avc5rhqkg8jymgsra1slgrdhwwly7m"; depends=[NOISeq snow Rcpp ]; };
metabolomics = derive { name="metabolomics"; version="0.1.4"; type="cran"; sha256="0m5d2784mkpkkg396y3vpvf38vmba5kvxarilq3zf818vjs4pnax"; depends=[limma crmn gplots ]; };
metabomxtr = derive { name="metabomxtr"; version="1.0.0"; type="bioc"; sha256="0wr2qyh57r9c0pdbjrkri72zjxjm3vjdh6ny1srwjrgx5hfa9nr7"; depends=[Biobase optimx Formula plyr multtest ]; };
metacom = derive { name="metacom"; version="1.4.3"; type="cran"; sha256="0djq2ry2vriayn839f0pgkq4j8j1zyd8ribmzn6ngfhz305fszlq"; depends=[devtools vegan lattice ]; };
metacor = derive { name="metacor"; version="1.0-2"; type="cran"; sha256="04k3ph0yg3jp8x4g6l1h4m0qwl51mx0626xmm0fzr1pv4b4a1ypw"; depends=[rmeta gsl ]; };
metafolio = derive { name="metafolio"; version="0.1.0"; type="cran"; sha256="18s78lljwnn3j0l3mqc0svszcb3c8yzyzlpnimndbiq9yxagxnnf"; depends=[Rcpp plyr colorspace MASS Rcpp RcppArmadillo ]; };
metafor = derive { name="metafor"; version="1.9-7"; type="cran"; sha256="1gnq9qrz3ym9az9s6pi48dx7j3znrp9knbdmh4qpdhjkdlpa55d1"; depends=[Matrix ]; };
metagear = derive { name="metagear"; version="0.1"; type="cran"; sha256="1c00y7p7063f3c1ar17r9ij5j4chzyispg0wprkjaaz0mx9w1hb0"; depends=[EBImage gWidgetsRGtk2 gWidgets stringr metafor MASS Matrix ]; };
metagen = derive { name="metagen"; version="1.0"; type="cran"; sha256="0jvbm22976aqvmfnjzs51n2w099yj5hpx6hd0pgvbia80jk7b9vk"; depends=[MASS lhs plyr BBmisc ParamHelpers BatchJobs BatchExperiments ggplot2 metafor ]; };
metagene = derive { name="metagene"; version="1.0.0"; type="bioc"; sha256="1b2nqyis5cl7z16ql0ix9wyh9lcbnxhx26sz3wgrxwxwrq5gy64g"; depends=[rtracklayer GenomicRanges GenomicAlignments ggplot2 ]; };
metagenomeSeq = derive { name="metagenomeSeq"; version="1.8.3"; type="bioc"; sha256="16j5g3yb184giygbfrb96ggal8y44b40g7771g9bgfzr950dq9wc"; depends=[Biobase limma interactiveDisplay RColorBrewer matrixStats gplots ]; };
metahdep = derive { name="metahdep"; version="1.24.0"; type="bioc"; sha256="13w25dailvl4y4vzb66vkyzzgswy10izapicf41f2w4qqwp1swc9"; depends=[ ]; };
metamisc = derive { name="metamisc"; version="0.1.1"; type="cran"; sha256="1cvlsix3b857xdw6anqhqsrfwxpnf4rbzg4ybf6aw7vcdc05zgwd"; depends=[mvtnorm ellipse bbmle rjags coda ]; };
metap = derive { name="metap"; version="0.6"; type="cran"; sha256="1iy5cmwrlsr70z0qnqn30n15knsfclg383815a2a8yqpg5gs4953"; depends=[ ]; };
metaplus = derive { name="metaplus"; version="0.7-1"; type="cran"; sha256="17wn2x8dnfzm98bd007axq9ak38hphx08vqpk6ba0jahlfvqqdiz"; depends=[bbmle metafor boot numDeriv lme4 MASS ]; };
metasens = derive { name="metasens"; version="0.2-0"; type="cran"; sha256="13mncikxzg8cnpbw78ird1xkrjlivmjibhrk700vdx1hygzwi6x0"; depends=[meta ]; };
metaseqR = derive { name="metaseqR"; version="1.4.13"; type="bioc"; sha256="14sbagw7jkv56569z438y0vsph104hryb825ih4wsk1ngrgnk7zg"; depends=[EDASeq DESeq limma qvalue edgeR NOISeq baySeq NBPSeq biomaRt gplots corrplot vsn brew rjson log4r ]; };
metatest = derive { name="metatest"; version="1.0-4"; type="cran"; sha256="0bz6gg2n4ffkr144jxk27y24xpqhp8awr09wkaijmv8902qx6qah"; depends=[ ]; };
meteoForecast = derive { name="meteoForecast"; version="0.45"; type="cran"; sha256="0p74w5zcibzw2vpbyl4jb2wzpz0pki1n1l66hjs6dnkrn52zph95"; depends=[raster sp zoo ncdf ]; };
meteogRam = derive { name="meteogRam"; version="1.0"; type="cran"; sha256="167gyxjnl4dyfqs3znv8sdpkvpqdxzdqi1g730s30gycrm9snap9"; depends=[ggplot2 RadioSonde ]; };
methVisual = derive { name="methVisual"; version="1.18.0"; type="bioc"; sha256="0mr5rymx9x4aav2lvfjxmm5zc47xfgmysnh5lvgx30fpsf1gsa2m"; depends=[Biostrings plotrix gsubfn sqldf Biostrings ca gridBase IRanges ]; };
methyAnalysis = derive { name="methyAnalysis"; version="1.8.0"; type="bioc"; sha256="1ygj9j2b0g052n7vv1qypv9ffmxfc3dpwmxmdqs8gq7gdz9h36yn"; depends=[BiocGenerics S4Vectors IRanges GenomeInfoDb GenomicRanges Biobase lumi methylumi Gviz genoset GenomicRanges IRanges rtracklayer GenomicFeatures annotate Biobase AnnotationDbi genefilter biomaRt ]; };
methylMnM = derive { name="methylMnM"; version="1.4.0"; type="bioc"; sha256="10p4jhqq0116grwcwf28jxgn59c66bkwcqvxy11mrw6533dbnfp5"; depends=[edgeR statmod ]; };
methylPipe = derive { name="methylPipe"; version="1.0.5"; type="bioc"; sha256="0z3xkrzpkgdl7cjam9mirm8gqwc69gicprlw2vgphzdc491dbx1y"; depends=[GenomicRanges Rsamtools marray gplots IRanges BiocGenerics Gviz GenomicAlignments Biostrings data_table GenomeInfoDb S4Vectors ]; };
methylumi = derive { name="methylumi"; version="2.12.0"; type="bioc"; sha256="0mcg985g3nw8cbjffagdsjn1an0z61jzl7w24zzhy4mbscjj0b6h"; depends=[Biobase scales reshape2 ggplot2 matrixStats minfi BiocGenerics S4Vectors IRanges GenomeInfoDb GenomicRanges Biobase lattice annotate genefilter AnnotationDbi minfi illuminaio ]; };
mets = derive { name="mets"; version="1.1.0"; type="cran"; sha256="0nfyfmhcd4sy2j1nymgw4yz0b5a36s2dqx42kzwbzgvp1m11z225"; depends=[timereg lava numDeriv Rcpp survival Rcpp RcppArmadillo ]; };
mewAvg = derive { name="mewAvg"; version="0.3.0"; type="cran"; sha256="16gc78ccjffp9qgc7rs622jql54ij83ygvph3hz19wpk22m96glm"; depends=[ ]; };
mfp = derive { name="mfp"; version="1.5.1"; type="cran"; sha256="0flqrvicgks7nxxijhndshpf541drlgqjidm3nql1bg5hnpc5fcq"; depends=[survival ]; };
mfx = derive { name="mfx"; version="1.1"; type="cran"; sha256="1zhpk38k7vdq0pyqi1s858ns19qycs3nznpa00yv8sz9n798wnn5"; depends=[sandwich lmtest MASS betareg ]; };
mgcv = derive { name="mgcv"; version="1.8-6"; type="cran"; sha256="0605cqrbk26zg8s8qdd8kqwq56wihx7r6hfzr4x0xzk4y1g0m2rq"; depends=[nlme Matrix ]; };
mglmn = derive { name="mglmn"; version="0.0.2"; type="cran"; sha256="1ijkmr85s4yya0hfwcyqqskbprnkcbq8sc9c889i0gy0543fgqz4"; depends=[mvabund snowfall ]; };
mgpd = derive { name="mgpd"; version="1.99"; type="cran"; sha256="0cxpgza9i0hjm5w1i5crzlgh740v143120zwjn95cav8pk8n2wyb"; depends=[evd numDeriv corpcor fields ]; };
mgraph = derive { name="mgraph"; version="1.03"; type="cran"; sha256="0av2c0jvqsdfb3i0s0498wcms0n2mm0z3nnl98mx2fy7wz34z8b2"; depends=[rgdal ]; };
mgsa = derive { name="mgsa"; version="1.14.2"; type="bioc"; sha256="16x4s22r6qyirrm78260i59lzx5mknfirjg09dhw56w431ibra9b"; depends=[gplots ]; };
mhsmm = derive { name="mhsmm"; version="0.4.14"; type="cran"; sha256="1zrqnzbmlk3kmwbq9rl4bdkc9iawkgn3qr7nzsa782v55i7w2wiz"; depends=[mvtnorm ]; };
mht = derive { name="mht"; version="3.1.2"; type="cran"; sha256="01zcaf9k0qayzm8dn5dvnm5n3qgqpj8r96qhqaa5vbjcr6ci2x2r"; depends=[glmnet Matrix ]; };
mhurdle = derive { name="mhurdle"; version="1.0-1"; type="cran"; sha256="1x631fgbq3ika05svyavzadyjd7vi9bcmsgb58wfhpf9xq6j5rcr"; depends=[Formula truncreg maxLik pbivnorm ]; };
mi = derive { name="mi"; version="1.0"; type="cran"; sha256="1h47k5mpbvhid83277dvvj2di493bgzz9iarpyv3r30y219l7x1l"; depends=[Matrix arm ]; };
miRNApath = derive { name="miRNApath"; version="1.26.0"; type="bioc"; sha256="0lpr2id012wdh3zkla6xpyfxsy068zzbldfwj24hclzxqiwhqkgd"; depends=[ ]; };
miRNAtap = derive { name="miRNAtap"; version="1.0.0"; type="bioc"; sha256="1w2ivqkndnmq9h2h9nx0wcwg7hppiyskgrvmmsy36q3dy96nvis1"; depends=[AnnotationDbi DBI RSQLite stringr sqldf plyr ]; };
miRada = derive { name="miRada"; version="1.13.8-8"; type="cran"; sha256="1m6rm65pv4r16r0s5ih69nr3v2rnpsvpdpk07pi7k4f7v9wck71v"; depends=[ ]; };
miRtest = derive { name="miRtest"; version="1.8"; type="cran"; sha256="0i66s1sz7vf8p8ihfrxmag7wbkw8mlkldcp1w2figlzyhs74c85p"; depends=[corpcor MASS globaltest GlobalAncova limma RepeatedHighDim ]; };
micEcon = derive { name="micEcon"; version="0.6-12"; type="cran"; sha256="1kxhr3qqgswq8glrjfcjz0hyb163lwf303yhwlgrwjciqgp5dq17"; depends=[miscTools ]; };
micEconAids = derive { name="micEconAids"; version="0.6-16"; type="cran"; sha256="07hsabrlkwpdaalh0b7izraz2q5dlxn373ccijc5c4zsrkgk7kij"; depends=[lmtest micEcon systemfit miscTools ]; };
micEconCES = derive { name="micEconCES"; version="0.9-8"; type="cran"; sha256="06g6z8hf7y9d942w6gya0fd5aidzfjkx3280gjygdlwpv7nlpqzv"; depends=[minpack_lm DEoptim systemfit car micEcon miscTools ]; };
micEconSNQP = derive { name="micEconSNQP"; version="0.6-6"; type="cran"; sha256="1n3pxapc90iz1w3plaqflayd0b1jqd65yw5nbbm9xz0ih132dby9"; depends=[miscTools systemfit MASS ]; };
mice = derive { name="mice"; version="2.22"; type="cran"; sha256="1b7ivpa21ipzbmmwjn1ch968zpw6wydg30f7jdk95m40lrk2xs68"; depends=[Rcpp lattice MASS nnet randomForest rpart Rcpp ]; };
miceadds = derive { name="miceadds"; version="1.2-0"; type="cran"; sha256="01gbkpmmd81v5yhj3jparp7li1jzq91f5zk65dhcd8g3a0k0952m"; depends=[MASS mice mvtnorm pan Rcpp sirt TAM lme4 MBESS pls mitools bayesm inline car foreign sjmisc multiwayvcov Rcpp RcppArmadillo ]; };
microRNA = derive { name="microRNA"; version="1.24.0"; type="bioc"; sha256="187xjq2fy9zgvx82q47rvywrsc0260vlzyi79zd48ayyr8wi2q5s"; depends=[Biostrings ]; };
microbenchmark = derive { name="microbenchmark"; version="1.4-2"; type="cran"; sha256="05yxvdnkxr2ll94h6f2m5sn3gg7vrlm9nbdxgmj2g8cp8gfxpfkg"; depends=[ggplot2 ]; };
micromap = derive { name="micromap"; version="1.9.2"; type="cran"; sha256="1x4v0ibbpfz471dp46agib27i4svs8wyy93ldriryvhpa2w5948y"; depends=[maptools RColorBrewer rgdal sp ggplot2 ]; };
micromapST = derive { name="micromapST"; version="1.0.5"; type="cran"; sha256="1n9mzyl5dj21165j0j99brkqq7c54j3cg6r21ifdzffj2dx29wh0"; depends=[RColorBrewer ]; };
micropan = derive { name="micropan"; version="1.0"; type="cran"; sha256="0qnxm6z2pk1wibchj6rhn3hld77dzl5qgvzl4v9n16ywlgdv09ai"; depends=[igraph ]; };
midasr = derive { name="midasr"; version="0.4"; type="cran"; sha256="190qliv7v80rr3jh9yvchwl3ch7nf5b8p90iywp8qkaav5r8rcdy"; depends=[sandwich optimx MASS numDeriv Matrix forecast ]; };
migest = derive { name="migest"; version="1.6"; type="cran"; sha256="1mjjcba74nk10kdbsaphih3zdyaqmf02hrv13s34klwdwkp3nv0m"; depends=[ ]; };
migration_indices = derive { name="migration.indices"; version="0.3.0"; type="cran"; sha256="0h0yjcj70wzpgrv3wl1f2h2wangh1klsllq0i0935plgzw736mwd"; depends=[calibrate ]; };
migui = derive { name="migui"; version="1.1"; type="cran"; sha256="1qchjsc7ff2b6s9w6ncj9knjv6pyp90jd4jxljn2rr1ix1gc45za"; depends=[gWidgets2 mi arm ]; };
mime = derive { name="mime"; version="0.3"; type="cran"; sha256="1i9f9z88cahvb5whdgmp0ipk0b9glk0xn8ik519vzpydnn1slvxk"; depends=[ ]; };
minPtest = derive { name="minPtest"; version="1.7"; type="cran"; sha256="088kckpbfy2yp0pk3zrixrimywrvkaib5ywa7fkr5phnzlsl80sv"; depends=[scrime Epi ]; };
minerva = derive { name="minerva"; version="1.4.1"; type="cran"; sha256="0dg5xnl9srdvid49na8478bnvagv0khiv6hl7z8gw6m745681i89"; depends=[ ]; };
minet = derive { name="minet"; version="3.24.0"; type="bioc"; sha256="126yhbn98048ahnmcc7v8pgk9c2fa669fw84zq4819zq027dqk07"; depends=[infotheo ]; };
minfi = derive { name="minfi"; version="1.12.0"; type="bioc"; sha256="0cz59qcbg6bi7l4kzsdx1jrlwfr720ahpc5f3qap8j5bdhsgjr0i"; depends=[BiocGenerics Biobase lattice GenomicRanges Biostrings bumphunter S4Vectors IRanges beanplot RColorBrewer nor1mix siggenes limma preprocessCore illuminaio matrixStats mclust genefilter nlme reshape MASS quadprog ]; };
miniCRAN = derive { name="miniCRAN"; version="0.2.4"; type="cran"; sha256="1p8kypq0r4sckvdq7qfznfjp3mpjy3cvm9dnwpdfn4dnl4n377z0"; depends=[XML httr ]; };
miniGUI = derive { name="miniGUI"; version="0.8.0"; type="cran"; sha256="1iq52x7wbcin7ya207jj3k9vym7mavm5z61vggyabdmr768pci39"; depends=[ ]; };
minimax = derive { name="minimax"; version="1.0"; type="cran"; sha256="1g0d9q5h1avbb0yg7ajw5330820i3n5cgkpsif754l4j3ikya8p3"; depends=[ ]; };
minimist = derive { name="minimist"; version="0.1"; type="cran"; sha256="007y829d766b1v6wkrhk7pkg99r38bvmhc8bwvs8rs13dr7444ln"; depends=[V8 ]; };
minpack_lm = derive { name="minpack.lm"; version="1.1-8"; type="cran"; sha256="0nvsxqwg3k9k3dqjzkz1vq2z0xla317011zm9ms8y1qvf75raz83"; depends=[ ]; };
minqa = derive { name="minqa"; version="1.2.4"; type="cran"; sha256="036drja6xz7awja9iwb76x91415p26fb0jmg7y7v0p65m6j978fg"; depends=[Rcpp Rcpp ]; };
minque = derive { name="minque"; version="1.1"; type="cran"; sha256="1hx4j38213hs8lssf9kj5s423imk7dzv60mdbzrpbp7la7jk2n57"; depends=[klaR Matrix ]; };
minxent = derive { name="minxent"; version="0.01"; type="cran"; sha256="1a0kak4ff1mnpvc9arr3sihp4adialnxxyaacdgmwpw61wgcir7h"; depends=[ ]; };
mipfp = derive { name="mipfp"; version="2.0"; type="cran"; sha256="1sh33lgvq31nk8vkl9p195v4z3whv2c1fc7bnhc8wxgglm6vc126"; depends=[cmm Rsolnp numDeriv ]; };
mirt = derive { name="mirt"; version="1.9"; type="cran"; sha256="0bav1ykmbw8d64l61iwd4ma2xz4y3z2wqx8ba63583rmbsynkkvk"; depends=[lattice GPArotation Rcpp sfsmisc numDeriv Rcpp ]; };
mirtCAT = derive { name="mirtCAT"; version="0.5"; type="cran"; sha256="0lv4dxpby3izmh3avl70i0iiaj8rz1fpb666cwga5590ks7rq4lr"; depends=[mirt shiny lattice Rcpp markdown Rcpp RcppArmadillo ]; };
misc3d = derive { name="misc3d"; version="0.8-4"; type="cran"; sha256="0qjzpw3h09qi2gfz52b7nhzd95p7yyxsd03fldc9wzzn6wi3vpkm"; depends=[ ]; };
miscF = derive { name="miscF"; version="0.1-2"; type="cran"; sha256="195rb9acdirfhap0z35yvcci5xn4j84mlbafki4l1vfgqgnh0ajj"; depends=[MCMCpack mvtnorm Rcpp RcppArmadillo Rcpp RcppArmadillo ]; };
miscFuncs = derive { name="miscFuncs"; version="1.2-7"; type="cran"; sha256="1cnhd23fi6akr3fsr2b85s5cn36ksy4h3c4iyyjqcpc49wa819d0"; depends=[roxygen2 mvtnorm ]; };
miscTools = derive { name="miscTools"; version="0.6-16"; type="cran"; sha256="19mslb64lm8srrmml1v40rfkxhqw02bplw0yjv7qnkqj44hcqfw1"; depends=[ ]; };
miscset = derive { name="miscset"; version="0.4"; type="cran"; sha256="04cl8a2chcynfn5rljqw2ll4ry0wqaslqgjh9ny8ax3hcvyvmmwl"; depends=[data_table gridExtra Rcpp xtable Rcpp ]; };
missForest = derive { name="missForest"; version="1.4"; type="cran"; sha256="0y02dhrbcx10hfkakg5ysr3kpyrsh2d9i5b0qzhj9x5x0d5q11gp"; depends=[randomForest foreach itertools ]; };
missMDA = derive { name="missMDA"; version="1.7.3"; type="cran"; sha256="1wg4rgziw2f8asdxi2a5dx1mn4z0sd1lf9a8fp7dg29bnv82brmh"; depends=[FactoMineR ]; };
missMethyl = derive { name="missMethyl"; version="1.0.0"; type="bioc"; sha256="054y75q7dlwnrbrx68kjpj9pdb5wx9nhrg3ch8kxfi6kcbymyibk"; depends=[limma minfi methylumi statmod ]; };
mistat = derive { name="mistat"; version="1.0-2"; type="cran"; sha256="1n5wdn5pl6mflzxpdwjj0x44c8a3cxxpwhmyw1jkx5r8yk95mh3p"; depends=[ ]; };
mistral = derive { name="mistral"; version="1.1-1"; type="cran"; sha256="19zkc5ddjzw17y70x3l6maljsfvg0295xyzx7kavmjrws74jx4rc"; depends=[DiceKriging e1071 kernlab Matrix mvtnorm rgenoud ]; };
mitml = derive { name="mitml"; version="0.2-2"; type="cran"; sha256="11pgwa1cxf1i2qkm8gyzxsjkhg40r75gk2k1lwaqpqgi7vs3drbs"; depends=[pan haven ]; };
mitoODE = derive { name="mitoODE"; version="1.4.0"; type="bioc"; sha256="1xaxf61vlfcx02sigmplayak0kc35s3301l42f3lap9236qmiikl"; depends=[minpack_lm MASS KernSmooth ]; };
mitools = derive { name="mitools"; version="2.3"; type="cran"; sha256="0w76zcl8mfgd7d4njhh0k473hagf9ndcadnnjd35c94ym98jja33"; depends=[ ]; };
mix = derive { name="mix"; version="1.0-8"; type="cran"; sha256="0wlp6wkn8dwwnjfq3qzk0hjb3xsjh5ld5zxbd6nf12awpkwa1j9y"; depends=[ ]; };
mixAK = derive { name="mixAK"; version="4.0-5"; type="cran"; sha256="1kdcia6j2dw4q1rbrswx9h8ivzrnw8hrg5a206jykmsdbngbifx5"; depends=[colorspace lme4 fastGHQuad mnormt coda ]; };
mixOmics = derive { name="mixOmics"; version="5.0-4"; type="cran"; sha256="020cy0x7qf6x7lb1aqfr6qflf08k2phnygcjr7lq4z8q9v502qyh"; depends=[MASS lattice RGCCA igraph rgl pheatmap ]; };
mixPHM = derive { name="mixPHM"; version="0.7-1"; type="cran"; sha256="0v75xv06m40jqq0c4y1gvdrmyddxs814djbpyq61fv8cn22fn7wx"; depends=[survival lattice ]; };
mixRasch = derive { name="mixRasch"; version="1.1"; type="cran"; sha256="1r067pv7b54y1bz8p496wxv4by96dxfi2n1c99gziqf5ramx3qzp"; depends=[ ]; };
mixcat = derive { name="mixcat"; version="1.0-3"; type="cran"; sha256="0xszngygd3yj61pvv6jrrb5j0sxgpxzhlic69xrd5mv5iyw0cmxd"; depends=[statmod ]; };
mixdist = derive { name="mixdist"; version="0.5-4"; type="cran"; sha256="100i9mb930mzvdha31m1srylmpa64wxyjv6pkw1g5lhm1hsclwm3"; depends=[ ]; };
mixedMem = derive { name="mixedMem"; version="1.0.2"; type="cran"; sha256="1fkfarvapy40rc4nw3g2znyz9aizqfw1ans4bmhs07aspkml9a8l"; depends=[Rcpp gtools Rcpp RcppArmadillo BH ]; };
mixer = derive { name="mixer"; version="1.8"; type="cran"; sha256="1r831jha7qrxibw5m3nc3l6r887ihzxzsj65yjnbl5cf5b8y19bb"; depends=[ ]; };
mixexp = derive { name="mixexp"; version="1.2.1"; type="cran"; sha256="0yjsngr2akj2hhl1hav2kkp8w0g4775qvnbzypa3c1fmx8kf1xvw"; depends=[gdata lattice daewr ]; };
mixlm = derive { name="mixlm"; version="1.0.8.5"; type="cran"; sha256="1yihyfjbi6y9vs7cgsxxs4nhlhcb67qpcc38ir6p32mzs6r8ycl3"; depends=[multcomp pls pracma leaps lme4 car ]; };
mixlow = derive { name="mixlow"; version="1.0.1"; type="cran"; sha256="12vnp3gl3ykxzgvc4bwhi4flmc1sl2y77yi0zi4by17q93a49akm"; depends=[nlme ]; };
mixor = derive { name="mixor"; version="1.0.2"; type="cran"; sha256="1xkwgk4dvjbpqvvbrb8yb88iz4nkv7sykxaygjq7zfcdrdivxz6n"; depends=[ ]; };
mixreg = derive { name="mixreg"; version="0.0-5"; type="cran"; sha256="0wsb1z98ymhshw9nhsvlszsanflxv3alwpdsw8lr3v62bkwka8zr"; depends=[ ]; };
mixsep = derive { name="mixsep"; version="0.2.1-2"; type="cran"; sha256="1ywwag02wbx3pkd7h0j9aab44bdmwsaaz0p2pcqn1fs3cpw35wa2"; depends=[tcltk2 MASS RODBC ]; };
mixsmsn = derive { name="mixsmsn"; version="1.0-9"; type="cran"; sha256="0pgip1xfgfrdy3g3197d7visn164zi7xnp6wlsgjwxdylvjsxkji"; depends=[mvtnorm ]; };
mixtNB = derive { name="mixtNB"; version="1.0"; type="cran"; sha256="0lqbm1yl54zfs0xcmf3f2vcg78rsqyzlgvpydhmhg7x6dkissb22"; depends=[ ]; };
mixtools = derive { name="mixtools"; version="1.0.3"; type="cran"; sha256="01ix019cvplqz09q55pz9w7cc281k37khh1i3xf1k6l9f2cj519z"; depends=[boot MASS segmented ]; };
mixture = derive { name="mixture"; version="1.4"; type="cran"; sha256="0k9pzcgfjyp0rmcma26kr2n8rcwmijznmdpvqidgl3jay20c87ca"; depends=[ ]; };
mizer = derive { name="mizer"; version="0.2"; type="cran"; sha256="0cpal9lrjbvc923h499hbv4pqw3yjd4jvvhgayxgkak2lz2jzmcz"; depends=[plyr reshape2 ggplot2 ]; };
mkde = derive { name="mkde"; version="0.1"; type="cran"; sha256="04v84arpnmjrkk88ffphnhkz32x7y0dypk75jfmbbgcgv59xlglv"; depends=[Rcpp raster sp Rcpp ]; };
mkin = derive { name="mkin"; version="0.9-35"; type="cran"; sha256="0ac71wkl8b034l1bbv8qr5ynvpl8l9j31ych5v5pf6mmqs62bwnr"; depends=[minpack_lm rootSolve FME deSolve ]; };
mkssd = derive { name="mkssd"; version="1.1"; type="cran"; sha256="1qqzy6fn6sc3lxahc19hzzf1hzxsyvxqi7npynw0vkknlrvh2ijp"; depends=[ ]; };
mlDNA = derive { name="mlDNA"; version="1.1"; type="cran"; sha256="0d9lydiwar98hin26slnym4svn0g1xmyn212vvzsx9lzlvs5a9k4"; depends=[snowfall igraph rsgcc e1071 randomForest pROC ROCR ]; };
mlPhaser = derive { name="mlPhaser"; version="0.01"; type="cran"; sha256="1s2mqlnbcjdkx0ghvr2sw9rzggqa4jy2vzi9vbyqkh6795lgck6n"; depends=[ ]; };
mlbench = derive { name="mlbench"; version="2.1-1"; type="cran"; sha256="1rp035qxfgh5ail92zjh9jh57dj0b8babw3wsg29v8ricpal30bl"; depends=[ ]; };
mldr = derive { name="mldr"; version="0.1.70"; type="cran"; sha256="08yiglqzlqxlfrxd7l12x59h7a38skrkkf8w7jh620ab7a7w1gyg"; depends=[shiny XML circlize ]; };
mlearning = derive { name="mlearning"; version="1.0-0"; type="cran"; sha256="0r8xfaxw83s2r27b8x5qd0k4r5ayxpkafzn9b1a0jvsr87i6520r"; depends=[class nnet MASS e1071 randomForest ipred ]; };
mlegp = derive { name="mlegp"; version="3.1.4"; type="cran"; sha256="1932544irhzhf6a8rjyh66j57h9awlhwd6xam603bamfg106cmg2"; depends=[ ]; };
mleur = derive { name="mleur"; version="1.0-6"; type="cran"; sha256="0mddphq3b6y2jaafaa9y41842kcaqdl3dh7j4pva55q2vcjcclj7"; depends=[urca stabledist fGarch lattice ]; };
mlgt = derive { name="mlgt"; version="0.16"; type="cran"; sha256="1nvdq6mvgr39ikkf73aggsb6pmbw132injj8fdkr8hgcmwm6lgd9"; depends=[seqinr ]; };
mlica2 = derive { name="mlica2"; version="2.1"; type="cran"; sha256="0c3m1zd9x99n6lw12hfzmd59355z51xa8rhg1h7qwfn9p86r826f"; depends=[ ]; };
mlmRev = derive { name="mlmRev"; version="1.0-6"; type="cran"; sha256="0mvmahnbbp478xwldj4wlsjib4v4afhs07643gxgcqpi56zbd5h7"; depends=[lme4 ]; };
mlmmm = derive { name="mlmmm"; version="0.3-1.2"; type="cran"; sha256="1m5ziiqs3ll1xjm1yf7x4sdc910jypn3kjnbadf95xxkvqmfrsqq"; depends=[ ]; };
mlogit = derive { name="mlogit"; version="0.2-4"; type="cran"; sha256="15ndly7i56k8blgvpn15ixxnqx9yvbci7n3mb3hm9mnrxwh5v7sx"; depends=[Formula maxLik statmod zoo MASS lmtest ]; };
mlogitBMA = derive { name="mlogitBMA"; version="0.1-6"; type="cran"; sha256="1wl8ljh6rr1wx7dxmd1rq5wjbpz3426z8dpg7pkf1x9wr94a2q25"; depends=[BMA abind maxLik ]; };
mlr = derive { name="mlr"; version="2.3"; type="cran"; sha256="0cvg2bxxw3c69lj5wy4ds54wn5h299c5mjcsbax1p0k408z5aa6z"; depends=[ParamHelpers BBmisc ggplot2 checkmate parallelMap plyr reshape2 survival ]; };
mlxR = derive { name="mlxR"; version="2.1.1"; type="cran"; sha256="13ddm4hhnjx7r058qlvvxn9npqa0vq6y5l1g0zrlhckjp7bpp90a"; depends=[ggplot2 XML Rcpp ]; };
mma = derive { name="mma"; version="2.0-0"; type="cran"; sha256="0fdb2lbg08l47wnrsjf3rarf2n0qsw0qrx9b9aa08ablwpip4k69"; depends=[gbm ]; };
mmand = derive { name="mmand"; version="1.1.0"; type="cran"; sha256="0awi9wxxalz81d6766djbjsk980n65dhz02fcqb69ifc7x80lc33"; depends=[reportr Rcpp Rcpp RcppArmadillo ]; };
mmap = derive { name="mmap"; version="0.6-12"; type="cran"; sha256="12ql03wzwj23h8lwd07rln6id44mfrgf9wcxn58y09wn3ky1rm6a"; depends=[ ]; };
mmcm = derive { name="mmcm"; version="1.2-5"; type="cran"; sha256="193mlvl8fp5y2150m0xw5bhr7nkr4fgmwjbv1dg314a7ara42v4y"; depends=[mvtnorm ]; };
mmds = derive { name="mmds"; version="1.1"; type="cran"; sha256="0f5qzkfhi7vg8vsd8r41idmbwrrgc7qzfnp81adms2yzrza17wrw"; depends=[ ]; };
mme = derive { name="mme"; version="0.1-5"; type="cran"; sha256="07k1xagwpyzsrlc00y9xlaxcpwdhz55v567i7fzvqa96ical8nlf"; depends=[MASS Matrix ]; };
mmeln = derive { name="mmeln"; version="1.1"; type="cran"; sha256="06bxp157cdab6ghx3yrsn8l2gixh9cyv6fv4pqyq0yxqwbjf9bmi"; depends=[ ]; };
mmeta = derive { name="mmeta"; version="2.2"; type="cran"; sha256="06zkazi97f3il2vlx4f8c7zz4kxs9ylhscd06j31h504c1w96ddf"; depends=[aod HI ]; };
mmm = derive { name="mmm"; version="1.4"; type="cran"; sha256="1nydian004nldqhyw3x15w6qfml2gkjc0x8ii54faz563byjv3d8"; depends=[gee ]; };
mmm2 = derive { name="mmm2"; version="1.2"; type="cran"; sha256="1h9pn5s3jjs4bydrr1qysjb4hv7vs4h3m7mvi22ggs2dzyz3b298"; depends=[gee ]; };
mmnet = derive { name="mmnet"; version="1.4.0"; type="bioc"; sha256="1brgl3bnxja3z8wrny9d53ir7yk8qsdl02dr46055spck5p5ngkd"; depends=[igraph biom Biobase RJSONIO stringr reshape2 ggplot2 KEGGREST plyr XML RCurl flexmix Matrix ]; };
mmod = derive { name="mmod"; version="1.2.1"; type="cran"; sha256="0c2ijg5116hacq0f18xhkbxankjp0k34zfnw8q02ahzwd26ds0z7"; depends=[adegenet pegas ]; };
mmpp = derive { name="mmpp"; version="0.1"; type="cran"; sha256="1m2079vz4h3h90ikh268jwh20ink5n1mri8n7aj50xkfspmwsmpg"; depends=[ ]; };
mnlogit = derive { name="mnlogit"; version="1.2.1"; type="cran"; sha256="0sanys9y64wlqqclsl2p8bghh62apzxnyjshaihdvvy02y7cnzcw"; depends=[mlogit lmtest Formula ]; };
mnormpow = derive { name="mnormpow"; version="0.1.1"; type="cran"; sha256="0z53vwhkhkkr6zrjhd3yr14mb02vh7lr63frf0ivajndxiap0s9v"; depends=[ ]; };
mnormt = derive { name="mnormt"; version="1.5-2"; type="cran"; sha256="0k3mj7yyh599z93iw8zhfwvj6xjl4g2wzs3hdj1df7vbz1yynp8i"; depends=[ ]; };
modMax = derive { name="modMax"; version="1.0"; type="cran"; sha256="0p8vnlbw53lqbaq3819jhixq6ns2lwxf56w2md7y98rshf92h474"; depends=[gtools igraph ]; };
modTempEff = derive { name="modTempEff"; version="1.5.2"; type="cran"; sha256="00xdvc0i3p8wq913giy44w0xz07sa4bdgqpi7pmpbv2c5wj30pk1"; depends=[mgcv ]; };
modeest = derive { name="modeest"; version="2.1"; type="cran"; sha256="0l4y7yhkgsxycdd2lck0g8g6k2r059hwlrrcpl46md3rva4jgbnp"; depends=[ ]; };
modehunt = derive { name="modehunt"; version="1.0.6"; type="cran"; sha256="15rq1yyrjhsn2rlkyiqj36jvji635hy6jsih845mfxdpn4vnssa3"; depends=[ ]; };
modelfree = derive { name="modelfree"; version="1.1-1"; type="cran"; sha256="0ammka2wxx90z31zfzypw9dk5n118l0vxhykxbx6srfig2vdyn82"; depends=[PolynomF SparseM ]; };
modeltools = derive { name="modeltools"; version="0.2-21"; type="cran"; sha256="0ynds453xprxv0jqqzi3blnv5w6vrdww9pvd1sq4lrr5ar3k3cq7"; depends=[ ]; };
modiscloud = derive { name="modiscloud"; version="0.14"; type="cran"; sha256="0vwhfp50yb21xkanvzk983vk0laflv60kj1ybx3fydfljwqx0rwj"; depends=[date sp sfsmisc raster rgdal ]; };
moduleColor = derive { name="moduleColor"; version="1.08-3"; type="cran"; sha256="183l968l49b7jbmvsjjnmk1xd36cpjkp777c00gw1f73h6nb2na8"; depends=[impute dynamicTreeCut ]; };
mokken = derive { name="mokken"; version="2.7.7"; type="cran"; sha256="1v0khh1bb2h7j2x54mdw8vqlimhw25r2ps89hw4l88qfaz05ir77"; depends=[poLCA ]; };
mombf = derive { name="mombf"; version="1.5.9"; type="cran"; sha256="0lc3rrmm2vsa4mg2zkbhp5dpnps7w0ld35lav19ff86kccspw1rg"; depends=[mvtnorm ncvreg actuar mgcv survival ]; };
momentchi2 = derive { name="momentchi2"; version="0.1.0"; type="cran"; sha256="02k4hzhqmqh7sx7dzb6w84fc1f5523md3284y4gvdbaw9y34ayk8"; depends=[ ]; };
moments = derive { name="moments"; version="0.14"; type="cran"; sha256="0f9y58w1hxcz4bqivirx25ywlmc80gbi6dfx5cnhkpdg1pk82fra"; depends=[ ]; };
mondate = derive { name="mondate"; version="0.10.01.02"; type="cran"; sha256="18v15y7fkll47q6kg7xzmj5777bz0yw4c7qfiw2bjp0f3b11qrd2"; depends=[ ]; };
mongolite = derive { name="mongolite"; version="0.3"; type="cran"; sha256="022b3ibahb2bq48hhgcli91hwsfxadimzdh0pyrhzi8vh5da9613"; depends=[jsonlite ]; };
monitoR = derive { name="monitoR"; version="1.0.3"; type="cran"; sha256="0g2dhyz3411pa6kcsmmi9x77ygvdrvas3k9ps0w2r69mfab785c6"; depends=[tuneR ]; };
monmlp = derive { name="monmlp"; version="1.1.2"; type="cran"; sha256="14x6xz07hg2c5n36rc314z66jqvgmicjxi2vsqyy91vwjxs9akrm"; depends=[ ]; };
monocle = derive { name="monocle"; version="1.0.0"; type="bioc"; sha256="07i77c7hicfd00b8y0y6gkd6ffach0s67awl69q3xzjlvhv6yq5b"; depends=[Biobase ggplot2 VGAM igraph plyr BiocGenerics cluster combinat fastICA irlba matrixStats reshape2 limma ]; };
monomvn = derive { name="monomvn"; version="1.9-5"; type="cran"; sha256="1fh0c1234hb5f3rwy85i4rlzc3n1851q5mivckcjs2vdm9rz25mg"; depends=[pls lars MASS ]; };
monreg = derive { name="monreg"; version="0.1.3"; type="cran"; sha256="08rcg2xffa61cgqy8g98b0f7jqhd4yp8nx6g4bq3g722aqx4nfg3"; depends=[ ]; };
moonBook = derive { name="moonBook"; version="0.1.3"; type="cran"; sha256="1wy8qwzymh482gfb4v9v74k666mq8dz2yird7gz43l3hps22kfgb"; depends=[nortest survival ]; };
moonsun = derive { name="moonsun"; version="0.1.3"; type="cran"; sha256="1y8mwxmcy4iz444c2fayyi4i0jk1k561dp6cbjg2b3lmdml0whmi"; depends=[ ]; };
mopsocd = derive { name="mopsocd"; version="0.5.1"; type="cran"; sha256="10hssnm1afqmxa9kw6ifqnz3p3yyjrmxgi98zlj31a5g4nis8wb1"; depends=[ ]; };
morgenstemning = derive { name="morgenstemning"; version="1.0"; type="cran"; sha256="17y90cf8ajmkfwla0hm4jgkbkd1mxnym63ph2468sfxkhn0r3v88"; depends=[ ]; };
morse = derive { name="morse"; version="1.0.2"; type="cran"; sha256="044aljv48mfq6yj9i77yqf03qa4qqkncaalzhph3wr9w4jvxpxn5"; depends=[plyr ]; };
mosaic = derive { name="mosaic"; version="0.10.0"; type="cran"; sha256="0hhln6kfxdk6z4rmi3378cs18ziwa5awi53ylnx5kva7f42m5jxr"; depends=[car dplyr lattice ggplot2 mosaicData lazyeval MASS reshape2 plyr readr latticeExtra gridExtra ggdendro ]; };
mosaicData = derive { name="mosaicData"; version="0.9.1"; type="cran"; sha256="0gxnw3x806pm97x1043qq3qf1cwn1z1771cayp3xlh5khn5bijk7"; depends=[ ]; };
mosaics = derive { name="mosaics"; version="2.0.1"; type="bioc"; sha256="0gmhlg34vhdzn9dg5g8l1xndrs54c4ijwi5b5hvnij09wagi4557"; depends=[Rcpp MASS lattice IRanges Rcpp ]; };
motifRG = derive { name="motifRG"; version="1.10.0"; type="bioc"; sha256="1bsj18j0cnj31njy5l4n6dwxxxdbv1xyqjn5v9ql8whya6rq4s2j"; depends=[Biostrings IRanges seqLogo BSgenome XVector IRanges seqLogo XVector ]; };
motifStack = derive { name="motifStack"; version="1.10.2"; type="bioc"; sha256="1ypy92cbdw4iksf0ivxqk7jnz91cmm3n48qsh8b9gbc72wrdw45r"; depends=[grImport MotIV ade4 XML ]; };
moult = derive { name="moult"; version="1.4"; type="cran"; sha256="0nglf7wijp2v66fpyh88glbn1glp8vvkbvpc1g6136bg6ahbbkkl"; depends=[Formula Matrix ]; };
mountainplot = derive { name="mountainplot"; version="1.0"; type="cran"; sha256="1hjmzig0s4vjlkpqhvf4v6z2gd8ljy14z5n1m9y21is9yp2cy6xf"; depends=[lattice ]; };
mousetrack = derive { name="mousetrack"; version="1.0.0"; type="cran"; sha256="0lf0xh0c3xl27nh5w8wwyrm2jfzfajm2f73xjdgf746dp365qc8n"; depends=[pracma ]; };
movMF = derive { name="movMF"; version="0.2-0"; type="cran"; sha256="1p9ay7w93gyx4janw23iwg2j0wkvnvzalaa20n1rlahhmh327g7i"; depends=[skmeans clue slam ]; };
move = derive { name="move"; version="1.4.496"; type="cran"; sha256="0p20c6rqxk299pqd10icq4a59yn152jfnwh6sw48sg8cc9wp24k3"; depends=[geosphere sp raster rgdal ]; };
mp = derive { name="mp"; version="0.2.0"; type="cran"; sha256="1vpjrx04yn1rdmrhj42rhc757cj02sghrv0i5jfm4k2y28ab7qh1"; depends=[svd Rcpp Rcpp RcppArmadillo ]; };
mpMap = derive { name="mpMap"; version="1.14"; type="cran"; sha256="0gmhg5ps8yli8699a5aw26skfbjxx4zpp0paqxxdc0zl28l0pdff"; depends=[gdata seriation qtl wgaim ]; };
mpa = derive { name="mpa"; version="0.7.3"; type="cran"; sha256="0mhnsbgr77fkn957zfiw8skyvgd084rja1y4wk5zf08q5xjs2zvn"; depends=[network ]; };
mpath = derive { name="mpath"; version="0.1-17"; type="cran"; sha256="031mf0b32435y0cfar7zh9d1wd62ghqpspipin1cjhvnr2lyzw21"; depends=[MASS glmnet pscl numDeriv ]; };
mpcv = derive { name="mpcv"; version="1.1"; type="cran"; sha256="0vwycspiw9saj811f6alkbijivy7szpahf35bxn2rpn2bdhbn21i"; depends=[lpSolve ]; };
mph = derive { name="mph"; version="0.9"; type="cran"; sha256="11wcy23sv8x7aq6ky8wi0cq55yhjkkm9hn672qy803dwzzxv5y61"; depends=[ ]; };
mpm = derive { name="mpm"; version="1.0-22"; type="cran"; sha256="0wijw8v0wmbfrda5564cmnp788qmlkk21yn5cp5qk8aprm9l1fnk"; depends=[MASS KernSmooth ]; };
mpmcorrelogram = derive { name="mpmcorrelogram"; version="0.1-3"; type="cran"; sha256="0qgzsh744002whh3v1hrxs1i0xnk9zgfgkdgx2f0ffj00vvnwr97"; depends=[vegan ]; };
mpmi = derive { name="mpmi"; version="0.41"; type="cran"; sha256="1iwdhvdglsamzq18f0r5mh0anrd4ffrddafdlbw16kr8jy0c8fdn"; depends=[KernSmooth ]; };
mpoly = derive { name="mpoly"; version="0.1.0"; type="cran"; sha256="0q0ypaj1r12yc72b6qb22rvgrzc703v4n7ns2yg1n9ff20y5m4z0"; depends=[stringr rSymPy rJython rJava rjson partitions plyr ]; };
mppa = derive { name="mppa"; version="1.0"; type="cran"; sha256="06v6vq2nfh4b407x2gyvcp5wbdrcnk3m8y58akapi66lj8xplcx4"; depends=[ ]; };
mpt = derive { name="mpt"; version="0.5-1"; type="cran"; sha256="1b6n7kivkj4ndcc27jmznx9dh40kvjjk7hfxh21kmnknl5ap4ffb"; depends=[ ]; };
mra = derive { name="mra"; version="2.16.4"; type="cran"; sha256="134fw4bv34bycgia58z238acj7kb8jkw51pjfa2cwprrgsjdpf5g"; depends=[ ]; };
mratios = derive { name="mratios"; version="1.3.17"; type="cran"; sha256="0a2pn4234ri5likaqbxgkw8xqmwchr6fak3nninral0yzd4rcal5"; depends=[mvtnorm ]; };
mrds = derive { name="mrds"; version="2.1.12"; type="cran"; sha256="1v7lv3ssg9m8bx2gskzf31lkg3sxsdkvknrdx9aawdh3mzxwcys7"; depends=[optimx mgcv Rsolnp ]; };
mreg = derive { name="mreg"; version="1.1"; type="cran"; sha256="06la0yy2yys161jhlzlcm5lcv0664wm6sa8gjdnpd1s1nx52jkqf"; depends=[ ]; };
mritc = derive { name="mritc"; version="0.5-0"; type="cran"; sha256="1344x7gc7wvmcqp0sydppavavvps5v7bs0dza2fr8rz3sn4as8sa"; depends=[lattice misc3d oro_nifti ]; };
msBP = derive { name="msBP"; version="1.0-2.1"; type="cran"; sha256="1yprhglqykh6v2jicab25a0ny1r49kaj3i04fspi3was2md2qbzd"; depends=[DPpackage ]; };
msSurv = derive { name="msSurv"; version="1.2-2"; type="cran"; sha256="02qm3mq17d2yj5mbz6gapd3zfi1wmiad5hpyimcb39impk43n2hf"; depends=[graph class lattice ]; };
msap = derive { name="msap"; version="1.1.8"; type="cran"; sha256="0z5lm782jjb9w1h5vgz8bmxjdcrq9zb3xp1w5cb479jjc7krlgg3"; depends=[ade4 ape ]; };
msarc = derive { name="msarc"; version="1.4.5"; type="cran"; sha256="1jv364502m6q2w039dmdhwsx5id39jc4xcabyrbwbrgy65kwfspg"; depends=[AnnotationDbi gplots XLConnect wordcloud RColorBrewer ]; };
msda = derive { name="msda"; version="1.0.2"; type="cran"; sha256="05khpa5qasnngn6yvk87gv5262plqpw4knb6hzgy52w401k0y80r"; depends=[Matrix MASS ]; };
mseapca = derive { name="mseapca"; version="1.0"; type="cran"; sha256="115njdk8cv55zxd38hq9qaca686ykckni0f3xl8w3bn32gb5g9a7"; depends=[XML ]; };
msgl = derive { name="msgl"; version="2.0.125.1"; type="cran"; sha256="1k2n8yn9j5sknw95saq2zgl3jfanyp3c2xyj49wqgawhwsw81jdh"; depends=[Matrix sglOptim Rcpp RcppProgress RcppArmadillo BH sglOptim ]; };
msgpackR = derive { name="msgpackR"; version="1.1"; type="cran"; sha256="0a6vm4q1zfy8wlvhl9wfy09ig1iag9fvjasz5w9bll7idky4ldx5"; depends=[ ]; };
msgps = derive { name="msgps"; version="1.3"; type="cran"; sha256="0nvxy9a41z5d111gqr1gh521imm795l1li70g1mzrag1gpg810c5"; depends=[ ]; };
msir = derive { name="msir"; version="1.3"; type="cran"; sha256="0d7zxjmhr1ri3qz3fdkf56fi5dz2p9lb2vyqccrpn7js2ibkqhpl"; depends=[mclust ]; };
msm = derive { name="msm"; version="1.5"; type="cran"; sha256="12vw5qmrvmpvg371fx4g55ydwa83y433z6v25b7pnl5hcbc8kfj4"; depends=[survival mvtnorm expm ]; };
msme = derive { name="msme"; version="0.5.1"; type="cran"; sha256="1bkj10pgmv9q61384fwd2pxccclclc3knc5x212p42w4w49hnm1q"; depends=[MASS lattice ]; };
msmsEDA = derive { name="msmsEDA"; version="1.4.0"; type="bioc"; sha256="1s4gahc6n973d76vdz9hk5wiqs6d28xfm1jzvh0pw40igx475l2b"; depends=[MSnbase MASS gplots RColorBrewer ]; };
msmsTests = derive { name="msmsTests"; version="1.4.0"; type="bioc"; sha256="19dfzvq1kdiwchijs9z367cggrvgh6f45kdn4585qn65pyii0fva"; depends=[MSnbase msmsEDA edgeR qvalue ]; };
msos = derive { name="msos"; version="1.0.1"; type="cran"; sha256="0fbxi8x83sj8a6bahc7q28vql00pxqdia2vxb6ilsc459xaph6vc"; depends=[mclust tree ]; };
msr = derive { name="msr"; version="0.4.1"; type="cran"; sha256="1kfj6xq7l32ligc53akiym3s9if87087gan8nqz4w7d8nxp693s7"; depends=[Matrix class glmnet e1071 rgl RColorBrewer colorspace ]; };
mstate = derive { name="mstate"; version="0.2.7"; type="cran"; sha256="0rys25cwr814k8z65206s12yv18dala66b3nlfq882dw5cfpaybl"; depends=[survival RColorBrewer ]; };
mtk = derive { name="mtk"; version="1.0"; type="cran"; sha256="0vq2xlxf86l92fl91qm8m4yfjyz1h8szmwxiics7sc9f0as0dkmy"; depends=[stringr XML sensitivity lhs rgl ]; };
mtsdi = derive { name="mtsdi"; version="0.3.3"; type="cran"; sha256="1hx4m1jnfhkycxizxaklnd9illajqvv1nml8ajfn3kjmrb5z7qlp"; depends=[gam ]; };
muStat = derive { name="muStat"; version="1.7.0"; type="cran"; sha256="18727xj9i9hcnpdfnl1b9wd6cp7wl1g74byqpda2gsrcardl57wz"; depends=[ ]; };
muhaz = derive { name="muhaz"; version="1.2.6"; type="cran"; sha256="1b7gzygbb5qss0sf9kdwp7rnj8iz58yq9267n9ffqsl9gwiwa1b7"; depends=[survival ]; };
muir = derive { name="muir"; version="0.1.0"; type="cran"; sha256="0h3qaqf549v40ms7c851sspaxzidmdpcj89ycdmfp94b2q3bmz98"; depends=[DiagrammeR dplyr stringr ]; };
multcomp = derive { name="multcomp"; version="1.4-0"; type="cran"; sha256="1n1qbg7amk385ryni97qdbzcinpwpxldl3r477r1kfgv8csynxhj"; depends=[mvtnorm survival TH_data sandwich codetools ]; };
multcompView = derive { name="multcompView"; version="0.1-5"; type="cran"; sha256="0vfgvqxqgxyifkqs3r5xxj7rfn8lfmby6wyyiqa5jv01073xchib"; depends=[ ]; };
multgee = derive { name="multgee"; version="1.5.1"; type="cran"; sha256="1ycbbri26hahbi3q4mrsyhrh9bwj89dyv6gvrpx58ghrlsnakjy1"; depends=[gnm VGAM ]; };
multiAssetOptions = derive { name="multiAssetOptions"; version="0.1-1"; type="cran"; sha256="1kb4qxyl9shvrpqfxq26lhh3sssmyjcnhhcl6gcbb0s86snh9ms9"; depends=[Matrix ]; };
multiDimBio = derive { name="multiDimBio"; version="0.3.3"; type="cran"; sha256="1aj6yam31mr0abjb6m5m85r1w71snha4s7h4ikyw66sc73xkmb9m"; depends=[ggplot2 lme4 pcaMethods misc3d MASS RColorBrewer ]; };
multiPIM = derive { name="multiPIM"; version="1.4-3"; type="cran"; sha256="0j7d0cgs8zcyiyibzmfhcandad76sf4gm57wkcv98bf96wkls58l"; depends=[lars penalized polspline rpart ]; };
multiband = derive { name="multiband"; version="0.1.0"; type="cran"; sha256="1f4gmy0yf9zid7kl05zncvvig6hs4nl1h9wkrkc24rxx9risw9k9"; depends=[ ]; };
multibiplotGUI = derive { name="multibiplotGUI"; version="0.0-1"; type="cran"; sha256="14zgn86zwwdchhr5dzqxxxsf0dy6kny4ixvd77y08454lni0a69r"; depends=[rgl tkrplot RODBC ]; };
multic = derive { name="multic"; version="0.3.8.1"; type="cran"; sha256="06lc9kn0z3s7x00hz8vj903q0c6cncnj4v3ygvd2yvkgcbhfvjd0"; depends=[ ]; };
multicon = derive { name="multicon"; version="1.6"; type="cran"; sha256="16glkgnm4vlpxkhf1xw1gl1q10yavx9479i21v29lldag35z8pqx"; depends=[psych abind foreach mvtnorm sciplot ]; };
multicool = derive { name="multicool"; version="0.1-6"; type="cran"; sha256="0hzwxrcsz7dm4ilv8rpkcwi61ssym94ki8ayssfh2r2ghy9w9xlw"; depends=[Rcpp Rcpp ]; };
multigroup = derive { name="multigroup"; version="0.4.4"; type="cran"; sha256="1r79zapziz3jkd654bwsc5g0rphrk9hkp1fpik8jvjsa1cix40mq"; depends=[MASS ]; };
multilevel = derive { name="multilevel"; version="2.5"; type="cran"; sha256="0pzv5xc8p6cpzzv9iq3a3ib1dcan445mm12whf3d6qkz2k4778g6"; depends=[nlme MASS ]; };
multilevelPSA = derive { name="multilevelPSA"; version="1.2.2"; type="cran"; sha256="0z3qnv14sdkfvyw2wjrfz26r7sr7vv3rlr8n4gf99rwv6k34bdsg"; depends=[ggplot2 xtable PSAgraphics plyr psych reshape proto party ]; };
multimark = derive { name="multimark"; version="1.1.4"; type="cran"; sha256="045lfgzxwz4m1y5gny2y92cmix6wxi1sl486gajal2scfib31rgv"; depends=[statmod Matrix RMark coda Brobdingnag mvtnorm ]; };
multinbmod = derive { name="multinbmod"; version="1.0"; type="cran"; sha256="1c4jyzlcjkqdafj9b6hrqp6zs33q6qnp3wb3d7ldlij7ns9fhg71"; depends=[ ]; };
multinomRob = derive { name="multinomRob"; version="1.8-6.1"; type="cran"; sha256="1fdjfk77a79fy7jczhpd2jlbyj6dyscl1w95g64jwxiq4hsix9s6"; depends=[rgenoud MASS mvtnorm ]; };
multipleNCC = derive { name="multipleNCC"; version="1.0"; type="cran"; sha256="13z6yq77h1r6kp8wgza58c6yp9a1gqm0w36x534mxbhcmingdw9f"; depends=[survival gam ]; };
multipol = derive { name="multipol"; version="1.0-6"; type="cran"; sha256="1yjz0p4mcgzs98s61i8315wyhh986jxp8b0lq66375ckpr2ddcss"; depends=[abind ]; };
multirich = derive { name="multirich"; version="2.0.2"; type="cran"; sha256="1lqc4np45p9ar9l8l1m5bdh98fsmhvzj8s0b2mcp9cqrvnhp1irc"; depends=[ ]; };
multiscan = derive { name="multiscan"; version="1.26.0"; type="bioc"; sha256="027ccaqmf84bkbjy9j5jq91pjx3b3cycn6fbyjc2w0f7prcx394q"; depends=[Biobase ]; };
multisensi = derive { name="multisensi"; version="1.0-8"; type="cran"; sha256="168g6hym5chz69wa3vfprg1m1c935wh7bi3gfz5calxiqf89mncz"; depends=[ ]; };
multispatialCCM = derive { name="multispatialCCM"; version="1.0"; type="cran"; sha256="1fzd91w10iln8qb81z240lq3fi4gq22l4rh9npkav6fiq6g6rlp8"; depends=[ ]; };
multitable = derive { name="multitable"; version="1.6"; type="cran"; sha256="067bgl793wwvb1rhan70ih0ga3dxja2c6zx7fwzml5rqi6p728pr"; depends=[ ]; };
multitaper = derive { name="multitaper"; version="1.0-11"; type="cran"; sha256="1s0lmjzpyd7zmc2p1ywv5fm7qkq357p70b76gw9wjlms6d81j1n4"; depends=[ ]; };
multivator = derive { name="multivator"; version="1.1-4"; type="cran"; sha256="125ifkpm1pny4rjpzirnwpmpjfg0y8w0rygj0way0p1qwm0l207n"; depends=[emulator mvtnorm ]; };
multiway = derive { name="multiway"; version="1.0-0"; type="cran"; sha256="1yp9cgi5pkby1qszc8qrw3pv8q254cr6grhmdlmaf2yrhmpfahv9"; depends=[ ]; };
multiwayvcov = derive { name="multiwayvcov"; version="1.2.1"; type="cran"; sha256="15gxcrg2i1aqbxkif5dmdz81yzqj7a4hq0dcd0narzsvm5b4w9py"; depends=[sandwich boot ]; };
multtest = derive { name="multtest"; version="2.22.0"; type="bioc"; sha256="1kcz6h91qz0n0vi7dphw6rdzy1i1c0xd41q4bgqhmg0mi44m0k78"; depends=[Biobase survival MASS ]; };
multxpert = derive { name="multxpert"; version="0.1"; type="cran"; sha256="03mvf4m0kabm22vy4zkj1cfh884larpj8cbgg3p9l3pag20snf1l"; depends=[mvtnorm ]; };
muma = derive { name="muma"; version="1.4"; type="cran"; sha256="0midx3wzyvcz8rk9kvsfll3xg41pkz40si4jw2ps54ykkf9rkm99"; depends=[car pdist pls gplots mvtnorm robustbase gtools bitops caTools pcaPP rrcov ]; };
munfold = derive { name="munfold"; version="0.3-3"; type="cran"; sha256="1szm3c1xi1s7r1w6h7xb4x538sbczrblb70a3ysxf4q8c1ihmly9"; depends=[memisc MASS ]; };
munsell = derive { name="munsell"; version="0.4.2"; type="cran"; sha256="1bi5yi0i80778bbzx2rm4f0glpc34kvh24pwwfhm4v32izsqgrw4"; depends=[colorspace ]; };
musicNMR = derive { name="musicNMR"; version="0.0.2"; type="cran"; sha256="09xxc78ajk428yc3617jfxqp5fy89nfc24f1rig6cw28fflwqj0k"; depends=[seewave ]; };
mutoss = derive { name="mutoss"; version="0.1-10"; type="cran"; sha256="1pijr3admnciiwdgxbdac4352m7h08jyvpj7vdd27yx07wp2rri3"; depends=[mvtnorm plotrix multtest multcomp ]; };
mutossGUI = derive { name="mutossGUI"; version="0.1-9"; type="cran"; sha256="1xdby6n0w1155kx6mhinvgqm0ssgyy4443pkq3k88a5s4bfxw5bw"; depends=[mutoss multcomp plotrix rJava JavaGD CommonJavaJars JGR ]; };
mvGST = derive { name="mvGST"; version="1.0.0"; type="bioc"; sha256="0p6msfkj5qa29b0g3p87wcryn0gq9vfhcc3y8rx2j1f01qb1raif"; depends=[Rgraphviz gProfileR stringr topGO GOstats annotate AnnotationDbi graph ]; };
mvMORPH = derive { name="mvMORPH"; version="1.0.5"; type="cran"; sha256="184ywvgi2dz77ivl2g7spx065wh1ap2lpmvbrhik9sgysygkijs2"; depends=[phytools ape corpcor subplex spam ]; };
mvProbit = derive { name="mvProbit"; version="0.1-0"; type="cran"; sha256="0fnrlralydlsf9iphq385f8hpqigfmi8rafvgp443gygvpq5b6g0"; depends=[mvtnorm maxLik abind bayesm miscTools ]; };
mvSLOUCH = derive { name="mvSLOUCH"; version="1.1.5"; type="cran"; sha256="1cq1j4f1k0xhq2ncmji1a4p4m6h7k2afsr39abib4g3md902v0hp"; depends=[ouch ape numDeriv mvtnorm corpcor ]; };
mvShapiroTest = derive { name="mvShapiroTest"; version="1.0"; type="cran"; sha256="0zcv5l28gwipkmymk12l4wcj9v047pr8k8q5avljdrs2a37f74v1"; depends=[ ]; };
mvabund = derive { name="mvabund"; version="3.10.4"; type="cran"; sha256="1hza09nghgz0iyfayqabf5d0yb6zqnvhwmprif6y9qix8jscilwl"; depends=[Rcpp MASS tweedie statmod ]; };
mvbutils = derive { name="mvbutils"; version="2.7.4.1"; type="cran"; sha256="1vs97yia78xh35sdfv5pj3ddqmy83qgamvyyh9gjg0vdznqhffzg"; depends=[ ]; };
mvc = derive { name="mvc"; version="1.3"; type="cran"; sha256="0kmh6vp7c2y9jf71f4a29b0fxcl0h7m4p8wig4dk3fi7alhjf7ym"; depends=[rattle ]; };
mvctm = derive { name="mvctm"; version="1.0"; type="cran"; sha256="1naxjh2k3vv4wlpzzx0y2zwvbn4kdqyls8a8qx6bz609ynzay5r9"; depends=[Formula nlme MNM quantreg Rfit ]; };
mvcwt = derive { name="mvcwt"; version="1.3"; type="cran"; sha256="0fqdyypmszm00rpl04z8kiiw6jd416a0b2rap3dqq3kchnz8h4s2"; depends=[foreach RColorBrewer ]; };
mvglmmRank = derive { name="mvglmmRank"; version="1.0-2"; type="cran"; sha256="0gpp0ibgji86pxscqzcws0d1qn1ciqqvyfb0x2v18580r4cx8jv7"; depends=[Matrix numDeriv ]; };
mvinfluence = derive { name="mvinfluence"; version="0.6"; type="cran"; sha256="1cd5p6cl2zln8madjf3vsbmqlg4nsklzzy6ngdd5glj1a9qapd6c"; depends=[car heplots ]; };
mvmesh = derive { name="mvmesh"; version="1.0"; type="cran"; sha256="168s3n3ibiwdk0wys4kjj1xdpkz891rq5dv3lqf4pil83kbw8jw9"; depends=[rcdd rgl ]; };
mvmeta = derive { name="mvmeta"; version="0.4.7"; type="cran"; sha256="1yadaviq66wdfs0dipn6gxk7jqvzwzjdr8lkfggdsl4vyyi9pwip"; depends=[ ]; };
mvna = derive { name="mvna"; version="1.2-3"; type="cran"; sha256="1gwv17j6w9c38bqvnasv9kfigbdxiqkzwj89gqmkxgw715f9nnpp"; depends=[lattice ]; };
mvnfast = derive { name="mvnfast"; version="0.1.3"; type="cran"; sha256="1ghm6zdrh2ax8r4jin8gka0qjwcsixn5faclf17sr5bx7l5b62np"; depends=[Rcpp Rcpp RcppArmadillo BH ]; };
mvngGrAd = derive { name="mvngGrAd"; version="0.1.5"; type="cran"; sha256="0ir4pakfb2jq84rbfqix6rph8q6cgadjdn49rrdl4439b8hlsg8k"; depends=[ ]; };
mvnmle = derive { name="mvnmle"; version="0.1-11"; type="cran"; sha256="02mpmrr22cqb3v8x7kydgg715yl3lrdgzgdqpchmp0xrl2db8gq4"; depends=[ ]; };
mvnormtest = derive { name="mvnormtest"; version="0.1-9"; type="cran"; sha256="1iaxjwp7bgxhaa4xqvgqb61316mq2fb0452d0pabhmbxkvmvdnj6"; depends=[ ]; };
mvnpermute = derive { name="mvnpermute"; version="1.0.0"; type="cran"; sha256="0mbyj5i5vysrnl3pgypl0cjf3sylsvzfl1pcxkn0q16560vqh2ba"; depends=[ ]; };
mvoutlier = derive { name="mvoutlier"; version="2.0.6"; type="cran"; sha256="00kim5i8xdbaqc0l16w1pif5yfqf741x686lq6drb243jl89rfjv"; depends=[sgeostat robCompositions robustbase ]; };
mvprpb = derive { name="mvprpb"; version="1.0.4"; type="cran"; sha256="1kcjynz9s7vrvcgjb9sbqv7g50yiymbpkpg6ci34wznd33f7nrxm"; depends=[ ]; };
mvrtn = derive { name="mvrtn"; version="1.0"; type="cran"; sha256="0k0k76wk5zq0cjydncsrb60rdhmb58mlf7zhclhaqmli1cy697k8"; depends=[ ]; };
mvsf = derive { name="mvsf"; version="1.0"; type="cran"; sha256="1krvsxvj38c5ndvnsd1m18fkqld748kn5j2jbgdr3ca9m3i5nlwf"; depends=[nortest mvnormtest ]; };
mvtmeta = derive { name="mvtmeta"; version="1.0"; type="cran"; sha256="0g0d4lrz854wkd0dz5aiad54i46aqkfhsq6cpbsfv0w5l2kwiqqz"; depends=[gtools ]; };
mvtnorm = derive { name="mvtnorm"; version="1.0-2"; type="cran"; sha256="0v4a05i92g70vf8xkh6as7566zgjcnpzr1ghhyszqk1f0maw9gxc"; depends=[ ]; };
mvtsplot = derive { name="mvtsplot"; version="1.0-1"; type="cran"; sha256="0g5grrha77rsnkfasw5pxnpmkl7vgb728ms8apyg8xnbmgilg9vv"; depends=[RColorBrewer ]; };
mwa = derive { name="mwa"; version="0.4.1"; type="cran"; sha256="0bd4i1zzwmcsrm2bg14f528yav5hb6qxcd7x4i5rwdcx1hlx27bw"; depends=[cem rJava MASS ]; };
mwaved = derive { name="mwaved"; version="1.1.1"; type="cran"; sha256="1hn6nbwawkizv9v4k98hm5lz94yha2fng76x0r9f804whmv1pz36"; depends=[Rcpp shiny Rcpp ]; };
mxkssd = derive { name="mxkssd"; version="1.1"; type="cran"; sha256="0m9763dqrk8qkrvp18bsv96jv0xhc2m8sbxdk6x3w6kdjcl663p2"; depends=[ ]; };
myTAI = derive { name="myTAI"; version="0.0.2"; type="cran"; sha256="1qnnlf8c8qkcvl5sh9qd19drlfmjhmy3grxhlnlbz7v11zcbvah8"; depends=[Rcpp nortest fitdistrplus foreach doParallel dplyr Rcpp ]; };
mycobacrvR = derive { name="mycobacrvR"; version="1.0"; type="cran"; sha256="1xd9ackzdd8db6bayza0bg4n256mi9rdqih0cdc0nl212c3iz75g"; depends=[ ]; };
mycor = derive { name="mycor"; version="0.1"; type="cran"; sha256="1ibcxl9v2d2mxpwad0rv5dw1j645rrg05f4aqvyhyd40hz9823mr"; depends=[lattice ]; };
myepisodes = derive { name="myepisodes"; version="1.1.1"; type="cran"; sha256="0xk9bwgpl630nhc8qa2pc0rwqbqk3haxnp78gfxq6sn6z7i44k1p"; depends=[XML ]; };
mygene = derive { name="mygene"; version="1.0.1"; type="bioc"; sha256="1i085n7af6lx8ymrglzfv5bwnsz4rvyk47hws9xhhriydrniwiq3"; depends=[GenomicFeatures httr jsonlite S4Vectors Hmisc sqldf ]; };
mzID = derive { name="mzID"; version="1.4.1"; type="bioc"; sha256="1ijyr2s4g1hvrs719sj3ylckdgaar8v5aal62kajmc8zjwhc6pd0"; depends=[XML plyr doParallel foreach iterators ]; };
mzR = derive { name="mzR"; version="2.0.0"; type="bioc"; sha256="0djvbgsz9y0qy91c6r8hlkdy0a95nmncakapn0s04lzqhjj2azkq"; depends=[Rcpp Biobase Rcpp ]; };
mztwinreg = derive { name="mztwinreg"; version="1.0-1"; type="cran"; sha256="1rg6ikaqdrc7q44s3r3km8h45prnvcpzpxd7nxbmh209iz9j19ai"; depends=[rms mclogit ]; };
nCDunnett = derive { name="nCDunnett"; version="1.0.0"; type="cran"; sha256="0n5zzsdrhra5xql110wrxbfdjm3fwa6qhvnpj89w9ph9nr4ad8gf"; depends=[ ]; };
nCal = derive { name="nCal"; version="2015.3-3"; type="cran"; sha256="0vj6l8w29ymj1v18mb4qyw6w1xpmwx5bvil4kjb82gccsb95ir10"; depends=[drc gdata gWidgets kyotil ]; };
nFCA = derive { name="nFCA"; version="0.3"; type="cran"; sha256="1jyyzagmppm3i7vh3ia4ic0zql1w04f66z81v0zpdihd4cbl5ra7"; depends=[ ]; };
nFactors = derive { name="nFactors"; version="2.3.3"; type="cran"; sha256="016d76yfxz7gx7zz5dgwjmj2c5m6kxdmqj0lln5w6d70r9g1kxg7"; depends=[MASS psych boot lattice ]; };
nLTT = derive { name="nLTT"; version="1.1"; type="cran"; sha256="0hrrwil7vcym7zjbnzviw13p60y14w660vndvc2lm5lmhbb8nhcn"; depends=[ape coda deSolve ]; };
nabor = derive { name="nabor"; version="0.4.4"; type="cran"; sha256="0465wkyggz4665b2ph1qpyxsmak0arfzpxaci1r0lrf5ddyp0n6y"; depends=[Rcpp Rcpp RcppEigen BH ]; };
nadiv = derive { name="nadiv"; version="2.13.2"; type="cran"; sha256="1r63z08k46b6hryxracicsw1hr91x4pgk2x58c9nijdni4my7kkc"; depends=[Matrix ]; };
namespace = derive { name="namespace"; version="0.9.1"; type="cran"; sha256="1bsx5q19l7m3q2qys87izvq06zgb22b7hqblx0spkvzgiiwlq236"; depends=[ ]; };
nanop = derive { name="nanop"; version="2.0-5"; type="cran"; sha256="0zdn2hgp516hcqpc2w2vzhhalcr05dlw539zj3afzi75w8rwb71z"; depends=[distrEx rgl ]; };
nasaweather = derive { name="nasaweather"; version="0.1"; type="cran"; sha256="05pqrsf2vmkzc7l4jvvqbi8wf9f46854y73q2gilag62s85vm9xb"; depends=[ ]; };
nat = derive { name="nat"; version="1.6.4"; type="cran"; sha256="1a4wr1378y8crmpk150gmzjc12wn4q9l6nbghddizyw9827b5my1"; depends=[rgl nabor igraph filehash digest nat_utils plyr yaml ]; };
nat_nblast = derive { name="nat.nblast"; version="1.5"; type="cran"; sha256="1slpk126fwgn90j3aazlf3pw2ij050dghc1yqadv6mjcj82qpm5i"; depends=[rgl nat nabor dendroextras plyr spam ]; };
nat_templatebrains = derive { name="nat.templatebrains"; version="0.4.1"; type="cran"; sha256="06vqnrwcara4ljkf5wbwqbsfx1ypd8xsv8pbrs5x6hyj5jxnnvaz"; depends=[rgl nat ]; };
nat_utils = derive { name="nat.utils"; version="0.4.2"; type="cran"; sha256="0k5bdqwrbq82bb9ld90ia7b4vjaczba20h231a129rkszsy6sz9v"; depends=[ ]; };
naturalsort = derive { name="naturalsort"; version="0.1.2"; type="cran"; sha256="0m8a8z0n5zmmgpmpn5w87j2jfsz1igz3x133z3q25h8jlyaxy750"; depends=[ ]; };
nbpMatching = derive { name="nbpMatching"; version="1.4.5"; type="cran"; sha256="1bglrzhap9rar6c8c2c5009l1ljq44mys66jpafw4xyw2pq7djqg"; depends=[Hmisc MASS ]; };
ncappc = derive { name="ncappc"; version="0.1"; type="cran"; sha256="1145y9k718245mzs8q33mjwcln79dmiyawy771zrk3kpxhfb5985"; depends=[ggplot2 gridExtra scales gtable PerformanceAnalytics lattice knitr xtable reshape2 ]; };
ncbit = derive { name="ncbit"; version="2013.03.29"; type="cran"; sha256="0f07h8v68119rjvgm84b75j0j7dvcrl6dq62vp41adlm2hgjg024"; depends=[ ]; };
ncdf = derive { name="ncdf"; version="1.6.8"; type="cran"; sha256="1vrbrrqij7p712wfrki09749yryzr9lg4p95yqvb0zzggqpw2snm"; depends=[ ]; };
ncdf_tools = derive { name="ncdf.tools"; version="0.7.1.291"; type="cran"; sha256="149d89kim67q77w17afc5x7hkvmk05gfkaw6cpl583j2zxingify"; depends=[RNetCDF chron abind plotrix raster RColorBrewer JBTools ]; };
ncdf4 = derive { name="ncdf4"; version="1.13"; type="cran"; sha256="07s1lh5cg4fck7sapfka2skky70max1rfhimblnqf41phndxjcsv"; depends=[ ]; };
ncdf4_helpers = derive { name="ncdf4.helpers"; version="0.3-3"; type="cran"; sha256="051akd7r6zx805a0xwcs95q5sd8alag0f1gzqjk3n188q8r3ji5j"; depends=[ncdf4 PCICt abind ]; };
ncdfFlow = derive { name="ncdfFlow"; version="2.12.0"; type="bioc"; sha256="0r4q4ydaqlrsan8a3k60bjrzqvm37s308k3fz9lvqvdk3c5hichz"; depends=[flowCore flowViz RcppArmadillo BH Biobase flowCore flowViz zlibbioc Rcpp RcppArmadillo BH ]; };
ncf = derive { name="ncf"; version="1.1-5"; type="cran"; sha256="03nbmg9swxhpwrmfjsanp6fj5l2nw160sys70mj10a0ljlaf904z"; depends=[ ]; };
ncg = derive { name="ncg"; version="0.1.1"; type="cran"; sha256="1jzkzp61cc5jxmdnl867lcrjjm7y2iw9imzprbd098p1j3w8fvj7"; depends=[ ]; };
ncvreg = derive { name="ncvreg"; version="3.4-0"; type="cran"; sha256="12ns62l0wdj9vkmqbdyxcwb15g3hz45dxcm7zl189iljcsl65977"; depends=[ ]; };
ndl = derive { name="ndl"; version="0.2.16"; type="cran"; sha256="1l56kg3x4579hzr4sig3iwrd81rhm8nmmrqfs54zxqv5yxpk3hp4"; depends=[Rcpp MASS Rcpp ]; };
ndtv = derive { name="ndtv"; version="0.6.1"; type="cran"; sha256="0833n3ddhx1ixqi540j6b2bfmzhpdpg8cwd6d5y7shfxslrnpay9"; depends=[network networkDynamic animation sna MASS statnet_common jsonlite base64 ]; };
neaGUI = derive { name="neaGUI"; version="1.4.0"; type="bioc"; sha256="0l0v5jb4m7hxmdmkhm52gbw8c0vsgi4y3mkd0ygja9kp7half10h"; depends=[hwriter ]; };
neariso = derive { name="neariso"; version="1.0"; type="cran"; sha256="1npfd5g5xqjpsm5hvhwy7y84sj5lqw9yzbnxk6aqi80gfxhfml4c"; depends=[ ]; };
needy = derive { name="needy"; version="0.2"; type="cran"; sha256="1ixgpnwrg6ph1n5vy91qhl1mqirli9586nzkmfvzjrhdvrm0j5l0"; depends=[ ]; };
negenes = derive { name="negenes"; version="1.0-1"; type="cran"; sha256="0g8m3idjm24cf9b1wngw2pv1axgnv9mk5wqs78zgwvn0m67ypsiz"; depends=[ ]; };
neldermead = derive { name="neldermead"; version="1.0-10"; type="cran"; sha256="1snavf90yb12sydic7br749njbnfr0k7kk20fy677mg648sf73di"; depends=[optimbase optimsimplex ]; };
nem = derive { name="nem"; version="2.40.0"; type="bioc"; sha256="19mmvbg52vk6i5wy0kqpm460w7q9fsp1gwyjmqfhwd5jicxpp14k"; depends=[e1071 graph plotrix limma cluster statmod Hmisc Rgraphviz boot e1071 graph RBGL RColorBrewer Rgraphviz ]; };
neotoma = derive { name="neotoma"; version="1.2-0"; type="cran"; sha256="0mb7b4qncn63nppq3hxl3a6hgipb413rygsm9qhira61ysnay51m"; depends=[RJSONIO RCurl plyr reshape2 ]; };
nephro = derive { name="nephro"; version="1.1"; type="cran"; sha256="06lxkk67n5whgc78vrr7gxvnrz38pxlsj4plj02zv9fwlzbb9h6p"; depends=[ ]; };
nestedRanksTest = derive { name="nestedRanksTest"; version="0.1"; type="cran"; sha256="12pqxldyzy2i2gc575rx67zdfb8c9j0fv400nw509cwx5w6ya35x"; depends=[ ]; };
netClass = derive { name="netClass"; version="1.2.1"; type="cran"; sha256="04yrj71l5p83rpwd0iaxdkhm49z9qp3h6b7rp9cgav244q060m9y"; depends=[kernlab AnnotationDbi Matrix ROCR graph igraph samr ]; };
netassoc = derive { name="netassoc"; version="0.4.3"; type="cran"; sha256="153zgnmk9qjcxhfdy9g1fkgjx0vpyv55gmj4spk664igvw6kicf3"; depends=[igraph ]; };
netbiov = derive { name="netbiov"; version="1.0.0"; type="bioc"; sha256="1zging9jh417z8fyv7z3bdbf44agnx5lqih0sizyvv6wccz0jm30"; depends=[igraph ]; };
netgen = derive { name="netgen"; version="1.1"; type="cran"; sha256="0wbsssskhih6fyb0xfpnd3sjp25z8h0jyy3437ykgh7g24hh0i1z"; depends=[BBmisc mvtnorm lhs checkmate ggplot2 lpSolve igraph stringr ]; };
netgsa = derive { name="netgsa"; version="2.0"; type="cran"; sha256="04id2wcrmi0lqvn4a8qhqkc3z076b8xd7jhw9hsmaz21g9cxdfx8"; depends=[cvTools corpcor glasso glmnet igraph ]; };
netmeta = derive { name="netmeta"; version="0.7-0"; type="cran"; sha256="0nsy817bj3fh4sz632pljyjn7jphg9w389hhdcyjvkb7i43c9v5c"; depends=[meta magic ]; };
netresponse = derive { name="netresponse"; version="1.16.0"; type="bioc"; sha256="1ngj2v85rfm1hbd5xsvl05z28xjdf5j4pd2fm4p0ch6i8ar3wzzd"; depends=[dmt igraph infotheo ggplot2 graph mclust minet qvalue RColorBrewer reshape Rgraphviz ]; };
nets = derive { name="nets"; version="0.1"; type="cran"; sha256="0zshiavdi1z8mq6q93vsyb5wx5nq37qln9gcyvamvi2pgy5xg4k2"; depends=[igraph ]; };
nettools = derive { name="nettools"; version="1.0.1"; type="cran"; sha256="13fw316r31g9cjlbyy9qfccsyagxb6pyvn5k32f166b7vj92mk1q"; depends=[rootSolve dtw WGCNA minet Matrix minerva combinat igraph ]; };
netweavers = derive { name="netweavers"; version="1.1"; type="cran"; sha256="0p8hb3m0lbkf0pw9vdhv94spdba432klpqgn07jvxfhfhmr8cyz0"; depends=[BiocGenerics Biobase igraph limma ]; };
network = derive { name="network"; version="1.12.0"; type="cran"; sha256="04n634ia6m86zkmjdla8v6j4x11kdrx72gaj4am7iwv1ha14nfks"; depends=[ ]; };
networkBMA = derive { name="networkBMA"; version="1.8.0"; type="bioc"; sha256="00k3z1fsm32i6kgzxg6cydylxg849gxdrs8zy6923y26742ysi8s"; depends=[BMA Rcpp RcppArmadillo RcppEigen Rcpp RcppArmadillo RcppEigen ]; };
networkD3 = derive { name="networkD3"; version="0.1.2.1"; type="cran"; sha256="0xc3qbcb0xvdfvx2vb68rzif72x3zna32wrhz9lg9s7dfkz4xmfm"; depends=[htmlwidgets plyr rjson ]; };
networkDynamic = derive { name="networkDynamic"; version="0.7.1"; type="cran"; sha256="0iv4lyfxmjllxk0cx09gdrg7zf2myf57wd3a2gqymids5gvpsy2d"; depends=[network statnet_common network ]; };
networkDynamicData = derive { name="networkDynamicData"; version="0.1.0"; type="cran"; sha256="1vln4n8jldqi1a6qb9j9aaxyjb8pfgwd8brnsqr8hp9lm3axd24b"; depends=[networkDynamic network ]; };
networkTomography = derive { name="networkTomography"; version="0.3"; type="cran"; sha256="1hd7av231zz0d2f9ql5p6c95k7dj62hp0shdfshmyfjh8900amw7"; depends=[coda igraph KFAS limSolve plyr Rglpk ]; };
networkreporting = derive { name="networkreporting"; version="0.0.1"; type="cran"; sha256="1vfvx5gf90p31gy6kcv7l2ibzbfl382gffa79dl8gascbsg6s8z8"; depends=[functional ggplot2 plyr reshape2 stringr ]; };
networksis = derive { name="networksis"; version="2.1-3"; type="cran"; sha256="1kvil3qs7xd94ak9jgvj1nss55gjg0y7d35zmass9h1hjkcrq7bg"; depends=[network ]; };
neuRosim = derive { name="neuRosim"; version="0.2-12"; type="cran"; sha256="1hsnw9xipdr74fydq9013252ycbi9igh28s0j4dbdx52pv3iixzl"; depends=[deSolve ]; };
neural = derive { name="neural"; version="1.4.2.2"; type="cran"; sha256="05hrqgppgwp38rdzw86naglxj0bz3wqv04akq7f0jxbbjc6kwy4j"; depends=[ ]; };
neuralnet = derive { name="neuralnet"; version="1.32"; type="cran"; sha256="0p9r5j8q0flv15wn5s6qi9if7npna107l1ffv37nzx1b4vgswnl9"; depends=[MASS ]; };
neuroblastoma = derive { name="neuroblastoma"; version="1.0"; type="cran"; sha256="0hs87fvwaq53xxbh2dw3hjsmf1zkyqli9qyacxf72fnkyhhl8b45"; depends=[ ]; };
neuroim = derive { name="neuroim"; version="0.0.3"; type="cran"; sha256="0n5jkyvdaiigv51s5bb508w5xkh0qkd1zbs67nnms14s1664fhiz"; depends=[stringr hash iterators abind Matrix yaImpute ]; };
ngram = derive { name="ngram"; version="1.1"; type="cran"; sha256="0p5wm55anch1i0y3478f5d4sivs7q8j3kwlg89nk3337win06499"; depends=[ ]; };
ngramr = derive { name="ngramr"; version="1.4.5"; type="cran"; sha256="1cqapla0lknxl669w5x3av9nr4vy9qrfznznqj22xlqaj0p53c18"; depends=[httr RCurl plyr rjson stringr reshape2 ggplot2 scales ]; };
ngramrr = derive { name="ngramrr"; version="0.1.1"; type="cran"; sha256="1h12nm0dg2mkq5b2zn12cij24nl8inqn04m4jxdi1lr6r81y1wsq"; depends=[tau ]; };
ngspatial = derive { name="ngspatial"; version="1.0-5"; type="cran"; sha256="0dd7gm6irq08054ndj2gykz4nnfqfq3wbivg6fmlkdnn18kbckkk"; depends=[Rcpp batchmeans Rcpp RcppArmadillo ]; };
nhlscrapr = derive { name="nhlscrapr"; version="1.8"; type="cran"; sha256="0y2shw3g84flh88a15czdsb62xwdqxhvzkn4kpbn0k9ddyfzxc48"; depends=[RCurl rjson biglm bitops ]; };
nice = derive { name="nice"; version="0.4"; type="cran"; sha256="1alq8n8pchn9v0fvwrifdisazkh519x109bqgnpgnwf79wblmnhy"; depends=[ ]; };
nicheROVER = derive { name="nicheROVER"; version="1.0"; type="cran"; sha256="0sa7wfpzkin78vz48vwa5iac82v5l1s3zczdxz8sc2kyg22fj0aw"; depends=[mvtnorm ]; };
nlADG = derive { name="nlADG"; version="0.1-0"; type="cran"; sha256="0nvd5hzd1p81jwx5p7js86wblgg615vdnpbvy5rhmhf1ig583z1b"; depends=[ggm ]; };
nlWaldTest = derive { name="nlWaldTest"; version="1.0.1"; type="cran"; sha256="1rwpkkddivpcamhsp22nmy5gz2006y9kbdzj8lhh20s1vsyhn2b3"; depends=[stringr numDeriv ]; };
nleqslv = derive { name="nleqslv"; version="2.8"; type="cran"; sha256="1jkf02mcz16d8h8b7h5m13lpx6z2shpap5vncapszwa9js6vps67"; depends=[ ]; };
nlme = derive { name="nlme"; version="3.1-120"; type="cran"; sha256="1ji8nrf714nf18by9g7k4czkgnj1cq464pvjv195c5fnhwhmpmjc"; depends=[lattice ]; };
nlmeODE = derive { name="nlmeODE"; version="1.1"; type="cran"; sha256="1zp1p98mzbfxidl87yrj2i9m21zlfp622dfnmyg8f2pyijhhn0y2"; depends=[deSolve nlme lattice ]; };
nlmeU = derive { name="nlmeU"; version="0.70-3"; type="cran"; sha256="05kxymgybziiijpb17bhcd9aq4awmp5km67l2py9ypakivi0hc6l"; depends=[nlme ]; };
nlmrt = derive { name="nlmrt"; version="2013-9.25"; type="cran"; sha256="0z2ih61rpqzk64qagiwbx396vwb28jhqk8b4kxchca0il3fzqqav"; depends=[ ]; };
nloptr = derive { name="nloptr"; version="1.0.4"; type="cran"; sha256="1cypz91z28vhvwq2rzqjrbdc6a2lvfr2g16vid2sax618q6ai089"; depends=[ ]; };
nlreg = derive { name="nlreg"; version="1.2-2"; type="cran"; sha256="1pi7057ldiqb12kw334iavb4i92ziy1kv4amcc4d1nfsjam03jxv"; depends=[statmod survival ]; };
nls2 = derive { name="nls2"; version="0.2"; type="cran"; sha256="0k46i865p6jk0jchy03jiq131pc20h9crn3hygzy305rdnqvaccq"; depends=[proto ]; };
nlsMicrobio = derive { name="nlsMicrobio"; version="0.0-1"; type="cran"; sha256="0676n78265z00dacmq593c9l2239ii574djm9s7i7w8jk1kdhzx2"; depends=[nlstools ]; };
nlsem = derive { name="nlsem"; version="0.3"; type="cran"; sha256="1lpp6f6nby1rzxv7hrqnm4qbwj406g9ls9jmidb8rqgy177sk4w6"; depends=[gaussquad mvtnorm nlme ]; };
nlsmsn = derive { name="nlsmsn"; version="0.0-4"; type="cran"; sha256="1gvpy8rq020l64bdw6n7kv354l7gwa2rgxarm6k0mqq7z21fxf58"; depends=[ ]; };
nlstools = derive { name="nlstools"; version="1.0-1"; type="cran"; sha256="00m2x587gvrbgs7wdkz2n54ylp0rnrs76rb6xmi3pf9xlbmnplr2"; depends=[ ]; };
nlt = derive { name="nlt"; version="2.1-3"; type="cran"; sha256="1j0xrrbr1hvfda8rvnc17lj96m6cz24faxvwn68ilf7j1ab2lkgn"; depends=[EbayesThresh adlift ]; };
nlts = derive { name="nlts"; version="0.2-0"; type="cran"; sha256="03il87n9gj5sqq50b2qpjb1jjf0grhqlfnp8wdxgcqpradgm6rnl"; depends=[locfit acepack ]; };
nmcdr = derive { name="nmcdr"; version="0.3.0"; type="cran"; sha256="1557pdv7mqdjwpm6d9zw3zfbm1s8ai3rasd66nigscmlq102w745"; depends=[CDFt ]; };
nnNorm = derive { name="nnNorm"; version="2.30.0"; type="bioc"; sha256="13wxpgkd90giqx3hlsl8hsk2vd2n3w1522sks82rz7663ixbfill"; depends=[marray marray nnet ]; };
nnet = derive { name="nnet"; version="7.3-9"; type="cran"; sha256="1z1lhi35w5l7l645d764w9h4aiv6hapjv8fwb9b51b36vyg1r0zg"; depends=[ ]; };
nnls = derive { name="nnls"; version="1.4"; type="cran"; sha256="07vcrrxvswrvfiha6f3ikn640yg0m2b4yd9lkmim1g0jmsmpfp8f"; depends=[ ]; };
nodeHarvest = derive { name="nodeHarvest"; version="0.7-1"; type="cran"; sha256="1qhzi058wcz78n6isvgvdcjl5pzc1j9bfivfg6wvypvws0sszwsx"; depends=[quadprog randomForest ]; };
nodiv = derive { name="nodiv"; version="1.0.3"; type="cran"; sha256="0fwx7f30qxfnhgzn5lrphwv0clvap3w887xf6316lbr86sjw4x3v"; depends=[picante raster ape sp vegan ]; };
noia = derive { name="noia"; version="0.97.1"; type="cran"; sha256="0yldfmnb4ads4s9v9cj1js8zf1w1hxasqq6qjyzwknmvmp7kh62h"; depends=[ ]; };
noncensus = derive { name="noncensus"; version="0.1"; type="cran"; sha256="0cfj17bfzddfshhhzv2ijhrp9ylcscmsysswjcsjfxmy3gbkd00q"; depends=[ ]; };
nondetects = derive { name="nondetects"; version="1.2.0"; type="bioc"; sha256="1jhdqvjzw8hsr6ql82hv443qh36mnwkmwgygirlgn48rs0j289y0"; depends=[Biobase HTqPCR ]; };
nonlinearTseries = derive { name="nonlinearTseries"; version="0.2.1"; type="cran"; sha256="1pq93g25arnc68kyvv6ymywdvbqv6620dvqzv1l43c1xssw364bc"; depends=[Matrix rgl tseries TSA ]; };
nonnest2 = derive { name="nonnest2"; version="0.2"; type="cran"; sha256="0z2ihnhphf6c9cklj1l81kqgyz1h9wl2ziwx7s0ssn3dfgw4fnp7"; depends=[CompQuadForm mvtnorm sandwich ]; };
nonparaeff = derive { name="nonparaeff"; version="0.5-8"; type="cran"; sha256="1kkn68m7cqlzx3v539cjxw3x5a2y86lvmyv2k98s87m3yvqg0gdk"; depends=[lpSolve gdata Hmisc rms geometry psych pwt ]; };
nonrandom = derive { name="nonrandom"; version="1.42"; type="cran"; sha256="0icm23hw593322z41wmjkwxqknh2pa9kpzbrch7xw1mhp93sd5ll"; depends=[lme4 ]; };
nontarget = derive { name="nontarget"; version="1.7"; type="cran"; sha256="1hnqkb8bpp89y42gjrfh7m3lxhif9dyhcmr6yfss8x3lzf018gk2"; depends=[enviPat nontargetData mgcv ]; };
nontargetData = derive { name="nontargetData"; version="1.1"; type="cran"; sha256="07cdbpmn64sg4jfhljdcx503d55azyz58x7nkji044z3jmdryzqw"; depends=[ ]; };
nopp = derive { name="nopp"; version="1.0.4"; type="cran"; sha256="00wn0pnqpy9xll0aa8ah45ldgk1ziw464x8zkc8iq4l2a22lgn4v"; depends=[mlogit ]; };
nor1mix = derive { name="nor1mix"; version="1.2-0"; type="cran"; sha256="1s92bwpwq9p0d06adclm43yqq0k7ifv8lknn1scxg8nj4g03qjhs"; depends=[ ]; };
norm = derive { name="norm"; version="1.0-9.5"; type="cran"; sha256="01j1h412yfjx5r4dd0w8rhlf55997spgb6zd6pawy19rgw0byp1h"; depends=[ ]; };
normalp = derive { name="normalp"; version="0.7.0"; type="cran"; sha256="1s12x2qln3s4bbqsm4p3cq4g6461z73r858g6ym1awamhbmncnrl"; depends=[ ]; };
normtest = derive { name="normtest"; version="1.1"; type="cran"; sha256="073r2mwfs6c4vqh8921nlyygl0f20nhv997s0iwf00d3jckkc4pp"; depends=[ ]; };
normwhn_test = derive { name="normwhn.test"; version="1.0"; type="cran"; sha256="1kr45bfydk40hgdg24i2f28cdaw65hg9gmsgv4lsvvr2m3r74vi6"; depends=[ ]; };
nortest = derive { name="nortest"; version="1.0-3"; type="cran"; sha256="0kih1r703hjw2vha2hx13vm3fvbyra7v229khgv3hxxfppb7jis8"; depends=[ ]; };
nose = derive { name="nose"; version="1.0"; type="cran"; sha256="17l78vmfqc22inq6zaqpnk2m91wp0nfjbbwfcpfqykf8lk9ipqna"; depends=[ ]; };
notifyR = derive { name="notifyR"; version="1.02"; type="cran"; sha256="0jx76ic5r1crcgg0n0yqnka0gwniflfxakh838a98j9wb11wi6h5"; depends=[RCurl rjson ]; };
novelist = derive { name="novelist"; version="1.0"; type="cran"; sha256="0wzx0vkqvl9sfhbbrzylsxhm3qmjj5w8sy5w6gvd104fn84d49yk"; depends=[ ]; };
noweb = derive { name="noweb"; version="1.0-4"; type="cran"; sha256="17s65m1m8bj286l9m2h54a8j799xaqadwfrml11732f8vyrzb191"; depends=[ ]; };
np = derive { name="np"; version="0.60-2"; type="cran"; sha256="0zs1d4mmgns7s26qcplf9mlz9rkp6f9mv7abb0b9b2an23y6gmi5"; depends=[boot cubature ]; };
npGSEA = derive { name="npGSEA"; version="1.2.0"; type="bioc"; sha256="19kk2c81cwfcv0z0qd5jm0k0kr1q7nxj1givk26m32mrqh7rm4zk"; depends=[GSEABase Biobase BiocGenerics ]; };
npIntFactRep = derive { name="npIntFactRep"; version="1.2"; type="cran"; sha256="0fx5923wdzz6122bbyil5imwbhgwlm50wcrscy78qdx8n4n07rv8"; depends=[ez plyr ]; };
nparLD = derive { name="nparLD"; version="2.1"; type="cran"; sha256="1asq00lv1rz3rkz1gqpi7f83p5vhzfib3m7ka1ywpf2wfbfng27n"; depends=[MASS ]; };
nparcomp = derive { name="nparcomp"; version="2.6"; type="cran"; sha256="111ypwyc885lvn64a5sb2k552j6wr3iihmhgx5y475axdiva5pzf"; depends=[multcomp mvtnorm ]; };
npbr = derive { name="npbr"; version="1.1"; type="cran"; sha256="011zmz1s6kkdgylkl6dc79dpardgpc5dlh6g6y2l84hgax1rbdl6"; depends=[quadprog Rglpk Benchmarking np ]; };
npcp = derive { name="npcp"; version="0.1-1"; type="cran"; sha256="0b2mqx0zrvai5aw6b47qpi4bwcfjrv0bh8ahrgx7n1sf045grm3a"; depends=[ ]; };
npde = derive { name="npde"; version="2.0"; type="cran"; sha256="1cp4k7jvsw9rc6rrck902nqqjaf2c1nxjic7i9r3fd6yca1lgqb9"; depends=[mclust ]; };
nplplot = derive { name="nplplot"; version="4.5"; type="cran"; sha256="1dpbs0jb34gv0zj528357z1j2pwahjbp04rm7jir6qk0jhyaxxgh"; depends=[ ]; };
nplr = derive { name="nplr"; version="0.1-1"; type="cran"; sha256="0br7flriqbig8frq0j4lxiv6i8bwgsj422faln85ga93hnlky0a1"; depends=[ ]; };
npmlreg = derive { name="npmlreg"; version="0.46-1"; type="cran"; sha256="1gddl6diw8ix8vz7n1r4ps9cjx3q00mafpapskjk7pcz69m6hfv1"; depends=[statmod ]; };
npmv = derive { name="npmv"; version="2.2"; type="cran"; sha256="1aqlx1y3bxbqp13q0vajwffj8srb6s04d5r2h08m9fk5hhp9l3jf"; depends=[Formula ]; };
nppbib = derive { name="nppbib"; version="1.0-0"; type="cran"; sha256="075jb13zckkh66jwdmdlq4d2drjcc3lkj26px3w79b91223yymf2"; depends=[ ]; };
npsm = derive { name="npsm"; version="0.5"; type="cran"; sha256="12jq6ygp3di5rknh7izrr3bxvpn6bqnj3jhfxzf29yf0bd86hzqk"; depends=[Rfit plyr ]; };
npsp = derive { name="npsp"; version="0.3-6"; type="cran"; sha256="1wiv4gp3y1c26xaq8zssias3j3h8mpb6izcmcarghvnfhj32l8jb"; depends=[quadprog ]; };
npst = derive { name="npst"; version="2.0"; type="cran"; sha256="1y5ij3nmh9pj6p97jpx75g26sk508mznr0l67cwj381zfb77hj1n"; depends=[ ]; };
nsRFA = derive { name="nsRFA"; version="0.7-12"; type="cran"; sha256="182zshwyg0l6shb5wcwibqygxs8qmgma9c4s683za8q3f9l94aqj"; depends=[ ]; };
nscancor = derive { name="nscancor"; version="0.6"; type="cran"; sha256="1wkk08h8yz2mzgvmq0vr30iiczpbp0304vjwxqgsa3h240m4awsm"; depends=[ ]; };
nsga2R = derive { name="nsga2R"; version="1.0"; type="cran"; sha256="04jj0a3isfc348vg46il5x9l33cr7xawz5w0mm4pwr6djhd8nfhx"; depends=[mco ]; };
nsgp = derive { name="nsgp"; version="1.0.5"; type="cran"; sha256="0piajjz3r71dnjw7lwpjhbaygxcrbbxfvhf8p3n2izyr2pw5fml9"; depends=[MASS ]; };
nsprcomp = derive { name="nsprcomp"; version="0.5"; type="cran"; sha256="1rrjiwkpiaqlp27s5xfd6jwmmpzgxm5d7874gp33511wa0vrhnnf"; depends=[ ]; };
nucleR = derive { name="nucleR"; version="1.14.0"; type="bioc"; sha256="1wjffdi4vx00rsxs8dzcamz5n9ramgcl8j228rwq1ag1vp836jg6"; depends=[BiocGenerics IRanges Biobase ShortRead BiocGenerics S4Vectors IRanges Biobase ShortRead GenomicRanges ]; };
nudge = derive { name="nudge"; version="1.32.0"; type="bioc"; sha256="1h0zjy1x4papcwwwwymkpaig6wkh5wp7asw4qpgw9g9xajdg4gcq"; depends=[ ]; };
nullabor = derive { name="nullabor"; version="0.3.1"; type="cran"; sha256="0anwla6x9y2i7yd6r0yi1xhy0zfqwfpp5h1f18gji11nmiva9d81"; depends=[ggplot2 MASS plyr dplyr moments fpc ]; };
numDeriv = derive { name="numDeriv"; version="2014.2-1"; type="cran"; sha256="114wd0hwn2mwlyh84hh3yd2bvcy63f166ihbpnp6xn6fqp019skd"; depends=[ ]; };
numOSL = derive { name="numOSL"; version="1.8"; type="cran"; sha256="0md55gfxjvdmjy4hy58wp11c788xy7kq9wl32m1r76ja6g03wwbl"; depends=[ ]; };
numbers = derive { name="numbers"; version="0.5-6"; type="cran"; sha256="17v7by1gvqg2mdm5vrmf05kfrbvc2yz8ldb7bd0lrhcyrm5bbbwa"; depends=[gmp ]; };
nutshell = derive { name="nutshell"; version="2.0"; type="cran"; sha256="1v11g5wqyxnj29b7akl0cwa34hcqs79ijbiv735pg3df4ggyrzvm"; depends=[nutshell_bbdb nutshell_audioscrobbler ]; };
nutshell_audioscrobbler = derive { name="nutshell.audioscrobbler"; version="1.0"; type="cran"; sha256="10fvc5d22gnfb0bkgbww48f0vvcaja96g5gfv85kap939j11172j"; depends=[ ]; };
nutshell_bbdb = derive { name="nutshell.bbdb"; version="1.0"; type="cran"; sha256="19c4047rjahyh6wa6kcf82pj09smskskvhka9lnpchj13br8rizw"; depends=[ ]; };
nws = derive { name="nws"; version="1.7.0.1"; type="cran"; sha256="1fn92n6brjhh8hpvhax7211cphx2cn0rl99kjqksig6z7242c316"; depends=[ ]; };
nycflights13 = derive { name="nycflights13"; version="0.1"; type="cran"; sha256="15bqaphxwqpdzr4bkn6qgbjb3knja5hk34qxjd6xhpjzkgfs5c0b"; depends=[ ]; };
oaxaca = derive { name="oaxaca"; version="0.1.2"; type="cran"; sha256="1ghdrpjp2p4nlwskvs8n8d8ixzf3cdq9k9q49zvq8ag0dhwyswzd"; depends=[Formula ggplot2 reshape2 ]; };
objectProperties = derive { name="objectProperties"; version="0.6.5"; type="cran"; sha256="0wn19byb1ia5gsfmdi6cj05pnlxbr3zcrjabjg3g1d7b58nz7wlh"; depends=[objectSignals objectSignals ]; };
objectSignals = derive { name="objectSignals"; version="0.10.2"; type="cran"; sha256="1rcgfq1i3nz2q93vv4l069f3mli1c6fd5dhhhw1p7cc4sy81008w"; depends=[ ]; };
obliclus = derive { name="obliclus"; version="0.9"; type="cran"; sha256="000r1dx4zbgjxrfs66c1yazm0w6q2z0z1scf45g2qj5ykcm9ylma"; depends=[ ]; };
oblique_tree = derive { name="oblique.tree"; version="1.1.1"; type="cran"; sha256="01vyc46gz7qx8fc5bg3zbhjyhnmfgjii120a915vmr38cs51qhqh"; depends=[tree glmnet nnet ]; };
obliqueRF = derive { name="obliqueRF"; version="0.3"; type="cran"; sha256="1bwlgv820mmpc6vg26bsdlfy2p78586i3y42hkzbw3z1fmwq3pz5"; depends=[ROCR pls mda e1071 ]; };
obs_agree = derive { name="obs.agree"; version="1.0"; type="cran"; sha256="191xshnrncjqzwd2rdq334vsx0338q3y3k1nbm04hdaysbnla9jv"; depends=[ ]; };
obsSens = derive { name="obsSens"; version="1.3"; type="cran"; sha256="1vfm1mzsycwkqa39vf3fcdv1s6adps9hw1rxlvl8v9kq746hcabw"; depends=[ ]; };
oc = derive { name="oc"; version="0.95"; type="cran"; sha256="1zmy34fsqcd4rq0v72r514k6gm3jmf9a5zv4m6kj09hl89xvqsci"; depends=[pscl ]; };
occ = derive { name="occ"; version="1.0"; type="cran"; sha256="1rpgq6mqrdzz52ln897f5k8yyz5i14s3lxqmy3nwsxf3q2bdf3yh"; depends=[ ]; };
occugene = derive { name="occugene"; version="1.26.0"; type="bioc"; sha256="122if8jvyiw7384s4g3z95b2bs4sijjhq0yzk8b62i7j9dv8m11b"; depends=[ ]; };
oce = derive { name="oce"; version="0.9-17"; type="cran"; sha256="0j1sj9qlcg0yrdhpqinrpaa8dv4d8c8hjl48028x75frsc784pip"; depends=[gsw ]; };
ocean = derive { name="ocean"; version="0.2-4"; type="cran"; sha256="1554iixfbw3k6w9xh3hgbiygszqvj5ci431cfmnx48jm27h2alqg"; depends=[ncdf4 proj4 ]; };
ocedata = derive { name="ocedata"; version="0.1.3"; type="cran"; sha256="0lzsyaz8zb6kiw86fnaav2g2wfdhyicxvm81ly5a9z4mjch3qj02"; depends=[ ]; };
odeintr = derive { name="odeintr"; version="1.3"; type="cran"; sha256="12y5hr6f7bj3aqj4gd0hlj495c5163jn0liksspk5jpqcmpsgdg3"; depends=[Rcpp Rcpp BH ]; };
odfWeave = derive { name="odfWeave"; version="0.8.4"; type="cran"; sha256="1rp9j3snkkp0fqmkr6h6pxqd4cxkdfajgh4vlhpz56gr2l9j48q5"; depends=[lattice XML ]; };
odfWeave_survey = derive { name="odfWeave.survey"; version="1.0"; type="cran"; sha256="0cz7dxh1x4aflvfrdzhi5j64ma5s19ma8fk9q2m086j11a1dw3jn"; depends=[odfWeave survey ]; };
oem = derive { name="oem"; version="1.02.1"; type="cran"; sha256="0z9k0jhpp5dayyin6v8p26rgl8s983hnpsk195c9z458i7nbmrpd"; depends=[Rcpp Rcpp RcppArmadillo ]; };
okmesonet = derive { name="okmesonet"; version="0.1.5"; type="cran"; sha256="1kzyzmg702ayzphn9jsk64m51mlnz37ylxiwq5gsr23vaiida680"; depends=[plyr ]; };
oligo = derive { name="oligo"; version="1.30.0"; type="bioc"; sha256="0djadgk5la3wdd2scvk6v45y3a25ffwq220n3kjivcgnj529f83a"; depends=[BiocGenerics oligoClasses Biobase Biostrings affyio affxparser BiocGenerics DBI ff preprocessCore zlibbioc preprocessCore ]; };
oligoClasses = derive { name="oligoClasses"; version="1.28.0"; type="bioc"; sha256="0dgplhks2miidfiviz122rw7chxcm14hpizbhcf6l9r1r7wrd69r"; depends=[BiocGenerics Biobase IRanges GenomicRanges Biostrings affyio ff foreach BiocInstaller S4Vectors ]; };
omd = derive { name="omd"; version="1.0"; type="cran"; sha256="0s1wcgivqapbkzjammga8m12gqgw113729kzfzgn02nsfzmsxspv"; depends=[ ]; };
omicade4 = derive { name="omicade4"; version="1.6.2"; type="bioc"; sha256="1zmzl78sr9hj04azyrncfh1rsf5lb5v0wfkls35qmcxb18sp4178"; depends=[ade4 made4 ]; };
oncomodel = derive { name="oncomodel"; version="1.0"; type="cran"; sha256="1jyyq9znffiv7rg26mjldbwc5yi2f4f8npsd2ykhxyacb3g96fp1"; depends=[ade4 ]; };
oneChannelGUI = derive { name="oneChannelGUI"; version="1.32.0"; type="bioc"; sha256="002jj674jqjqpqg7q4dqfwv0lmbp1bgkvljjp78jgy5rhjvpy10c"; depends=[Biobase affylmGUI tkrplot tkWidgets IRanges Rsamtools Biostrings siggenes chimera ]; };
onemap = derive { name="onemap"; version="2.0-4"; type="cran"; sha256="00xmhm5qy0ycw0mnlyl20vfw0wxmpb36f07k0jj92c4zbpwjiygx"; depends=[tkrplot ]; };
onion = derive { name="onion"; version="1.2-4"; type="cran"; sha256="0x3n9mwknxjwhpdg8an0ilix5cb8dyy5fqnb6nxx7ww885k0381a"; depends=[ ]; };
onlinePCA = derive { name="onlinePCA"; version="1.0-1"; type="cran"; sha256="0gca0ijcc30b3z5i390n1yk6c7sc15z8d0zpxpfb3hh99g7vinx4"; depends=[rARPACK Rcpp Rcpp RcppArmadillo ]; };
onls = derive { name="onls"; version="0.1-0"; type="cran"; sha256="1kfgikswddly9lar6wa1hhz89rap0pql9h181s7i68wa20xdg05z"; depends=[minpack_lm ]; };
ontoCAT = derive { name="ontoCAT"; version="1.18.0"; type="bioc"; sha256="0xq2vd3lkavnwj9da1hkamhyvxr46ysl2mh9xa6j2c13a6yq3p4c"; depends=[rJava ]; };
opefimor = derive { name="opefimor"; version="1.1"; type="cran"; sha256="0xv57l38wx3w67h312g5xcpi9m7ggd6crqvqjh5gddq0g1g93bjq"; depends=[ ]; };
openCyto = derive { name="openCyto"; version="1.4.0"; type="bioc"; sha256="0nzfb2xhypl8kscsaznx8i3gf1fyd71p6x84zfvqx98wi5vpsswj"; depends=[flowWorkspace Biobase gtools flowCore flowViz ncdfFlow flowStats flowClust MASS clue plyr RBGL graph data_table ks RColorBrewer lattice rrcov R_utils Rcpp ]; };
openNLP = derive { name="openNLP"; version="0.2-5"; type="cran"; sha256="0jc4ii6zsj0pf6nlx3l0db18p6whp047gzvc7q0dbwpa8q4il2mb"; depends=[NLP openNLPdata rJava ]; };
openNLPdata = derive { name="openNLPdata"; version="1.5.3-1"; type="cran"; sha256="1a048irgv56yi2lvhpqh8vh4dl7g7zfg934qypjxg8mcdcqi820y"; depends=[rJava ]; };
openair = derive { name="openair"; version="1.5"; type="cran"; sha256="0swhaldfhz6zgs50aws18kypilv15k7w99nqcmb7y0wgvkkwda2h"; depends=[lazyeval dplyr maps plyr reshape2 mgcv lattice latticeExtra cluster RColorBrewer mapproj hexbin mapdata RgoogleMaps Rcpp Rcpp ]; };
opencpu = derive { name="opencpu"; version="1.4.6"; type="cran"; sha256="19anprhkwqw2kii417qy3laalrlj207zfvklc05m0vz9sra7sxj0"; depends=[evaluate httpuv knitr jsonlite devtools httr brew openssl ]; };
openintro = derive { name="openintro"; version="1.4"; type="cran"; sha256="1k6pzlsrqikbri795vic9h191nf2j7v7hjybjfkrx6847c1r4iam"; depends=[ ]; };
openssl = derive { name="openssl"; version="0.4"; type="cran"; sha256="1gfhzxjjssid2z8xmw3vnnd4gj2f6a3zzazkhpg9b1ymmcp9b288"; depends=[ ]; };
opentraj = derive { name="opentraj"; version="1.0"; type="cran"; sha256="13nqal96199l8vkgmkvl542ksnappkscb6rbdmdapxyi977qrgxk"; depends=[plyr maptools openair raster rgdal reshape doParallel foreach sp ]; };
openxlsx = derive { name="openxlsx"; version="2.4.0"; type="cran"; sha256="1jzq3lz9qivsprmn8aibwiidcwsanlnfpmsz2ccw3650gdgk3zdk"; depends=[Rcpp Rcpp ]; };
operator_tools = derive { name="operator.tools"; version="1.3.0"; type="cran"; sha256="0y5f0ifj4gaq03gm44vdvslcs7lglk1p8kq47mdc0gc1yfa6l00c"; depends=[ ]; };
operators = derive { name="operators"; version="0.1-7"; type="cran"; sha256="1qik9ihv5blz77bzsnrslf665ndpa8vp3xldqsgvs4gr5bg5algw"; depends=[ ]; };
oposSOM = derive { name="oposSOM"; version="1.1.1"; type="bioc"; sha256="0q9j67gpik4i8n485cbn96wi4svbcl3v69fvqgvrv4byjwzn02pp"; depends=[som fastICA scatterplot3d pixmap fdrtool ape igraph KernSmooth biomaRt Biobase ]; };
ops = derive { name="ops"; version="1.0"; type="cran"; sha256="0cvwyn5sz5lx8sin8w4k8ymslfl4nfaa012a9vcl2hvp4850rk25"; depends=[ ]; };
optAUC = derive { name="optAUC"; version="1.0"; type="cran"; sha256="0j1llzqa3n7kqw3i5bb7284z0hi6s5jbjfl9zap0l7xf6hg4x1dn"; depends=[MASS ]; };
optBiomarker = derive { name="optBiomarker"; version="1.0-27"; type="cran"; sha256="1kkj602d4klwyd8kylawgfysg8dlp2g6j7afkppzv5x8mbhs5ji4"; depends=[rpanel rgl MASS randomForest e1071 ipred msm Matrix ]; };
optR = derive { name="optR"; version="1.1.1"; type="cran"; sha256="1lr5n0g21jayb27b2j8zh16f1k28avzg7k2mwyc7rjhhxv8k9w1j"; depends=[ ]; };
optextras = derive { name="optextras"; version="2013-10.28"; type="cran"; sha256="1sm025xwrpm5c63l4kiqfndxb7rwq2bcmidy4k2b24g5a8x7cpfv"; depends=[numDeriv ]; };
optiRum = derive { name="optiRum"; version="0.35"; type="cran"; sha256="0hfby5791jmzpacd8a4jj45b6sr5fph9g24kv6sr9db35y07ca36"; depends=[data_table ggplot2 AUC knitr plyr scales stringr XML ]; };
optifunset = derive { name="optifunset"; version="1.0"; type="cran"; sha256="18pvdl04ln1i0w30ljdb3k86j27zg2nvrn3ws54c1g6zg9haqhbg"; depends=[ ]; };
optimbase = derive { name="optimbase"; version="1.0-9"; type="cran"; sha256="0ivz24kf3yacgq5bl3s3az1pcyhsz0cza5f8vdksy5gchwqplm8n"; depends=[Matrix ]; };
optimsimplex = derive { name="optimsimplex"; version="1.0-5"; type="cran"; sha256="1aiq0w2zlra3k6x4hf2rglb6bj8w25yc8djnpgm508kkrbv3cc17"; depends=[optimbase ]; };
optimx = derive { name="optimx"; version="2013.8.7"; type="cran"; sha256="0pbd7s02isj24npi4m1m1f008xqwzvwp3kn472wz8nmy4zrid30s"; depends=[numDeriv ucminf BB Rcgmin Rvmmin minqa setRNG dfoptim svUnit ]; };
optiscale = derive { name="optiscale"; version="1.1"; type="cran"; sha256="1c263w9df66m7lgvzpdfm2zwx9nj8wcdpgh5gijachr2dzffmrp2"; depends=[lattice ]; };
optmatch = derive { name="optmatch"; version="0.9-3"; type="cran"; sha256="16mhrhdpyqrj1g24mwc3fl0qyqq1kna8z6cj239fpbjhqb1mirjb"; depends=[digest ]; };
optparse = derive { name="optparse"; version="1.3.0"; type="cran"; sha256="02sy28imvssr49pngdbg9qbx1h1fyjl11j7nql55m10a7cdzhwd4"; depends=[getopt ]; };
optpart = derive { name="optpart"; version="2.1-1"; type="cran"; sha256="0m2nsrynqbw9sj7cp7c37grx9g20dld2f26g0xzbj16wz7whgp02"; depends=[cluster labdsv MASS plotrix ]; };
optrees = derive { name="optrees"; version="1.0"; type="cran"; sha256="1zqpjii8dsfs98n58qpif81ckvyxkr0661svhlbgzi19xb2vszqs"; depends=[igraph ]; };
orQA = derive { name="orQA"; version="0.2.1"; type="cran"; sha256="0vivjrpcbql42y078gi91kfpfdpv73j23jkiv8fpazzwzdi8ydqq"; depends=[Rcpp gtools genefilter nlme Rcpp ]; };
ora = derive { name="ora"; version="2.0-1"; type="cran"; sha256="0albxqma220rnrpfdq3z9cawr83q1a0zzczbbcy4nijjm4mswphy"; depends=[DBI ROracle ]; };
orca = derive { name="orca"; version="1.1"; type="cran"; sha256="138qqjklwd3g4dfg9j2438kzpsdc7sf8qdl8ha4kd276n71vkfrh"; depends=[ ]; };
orclus = derive { name="orclus"; version="0.2-5"; type="cran"; sha256="0kkxhyqjxib862npinzf3mipqg5imgscdmb5wqm8wf2j2mbislsx"; depends=[ ]; };
orcutt = derive { name="orcutt"; version="1.1"; type="cran"; sha256="0hz7aw4jpf4l7ihj4bjnjv1m8ynr71n4l12x046qj8y7mrnl9p4k"; depends=[ ]; };
ordBTL = derive { name="ordBTL"; version="0.8"; type="cran"; sha256="09x3zfmss4fsh3rjghgmpv8y34dnkz4mw696b3k3nvlgk55a1423"; depends=[caret VGAM wikibooks gtools ]; };
ordPens = derive { name="ordPens"; version="0.3-1"; type="cran"; sha256="0yzf3qzi4p7xqimihjvr0wkdvj3sy9n3wc86bf4bjbavniq6m69r"; depends=[grplasso mgcv RLRsim ]; };
orddom = derive { name="orddom"; version="3.1"; type="cran"; sha256="165axs15fvwhrp89xd87l81q3h2qjll1vrwcsap645cwvb85nwsh"; depends=[psych ]; };
orderbook = derive { name="orderbook"; version="1.03"; type="cran"; sha256="0dlvjrzdhhh8js4g1lvxs46q7fdxfxavxnb4nj6xlwca75i51675"; depends=[lattice hash ]; };
orderedLasso = derive { name="orderedLasso"; version="1.7"; type="cran"; sha256="0vrh89nrmpi8xscvambcb1y70gqqi5819a2gxh02h4pnyjn8axql"; depends=[Matrix Iso quadprog ggplot2 reshape2 ]; };
ordinal = derive { name="ordinal"; version="2015.1-21"; type="cran"; sha256="1vhkxdsapmah09vzy6xd00kb1ck02vbiyamv5ccflxdbdmch1q1y"; depends=[ucminf MASS Matrix ]; };
ordinalgmifs = derive { name="ordinalgmifs"; version="1.0.2"; type="cran"; sha256="1rbn2mb516hdr0chny1849m1aq0vb0vmr636b4fp914l5zh75vgi"; depends=[ ]; };
ore = derive { name="ore"; version="1.1.0"; type="cran"; sha256="1khgjd5fl8vi9n9pj4nbai6fbfbiwzc121a0gf7dfk727iid8whq"; depends=[ ]; };
orgR = derive { name="orgR"; version="0.9.0"; type="cran"; sha256="1q4qbwnbhmja8rqiph7g7m4wxhzhk9mh91x1jgbnky8bs4ljdgrx"; depends=[ggthemes ggplot2 lubridate data_table stringr ]; };
orientlib = derive { name="orientlib"; version="0.10.3"; type="cran"; sha256="1qi46hkz73b8722zc3w6wvsq1ydlk37yxn9rd1dqygqbs1svkmvv"; depends=[ ]; };
orloca = derive { name="orloca"; version="4.2"; type="cran"; sha256="14accc5kcvvin5qav6g3rx10by00r0b8970nd09w4c09nhwyblcd"; depends=[ ]; };
orloca_es = derive { name="orloca.es"; version="4.1"; type="cran"; sha256="0nzhg7vzfxlmryw5ijww8z2b1g9cmgcgzi3gsgigsgn4shnc2hni"; depends=[orloca ]; };
oro_dicom = derive { name="oro.dicom"; version="0.5.0"; type="cran"; sha256="05dmhfglp76apyilwicf3n2ylyjhp1gq6b9bnzsiiblpjnfpia43"; depends=[oro_nifti ]; };
oro_nifti = derive { name="oro.nifti"; version="0.5.2"; type="cran"; sha256="0zf5lb51b81602lwg118x3j2myrbrm6wjaflbpxxzqigz4q60rkg"; depends=[bitops abind ]; };
oro_pet = derive { name="oro.pet"; version="0.2.3"; type="cran"; sha256="06agl6rvd01h6mnilj0vl52dxw6b7b41vl6vmbvaq5qy1wmiaiz7"; depends=[oro_dicom oro_nifti ]; };
orsk = derive { name="orsk"; version="1.0-1"; type="cran"; sha256="155wc9sfla3717b6xmhmsmvsnh2qbzzkffhibmj4xc0pd9lwwz2v"; depends=[BB BHH2 ]; };
orthogonalsplinebasis = derive { name="orthogonalsplinebasis"; version="0.1.6"; type="cran"; sha256="07rbd0fhs2gsk7wj41y2h7wf6pfg324vzv2al753d8kqyx5ns2dj"; depends=[ ]; };
orthopolynom = derive { name="orthopolynom"; version="1.0-5"; type="cran"; sha256="1gvhqx6jlh06hjmkmbsl83gri0gncrm3rkliyzyzmj75m8vz993d"; depends=[polynom ]; };
osDesign = derive { name="osDesign"; version="1.7"; type="cran"; sha256="0y68pnsmq4nlmfsn28306q2kxab200pirr6ha0w4himzpnw1sil3"; depends=[ ]; };
osmar = derive { name="osmar"; version="1.1-7"; type="cran"; sha256="0q6d8nw7d580bnx66mjc282dx45zw9srczz90b520hjcli4w3i3r"; depends=[XML RCurl geosphere ]; };
ouch = derive { name="ouch"; version="2.8-4"; type="cran"; sha256="1kx6qjvc8zlcxihqfxs288hwwh9m05s5544w4c6m1wc02083b735"; depends=[subplex ]; };
outbreaker = derive { name="outbreaker"; version="1.1-5"; type="cran"; sha256="1k39pzqbjah4dwwjyaccb13c1aww8i4kdfjanxc4hzkl8av7s8db"; depends=[ape igraph adegenet ]; };
outliers = derive { name="outliers"; version="0.14"; type="cran"; sha256="0vcqfqmmv4yblyp3s6bd25r49pxb7hjzipiic5a82924nqfqzkmn"; depends=[ ]; };
overlap = derive { name="overlap"; version="0.2.4"; type="cran"; sha256="1pp3fggkbhif52i5lpihy7syhq2qp56mjvsxgbgwlcfbzy27ph1c"; depends=[ ]; };
oz = derive { name="oz"; version="1.0-20"; type="cran"; sha256="1d420606ldyw2rhl8dh5hpscvjx6vanbq0hrg81m7b6v0q5rkfri"; depends=[ ]; };
p2distance = derive { name="p2distance"; version="1.0.1"; type="cran"; sha256="1ims8i5z5k97kjpdysgx8g7lgvnvf7amahcrssw7bk38bvbxawni"; depends=[ ]; };
p3state_msm = derive { name="p3state.msm"; version="1.3"; type="cran"; sha256="0gbrka62ylxx64r3abpk60y92k2lk5smlf8na68qazph8llsl2rv"; depends=[survival ]; };
pBrackets = derive { name="pBrackets"; version="1.0"; type="cran"; sha256="0cwv609hzp8anfv3cgfbspz8w0g1ljfz05wm4xfhwy15v32fckrj"; depends=[ ]; };
pGLS = derive { name="pGLS"; version="0.0-1"; type="cran"; sha256="1rlk8q09sikf4vpzsx0c7s6qqh2hxf8dy2bgcm4nnkbv2nfjz438"; depends=[MASS ]; };
pRF = derive { name="pRF"; version="1.0"; type="cran"; sha256="17m86l29ys4n6z4ndibwy7yz9shyp7nf9hjnbgbvmc0ycf1may6i"; depends=[dplyr multtest ggplot2 permute randomForest reshape2 magrittr ]; };
pROC = derive { name="pROC"; version="1.8"; type="cran"; sha256="0rva08hnaah9qv6hapzgfsdy2g06fdvnjmw0l733wm5j2g44ps8m"; depends=[plyr Rcpp Rcpp ]; };
pRSR = derive { name="pRSR"; version="3.0.2"; type="cran"; sha256="1s81mi172mwxhp786c1fl579cg87valppr0z958ssvxsvg5hbfxy"; depends=[ ]; };
pRoloc = derive { name="pRoloc"; version="1.6.2"; type="bioc"; sha256="1r80fyfhpjq36gf8cwwrh8zikp9yvdfnpwwq6yf5155k4090269h"; depends=[MSnbase MLInterfaces Rcpp BiocParallel mclust caret e1071 sampling class kernlab lattice nnet randomForest proxy FNN BiocGenerics RColorBrewer scales MASS knitr mvtnorm Rcpp RcppArmadillo ]; };
pRolocGUI = derive { name="pRolocGUI"; version="1.0.2"; type="bioc"; sha256="1q5nzi89408vsls1k59j8i9dfkx9dfmi7k01dm1c17qvi977a1mb"; depends=[pRoloc MSnbase shiny ]; };
pSI = derive { name="pSI"; version="1.1"; type="cran"; sha256="0cvw38dqqlyx7cpl27hq33f5xns2d0019lyr98pwndcnbp09mx0b"; depends=[gdata ]; };
pa = derive { name="pa"; version="1.2-1"; type="cran"; sha256="1pfgzxirkb0p8f6smjlrbp1qpsh0vsvqf306cvldaj9zx8cw0q9f"; depends=[ggplot2 ]; };
pacbpred = derive { name="pacbpred"; version="0.92.2"; type="cran"; sha256="13p405vh9rf1r5idxl5payc85vwlzcd87wm15163vc9gmil1ncsf"; depends=[ ]; };
pack = derive { name="pack"; version="0.1-1"; type="cran"; sha256="0x4p8clwp49s2y67y7in530xwhjngnqwagf9xnyb1jp0z3myd3r7"; depends=[ ]; };
packClassic = derive { name="packClassic"; version="0.5.2"; type="cran"; sha256="04a1sg9vx3r0sq54q9kj0kpahp6my246jy3bivgy09g5fjk0dmkj"; depends=[ ]; };
packHV = derive { name="packHV"; version="1.8"; type="cran"; sha256="0dr2picjd7mm633vw29524f3n4jpyillpzi9cg7yc2cymxnrgvyg"; depends=[survival WriteXLS ]; };
packS4 = derive { name="packS4"; version="0.9.1"; type="cran"; sha256="01kkw5g3xcn9hhfglmfvwsryid0w4vw9azh6as8l8d5i1xjyp9k7"; depends=[ ]; };
packdep = derive { name="packdep"; version="0.3.1"; type="cran"; sha256="1827h9xcvgdad9nwz9k3hi79jc33yr7dnxy4xn2frp3fdh4q81ll"; depends=[igraph ]; };
packrat = derive { name="packrat"; version="0.4.3"; type="cran"; sha256="0sfv7vl9afvv2rpqk39hbrvhq6z54ilqjrff4j3parsfqvg7gaqf"; depends=[ ]; };
pacman = derive { name="pacman"; version="0.3.0"; type="cran"; sha256="10fjkr4zjcx7cyfmnpdnb96swxizhdqhvzgb5crymrafxqvg00c7"; depends=[devtools ]; };
paf = derive { name="paf"; version="1.0"; type="cran"; sha256="0wrqn67jfrjjxwcrkka6dljgi3mdk00vfjkzzcv2v7c97gx1zvwn"; depends=[survival ]; };
paircompviz = derive { name="paircompviz"; version="1.4.0"; type="bioc"; sha256="0l9jifzazrl3wchrgn6q4cj088gjghabrzh0118g73hm5y2rjq51"; depends=[Rgraphviz Rgraphviz ]; };
pairedCI = derive { name="pairedCI"; version="0.5-4"; type="cran"; sha256="03wf526n3bbr2ai44zwrdhbfx99pxq1nbng9wsbndrdg2ji4dar2"; depends=[ ]; };
pairheatmap = derive { name="pairheatmap"; version="1.0.1"; type="cran"; sha256="1awmqr5n9gbqxadkblpxwcjl9hm73019bwwfwy1f006jpn050d6l"; depends=[ ]; };
pairsD3 = derive { name="pairsD3"; version="0.1.0"; type="cran"; sha256="0ql6pqijf24pfyid52hmf5fmh4w1ca3sm47z9vknqpnjbn47v8q2"; depends=[htmlwidgets shiny ]; };
pairwise = derive { name="pairwise"; version="0.2.5"; type="cran"; sha256="0r08v95f6f2safi6c0x84v5gib5qnkv46dmi97rdb9l2xzly249b"; depends=[ ]; };
pairwiseCI = derive { name="pairwiseCI"; version="0.1-22"; type="cran"; sha256="1lgir9gcikx8c9pd2wdsqnik9rwr4qkymcf4ndp8s491vj6cm6sa"; depends=[MCPAN coin boot mratios binMto MASS ]; };
palaeoSig = derive { name="palaeoSig"; version="1.1-3"; type="cran"; sha256="1zm8xr7fpnnh6l4421vjavi6bg44iars3mna4r5fw3spmbswyv7b"; depends=[vegan TeachingDemos rioja mgcv MASS ]; };
paleoMAS = derive { name="paleoMAS"; version="2.0-1"; type="cran"; sha256="1hhb5wbj4m3ch8wnvd1zkl5bk6wa9nl6jl1dhm4z6yqkh29yn9z6"; depends=[MASS vegan lattice ]; };
paleoTS = derive { name="paleoTS"; version="0.4-4"; type="cran"; sha256="19acfq5z42blk6ya7sj3sprddlgvhrzb9zqpvpy4q8siqkxxrjah"; depends=[mvtnorm ]; };
paleobioDB = derive { name="paleobioDB"; version="0.3"; type="cran"; sha256="1vcfssi6w0m2wd2smyjxp1zf0y48y95386kkb8qdndqw99g089w8"; depends=[raster maps rjson gtools RCurl plyr scales ]; };
paleofire = derive { name="paleofire"; version="1.1.6"; type="cran"; sha256="1fzmnc4ywhqb6sr3cclsqy6y9v27j69bxszlrrgbnqb0kyg28rd7"; depends=[GCD locfit raster ggplot2 plyr rgdal lattice ]; };
paleotree = derive { name="paleotree"; version="2.4"; type="cran"; sha256="1rrsxll5qcvr9a96wg5bdljvyy7zy26zd9f0b17xswmp77gxmahb"; depends=[ape phangorn ]; };
palinsol = derive { name="palinsol"; version="0.92"; type="cran"; sha256="1jxy3qx8w1r8jwgdavf37gqjjqpizdqk218xcc7b77xi8w52vxpg"; depends=[gsl ]; };
pamctdp = derive { name="pamctdp"; version="0.3.1"; type="cran"; sha256="1fnadgfd2ikis49j9zl2ijj8gim8lpbygwxjj6ri9jyrc1qmj9jb"; depends=[ade4 xtable FactoClass ]; };
pamm = derive { name="pamm"; version="0.7"; type="cran"; sha256="02py4zcymmwnlpsvha5cgc4ik8fp0gbsg86s5q7z5fl3ma3g669j"; depends=[lme4 mvtnorm gmodels ]; };
pampe = derive { name="pampe"; version="1.1.1"; type="cran"; sha256="1ha4jbmi2j35i375ziv4rbs4rijlp6fxwvb0vfr2905d1vl3cbap"; depends=[leaps ]; };
pamr = derive { name="pamr"; version="1.55"; type="cran"; sha256="1hy3khb0gikdr3vpjz0s245m5zang1vq8k93g7n9fq3sjfa034gd"; depends=[cluster survival ]; };
pan = derive { name="pan"; version="1.3"; type="cran"; sha256="08g0arwwkj9smkzyh6aicfrqvknag3n2xl55f7q7ghj09fhwg1br"; depends=[ ]; };
pander = derive { name="pander"; version="0.5.2"; type="cran"; sha256="0zs2c00dr0vph9d4par3zcisnyqa98rqym8fpya02ka28qajjiia"; depends=[digest Rcpp Rcpp ]; };
panelAR = derive { name="panelAR"; version="0.1"; type="cran"; sha256="1ka2rbl9gs65xh2y2m4aqwh5qj4szibjy101hqfmza9wmdh25gpq"; depends=[car ]; };
panelaggregation = derive { name="panelaggregation"; version="0.1"; type="cran"; sha256="19426hab4rvgn8k2c7x327k4ymihas59jbys0nmrfgg074x0xdnm"; depends=[data_table ]; };
panp = derive { name="panp"; version="1.36.0"; type="bioc"; sha256="0yyghljg81s5f9fwj24hlhgl7i4a15ia662cqhb6l6im8ghssxrl"; depends=[affy Biobase Biobase ]; };
parallelMCMCcombine = derive { name="parallelMCMCcombine"; version="1.0"; type="cran"; sha256="05krkd643awqhfrylq9lxr2cmgvnm1msn2x8p1l1483n2gzyklz7"; depends=[mvtnorm ]; };
parallelMap = derive { name="parallelMap"; version="1.2"; type="cran"; sha256="1rd4q644xml29nj4mybgh8cr0h4wsadsf2wlyzppx5hg5yi27ff2"; depends=[BBmisc checkmate ]; };
parallelize_dynamic = derive { name="parallelize.dynamic"; version="0.9-1"; type="cran"; sha256="03zypcvk1iwkgy6dmd5bxg3h2bqvjikxrbzw676804zi6y49mhln"; depends=[ ]; };
paramlink = derive { name="paramlink"; version="0.9-6"; type="cran"; sha256="0pazllkjbqzvl9vmpvr67lkcsd960mipcd1p1nf00y8hknrwh7qp"; depends=[kinship2 maxLik ]; };
paran = derive { name="paran"; version="1.5.1"; type="cran"; sha256="0nvgk01z2vypk5bawkd6pp0pnbgb54ljy0p8sc47c8ibk242ljqk"; depends=[MASS ]; };
parboost = derive { name="parboost"; version="0.1.4"; type="cran"; sha256="087b4as0w8bckwqpisq9mllvm523vlxmld3irrms13la23z6rjvf"; depends=[mboost party iterators plyr caret glmnet doParallel ]; };
parcor = derive { name="parcor"; version="0.2-6"; type="cran"; sha256="10bhw50g8c4ln5gapa7wghhb050a3jmd1sw1d1k8yljibwcbbx36"; depends=[MASS glmnet ppls Epi GeneNet ]; };
parfossil = derive { name="parfossil"; version="0.2.0"; type="cran"; sha256="12gsc5n4ycvhzxvq5j0r3jnnrzw1q412dbvmakipyw2yx2l2s7jn"; depends=[fossil foreach ]; };
parma = derive { name="parma"; version="1.5-1"; type="cran"; sha256="0qrq3bx0amri9b3s6bym4znnk140jjd2abnvqyihaj4bf2glbl0g"; depends=[nloptr slam Rglpk quadprog FRAPO corpcor ]; };
parmigene = derive { name="parmigene"; version="1.0.2"; type="cran"; sha256="1fsm6pkr17jcbzkj1hbn91jf890fviqk1lq6ls8pihsdgah1zb4d"; depends=[ ]; };
parody = derive { name="parody"; version="1.24.0"; type="bioc"; sha256="1y36abd3l8xaqd7aaf1sfi1ylqqvyns6in8i7j2kswgjjv89k4wr"; depends=[ ]; };
parsedate = derive { name="parsedate"; version="1.1.1"; type="cran"; sha256="0mr97rw4fzg2v9dh5d4x0b76d5s56gi6zilq69yjhbx78w46apzc"; depends=[ ]; };
partDSA = derive { name="partDSA"; version="0.9.10"; type="cran"; sha256="1j6ihgyjiy8dnr89xkqvl1dkmdswvknffq7zc15civy0h781azv6"; depends=[survival ]; };
partialAR = derive { name="partialAR"; version="1.0.5"; type="cran"; sha256="1d8nbv3rkf0p4vg8mlb1l5cqzgsqqhigwiq2bnd4npak6fq6syvg"; depends=[Rcpp zoo ggplot2 MASS tseries data_table FKF urca plot3D Rcpp ]; };
partialOR = derive { name="partialOR"; version="0.9"; type="cran"; sha256="02vbvln8lswysaafpxq5rxb6crp7yhlc13i42kybv8fr10jaagjj"; depends=[nnet ]; };
partitionMap = derive { name="partitionMap"; version="0.5"; type="cran"; sha256="0pi066xaaq0iqr0d7cncdzjd7bacmgrivc4qvhqx0y7q1vifrdjm"; depends=[randomForest ]; };
partitionMetric = derive { name="partitionMetric"; version="1.1"; type="cran"; sha256="1wry9d3s814yp79ayab7rzf8z5l2mwpgnrc5j7d2sac24vp4pd48"; depends=[ ]; };
partitions = derive { name="partitions"; version="1.9-15"; type="cran"; sha256="0jgpknm4zah50w9i3fbq2f1whm4hywm2j72vxc3ignx1snx2z0gs"; depends=[gmp polynom ]; };
partsm = derive { name="partsm"; version="1.1-2"; type="cran"; sha256="0cv3lgkdkn97bc85iwlv9w5pmqwwwsgb717zxnbgb5mzf4xn3f3g"; depends=[ ]; };
party = derive { name="party"; version="1.0-20"; type="cran"; sha256="10d4hyzc8icgb51k4dkc1bwprky7sg35vpa9s3jcl9ifw6na0bgm"; depends=[mvtnorm modeltools strucchange survival coin zoo sandwich mvtnorm ]; };
partykit = derive { name="partykit"; version="1.0-1"; type="cran"; sha256="12ja72nginkzl9zrpiidqwrih2zgwxksdkhbw7hbdjbsr4zb7q62"; depends=[survival ]; };
parviol = derive { name="parviol"; version="1.1"; type="cran"; sha256="1sfgic86ssd5wjf9ydss9kjd3m4jmm2d1v896sjsv8bydwymbpx3"; depends=[vioplot ]; };
pass = derive { name="pass"; version="1.0"; type="cran"; sha256="00dzwg2lnzmrrmzq3fyrs4axswgnsn7f62l2f2a8d8gyf8qzz3nf"; depends=[MASS lars ncvreg ]; };
pastecs = derive { name="pastecs"; version="1.3-18"; type="cran"; sha256="0ixlnc1psgqgm71bsf5z5j65lvr92ghpsk9f1ifm94dzjhi6d22i"; depends=[boot ]; };
pastis = derive { name="pastis"; version="0.1-2"; type="cran"; sha256="0211pzj3xrmqgxjpspij95kmlpa2klpicw49n6pnz2g1fapjy2bd"; depends=[caper ape ]; };
patchDVI = derive { name="patchDVI"; version="1.9.1601"; type="cran"; sha256="0vv1rmmd78n2r14dsl9fx25v6ym9mav557ya0aagr548wqcajf0m"; depends=[ ]; };
patchPlot = derive { name="patchPlot"; version="0.1.5"; type="cran"; sha256="1b4k0dvvj6qwyxbqb36knyrawvy5qq8hl45pz896c9rkqhlg02bx"; depends=[datautils ]; };
patchSynctex = derive { name="patchSynctex"; version="0.1-2"; type="cran"; sha256="1ssjs4mcsjad7g0yfi5sxwfyywsziry81rzwb4sly3afw8g538p9"; depends=[stringr ]; };
pathClass = derive { name="pathClass"; version="0.9.4"; type="cran"; sha256="1vzmz3bml37wfxsjhkw9fip90sr1iv521ccr7nlf6xd30wavqywk"; depends=[svmpath kernlab affy Biobase ROCR igraph lpSolve ]; };
pathRender = derive { name="pathRender"; version="1.34.0"; type="bioc"; sha256="0giwl6inrs0krk7qnri23g8xyf06x8knqh83p4cpzagg8rfbkpzc"; depends=[graph Rgraphviz RColorBrewer AnnotationDbi ]; };
pathdiagram = derive { name="pathdiagram"; version="0.1.9"; type="cran"; sha256="1j2h9mmwfi95nwhk9214kcfpb1qrmw249mjaza7i9gijmlicraxz"; depends=[shape ]; };
pathifier = derive { name="pathifier"; version="1.4.0"; type="bioc"; sha256="1xm9rjpk1ngapl2kni5bn5z4fg19rnbi41dvv784flmzy87iwhjl"; depends=[R_oo princurve ]; };
pathmox = derive { name="pathmox"; version="0.2.0"; type="cran"; sha256="0hcllnpjjays35yngz309f1gcx9qg5z9h302kg9mhxs90470x4w0"; depends=[plspm tester ]; };
pathological = derive { name="pathological"; version="0.0-6"; type="cran"; sha256="1a6a9q15nk8rcpyz5xpndq0gbdv7y2iq4jgqiv7sgd3j1agh26c6"; depends=[assertive plyr stringr ]; };
pathview = derive { name="pathview"; version="1.6.0"; type="bioc"; sha256="1bfr20rad6qrvaid8y0n167x7d6ixi1k3dclq919473v7pzzqq65"; depends=[KEGGgraph Rgraphviz graph png AnnotationDbi KEGGREST ]; };
pauwels2014 = derive { name="pauwels2014"; version="1.0"; type="cran"; sha256="1b7whn13lgydc69kg1fhnwkxirw0nqq75cfvii0yg0j4p8r1lw42"; depends=[deSolve ggplot2 ]; };
pavo = derive { name="pavo"; version="0.5-1"; type="cran"; sha256="189kshc5dm02qv0rm1dlcxrhvga4yhlkn3yyj3rjhmrags4rmwcb"; depends=[rgl rcdd mapproj geometry ]; };
pawacc = derive { name="pawacc"; version="1.2.1"; type="cran"; sha256="1l2wn69ynr5mza04a5mmzwzigqac8k9xkiaw7sdqv5hn9y7x3sj9"; depends=[SparseM ]; };
paxtoolsr = derive { name="paxtoolsr"; version="1.2.11"; type="bioc"; sha256="1b8197cd0c5i0r9d85v2x0mw8yz3l74skg9jj0lh1h56hwpxfnb1"; depends=[rJava XML RCurl rjson plyr ]; };
pbapply = derive { name="pbapply"; version="1.1-1"; type="cran"; sha256="1dshpnnmq1g2v223qy7pgbxydy9sqj04zwqxvzylm4mqc91ks4n2"; depends=[ ]; };
pbatR = derive { name="pbatR"; version="2.2-9"; type="cran"; sha256="1p8rj0lzm4pp1svgy7xia2sclkngzfjbgbikq94s6v92d582wncw"; depends=[survival rootSolve ]; };
pbdBASE = derive { name="pbdBASE"; version="0.2-3"; type="cran"; sha256="1zfz45fnjmp8yz4nlac9q1d49gpczkl2b0rz2s33jbv5i32z3yvs"; depends=[rlecuyer pbdMPI pbdSLAP ]; };
pbdDEMO = derive { name="pbdDEMO"; version="0.2-0"; type="cran"; sha256="0vilri4d25mb339zsgh1zypyqxv1vzfdc8b8ivqi5yz1nrzm05gz"; depends=[rlecuyer pbdMPI pbdSLAP pbdBASE pbdDMAT ]; };
pbdDMAT = derive { name="pbdDMAT"; version="0.2-3"; type="cran"; sha256="18x607r0gx1nnw9p305ci5sfcxbi5zdr2b6yf9y6vqjsckicnw62"; depends=[rlecuyer pbdMPI pbdSLAP pbdBASE ]; };
pbdMPI = derive { name="pbdMPI"; version="0.2-5"; type="cran"; sha256="0g21zyl8dck5mxjsg4iif62ngrigj58hr8mzdvr47r1b081abzb4"; depends=[rlecuyer ]; };
pbdNCDF4 = derive { name="pbdNCDF4"; version="0.1-4"; type="cran"; sha256="0fd29mnbns30ck09kkh53dgj24ddrqzks4xrrk2hh1wiy7ap1h95"; depends=[ ]; };
pbdPROF = derive { name="pbdPROF"; version="0.2-3"; type="cran"; sha256="0vk29vgsv7fhw240sagz0szg0wb649sqc05j1aj027zvz931vfl8"; depends=[ggplot2 gridExtra reshape2 ]; };
pbdSLAP = derive { name="pbdSLAP"; version="0.2-0"; type="cran"; sha256="06q9k8y7k604wa2zfspjg2v3fybn5my1vyr7zsg6j66n9g4z6039"; depends=[rlecuyer pbdMPI ]; };
pbivnorm = derive { name="pbivnorm"; version="0.6.0"; type="cran"; sha256="05jzrjqxzbcf6z245hlk7sjxiszv9paadaaimvcx5y5qgi87vhq7"; depends=[ ]; };
pbkrtest = derive { name="pbkrtest"; version="0.4-2"; type="cran"; sha256="1yppp24a8rl36x6sn1jjhhgs41irbf0z5nrv454g9qwhbvfgiay5"; depends=[lme4 Matrix MASS ]; };
pbo = derive { name="pbo"; version="1.3.4"; type="cran"; sha256="0v522z36q48k4mx5gym564kgvhmf08fsadp8qs6amzbgkdx40yc4"; depends=[lattice ]; };
pbs = derive { name="pbs"; version="1.1"; type="cran"; sha256="0cpgs6k5h8y2cia01zs1p4ri8r7ljg2z4x8xcbx73s680dvnxa2w"; depends=[ ]; };
pcIRT = derive { name="pcIRT"; version="0.1"; type="cran"; sha256="0vfbbmnp4jyrbi5d9gz1krh707aazbrqfcgc3rjrwwyjld11wyzn"; depends=[combinat ]; };
pca3d = derive { name="pca3d"; version="0.3"; type="cran"; sha256="01nc4p68r7bnly18q8rkhnnj6vq9mwbb5hhdcblan6nhhlzhnld0"; depends=[rgl ]; };
pcaBootPlot = derive { name="pcaBootPlot"; version="0.1.0"; type="cran"; sha256="0h5i5qh4lhnhh7n9k1map10gvw70f7576gnxhjjc6l03sngm0yp7"; depends=[RColorBrewer ]; };
pcaGoPromoter = derive { name="pcaGoPromoter"; version="1.10.0"; type="bioc"; sha256="03h1fpj7iaaz6b9y7zwpn9nhgyhg8r39iw0vnhmmlsyg5g4zrlza"; depends=[ellipse Biobase AnnotationDbi ]; };
pcaL1 = derive { name="pcaL1"; version="1.3"; type="cran"; sha256="026cgi812kvbkmaryd3lyqnb1m78i3ql2phlvsd2r691y1j8w532"; depends=[ ]; };
pcaMethods = derive { name="pcaMethods"; version="1.56.0"; type="bioc"; sha256="112wm1qr1bczn18k854ja8029rz4sxnxgvlksjjpxswxliwfldkn"; depends=[Biobase Rcpp BiocGenerics MASS Rcpp ]; };
pcaPP = derive { name="pcaPP"; version="1.9-60"; type="cran"; sha256="1rqq4zgik7cgnnnm8il1rxamp6q9isznac8fhryfsfdcawclfjws"; depends=[mvtnorm ]; };
pcalg = derive { name="pcalg"; version="2.2-0"; type="cran"; sha256="1cgir5h9g8v3kjmdqnnjsc0z1f8wl3flnnxnk9y7km82x5pby0m7"; depends=[abind graph RBGL igraph ggm corpcor robustbase vcd Rcpp bdsmatrix sfsmisc fastICA clue gmp Rcpp RcppArmadillo BH ]; };
pcg = derive { name="pcg"; version="1.1"; type="cran"; sha256="194j72hcp7ywq1q3dd493pwkn1fmdg647gmhxcd1jm6xgijhvv87"; depends=[ ]; };
pcnetmeta = derive { name="pcnetmeta"; version="2.2"; type="cran"; sha256="1zlkwx6745nlqg39f062c975277sbbakvx48r5gq0dgix8dkva9v"; depends=[rjags coda ]; };
pcot2 = derive { name="pcot2"; version="1.34.0"; type="bioc"; sha256="0v6350d9inmfvbiyagqb2wpp6pfirnwrm9hq53g0yg9igyd4q4nl"; depends=[Biobase amap ]; };
pcrcoal = derive { name="pcrcoal"; version="1.1"; type="cran"; sha256="17mm13xpmghachiqr7v2691jk39mbfsadpg028gs3iiwmh0pksa0"; depends=[ape ggplot2 phylosim ]; };
pcse = derive { name="pcse"; version="1.9"; type="cran"; sha256="04vprsvcmv1ivxqrrvd1f8ifg493byncqvmr84fmc0jw5m9jrk3j"; depends=[ ]; };
pdInfoBuilder = derive { name="pdInfoBuilder"; version="1.30.6"; type="bioc"; sha256="0ydzwbkjzmm5dh70vwbdiw2kmd4cmnvfwpqa65fmblbpdg73618w"; depends=[Biobase RSQLite affxparser oligo Biostrings BiocGenerics DBI IRanges oligoClasses S4Vectors ]; };
pdR = derive { name="pdR"; version="1.3"; type="cran"; sha256="0y81nlvq5vwf6021m5ns6j4l44c5456jkbs2x9y7jfkw6r3v2ddf"; depends=[ ]; };
pdc = derive { name="pdc"; version="1.0.2"; type="cran"; sha256="0d7p65rkwrh39njhszdrbv25z4jz27746y1qyhqmhkxmvkx6g1fl"; depends=[ ]; };
pdfCluster = derive { name="pdfCluster"; version="1.0-2"; type="cran"; sha256="0kbci54dlzn736835fh18xnf2pmzqrdmwa3jim29xcnwa1r2gklb"; depends=[geometry ]; };
pdfetch = derive { name="pdfetch"; version="0.1.6"; type="cran"; sha256="1j3fdjnmfj84pfd5bc37ssbs83ya3ma0hj5iy1a0bg9wb5xqap13"; depends=[httr zoo xts XML lubridate jsonlite reshape2 ]; };
pdist = derive { name="pdist"; version="1.2"; type="cran"; sha256="18nd3mgad11f2zmwcp0w3sxlch4a9y6wp8dfdyzvjn7y4b4bq0dd"; depends=[ ]; };
pdmclass = derive { name="pdmclass"; version="1.38.0"; type="bioc"; sha256="0lk7y8i24mbajp4lln07q61pnbmsn6mpajb09zfvrf7qgklm64hz"; depends=[Biobase mda ]; };
pdmod = derive { name="pdmod"; version="1.0"; type="cran"; sha256="1czpaghp2lcad4j6wxswdfw0n9m0phngy966zr4fr3ciqpx3q129"; depends=[mco ]; };
peacots = derive { name="peacots"; version="1.1"; type="cran"; sha256="042644i8x0s4nd425lp8v1i4jspib3qxkgvprgapdhgqcp6cabk0"; depends=[ ]; };
pear = derive { name="pear"; version="1.2"; type="cran"; sha256="1ixmyzm72s18qrfv2m8xzh5503k1q90lhddq4sp46m0q7qyxb192"; depends=[ ]; };
pearson7 = derive { name="pearson7"; version="1.0-1"; type="cran"; sha256="0li32my02gv5yaf4q1w48pjbmij2njkpd15135n9mzjc5ibvf5kh"; depends=[ ]; };
pec = derive { name="pec"; version="2.4.4"; type="cran"; sha256="110v8jb6l79prbkm8vp1qgrdks598q3ygmqj2yyv1d5plmsj9dh6"; depends=[prodlim foreach rms survival ]; };
pedantics = derive { name="pedantics"; version="1.5"; type="cran"; sha256="0m5jxzkf1pf657q2klv6idnywg18ki962666nj7sfyl4rq06xhsi"; depends=[MasterBayes MCMCglmm kinship2 ]; };
pedgene = derive { name="pedgene"; version="2.1"; type="cran"; sha256="0nmp1s0i5b4h45p3f4rvvixjz8sgv56as3c85rvv3a8xwfd1gcxq"; depends=[Matrix CompQuadForm survey kinship2 ]; };
pedigree = derive { name="pedigree"; version="1.4"; type="cran"; sha256="1dqfvzcl6f15n4d4anjkd0h8vwsbxjg1lmlj33px8rpp3y8xzdgw"; depends=[Matrix HaploSim reshape ]; };
pedigreemm = derive { name="pedigreemm"; version="0.3-3"; type="cran"; sha256="1bpkba9nxbaxnivrjarf1p2p9dcz6smf9k2djawis1wq9dhylvsb"; depends=[lme4 Matrix ]; };
pedometrics = derive { name="pedometrics"; version="0.4-1"; type="cran"; sha256="0pzkkjp126g64q6avlk7bqrhcl6y5zz8vmfrq68k4yck34c1gn16"; depends=[car fields gstat lattice latticeExtra MASS moments plyr pbapply Rcpp sp spsurvey xtable Rcpp ]; };
pegas = derive { name="pegas"; version="0.8"; type="cran"; sha256="0074r6vsnvdc0gkqhb3cb4dybpgp4ryf38lrfkk8vrs3y9gb7hdh"; depends=[ape adegenet ]; };
penDvine = derive { name="penDvine"; version="0.2.2"; type="cran"; sha256="054vw99z68pk0bi4yzdmvx13x8n75sj2371l8w2yady1lqjj4qi7"; depends=[lattice quadprog TSP fda Matrix ]; };
penMSM = derive { name="penMSM"; version="0.99"; type="cran"; sha256="1xdcxnagvjdpgnfa5914gb41v5y4lsvh63lbz1d2l8bl9mpff3lm"; depends=[Rcpp Rcpp ]; };
penalized = derive { name="penalized"; version="0.9-45"; type="cran"; sha256="0svmhsh0lv3d571jyhk73zd9slcd6xnp3p0l1ijab9gl2rjhlzz5"; depends=[survival ]; };
penalizedLDA = derive { name="penalizedLDA"; version="1.0"; type="cran"; sha256="1ib33l5nqmvi6qn9ykybkdpc0pp55k1b6x4vqpklzp3dgckg0lp6"; depends=[flsa ]; };
penalizedSVM = derive { name="penalizedSVM"; version="1.1"; type="cran"; sha256="0zc36cgcrdy4rwhg4hhhahymqfalvc5v2zmqq56ikz5blln82qvq"; depends=[e1071 MASS corpcor statmod tgp mlegp lhs ]; };
pencopula = derive { name="pencopula"; version="0.3.5"; type="cran"; sha256="1cy36pprbrfabk9n3x4d1xbj1vd2dda7xq3ihj2hzniwn77j63wi"; depends=[lattice fda quadprog latticeExtra ]; };
pendensity = derive { name="pendensity"; version="0.2.8"; type="cran"; sha256="18mnpsmfnqkbhg75lnqvs0iigx3mk9zr923wpygqviw5qxlwk5km"; depends=[lattice fda ]; };
pensim = derive { name="pensim"; version="1.2.9"; type="cran"; sha256="10nrnxwfs41bhybs7j6xgnx0pq3c802n9k8irngmh8iy4w3wbhrq"; depends=[penalized MASS ]; };
pepStat = derive { name="pepStat"; version="1.0.0"; type="bioc"; sha256="1r3hvhxwd85mkjw4f2hwygvffppsbay3ghj7rmy9jkaayfz2px49"; depends=[Biobase IRanges limma fields GenomicRanges ggplot2 plyr data_table ]; };
pepXMLTab = derive { name="pepXMLTab"; version="1.0.0"; type="bioc"; sha256="0pxy5hhg3vb2zph484c8hm7066dnfp7303n7zbaviszykcxmw9h6"; depends=[XML ]; };
peperr = derive { name="peperr"; version="1.1-7"; type="cran"; sha256="01a6sxcmb8v2iz2xdwhdnr92k3w2vn3hr0hg9b6mkpzjf4n45q3k"; depends=[snowfall survival ]; };
peplib = derive { name="peplib"; version="1.5.1"; type="cran"; sha256="1bdgmwbk76ryl5gxcgf3slds92yilg9p1x1lx0hnzzwcgx99wif3"; depends=[ ]; };
peptider = derive { name="peptider"; version="0.2"; type="cran"; sha256="1mrwa5pcmc0vbs7n39003bxia2hd6msjkl0j0b21d05accbvzph1"; depends=[discreteRV plyr dplyr ]; };
pequod = derive { name="pequod"; version="0.0-3"; type="cran"; sha256="14nag0bd2icg294y7n47c6xlw54rrdia887d2ni6achjqgwvffzh"; depends=[ggplot2 car ]; };
perARMA = derive { name="perARMA"; version="1.5"; type="cran"; sha256="1d9vrxv8r6qgxhaz3pv8n34c526gi5cd8w7wxy9qc914y8kplmzr"; depends=[corpcor gnm matlab Matrix signal ]; };
performanceEstimation = derive { name="performanceEstimation"; version="1.0.0"; type="cran"; sha256="176crk5vf9fw52qwsbwcwyp0l9v0kg27jwz2krx295d8kq22ygrj"; depends=[ggplot2 foreach doParallel ]; };
perm = derive { name="perm"; version="1.0-0.0"; type="cran"; sha256="0075awl66ynv10vypg63fcxk33qzvxddrp8mi4w08ysvimcyxijk"; depends=[ ]; };
permGPU = derive { name="permGPU"; version="0.14.6"; type="cran"; sha256="1h01nfq8hn7i29xanma70q6s5mj83znbb2lg9x7bjgdrgj38vy2m"; depends=[Biobase RUnit foreach survival ]; };
permtest = derive { name="permtest"; version="1.2"; type="cran"; sha256="1sciyjs840h004zg8bwclq0j0n22anvjvx3fz62y4dzblrynhrci"; depends=[ ]; };
permute = derive { name="permute"; version="0.8-4"; type="cran"; sha256="1z5pmq9dy93rpsdb73waqrqmnvvi9ygx1v5l81a2n1j1kb4lmksv"; depends=[ ]; };
perry = derive { name="perry"; version="0.2.0"; type="cran"; sha256="1lfmcq2xsxmfs7cxvhgxcsggslgjicbaks4wcjw1yjh67n559j46"; depends=[ggplot2 robustbase ]; };
persiandictionary = derive { name="persiandictionary"; version="1.0"; type="cran"; sha256="0rgi36ngpiax3p5zk4cdgf3463vgx7zg5wxscs2j7834yh37jwax"; depends=[ ]; };
perspectev = derive { name="perspectev"; version="1.0"; type="cran"; sha256="1qqhja7vqji9313dxxy1a9a50h5zxwxgc5s16lssczjachkqaibk"; depends=[ggplot2 foreach ape doParallel mapproj boot sp ]; };
perturb = derive { name="perturb"; version="2.05"; type="cran"; sha256="18ydmmp8aq4rf9834dmsr4fr9r07zyn97v8a1jqz3g9njza983la"; depends=[ ]; };
pesticides = derive { name="pesticides"; version="0.1"; type="cran"; sha256="1w180hqqav0mh9sr9djj94sf55fzh4r373a7h08a2nz9nyjpq09w"; depends=[ ]; };
pez = derive { name="pez"; version="1.0-0"; type="cran"; sha256="0d1npc2w6gzi4ki7gwqa0f4sklz0sml8q0cmgb77hpvgrny47mk3"; depends=[ape caper picante quantreg mvtnorm vegan ade4 apTreeshape FD plotrix Matrix ]; };
pgam = derive { name="pgam"; version="0.4.12"; type="cran"; sha256="0vhac2mysd053bswy3xwpiz0q0qh260hziw6bygpf83vkj94qf2v"; depends=[ ]; };
pgirmess = derive { name="pgirmess"; version="1.6.0"; type="cran"; sha256="0b2sxk2q4cylsb5ch9bq1grdifp2sww7bv1bgl9zn0j6h611gif5"; depends=[boot nlme rgdal sp spdep splancs ]; };
pglm = derive { name="pglm"; version="0.1-2"; type="cran"; sha256="1arn2gf0bkg0s59a96hyhrm7adw66d33qs2al2s0ghln6fyk8674"; depends=[maxLik plm statmod ]; };
pgmm = derive { name="pgmm"; version="1.2"; type="cran"; sha256="0f0wdcirjyxzg2139c055i035qzmhm01yvf97nrhp69h4hpynb2n"; depends=[ ]; };
pgs = derive { name="pgs"; version="0.4-0"; type="cran"; sha256="1zf5sjn662sds3h06zk5p4g71qnpwp5yhw1dkjzs1rs48pxmagrx"; depends=[gsl R2Cuba ]; };
phalen = derive { name="phalen"; version="1.0"; type="cran"; sha256="0awj9a48dy0azkhqkkzf82q75hrsb2yw6dgbsvlsb0a71g4wyhlr"; depends=[sqldf ]; };
phangorn = derive { name="phangorn"; version="1.99-13"; type="cran"; sha256="1d6awphvzkznqvp30bxdi6j6chlakfxrvmkk9a4by21fxa29xmp9"; depends=[ape quadprog igraph Matrix nnls ]; };
phaseR = derive { name="phaseR"; version="1.3"; type="cran"; sha256="1hwclb7lys00vc260y3z9428b5dgm7zq474i8yg0w07rxqriaq2h"; depends=[deSolve ]; };
phcfM = derive { name="phcfM"; version="1.2"; type="cran"; sha256="0i1vr8rmq5zs34syz2vvy8c9603ifzr9s5v2izh1fh8xhzg7655x"; depends=[coda ]; };
pheatmap = derive { name="pheatmap"; version="1.0.2"; type="cran"; sha256="0nmq5w2jcljbd81v428xl4mvqzrm4vxxlwyhkimi4hj8a9rqw743"; depends=[RColorBrewer scales gtable ]; };
phenability = derive { name="phenability"; version="2.0"; type="cran"; sha256="0can8qgdpfr4h6jfg23cnwh7hhmwv6538wg2jla9w138la7rhpd1"; depends=[calibrate ]; };
phenex = derive { name="phenex"; version="1.0-7"; type="cran"; sha256="0q563cv9lskikf3ls0idp56lirw9gxn71rgxp9xn8an05gwdg0xr"; depends=[ ]; };
phenmod = derive { name="phenmod"; version="1.2-3"; type="cran"; sha256="0dxwx8c7zka29fq7svrvn8bghj8jh8grbrgsw4pvavx2439cldak"; depends=[gstat RColorBrewer lattice pheno ]; };
pheno = derive { name="pheno"; version="1.6"; type="cran"; sha256="0xdya1g1ap7h12c6zn3apbkxr725rjhcp4gbdchkvcnwz4y9vw8c"; depends=[nlme SparseM quantreg ]; };
pheno2geno = derive { name="pheno2geno"; version="1.3.1"; type="cran"; sha256="1k1hw5qxrwxy502zkcfcz0nxjqmvdk1fgghjc512vq7x5znblz3v"; depends=[qtl VGAM mixtools ]; };
phenoDist = derive { name="phenoDist"; version="1.14.0"; type="bioc"; sha256="0vr2mv4swk102kl7vq3mj6xxl1z0v45shd0wrhs9zg1pklbd851j"; depends=[imageHTS e1071 ]; };
phenoTest = derive { name="phenoTest"; version="1.14.0"; type="bioc"; sha256="19qgcpd28frnhcx10lsrxg885b6f9l6qfwlyzkp3x875p62xy942"; depends=[Biobase annotate Heatplus BMA ggplot2 gridExtra survival limma Hmisc gplots Category AnnotationDbi hopach biomaRt GSEABase genefilter xtable annotate mgcv SNPchip HTSanalyzeR ellipse ]; };
phenology = derive { name="phenology"; version="4.2"; type="cran"; sha256="141k2rfjmrx0cfzzcdf3q67chxq1jqp524rxcpdq3m7bnbkv67k3"; depends=[fields zoo coda HelpersMG shiny ]; };
phia = derive { name="phia"; version="0.2-0"; type="cran"; sha256="1v2znss1snqrn3bpd0513jmw0x39p9vpwdc60klx725yrr2cfznw"; depends=[car Matrix ]; };
phmm = derive { name="phmm"; version="0.7-5"; type="cran"; sha256="0dil0ha199yh85j1skwfdl0v02vxdmb0xcc1jdbayjr5jrn9m1zk"; depends=[survival lattice Matrix ]; };
phom = derive { name="phom"; version="1.0.3"; type="cran"; sha256="0x05p6fn4kycilal65k7dy6h3w5i3ca9w93ryp4gqd4lp50l1749"; depends=[Rcpp Rcpp ]; };
phonR = derive { name="phonR"; version="1.0-3"; type="cran"; sha256="09wzsq92jkxy6cd89czshpj1hsp56v9jbgqr5a06rm6bv3spa31i"; depends=[splancs deldir plotrix ]; };
phonTools = derive { name="phonTools"; version="0.2-2.0"; type="cran"; sha256="1wd1a5506p3ny6vi9pq6yg9gbz082fxw4l3cxsplkdpqgkhryrww"; depends=[ ]; };
phreeqc = derive { name="phreeqc"; version="1.0-9102"; type="cran"; sha256="0214bsw9lwnlfk7bma1kzr5k2nv0a8smhyfwxmwbvnpcrm2yg0n7"; depends=[ ]; };
phtt = derive { name="phtt"; version="3.1.2"; type="cran"; sha256="1fvvx5jilq5dlgh3qlfsjxr8jizy4k34a1g3lknfkmvn713ycp7v"; depends=[pspline ]; };
phyclust = derive { name="phyclust"; version="0.1-15"; type="cran"; sha256="1j643k0mjmswsvp9jyiawkjf2qhfrw6xf4s2viqv987zxif2kd7z"; depends=[ape ]; };
phylin = derive { name="phylin"; version="1.0"; type="cran"; sha256="10pbs4adsyp43i89jb3xi0m55sl1w7ifmc98v74iq9p8xa15sdci"; depends=[ ]; };
phyloTop = derive { name="phyloTop"; version="1.1.1"; type="cran"; sha256="046myyr01c4zc6sfy7r6p2vswkqqqd3w4k173gjbjazl1ims1sjs"; depends=[phylobase NHPoisson ape igraph ]; };
phylobase = derive { name="phylobase"; version="0.6.8"; type="cran"; sha256="0xj7x4cdfp0yadvjhdkw1ai3yd081ri4gpdg0n5g0z13cjaa6mjh"; depends=[ade4 ape Rcpp Rcpp ]; };
phyloclim = derive { name="phyloclim"; version="0.9-4"; type="cran"; sha256="0ngg8x192lrhd75rr6qbh72pqijbrhrpizl27q0vr6hp7n9ch3zx"; depends=[ape raster ]; };
phylocurve = derive { name="phylocurve"; version="1.1.0"; type="cran"; sha256="03jvq9cdbch860910qjwg16y7h8jq9zn0iaak9daza65arch8fv0"; depends=[drc ape geiger phytools abind phylolm GPfit dtw ]; };
phyloland = derive { name="phyloland"; version="1.3"; type="cran"; sha256="10g40m6n2s4qvnzlqcwpy3k0j7bxdp79f586jj910b8p00ymrksp"; depends=[ape ]; };
phylolm = derive { name="phylolm"; version="2.2"; type="cran"; sha256="1x1mi1mcq3ijbqhr0951scqzv4zza0r3fcs0hh4gpbr8z49b6d98"; depends=[ape ]; };
phyloseq = derive { name="phyloseq"; version="1.10.0"; type="bioc"; sha256="1whwm1wm9fhxsz54vqf2r32bmgg3c9smvrpnzmvz9gigygvv5cyl"; depends=[ade4 ape biom Biostrings cluster data_table DESeq2 foreach ggplot2 igraph multtest plyr reshape2 scales vegan ]; };
phylosim = derive { name="phylosim"; version="2.1.1"; type="cran"; sha256="0rrz5c7zl2hjalwm6m8pydikiwmiq2dybx2yhzp0ps2bcsn02lhn"; depends=[R_oo ape compoisson ggplot2 R_methodsS3 ]; };
phylotools = derive { name="phylotools"; version="0.1.2"; type="cran"; sha256="19w7xzk6sk1g9br7vwv338nvszzh0lk5rdzf0khiywka31bbsjyb"; depends=[seqRFLP ape picante spaa fields ]; };
phyreg = derive { name="phyreg"; version="0.7"; type="cran"; sha256="0saynhq4yvd4x2xaljcsfmqk7da2jq3jqk26fm9qivg900z4kf35"; depends=[ ]; };
physiology = derive { name="physiology"; version="0.2.2"; type="cran"; sha256="0z394smbnmlrnp9ms5vjczc3avrcn5nxm8np5y58k86x470w6npz"; depends=[ ]; };
phytools = derive { name="phytools"; version="0.4-56"; type="cran"; sha256="18cib7yjlbzdpfs5piwx5cw0h7fk26s04wsb2vdfiybr306a9jk2"; depends=[ape maps animation clusterGeneration mnormt msm numDeriv phangorn plotrix scatterplot3d ]; };
phytotools = derive { name="phytotools"; version="1.0"; type="cran"; sha256="049znviv2vvzv23biy1l28axm7bc7biwmq4bnn0cnjqgkk48ysz3"; depends=[insol FME ]; };
pi0 = derive { name="pi0"; version="1.3-250"; type="cran"; sha256="1561zvf1hcd05iqy245c0z23mi8ypk6q3lkfldcr55cs67w4lmz6"; depends=[LowRankQP Matrix numDeriv limSolve rgl scatterplot3d qvalue Iso quadprog kernlab ]; };
piano = derive { name="piano"; version="1.6.2"; type="bioc"; sha256="00qbcgzafila8idbfxvdnssx5161rn1xhnh3w1fp8sqlw5d1v6xz"; depends=[Biobase gplots igraph relations marray ]; };
picante = derive { name="picante"; version="1.6-2"; type="cran"; sha256="1zxpd8kh3ay6f3gdqkij1a6vnkr98dc1jib2r6br2kjyzshabcsd"; depends=[ape vegan nlme ]; };
picasso = derive { name="picasso"; version="0.3.0"; type="cran"; sha256="0z314akr1x2a28hh5hbb7mzkyaxsj4dfkdmx10l6gqllgk9j5qca"; depends=[lattice igraph MASS Matrix ]; };
pickgene = derive { name="pickgene"; version="1.38.0"; type="bioc"; sha256="1pzr3l2h9rfywl7a20ppyaggzrvlr0as3bl4ys451khwnm1abwcf"; depends=[MASS ]; };
pingr = derive { name="pingr"; version="1.1.0"; type="cran"; sha256="0j03qcsyckv3zh2v4m8wz8kyfl0k8qi71rm20rc0spy1s9ng7fcb"; depends=[ ]; };
pint = derive { name="pint"; version="1.16.0"; type="bioc"; sha256="1vlrblp4i4qd0lpbphz0l6hpsyl88pc1qrr6kk8v62bw0a0bsdf9"; depends=[mvtnorm Matrix dmt ]; };
pipe_design = derive { name="pipe.design"; version="0.2"; type="cran"; sha256="1hmc4g3bnpwicjr53xz8yhhshnfhd2fqx9c6v4af8wvnqpy7mlpq"; depends=[ggplot2 gtools ]; };
pipeR = derive { name="pipeR"; version="0.6"; type="cran"; sha256="15hq6i1cv072jpw71slij534s85xljkjk2ygxpkgq3cyngbq3jxb"; depends=[ ]; };
pitchRx = derive { name="pitchRx"; version="1.7"; type="cran"; sha256="0mx948bahw0zr0915hz9lcws7iq2l0ikgx4gjnnfhhpiii86xs57"; depends=[ggplot2 XML2R plyr MASS hexbin mgcv ]; };
pixmap = derive { name="pixmap"; version="0.4-11"; type="cran"; sha256="04klxp6jndw1bp6z40v20fbmdmdpfca2g0czmmmgbkark9s1183g"; depends=[ ]; };
pkgDepTools = derive { name="pkgDepTools"; version="1.32.0"; type="bioc"; sha256="1fh52j5lrvbvm05bv67swdxckjys74v5ikqjv9ln2a30pxp0vs6a"; depends=[graph RBGL graph RBGL ]; };
pkgKitten = derive { name="pkgKitten"; version="0.1.2"; type="cran"; sha256="0nk51c3cx9hy8dwdi7llf9k6kq8495dvy8bxjlajwiwd39jipvgs"; depends=[ ]; };
pkgmaker = derive { name="pkgmaker"; version="0.22"; type="cran"; sha256="0vrqnd3kg6liqvpbd969jjsdx0f0rvmmxgdbwwrp6xfmdg0pib8r"; depends=[registry codetools digest stringr xtable ]; };
pks = derive { name="pks"; version="0.3-0"; type="cran"; sha256="0lvj5kfjf8wikszz1dipwr1fw9xbhy3nx0ksqz4ln240k7fn5kcj"; depends=[sets ]; };
plRasch = derive { name="plRasch"; version="1.0"; type="cran"; sha256="1rnpvxw6pzl5f6zp4xl2wfndgvqz5l3kiv9sh4cpvhga0gl8zjaw"; depends=[survival ]; };
plan = derive { name="plan"; version="0.4-2"; type="cran"; sha256="0vwiv8gcjdbnsxd8zqf0j1yh6gvbzm0b5kr7m47ha9z64d7wxch6"; depends=[ ]; };
planar = derive { name="planar"; version="1.5.2"; type="cran"; sha256="1w843qk88x3kzi4q79d5ifzgp975dj4ih93g2g6fa6wh529j4w3h"; depends=[dielectric Rcpp statmod cubature reshape2 plyr Rcpp RcppArmadillo ]; };
planor = derive { name="planor"; version="0.2-3"; type="cran"; sha256="1j550zqm3h4kz7jz4fkgp0z92skwpyxz0lnr7pfif4pya1mxd6f9"; depends=[conf_design ]; };
plantecophys = derive { name="plantecophys"; version="0.6"; type="cran"; sha256="1gxc84njpii82p6n04djbp4n9wni49lxfvmljqz48r643hv48a7h"; depends=[ ]; };
plaqr = derive { name="plaqr"; version="1.0"; type="cran"; sha256="1vv15zqnmir5hi9ivyifzrc1rkn1sn5qj61by66iczmlmhqh17h8"; depends=[quantreg ]; };
plateCore = derive { name="plateCore"; version="1.24.0"; type="bioc"; sha256="0gqv0wqd93q4c2sgjic109i9a59z63hbqilc4a7c80krsada80sc"; depends=[flowCore flowViz lattice latticeExtra Biobase flowCore lattice MASS robustbase flowStats ]; };
playwith = derive { name="playwith"; version="0.9-54"; type="cran"; sha256="1zmm8sskchim3ba3l0zqfvxnrqfmiv94a8l6slcf3if3cf9kkzal"; depends=[lattice cairoDevice gWidgetsRGtk2 RGtk2 gWidgets gridBase ]; };
plethy = derive { name="plethy"; version="1.4.3"; type="bioc"; sha256="16xff9y274lf0hpjzfqxl94xbl5prk7gbjh23ysb0jl8hszjc9i8"; depends=[BiocGenerics S4Vectors Streamer DBI RSQLite IRanges reshape2 plyr RColorBrewer ggplot2 ]; };
plfm = derive { name="plfm"; version="1.1.2"; type="cran"; sha256="1dl2pv2v7kp39hlbk5kb33kzhg9dzxjxhafdjv9dqpqb9b77akm8"; depends=[sfsmisc abind ]; };
plgem = derive { name="plgem"; version="1.38.0"; type="bioc"; sha256="1wsianyvwhiwpm3ip2la3a78jj9cvj07l9nipmjk84nlk5wpvw9k"; depends=[Biobase MASS ]; };
plgp = derive { name="plgp"; version="1.1-7"; type="cran"; sha256="02g6saabrsd8pra0szbwcbilf6w5ywg2gxqb5zdvbxds2vw36hn0"; depends=[mvtnorm tgp ]; };
plier = derive { name="plier"; version="1.36.0"; type="bioc"; sha256="0qr4v2lazvl3bnqdjd1jnbfh4z9jbkqr2bbs4wc1r7rps4gxib3y"; depends=[affy Biobase ]; };
plm = derive { name="plm"; version="1.4-0"; type="cran"; sha256="13y9s7gyrgqmnzafhn4c1zkz6gdawc8nr5nbrx0pn2mbw3fqfrjh"; depends=[Formula MASS bdsmatrix zoo nlme sandwich ]; };
plmDE = derive { name="plmDE"; version="1.0"; type="cran"; sha256="19xxi0zzpxcrsdrbs0hiwqgnv2aaw1q3mi586wv27zz6lfqcr9lr"; depends=[MASS limma R_oo ]; };
plmm = derive { name="plmm"; version="0.1-1"; type="cran"; sha256="1dfxd1mqqjy2mf7qc6mh4wx5ya9q8fkqgrf01apisb66xxx5zya7"; depends=[sm Formula nlme ]; };
pln = derive { name="pln"; version="0.2-1"; type="cran"; sha256="09zg7zwmmqpjr1j59lqsjf4blrkya9wfwddgzfm9rr5jxrzvqcv8"; depends=[ ]; };
plot2groups = derive { name="plot2groups"; version="0.10"; type="cran"; sha256="00mp82vvx6inlc2zj2cqqnzyglrm9x9im2vrqqk8j2jn0hbgfymy"; depends=[ggplot2 ]; };
plot3D = derive { name="plot3D"; version="1.0-2"; type="cran"; sha256="0qsrd1na4xw2bm1rzwj3asgkh7xqpyja0dxdmz41f3x58ip9wnz1"; depends=[misc3d ]; };
plot3Drgl = derive { name="plot3Drgl"; version="1.0"; type="cran"; sha256="109vsivif4hmw2hk3hi4y703d3snzxbr9pzhn1846imdclkl12yg"; depends=[rgl plot3D ]; };
plotGoogleMaps = derive { name="plotGoogleMaps"; version="2.2"; type="cran"; sha256="0qv57k46ncg0wrgma0sbr3xf0j9j8cii3ppk3gs65ardghs3bf6b"; depends=[sp spacetime rgdal maptools lattice raster ]; };
plotKML = derive { name="plotKML"; version="0.5-2"; type="cran"; sha256="006f6j3k2yb20zcmx2lq9d4yy5awpsaxkcp17r6q42bdrffkc0m9"; depends=[XML sp raster rgdal spacetime colorspace plotrix dismo aqp pixmap plyr stringr colorRamps scales gstat zoo RColorBrewer RSAGA classInt ]; };
plotMCMC = derive { name="plotMCMC"; version="2.0-0"; type="cran"; sha256="0i4kcx6cpqjd6i16w3i8s34siw44qigca2jbk98b9ligbi65qnqb"; depends=[coda gplots lattice ]; };
plotROC = derive { name="plotROC"; version="1.3.3"; type="cran"; sha256="090fpj3b5vp0r2zrn38yxiy205mk9kx1fpwp0g8rl4bsa88v4c9y"; depends=[ggplot2 gridSVG shiny ]; };
plotSEMM = derive { name="plotSEMM"; version="2.0"; type="cran"; sha256="0n30m1nz9fnilbgxg5jcmx2bsscdvz5mkjkyrgx7yr3alazkaimd"; depends=[plyr shiny MplusAutomation Rcpp plotrix Rcpp ]; };
plotmo = derive { name="plotmo"; version="3.1.0"; type="cran"; sha256="1z735ks92d1gfx6hk29mnj18a9hpsmifjy8qgh5lv9z0mwd7igca"; depends=[plotrix TeachingDemos ]; };
plotpc = derive { name="plotpc"; version="1.0.3"; type="cran"; sha256="0dw9k702a67c2k77dl4k2747lhsr84x41qrgj5mp9jnyfq6naciq"; depends=[ ]; };
plotrix = derive { name="plotrix"; version="3.5-12"; type="cran"; sha256="13gffp7zp46wal83609652x48i63zb5i20x6ycmgc97l4nanhrfi"; depends=[ ]; };
plrs = derive { name="plrs"; version="1.6.0"; type="bioc"; sha256="03pwcv8vx1rdx85z3a60p7g53lmg1qdwmbkmnsx6fjc0hnvxvx6w"; depends=[Biobase BiocGenerics CGHbase ic_infer marray quadprog Rcsdp ]; };
pls = derive { name="pls"; version="2.4-3"; type="cran"; sha256="114ka4766x8fx0zvvr7cylky1jsy542nj6s7sb2dwv8zjhbclkhn"; depends=[ ]; };
plsRbeta = derive { name="plsRbeta"; version="0.2.0"; type="cran"; sha256="1b8yldz5nzw3gilv9wk79bxcqb0hrgsxi2cn6qlby5nf9b4zmzv8"; depends=[mvtnorm boot Formula plsdof MASS betareg plsRglm ]; };
plsRcox = derive { name="plsRcox"; version="1.7.2"; type="cran"; sha256="1c3ll13m27ndwlc9r79ilzl0i6cyp870x66swlbg6387whf7wn2r"; depends=[survival plsRglm lars pls kernlab mixOmics risksetROC survcomp survAUC rms ]; };
plsRglm = derive { name="plsRglm"; version="1.1.1"; type="cran"; sha256="1bx1pl1pv47z3yj3ngkd97j10v2h8jqiybcqbm3kvqhgqydm07rp"; depends=[mvtnorm boot bipartite car ]; };
plsdepot = derive { name="plsdepot"; version="0.1.17"; type="cran"; sha256="1i00wxr451xpfy6dnvcm11aqf9106jsh5hj7gpds22ysgm4iq5w4"; depends=[ ]; };
plsdof = derive { name="plsdof"; version="0.2-7"; type="cran"; sha256="1z8z9m0nsnyy1fipzvm1srpxn3q6wjrlivmmki1f8plwkixkyc5y"; depends=[MASS ]; };
plsgenomics = derive { name="plsgenomics"; version="1.3-1"; type="cran"; sha256="0vddhzqfix8q692mdls227m2l6zjzbjwp1ia5j9shy71ycg2fzn9"; depends=[MASS boot ]; };
plspm = derive { name="plspm"; version="0.4.2"; type="cran"; sha256="0q7mx5ydw61z1qcs0flpwpnnrcwsfsh3razc8jnd4z1xn96i3x85"; depends=[amap diagram tester turner ]; };
plugdensity = derive { name="plugdensity"; version="0.8-3"; type="cran"; sha256="1jdmq4kbs8yzgkf9f5dc7c8c52ia68fgavw7nsnc2hnz5ylw1qy9"; depends=[ ]; };
plumbr = derive { name="plumbr"; version="0.6.9"; type="cran"; sha256="1avbclblqfy57pd72ximvj3zq92q1w8vszvyf6fw75j5rfwdaibk"; depends=[objectSignals ]; };
plus = derive { name="plus"; version="1.0"; type="cran"; sha256="1l7lvnq7vahj8m7knmr4q3wj00ar7iq89j45a2dqn2bh0qyj68ls"; depends=[ ]; };
plusser = derive { name="plusser"; version="0.4-0"; type="cran"; sha256="1g100dh8cvn9q09j0jbkw4xmwjdp1lm4651369975fm99nrlp1j9"; depends=[RCurl RJSONIO lubridate plyr ]; };
plw = derive { name="plw"; version="1.26.0"; type="bioc"; sha256="0mb35ql57gl0nhdcwbcj2fwbanm8gv0rpgjbcc1mrw82d7ffj94i"; depends=[affy MASS affy ]; };
plyr = derive { name="plyr"; version="1.8.2"; type="cran"; sha256="1dizvj3xvp1cg8sm21xpk0kgfpil1n1q60zkanz6yh9cnnp6g306"; depends=[Rcpp Rcpp ]; };
pmcgd = derive { name="pmcgd"; version="1.1"; type="cran"; sha256="1pybzvyjmzpcnxrjsas06diy3x83i1r5491s6ccyr63l56hs55d5"; depends=[mixture mnormt ]; };
pmclust = derive { name="pmclust"; version="0.1-6"; type="cran"; sha256="05zjx4psvk5zjmr0iwwwig990g6h04ajn5wi0xi8bqv046r47q3h"; depends=[rlecuyer pbdMPI MASS ]; };
pmg = derive { name="pmg"; version="0.9-43"; type="cran"; sha256="0i7d50m4w7p8ipyx2d3qmc54aiqvw0ls8igkk8s1xc7k8ympfqi6"; depends=[gWidgets gWidgetsRGtk2 proto lattice foreign MASS ]; };
pmlr = derive { name="pmlr"; version="1.0"; type="cran"; sha256="1z3hbw4wabpai1q8kbn77nzxqziag8y04cidlfiw7z969s4pkmgl"; depends=[ ]; };
pmml = derive { name="pmml"; version="1.4.2"; type="cran"; sha256="0588sph67zs58knf4g3fd7c84i2yag81igr882jgbaxhfhxrpk6n"; depends=[XML survival ]; };
pmmlTransformations = derive { name="pmmlTransformations"; version="1.2.2"; type="cran"; sha256="1p31lakhqwk0qhb565j2sjcfsjsx0i5v8kj8779ryjyvy7717m6m"; depends=[ ]; };
pmr = derive { name="pmr"; version="1.2.5"; type="cran"; sha256="0dq97dfjmgxlhr3a2n20vyyzfmamcicw878hdxpw31lw02xs6yls"; depends=[ ]; };
png = derive { name="png"; version="0.1-7"; type="cran"; sha256="0g2mcp55lvvpx4kd3mn225mpbxqcq73wy5qx8b4lyf04iybgysg2"; depends=[ ]; };
pnmtrem = derive { name="pnmtrem"; version="1.3"; type="cran"; sha256="0053gg368sdpcw2qzydpq0c5v2cxdlwgf5k68cbw0yx41csjgvz0"; depends=[MASS ]; };
pnn = derive { name="pnn"; version="1.0.1"; type="cran"; sha256="1s6ib60sbdas4720hrsr5lsszsa474kfblqcalsb56c84gkl42ka"; depends=[ ]; };
poLCA = derive { name="poLCA"; version="1.4.1"; type="cran"; sha256="0bknnndcxsnlq6z9k1vbhqiib1mlzlx4badz85kc7a3xbrdrfs9f"; depends=[scatterplot3d MASS ]; };
pocrm = derive { name="pocrm"; version="0.9"; type="cran"; sha256="0p7a7xm1iyyjgzyi7ik2n34gqc3lsnallrijzdakghb8k5cybm4m"; depends=[dfcrm nnet ]; };
pogit = derive { name="pogit"; version="1.0.0"; type="cran"; sha256="0lgvf4d7b2ycz9wryjrd7qymbx1jmj4mw8jl95ax2jylz4li48zf"; depends=[BayesLogit ggplot2 logistf plyr ]; };
poibin = derive { name="poibin"; version="1.2"; type="cran"; sha256="12dm1kdalbqy8k7dfldf89v6zw6nd0f73gcdx32xbmry2l2976sa"; depends=[ ]; };
poilog = derive { name="poilog"; version="0.4"; type="cran"; sha256="0bg03rd5rn4rbdpiv87i8lamhs5m7n7cj8qf48wpnirg6jpdxggs"; depends=[ ]; };
pointRes = derive { name="pointRes"; version="1.0.2"; type="cran"; sha256="1q9vjvmxs1f5g8f2aj674wk8piqzjqxzdrvxnawgw1pfi66adnms"; depends=[ggplot2 gridExtra plyr TripleR ]; };
pointdensityP = derive { name="pointdensityP"; version="0.1"; type="cran"; sha256="1wa10sp0pxcjyicifz638f89b7ynsy7718qbh2p2gn66lbvjpkhr"; depends=[ ]; };
poisDoubleSamp = derive { name="poisDoubleSamp"; version="1.1"; type="cran"; sha256="13wyj9jf161218y4zjv2haavlmanihp9l59cvh7x8pfr9dh2dwr8"; depends=[Rcpp Rcpp ]; };
poisson_glm_mix = derive { name="poisson.glm.mix"; version="1.2"; type="cran"; sha256="0328m279jfa1fasi9ha304k4wcybzr7hldww7wn0cl7anfxykbv8"; depends=[ ]; };
poistweedie = derive { name="poistweedie"; version="1.0"; type="cran"; sha256="18992fafypds3qsb52c09fasm3hzlyh5zya6cw32wnhipmda643m"; depends=[ ]; };
polidata = derive { name="polidata"; version="0.1.0"; type="cran"; sha256="07641v0dnn161kyxx7viplkf8c3r51hd4hd5pzmcph4y4387r01i"; depends=[jsonlite RCurl ]; };
pollstR = derive { name="pollstR"; version="1.2.0"; type="cran"; sha256="1a1qjblxylzpwb1qpy2yyk39022isp8aajds5glspxndapmd4akb"; depends=[httr plyr jsonlite ]; };
polspline = derive { name="polspline"; version="1.1.9"; type="cran"; sha256="1n08dhwpf53slk1zib491kii54x9h16g3jgr2kxxpyc5xfv4yj26"; depends=[ ]; };
polyCub = derive { name="polyCub"; version="0.5-2"; type="cran"; sha256="1j28ia53za3sh9q7q1g5bnmlb5mbzf44bcwzv0919lvkw01f2lvj"; depends=[sp spatstat ]; };
polySegratio = derive { name="polySegratio"; version="0.2-4"; type="cran"; sha256="05kvj475zhlrmp7rm691cfs28igp4ac2cn2xxf7axx09v1nq33db"; depends=[gdata ]; };
polySegratioMM = derive { name="polySegratioMM"; version="0.6-3"; type="cran"; sha256="1y4kzb1p3aw7ng8mv1hszpvb5hwwxy4vg34mhhk705ki4jy8jgvp"; depends=[polySegratio gtools coda lattice ]; };
polyaAeppli = derive { name="polyaAeppli"; version="2.0"; type="cran"; sha256="0kyz3ap92xz7aqyviyrpggfmicy1gybrx7y19djsmixcwz53zqch"; depends=[ ]; };
polyapost = derive { name="polyapost"; version="1.1-6"; type="cran"; sha256="1wk85nl2p9plnaavjdr4bqxxhjc84ynv53bh2v1rmq87jymw40b1"; depends=[boot ]; };
polyclip = derive { name="polyclip"; version="1.3-0"; type="cran"; sha256="05bbj4hy4h1hcb4pzg1mjp8k7k91kqq5rg2x0ns4hcs1h4zrspds"; depends=[ ]; };
polycor = derive { name="polycor"; version="0.7-8"; type="cran"; sha256="0hvww5grl68dff23069smfk3isysyi5n2jm4qmaynrk0m3yvhxwn"; depends=[mvtnorm sfsmisc ]; };
polyester = derive { name="polyester"; version="1.0.2"; type="bioc"; sha256="0mv25jgdfw74f1y68zz292qx27ar6w2413nml4nipfpv6krh37vm"; depends=[Biostrings IRanges S4Vectors ]; };
polynom = derive { name="polynom"; version="1.3-8"; type="cran"; sha256="05lng88c8cwj65cav31hsrca9nbrqn5rmcz79b17issyk2j0g86p"; depends=[ ]; };
polysat = derive { name="polysat"; version="1.3-3"; type="cran"; sha256="02h1lf1bk7hhphfdcql0rmiszp3b3mdfhqfwxj369389dg0q57bd"; depends=[ ]; };
polytomous = derive { name="polytomous"; version="0.1.6"; type="cran"; sha256="137qcnncih1lm2wshwrznlcr0k552n0sqhiy73iwis59lg854caa"; depends=[MASS Hmisc lme4 ]; };
polywog = derive { name="polywog"; version="0.4-0"; type="cran"; sha256="0wl9br0g4kgi3nz2fq28nsk6fw0ll0y715v4vz8lv3pvfwc7518j"; depends=[miscTools foreach Formula glmnet iterators Matrix ncvreg Rcpp stringr Rcpp ]; };
pom = derive { name="pom"; version="1.1"; type="cran"; sha256="02jv19apn0kmp1ric2cxajlaad2fmsz4nm4izd2c3691vzas7l83"; depends=[matrixcalc ]; };
pomp = derive { name="pomp"; version="0.53-5"; type="cran"; sha256="1bfb2b1fdj673b43jnq9pzh36h1hfb8dsarf1dq6pwain7dnqjyp"; depends=[subplex nloptr mvtnorm deSolve coda ]; };
pooh = derive { name="pooh"; version="0.3"; type="cran"; sha256="1wcv77vjjp62c5l1mplnkk4vhy2scjrq96cjx58w5jdj46lban2h"; depends=[ ]; };
popKorn = derive { name="popKorn"; version="0.3-0"; type="cran"; sha256="1zcl6ms7ghbcjyjgfg35h37ma8nspg15rk2ik82yalqlzxjf7kxw"; depends=[boot ]; };
popRange = derive { name="popRange"; version="1.1.3"; type="cran"; sha256="0kkz6va0p8zv3skaqqcpw42014d9x9x4ilx0czz91qf46h61jgb0"; depends=[findpython ]; };
popReconstruct = derive { name="popReconstruct"; version="1.0-4"; type="cran"; sha256="14lp0hfnzbiw81fnq7gzpr4lxyfh3g0428rm9jwjh631irz3fcc9"; depends=[coda ]; };
popbio = derive { name="popbio"; version="2.4"; type="cran"; sha256="12hvxkgbr6snypplxv404sj0ass6ab9i969bb00ipy10gny1w4ww"; depends=[quadprog ]; };
popdemo = derive { name="popdemo"; version="0.1-4"; type="cran"; sha256="0syhmm8fnxbsdzj75y7dpahmpf453a6gwp3yljkvmfl0bfv1g1ng"; depends=[expm ]; };
popgen = derive { name="popgen"; version="1.0-3"; type="cran"; sha256="00rgfwmmiharfxqlpy21n3jbxwr5whzdg8psqylkjf83ls2myqzm"; depends=[cluster ]; };
popgraph = derive { name="popgraph"; version="1.4"; type="cran"; sha256="1z6w6vj3vl2w10hvzwmkw4d475bqcd6ys92xnn445ag6vpq0cvxq"; depends=[ggplot2 igraph MASS sp Matrix sampling ]; };
poplite = derive { name="poplite"; version="0.99.16"; type="cran"; sha256="0yp1hfda2k6c5x0gbcfxj9h6igzx3ra05xs7g88wjz76yxp3wb6w"; depends=[dplyr DBI igraph lazyeval RSQLite ]; };
poppr = derive { name="poppr"; version="1.1.5"; type="cran"; sha256="0whk06gwm171b5j2vcfqi7rdwczv109g7bw2gfnzhz4fm46nhmfk"; depends=[adegenet vegan ggplot2 phangorn ape igraph ade4 pegas reshape2 ]; };
popsom = derive { name="popsom"; version="2.3"; type="cran"; sha256="0hdg1nx8mlpqw9aj2q08sb20frsc5jnbvqpfalf5kyvlygnhxdlc"; depends=[som fields ]; };
portes = derive { name="portes"; version="2.1-3"; type="cran"; sha256="0nqh6aync5igmvg7nr5inkv2cwgzd0zi6ky0vvrc3abchqsjm2ck"; depends=[ ]; };
portfolio = derive { name="portfolio"; version="0.4-7"; type="cran"; sha256="0gs1a4qh68xsvl7yi6mz67lamwlqyqjbljpyax795piv46kkm06p"; depends=[lattice nlme ]; };
portfolioSim = derive { name="portfolioSim"; version="0.2-7"; type="cran"; sha256="1vf46882ys06ia6gfiibxx1b1g81xrg0zzman9hvsj4iky3pwbar"; depends=[lattice portfolio ]; };
potts = derive { name="potts"; version="0.5-2"; type="cran"; sha256="1q4kvknxkrd8qbv8l3vmwrppgzq5bsysnqgm029lx7iys73x4fck"; depends=[ ]; };
poweRlaw = derive { name="poweRlaw"; version="0.30.2"; type="cran"; sha256="1b4ngqsh5gywksb3y9cj1yjkhxs4081svwgxwf8gpsa7fnl9c0fl"; depends=[VGAM ]; };
powell = derive { name="powell"; version="1.0-0"; type="cran"; sha256="160i4ki3ymvq08szaxshqlz7w063493j5zqvnw6cgjmxs7y0vj8y"; depends=[ ]; };
powerAnalysis = derive { name="powerAnalysis"; version="0.2"; type="cran"; sha256="15ff3wnn37sjkiyycgh16g7gwl3l321fbw12kv621dad5bki14jl"; depends=[ ]; };
powerGWASinteraction = derive { name="powerGWASinteraction"; version="1.1.1"; type="cran"; sha256="0xwyqlblhdnnv6pd2jpmz11s95zg7ylh1wa2q03zj8df330jcl70"; depends=[mvtnorm pwr ]; };
powerMediation = derive { name="powerMediation"; version="0.2.4"; type="cran"; sha256="1b4hzai52fb0kk04az3rdbfk2vldfkhsa4gx7g98lbsvw4gh9imb"; depends=[ ]; };
powerSurvEpi = derive { name="powerSurvEpi"; version="0.0.6"; type="cran"; sha256="1jsbrj35m296mkk47zcpb2haain6bf23k0xzphnb4sq8f06cmq1p"; depends=[survival ]; };
powerpkg = derive { name="powerpkg"; version="1.5"; type="cran"; sha256="0mbk2fda2fvyp1h5lk5b1fg398xybbjv0z6kdx7w7xj345misf7l"; depends=[ ]; };
ppcor = derive { name="ppcor"; version="1.0"; type="cran"; sha256="18l5adjysack86ws61xh89z5xfr83v932a0pn6ad8i8py3nd85fj"; depends=[ ]; };
ppiPre = derive { name="ppiPre"; version="1.7"; type="cran"; sha256="1z71cq32zkx3n9ablp22dw1cl334r1wrw5vvvqffgq3qvz1i6sn6"; depends=[AnnotationDbi igraph e1071 GOSemSim ]; };
ppiStats = derive { name="ppiStats"; version="1.32.0"; type="bioc"; sha256="1hjzcc9g9bszn9h24wr7v3vj8ili0z1dpgbk8pkf209iyjv7l9mz"; depends=[ScISI lattice Biobase Category graph lattice RColorBrewer ]; };
ppls = derive { name="ppls"; version="1.6-1"; type="cran"; sha256="1r3h4pf79bkzpqdvyg33nwjabsqfv7r8a4ziq2zwx5vvm7mdy7pd"; depends=[MASS ]; };
ppmlasso = derive { name="ppmlasso"; version="1.1"; type="cran"; sha256="1w13p1wjl1csds1xfc79m44rlym9id9gwnp3q0bzw05f35zbfryg"; depends=[spatstat ]; };
pps = derive { name="pps"; version="0.94"; type="cran"; sha256="0sirxpagqc2ghc01zc6q4dk691six9wkgknfbwaqxbxvda3hcmyq"; depends=[ ]; };
pqantimalarials = derive { name="pqantimalarials"; version="0.2"; type="cran"; sha256="0azxkf1rvk9cyzr4gbp4y2vcxrxw3d4f002d5gjkvv1f4kx8faw1"; depends=[reshape2 RColorBrewer plyr shiny ]; };
prLogistic = derive { name="prLogistic"; version="1.2"; type="cran"; sha256="1abwz7nqkz2qbyqyr603kl9a3rkad3f4vxhck6a9kl80xrmfrj9s"; depends=[boot lme4 Hmisc ]; };
prabclus = derive { name="prabclus"; version="2.2-6"; type="cran"; sha256="0qjsxrx6yv338bxm4ki0w9h8hind1l98abdrz828588bwj02jya1"; depends=[MASS mclust ]; };
pracma = derive { name="pracma"; version="1.8.3"; type="cran"; sha256="06711w5451gb22667i5dx27ysi4pfagkxdfzg270lxwbymcii6pp"; depends=[ ]; };
prada = derive { name="prada"; version="1.42.0"; type="bioc"; sha256="1yw2lzs7bdi7fb5hfy6jq3br1hzc9by4vv16vrnhm7v41nsi7y1a"; depends=[Biobase RColorBrewer rrcov Biobase BiocGenerics MASS RColorBrewer rrcov ]; };
pragma = derive { name="pragma"; version="0.1.3"; type="cran"; sha256="1n30a346pph4d8cj4p4qx2l6fnwhkxa8yxdisx47pix376ljpjfx"; depends=[ ]; };
prais = derive { name="prais"; version="0.1.1"; type="cran"; sha256="0vv6h12gsbipi0gnq0w6xh6qvnvc0ydn341g1gnn3zc2n7cx8zcn"; depends=[ ]; };
praktikum = derive { name="praktikum"; version="0.1"; type="cran"; sha256="0kkydgglvqw371fxh46fi86fmdndhwq1n8qj0ynbh2gz1cn86aw1"; depends=[ ]; };
prc = derive { name="prc"; version="2014.11-4"; type="cran"; sha256="0r4c0s80fdzc9ifbfy8aaqi7164blqgiv3vbzp9x70c4dfl3lwxx"; depends=[kyotil nlme ]; };
prebs = derive { name="prebs"; version="1.6.0"; type="bioc"; sha256="12fyiz7mmxvmwwxkf2l0yypmsm8wlyvdpbxlcs0ip82mcya4kfgs"; depends=[GenomicAlignments affy GenomicRanges IRanges ]; };
precintcon = derive { name="precintcon"; version="2.1"; type="cran"; sha256="0cadia7d2pzhnfw00m4k6qgnajv61hj879pafqnnfs6synbp3px6"; depends=[ggplot2 scales ]; };
predfinitepop = derive { name="predfinitepop"; version="1.0"; type="cran"; sha256="1x5ri1kvd1rd9bjp2ygqwl68yp6hyb6aly22bs5kdwv2vn9nlq9w"; depends=[ ]; };
predictionet = derive { name="predictionet"; version="1.12.0"; type="bioc"; sha256="1smz1zcaivd28y59qxp34r9b04jxar3ldsvx4kbfn70axwvwhcsq"; depends=[igraph catnet penalized RBGL MASS ]; };
predictmeans = derive { name="predictmeans"; version="0.99"; type="cran"; sha256="1qfqh21d3m0k2491hv5rl5k4v49j5089xsdk3bxicp30l512rax0"; depends=[lme4 nlme ggplot2 lattice pbkrtest plyr ]; };
predmixcor = derive { name="predmixcor"; version="1.1-1"; type="cran"; sha256="0v99as0dzn0lqnbbzycq9j885rgsa1cy4qgbya37bbjd01b3pykd"; depends=[ ]; };
prefmod = derive { name="prefmod"; version="0.8-32"; type="cran"; sha256="0v5r195gzbfi6jbqz8r1x2fzj3anqxf4hxaxb9krm9rkwgphrwpi"; depends=[gnm colorspace ]; };
preprocessCore = derive { name="preprocessCore"; version="1.28.0"; type="bioc"; sha256="0bbsnid3bdbpaxdww1zxp34sj95fhkgxlsjggpw46kdzryf01j84"; depends=[ ]; };
presens = derive { name="presens"; version="1.0.0"; type="cran"; sha256="0hwciahpfp7h7dchn6k64cwjwxzm6cx28b66kv6flz4yzwvqd3pb"; depends=[birk marelac ]; };
preseqR = derive { name="preseqR"; version="1.1.1"; type="cran"; sha256="0hz9a7jji2k55a57l03ajkf0j7yp6dgyapyqr1ip0v18fjpfj98q"; depends=[ ]; };
prettyGraphs = derive { name="prettyGraphs"; version="2.1.5"; type="cran"; sha256="19jag5cymancxy5lvkj5mkhdbxr37pciqj4vdvmxr82mvw3d75m4"; depends=[ ]; };
prettyR = derive { name="prettyR"; version="2.1-1"; type="cran"; sha256="173n0cp0mq00y1ydba9m7l3izz04czg9vvadbflfinpi86wvcgq6"; depends=[ ]; };
prettyunits = derive { name="prettyunits"; version="1.0.0"; type="cran"; sha256="0lh83pf30hnqcq6ppq8axlyawp0qxpym0lqq8pchh3gq8mgcdz1h"; depends=[magrittr assertthat ]; };
prevR = derive { name="prevR"; version="3.1"; type="cran"; sha256="1x8ssz1k8vdq3zx1qhfhyq371i8s3bam2rd6bm3biha5i8icglh6"; depends=[sp rgdal ggplot2 directlabels GenKern fields gstat foreign maptools ]; };
prevalence = derive { name="prevalence"; version="0.4.0"; type="cran"; sha256="0vnmglxj1p66sgkw4ffc4wgn0w4s281fk2yifx5cn4svwijv30q0"; depends=[rjags coda ]; };
prim = derive { name="prim"; version="1.0.15"; type="cran"; sha256="008a8fm4as5b6j70xxwiipywhbg1wmdbgjz9r7qfnivcpfarxv7f"; depends=[rgl misc3d ]; };
primer = derive { name="primer"; version="1.0"; type="cran"; sha256="0vkq794a9qmz9klgzz7xz35msnmhdaq3f91lcix762wlchz6v7sg"; depends=[deSolve lattice ]; };
primerTree = derive { name="primerTree"; version="1.0.1"; type="cran"; sha256="068j5a2rh8f1h1y7rv2xacnvkn2darzvp1adhi3hqkmwsb3znhjk"; depends=[directlabels gridExtra ggplot2 XML ape httr lubridate plyr scales stringr foreach ]; };
princurve = derive { name="princurve"; version="1.1-12"; type="cran"; sha256="19fprwpfhgv6n6ann978ilwhh58qi443q25z01qzxml4b5jzsd7w"; depends=[ ]; };
prinsimp = derive { name="prinsimp"; version="0.8-8"; type="cran"; sha256="074a27ml0x0m23hlznv6qz6wvfqkv08qxh3v1sbkl9nxrc7ak4vn"; depends=[ ]; };
proBAMr = derive { name="proBAMr"; version="1.0.1"; type="bioc"; sha256="11fgl1w0nhfdnk3fm2x5d1749w82i1jj76nazsifsd087wf0hl3l"; depends=[IRanges AnnotationDbi GenomicRanges Biostrings GenomicFeatures rtracklayer ]; };
prob = derive { name="prob"; version="0.9-5"; type="cran"; sha256="05skjqimzhnk99z864466dc8qx58pavrky320il91yqyr8b98j8b"; depends=[combinat fAsianOptions hypergeo VGAM ]; };
probFDA = derive { name="probFDA"; version="1.0.1"; type="cran"; sha256="093k50kyady54rkrz0n9x9z98z5ws36phlj42j25yip7pzhfd6sv"; depends=[MASS ]; };
probemod = derive { name="probemod"; version="0.2.1"; type="cran"; sha256="1cgjr03amssc9rng8ky4w3abhhijj0d2byzm118dfdjzrgmnrf9g"; depends=[ ]; };
probsvm = derive { name="probsvm"; version="1.00"; type="cran"; sha256="1k0zysym7ncmjy9h7whwi49qsfkpxfk7chfdjrydl6hn6pscis37"; depends=[kernlab ]; };
procoil = derive { name="procoil"; version="1.16.0"; type="bioc"; sha256="18bifg3sf0jwm2c4gzc632qnl8b27qn48jpw5cx5gk1cwqmwjh6z"; depends=[ ]; };
prodlim = derive { name="prodlim"; version="1.5.1"; type="cran"; sha256="0qjyx4i66cahiqjqff63ljwxdig4lvfs2asxnhkgylwn2kb3lygv"; depends=[survival KernSmooth lava ]; };
profdpm = derive { name="profdpm"; version="3.3"; type="cran"; sha256="07lhjavrx4fa5950w928mfpddmmnmvdapl5n6mv49m8h3bxs4nmy"; depends=[ ]; };
profileModel = derive { name="profileModel"; version="0.5-9"; type="cran"; sha256="1p9b9jr5842im195d60ja82pp7vbk85vs8b0r3fnf62j4b92aky9"; depends=[ ]; };
profileR = derive { name="profileR"; version="0.2-1"; type="cran"; sha256="1hcydy7hqjac9mvbaim2g75ab1ziyvpbrkb4k21966m54zjk9kka"; depends=[ggplot2 MASS RColorBrewer reshape plyr ]; };
profr = derive { name="profr"; version="0.3.1"; type="cran"; sha256="1w06mm89apggy6wc273b2nsp95smajr8sf3dwshykivv7mhkxs5d"; depends=[stringr plyr ]; };
proftools = derive { name="proftools"; version="0.1-0"; type="cran"; sha256="1wzkrz7zr2pjw5id2sp6jdqm5pgrrh35zfwjrkr6mac22lniq4bv"; depends=[ ]; };
prognosticROC = derive { name="prognosticROC"; version="0.7"; type="cran"; sha256="0lscsyll41hpfzihdavygdzqw9xxjp48dmy4i17qsx5h01jl1h4i"; depends=[survival ]; };
proj4 = derive { name="proj4"; version="1.0-8"; type="cran"; sha256="06r3lavgixrsa52d1v31laqcbw6fb9xn23akv39hvaib78diglv9"; depends=[ ]; };
propOverlap = derive { name="propOverlap"; version="1.0"; type="cran"; sha256="0q72z9vbkpll4i3wy3fq06rz97in2cm3jjnvl6p9w8qc44zjlcyl"; depends=[Biobase ]; };
propagate = derive { name="propagate"; version="1.0-4"; type="cran"; sha256="18vyh4i4zlsmggfyd4w0zrznk75m84k08p1qa9crind04n5581j1"; depends=[MASS tmvtnorm Rcpp ff minpack_lm Rcpp ]; };
prospectr = derive { name="prospectr"; version="0.1.3"; type="cran"; sha256="18lh03xg6bgzsdsl56bjd63xdp16sqgr3s326sgifkkak8ffbv7q"; depends=[RcppArmadillo foreach iterators Rcpp Rcpp RcppArmadillo ]; };
prot2D = derive { name="prot2D"; version="1.4.0"; type="bioc"; sha256="0plsndlbrq8pyx0b4r3xn7qakk78kdlhx776jmd2sx5x2bqc53z4"; depends=[fdrtool st samr Biobase limma Mulcom impute MASS qvalue ]; };
protViz = derive { name="protViz"; version="0.2.9"; type="cran"; sha256="0kn2dd3za8mmb6476v3wqnymhihyavw2qsh98i4q3xdiz1g77vql"; depends=[Rcpp ]; };
proteinProfiles = derive { name="proteinProfiles"; version="1.6.0"; type="bioc"; sha256="1cvwqgxgn87bj2shag7sqz9xkp83qzqvx2x34jacndg3ypjakhwx"; depends=[ ]; };
proteoQC = derive { name="proteoQC"; version="1.2.0"; type="bioc"; sha256="05chpx2brp7snfgzc6xqp88mla463389cs0mdgb8159v86qy76dw"; depends=[XML VennDiagram MSnbase rTANDEM plyr seqinr Nozzle_R1 ggplot2 reshape2 Rcpp Rcpp ]; };
proteomicdesign = derive { name="proteomicdesign"; version="2.0"; type="cran"; sha256="01s47pgwxy4xx10f3qmbfv59gbaj0qw017kpkpsn33s8w7ad63r0"; depends=[MASS ]; };
proteomics = derive { name="proteomics"; version="0.2"; type="cran"; sha256="01cd4sb79gcx8gbzl624scvjbwhgcsca1wdvvfkhsv7jfwdd2ry2"; depends=[plyr reshape2 ggplot2 foreach ]; };
protiq = derive { name="protiq"; version="1.2"; type="cran"; sha256="1d5wr9w540a79i57nr0arn5xg7s6jhhy5nrgsk8r3ljidld2s2sa"; depends=[graph RBGL mvtnorm ]; };
proto = derive { name="proto"; version="0.3-10"; type="cran"; sha256="03mvzi529y6kjcp9bkpk7zlgpcakb3iz73hca6rpjy14pyzl3nfh"; depends=[ ]; };
protoclass = derive { name="protoclass"; version="1.0"; type="cran"; sha256="17d2m6r1shgb47v8mwdg1a7f5h29m5l7f5m0nsmv0xc90s9cpvk8"; depends=[class ]; };
protoclust = derive { name="protoclust"; version="1.5"; type="cran"; sha256="03qhqfqdz45s8c1p8c6sqs10i6c2ilx4fz8wkpwas3j78lgylskg"; depends=[ ]; };
protr = derive { name="protr"; version="0.5-1"; type="cran"; sha256="1ji0vpy9rrrvbsfwi4823ywi5zbwl57zw1glxllxgwyv9l6v4bpb"; depends=[ ]; };
proxy = derive { name="proxy"; version="0.4-14"; type="cran"; sha256="1ijip1jmpm7dg11yv2rjcpkpg4p30m9acddbn49fbss9kcpl5b5i"; depends=[ ]; };
pryr = derive { name="pryr"; version="0.1"; type="cran"; sha256="1vp63v1l4myahmmbphc043x1kpmvvdhs6dr640dxi0napvkdqlq6"; depends=[stringr codetools Rcpp Rcpp ]; };
psData = derive { name="psData"; version="0.1.2"; type="cran"; sha256="0w8kzivqrh1b6gq803rfd10drxdwgy0cxb5sff273m6jxzak52f2"; depends=[countrycode DataCombine foreign xlsx ]; };
psbcGroup = derive { name="psbcGroup"; version="1.1"; type="cran"; sha256="17kpxddvy9m87i9r1hazc8g6mm35p1452ngz80byhgw9p0jkvn5p"; depends=[LearnBayes SuppDists mvtnorm ]; };
pscl = derive { name="pscl"; version="1.4.9"; type="cran"; sha256="15fij6n43hry1plgzrak9vmk9xbb7n4v2frv997bhwxbs6jhhfhf"; depends=[MASS lattice ]; };
psd = derive { name="psd"; version="1.0-1"; type="cran"; sha256="1ssda4g98m0bk6gkrb7c6ylfsd2a84fq4yhp472n4k8wd73mkdn6"; depends=[Rcpp RColorBrewer signal zoo Rcpp RcppArmadillo ]; };
pse = derive { name="pse"; version="0.4.0"; type="cran"; sha256="1ln6b5ch99fmmcsfn8m8fl4ir7cadwq5ckggwizw9cbllw3drv0b"; depends=[Hmisc boot ]; };
pseudo = derive { name="pseudo"; version="1.1"; type="cran"; sha256="0dcx6b892cic47rwzazsbnsicpgyrbdcndr3q5s6z0j1b41lzknd"; depends=[KMsurv geepack ]; };
psgp = derive { name="psgp"; version="0.3-6"; type="cran"; sha256="0h9gyadfy0djj32pgwhg8vy2gfn7i7yj5nnsm6pvfypc3k71s2wf"; depends=[intamap automap gstat Rcpp RcppArmadillo ]; };
psidR = derive { name="psidR"; version="1.3"; type="cran"; sha256="1jdxbjvc309b1bs81v57kc1g7lgfdz84bfakh9qwh8wgjqbjr06i"; depends=[data_table RCurl foreign SAScii ]; };
pso = derive { name="pso"; version="1.0.3"; type="cran"; sha256="0alar695c6kc1rsvwipsrvlxc93f3sy9l0yhp0mggyqgxkkvy406"; depends=[ ]; };
pspearman = derive { name="pspearman"; version="0.3-0"; type="cran"; sha256="1l5mqga7b5nvm6v9gbl1xsspdqsjqyhhdn4gc4qlz6ld7fqfq6cx"; depends=[ ]; };
pspline = derive { name="pspline"; version="1.0-16"; type="cran"; sha256="170apwfv2lbf2rggzzynrf9vi2mr0y15sm4zy8djxxpzv217iaf7"; depends=[ ]; };
pssm = derive { name="pssm"; version="1.0"; type="cran"; sha256="1af5zvznh04vz5psbmq3xxclm2zh4gl4gxi1ps6aqmiqjpm57dwq"; depends=[MASS abind numDeriv MHadaptive ]; };
psy = derive { name="psy"; version="1.1"; type="cran"; sha256="027whr670w65pf8f7x0vfk9wmadl6nn2idyi6z971069lf01wdlk"; depends=[ ]; };
psych = derive { name="psych"; version="1.5.4"; type="cran"; sha256="04n0rfr7i5yhr5ph0fdp9yrmc8m2i4zbf7bh5pvx7s7lfs08z84a"; depends=[mnormt ]; };
psychometric = derive { name="psychometric"; version="2.2"; type="cran"; sha256="1b7cx6icixh8k3bv60fqxjjks23qn09vlcimqfv2x3m3nkf8p1s9"; depends=[multilevel nlme multilevel nlme ]; };
psychomix = derive { name="psychomix"; version="1.1-2"; type="cran"; sha256="0kah36ps9d0dr594vfk9fy2ag2grknjjgvmkf9vzm0ny52cisc72"; depends=[flexmix psychotools lattice Formula modeltools ]; };
psychotools = derive { name="psychotools"; version="0.4-0"; type="cran"; sha256="17qwlxj00i0aqwf39hwr6mmxa6jy0j6dxfrp9p1xskbgi5cnvslk"; depends=[ ]; };
psychotree = derive { name="psychotree"; version="0.15-0"; type="cran"; sha256="08mq4gssrhydn106zm6xxwb1kk43hdzw6jqclx1ya0g8xfri2rrd"; depends=[partykit psychotools Formula ]; };
psyphy = derive { name="psyphy"; version="0.1-9"; type="cran"; sha256="1ndc6sy662wj2qfx7r97crlqjd8fdkfvfy59qmf34bcbzbg33riz"; depends=[ ]; };
psytabs = derive { name="psytabs"; version="0.5"; type="cran"; sha256="0jcsv771ndf0fv76982rbv099ii4l55a8bj1mhgr54838ins0gg7"; depends=[psych plyr rtf R2HTML mokken lavaan semTools ]; };
pt = derive { name="pt"; version="1.0"; type="cran"; sha256="0hjijfmc9dip3ys8xg44w0fwvyzyjyjl9hpwm7j2nzg3plv6i1fz"; depends=[ ]; };
ptinpoly = derive { name="ptinpoly"; version="2.4"; type="cran"; sha256="1jbj8z7lqg7w1mqdh230qjaydx2yb6ffgkc39k7dx8xl30g00i5b"; depends=[misc3d ]; };
ptw = derive { name="ptw"; version="1.0-7"; type="cran"; sha256="195pa6hj3y9spyc7yxfgr8alkp48a7ccnyp64r6fyjwj6ds08b64"; depends=[ ]; };
pubmed_mineR = derive { name="pubmed.mineR"; version="1.0.3.1"; type="cran"; sha256="1q1y3sshv5c56qgbbrrlnb1nhg052n8g2vrx32vhg304rqircxkm"; depends=[RCurl XML boot R2HTML ]; };
pullword = derive { name="pullword"; version="0.1"; type="cran"; sha256="1mxv63q2nfnhxcn8m17d40w792l1i7diykg6h0i42pj0rsa4ww36"; depends=[RCurl ]; };
puma = derive { name="puma"; version="3.8.0"; type="bioc"; sha256="00q69f16mp40h623lgxqxj9xgfcfkz6551dgmiv0mckcparyl2xa"; depends=[Biobase affy mclust oligo Biobase affy affyio ]; };
pumilioR = derive { name="pumilioR"; version="1.3"; type="cran"; sha256="1zmcdp978p73bh9fdshxlrzgfg18j007xgxgr439rq90bwiwva6j"; depends=[XML RCurl ]; };
pushoverr = derive { name="pushoverr"; version="0.1.4"; type="cran"; sha256="1qa7cajgri3dwlvbpwn244m92n3q3apl4m5420mzsa9ngnmm8hj1"; depends=[httr ]; };
pvac = derive { name="pvac"; version="1.14.0"; type="bioc"; sha256="05jmvv4c71gsavsdnkzskldhlg9yprgvfavah3ik9mvsldk6cqqy"; depends=[affy Biobase ]; };
pvar = derive { name="pvar"; version="2.2"; type="cran"; sha256="1f58czx14shd02ijyxhn46yrvfh44wrpifja8cjv522gbkrcr7yf"; depends=[Rcpp Rcpp ]; };
pvca = derive { name="pvca"; version="1.6.0"; type="bioc"; sha256="1kbb5vwff8wxq5j3cikgpibi2n2d9v97z7gm28yzc63ymyvl9ngn"; depends=[Matrix Biobase vsn lme4 ]; };
pvclass = derive { name="pvclass"; version="1.2"; type="cran"; sha256="099lk0x24h7g77lpr22mzpl22q2b0nr466ljgm6jcdyjbkzgx237"; depends=[Matrix ]; };
pvclust = derive { name="pvclust"; version="1.3-2"; type="cran"; sha256="0w9cxr0bc591icbyn8239f76ypb2nwv9fa5b1ix05wh55d1h0rgc"; depends=[ ]; };
pvrank = derive { name="pvrank"; version="1.0"; type="cran"; sha256="0kvy0b1x7q23pjw2ckyqzyh3ihqnbrd067v85l9rvf0pxyycqyhx"; depends=[Rmpfr ]; };
pvsR = derive { name="pvsR"; version="0.3"; type="cran"; sha256="1ijmqlcsc8z0aphdd3j37ci8yqsy50wnr2fwn7h8fxbyd12ax2nj"; depends=[XML nnet httr ]; };
pwr = derive { name="pwr"; version="1.1-2"; type="cran"; sha256="1czganj70qszz32yx2jprhr8h9a2lpg67gwfwfjf8kpk97qvkalj"; depends=[ ]; };
pwt = derive { name="pwt"; version="7.1-1"; type="cran"; sha256="0926viwmwldmzlzbnjfijh00wrhgb0h4h0mlrls71pi5pjfldifa"; depends=[ ]; };
pwt8 = derive { name="pwt8"; version="8.0-0"; type="cran"; sha256="12cgyban6waj0cxz9gb35s5v0v29rmx67ipzalzdnrjp5nsmy431"; depends=[ ]; };
pxR = derive { name="pxR"; version="0.40.0"; type="cran"; sha256="08s62kzdgak7mjzyhd32qn93q5l7sj01vhsk7fjg9nxjvm78xxka"; depends=[stringr reshape2 RJSONIO plyr ]; };
pxweb = derive { name="pxweb"; version="0.5.5"; type="cran"; sha256="1rrsxis2fi1x90gj251phbrz3bbl7yyc39n20lk2rln14acdhfsy"; depends=[data_table plyr stringr RJSONIO httr ]; };
pycno = derive { name="pycno"; version="1.2"; type="cran"; sha256="0ha5css95xb98dq6qk98gnp1al32gy6w5fkz74255vs4hmkwfzw2"; depends=[sp maptools rgeos ]; };
pyramid = derive { name="pyramid"; version="1.4"; type="cran"; sha256="0hh0hmckicl0r2r9zlf693j65jr9jgmiz643j2asp57nbs99lgxz"; depends=[ ]; };
qLearn = derive { name="qLearn"; version="1.0"; type="cran"; sha256="1ilxmgazm8gjz8c1hhbp4fccibnvnalxrag8b0rn081zsqmhf094"; depends=[ ]; };
qPCR_CT = derive { name="qPCR.CT"; version="1.1"; type="cran"; sha256="19j41fsd2m7p2nxi2h2mj43rjxx6sz2jpf4sk0bfvl1gyj0iz3hi"; depends=[RColorBrewer ]; };
qVarSel = derive { name="qVarSel"; version="1.0"; type="cran"; sha256="13x2hnqjsm0ifzmqkkl9ilhykrh80q04lhlkkp06hkysmh5w9rkx"; depends=[lpSolveAPI Rcpp Rcpp ]; };
qat = derive { name="qat"; version="0.73"; type="cran"; sha256="1fff4sv1n3i0gfgj83sy4pygxalifdycm27hsw51r72n86049cdc"; depends=[ncdf XML gdata moments boot fields gplots ]; };
qcc = derive { name="qcc"; version="2.6"; type="cran"; sha256="0bsdgpsqvkz2w1qanxwx8kvrpkpzs9jgw8ml2lyqhmhqbxyg125r"; depends=[MASS ]; };
qclust = derive { name="qclust"; version="1.0"; type="cran"; sha256="0cxkk4lybpawyqmy5j6kkpgm0zy0gyn3brc1mf9jv8gmkl941cp3"; depends=[mclust mvtnorm ]; };
qcmetrics = derive { name="qcmetrics"; version="1.4.1"; type="bioc"; sha256="1r5qs19fgwryjqyf9wsdn0lkyb2hisn3akp87qhc9rs8rf9w469w"; depends=[Biobase knitr Nozzle_R1 xtable pander S4Vectors ]; };
qcr = derive { name="qcr"; version="0.1-18"; type="cran"; sha256="16dfda3rwivsdhp7j5izzbk2rzwfabfmxgpq4kjc4h7r90n2vly2"; depends=[qcc ]; };
qdap = derive { name="qdap"; version="2.2.1"; type="cran"; sha256="0gix6l0h6q0c2pl38d3qp3pzs1m3j96rcb9n6q9k1nh0002vfnsg"; depends=[qdapDictionaries qdapRegex qdapTools RColorBrewer chron dplyr gdata gender ggplot2 gridExtra igraph NLP openNLP plotrix RCurl reports reshape2 scales stringdist tidyr tm venneuler wordcloud xlsx XML ]; };
qdapDictionaries = derive { name="qdapDictionaries"; version="1.0.6"; type="cran"; sha256="1icivvsi33494ycd7vfqm9zx2g2rc1m3dygs3bi0ndi798z1cvx2"; depends=[ ]; };
qdapRegex = derive { name="qdapRegex"; version="0.3.2"; type="cran"; sha256="1hygkck4wilm2f2cg5q82a867608j3dqp7wqj3kbnh5a970lw41y"; depends=[stringi ]; };
qdapTools = derive { name="qdapTools"; version="1.1.0"; type="cran"; sha256="0k3mvcjj2fg2v3z8jm2z02zmrpgjpwbpcaanmp2vlykqzacsrl52"; depends=[chron data_table RCurl XML ]; };
qdm = derive { name="qdm"; version="0.1-0"; type="cran"; sha256="0cfxyy8s5zfb7867f9xv9scq9blq2qnw68x66m7y7nqlrrff5xdr"; depends=[ ]; };
qgraph = derive { name="qgraph"; version="1.3.1"; type="cran"; sha256="1wmpsgmzl9qg4vjjjlbxqav3ck7p26gidsqv3qryx56jx54164wg"; depends=[psych ellipse lavaan sem plyr Hmisc igraph jpeg png colorspace Matrix sna corpcor reshape2 ggplot2 glasso huge fdrtool d3Network ggm gtools ]; };
qgtools = derive { name="qgtools"; version="1.0"; type="cran"; sha256="0irqfaj2qqx7n1jfc0kmfpgzqrhwwlj0qizsmya94zk9d27bcpn5"; depends=[Matrix MASS ]; };
qicharts = derive { name="qicharts"; version="0.1.3"; type="cran"; sha256="1f9flcz4w5s6rahk2bkddwjwba72q8himgaqdgza8phaksdzm58v"; depends=[lattice latticeExtra ]; };
qiimer = derive { name="qiimer"; version="0.9.2"; type="cran"; sha256="08625hz2n7yk9zk1k9sa46n2ggbw5qs0mlqkmzyjjh3qlnb1354a"; depends=[pheatmap ]; };
qlcMatrix = derive { name="qlcMatrix"; version="0.9.4"; type="cran"; sha256="1nkk712h9nnaqshw766mvk72w6gq9abyry4q1a0ghn0naq3gyl0s"; depends=[Matrix slam ]; };
qlspack = derive { name="qlspack"; version="2.2"; type="cran"; sha256="0b9sqvnvldhd8vymajrbql0vn70rml13jgsq5ihm6skzq5qms7y6"; depends=[geepack ]; };
qmap = derive { name="qmap"; version="1.0-3"; type="cran"; sha256="1c7qvmd5whi446nzssqvhz1j2mpx22nlzzdrcql84v18ry0dr18m"; depends=[fitdistrplus ]; };
qmethod = derive { name="qmethod"; version="1.3.1"; type="cran"; sha256="01yj8fr6d615lydb7111lb9qhkg1c6xy8gp2225as53mzbsc890i"; depends=[psych GPArotation digest knitr xtable ]; };
qmrparser = derive { name="qmrparser"; version="0.1.5"; type="cran"; sha256="0sl9n42j0dx9jqz5vv029ra6dyrg9v7mvdlya8ps3vyd6fjhwh0z"; depends=[ ]; };
qpcR = derive { name="qpcR"; version="1.4-0"; type="cran"; sha256="029qhncfiicb3picay5yd42g6qi0x981r6mgd67vdx71cac9fp59"; depends=[MASS minpack_lm rgl robustbase Matrix ]; };
qpcrNorm = derive { name="qpcrNorm"; version="1.24.0"; type="bioc"; sha256="1db7w2w0ss1xx990h5xp6354xfyjdb5r5898zz2i2sgn0l2k5fpc"; depends=[Biobase limma affy ]; };
qpgraph = derive { name="qpgraph"; version="2.0.5"; type="bioc"; sha256="188v0bpgd5a7c0gby8vzljfagl8k3gynyv7c9a96miyyl0qlxn0s"; depends=[Matrix annotate graph Biobase S4Vectors BiocParallel AnnotationDbi IRanges GenomeInfoDb GenomicRanges GenomicFeatures mvtnorm qtl Rgraphviz ]; };
qqman = derive { name="qqman"; version="0.1.2"; type="cran"; sha256="024ln79hig5ggcyc3466r6y6zx2hwy2698x65cha5zpm51kq1abs"; depends=[ ]; };
qqtest = derive { name="qqtest"; version="1.0"; type="cran"; sha256="12hw4d2gddb4fgdi986pyqgvlpxgk5lngfp989hq2a830kyxz1ds"; depends=[MASS ]; };
qrLMM = derive { name="qrLMM"; version="1.1"; type="cran"; sha256="1yg9ph6jy0sn4d82vn4v7yy3mqczbnzsq8qqp9dw38vh2456rmf2"; depends=[nlme matrixcalc mvtnorm ghyp quantreg psych ]; };
qrNLMM = derive { name="qrNLMM"; version="1.0"; type="cran"; sha256="0vlinc3bggapff29dyz14vn122gy6aq3rp38v2bpnxfkbpj10lvy"; depends=[matrixcalc mvtnorm ghyp quantreg psych ald ]; };
qrfactor = derive { name="qrfactor"; version="1.4"; type="cran"; sha256="0f02lh8zrc36slwqy11x03yzfdy94p1lk5jar9h5cwa1dvi5k8gm"; depends=[mvoutlier mgraph pvclust cluster maptools ]; };
qrmtools = derive { name="qrmtools"; version="0.0-1"; type="cran"; sha256="0xjgb8clyhlrl4qdbhi85m97cbhab5q5sy2zr87gamz2y365alpr"; depends=[xts ]; };
qrng = derive { name="qrng"; version="0.0-2"; type="cran"; sha256="0rs4dggvrlc3bi0wgkjw8lhv4b3jpckcfkqzsaz0j46kf6vfgfw1"; depends=[ ]; };
qrnn = derive { name="qrnn"; version="1.1.2"; type="cran"; sha256="01wsz9qcdiayi7gsyy2y09jyyapanyhlc4pdyman2f7z5nl9yv9i"; depends=[ ]; };
qrqc = derive { name="qrqc"; version="1.20.0"; type="bioc"; sha256="1phmcd4a097h9jj8c8cqwvvgg10cc5cvn7b1ghylh1ddp5npxz4c"; depends=[reshape ggplot2 Biostrings biovizBase brew xtable Rsamtools testthat reshape ggplot2 Biostrings biovizBase plyr Rsamtools ]; };
qtbase = derive { name="qtbase"; version="1.0.4"; type="cran"; sha256="02yilvywkcqn3y9ayix18cgkwhi0gh69fl3fcw28fs2zxf1hqy75"; depends=[ ]; };
qte = derive { name="qte"; version="1.0.1"; type="cran"; sha256="15y6n0c9jinfz7hmm107palgy8fl15bc71gw0bcd3bawpydkrq2w"; depends=[ ]; };
qtl = derive { name="qtl"; version="1.36-6"; type="cran"; sha256="1qn8fv0s2934pbds2962isr8y96s2k0jlh6y27rz21qlpryrbijb"; depends=[ ]; };
qtlDesign = derive { name="qtlDesign"; version="0.941"; type="cran"; sha256="138yi85i5xiaqrns4v2hw46b731bdgnb301wg2h4cfrxvrw4l0d5"; depends=[ ]; };
qtlbim = derive { name="qtlbim"; version="2.0.7"; type="cran"; sha256="0nm7ky5bkzhmfr41fs1pvl51i2df1fz11j55q74ma2wzki5adfps"; depends=[qtl lattice coda MASS ]; };
qtlbook = derive { name="qtlbook"; version="0.18-1"; type="cran"; sha256="09b4w7kqdlmpf0vsjgwbi9sraafzchvk18yzrx72gs151v03nxlm"; depends=[qtl ]; };
qtlhot = derive { name="qtlhot"; version="0.9.0"; type="cran"; sha256="1043rksqqzgmr7q03j18wxgm706prqxq9ki9b9p2dxvc62vfcfih"; depends=[qtl lattice corpcor mnormt ]; };
qtlmt = derive { name="qtlmt"; version="0.1-3"; type="cran"; sha256="01ql0fr2mxl8a8nd6lpig5j8vznv594ygn6bj6d31gj15r5rs8fs"; depends=[ ]; };
qtlnet = derive { name="qtlnet"; version="1.3.6"; type="cran"; sha256="044a2p3mpp203kb85s2fr3qiyypm461lrzxkfi0hnzq44qqba169"; depends=[qtl igraph sem graph pcalg ]; };
qtpaint = derive { name="qtpaint"; version="0.9.0"; type="cran"; sha256="06yqakg134mks8q7a40f5knjpcm1k2wdzchs0ywvfpwvpwgwig01"; depends=[qtbase qtbase qtbase ]; };
qtutils = derive { name="qtutils"; version="0.1-3"; type="cran"; sha256="018k9v3mab1mfcjh4mv1a1iish50fwdhb51mqn17k6fyrrrv7vs5"; depends=[qtbase qtbase qtbase ]; };
quad = derive { name="quad"; version="1.0"; type="cran"; sha256="0fak12l19f260k0ygh6zimx8dabzsv7a9i2njw8hnfcs3ndffhv5"; depends=[PearsonDS ]; };
quadprog = derive { name="quadprog"; version="1.5-5"; type="cran"; sha256="0jg3r6abmhp8r9vkbhpx9ldjfw6vyl1m4c5vwlyjhk1mi03656fr"; depends=[ ]; };
quadrupen = derive { name="quadrupen"; version="0.2-4"; type="cran"; sha256="0gs565zi5qkccr9f65smvzgq2d97p7i5inksp2492bjvqhsbagxj"; depends=[Rcpp ggplot2 Matrix reshape2 scales Rcpp RcppArmadillo ]; };
qualCI = derive { name="qualCI"; version="0.1"; type="cran"; sha256="09mzsy5ryyrn1gz9ahrh95cpfk7g09pmjjy0m82fh4xc7j5w6kpf"; depends=[combinat ]; };
qualV = derive { name="qualV"; version="0.3-1"; type="cran"; sha256="0p4yfgq2wxwis2w28mdb61x6hzm6sb9bczjdm9bc05ga5srr3sdd"; depends=[KernSmooth ]; };
qualityTools = derive { name="qualityTools"; version="1.54"; type="cran"; sha256="0ylp5a49b4q4max4yz30ia7r12s4jrvqn9zx5a21qcnpinf8b932"; depends=[ ]; };
quantchem = derive { name="quantchem"; version="0.13"; type="cran"; sha256="1ga5xa7lsk04flfp1syjzpnvj3i2ypzh1m49vq1xkdwpm6axdy8n"; depends=[MASS outliers ]; };
quanteda = derive { name="quanteda"; version="0.7.2"; type="cran"; sha256="0mpalvnhqkmqczpc1qaipvqxlyqfli510p81h6mf0sq9f82nzmks"; depends=[Matrix data_table SnowballC wordcloud proxy Rcpp ca Rcpp RcppArmadillo ]; };
quantification = derive { name="quantification"; version="0.1.0"; type="cran"; sha256="0987389rr21fl3khgd3a1yq5821hljwm0xlyxgjy1km5hj81diap"; depends=[car ]; };
quantmod = derive { name="quantmod"; version="0.4-4"; type="cran"; sha256="0a8gr2qb2b2w58zyxbyz3dbprmyiwf5cd62xqv4d3rk29l7vk4n8"; depends=[xts zoo TTR ]; };
quantreg = derive { name="quantreg"; version="5.11"; type="cran"; sha256="0pyc1zknkjyvaix76bn84l90zavajsc7jx17x0zanllnh34siizp"; depends=[SparseM ]; };
quantregForest = derive { name="quantregForest"; version="0.2-3"; type="cran"; sha256="06c73f66nnw3vd2dv8h5skzyxbr89i3pyprbb0if721h5d7pm0s7"; depends=[randomForest ]; };
quantregGrowth = derive { name="quantregGrowth"; version="0.3-0"; type="cran"; sha256="0iyqd4gf780xqj2gcinlx0h6r6wy4vc7sp8r4qa1s638qcrp3qwa"; depends=[quantreg ]; };
quantro = derive { name="quantro"; version="1.0.0"; type="bioc"; sha256="0cqs7vigv7yfamwq8jjs61xxlq8c3kl3gc5sd4y8382j1rdcipjk"; depends=[Biobase minfi doParallel foreach iterators ggplot2 ]; };
quantsmooth = derive { name="quantsmooth"; version="1.32.0"; type="bioc"; sha256="1q66x7kw2pmm81xifb49agl4akgprfjwlhsa692bwprvi9vq6z73"; depends=[quantreg ]; };
quantspec = derive { name="quantspec"; version="1.0-3"; type="cran"; sha256="1g4arhhybw021dnz0imdfwwj328gc8yw75cgnnd00skdc402cfhk"; depends=[quantreg abind zoo snowfall Rcpp Rcpp ]; };
questionr = derive { name="questionr"; version="0.4.3"; type="cran"; sha256="13mmmjxg9vkn53dp9hng330bkilzdf2zqisgs21ng08b6p9dv7n4"; depends=[shiny highr classInt htmltools ]; };
queueing = derive { name="queueing"; version="0.2.5"; type="cran"; sha256="11a44aqq0s50vdbn7rhijajqw1rrcj1qnyjjd8dn1cc5nvq141k7"; depends=[ ]; };
quickpsy = derive { name="quickpsy"; version="0.1.0"; type="cran"; sha256="1p1rhv69bh842r77dxn73l0k2lwa5vj2xc27m470pjygap2zaqv0"; depends=[boot DEoptim dplyr ggplot2 tidyr MPDiR ]; };
quint = derive { name="quint"; version="1.0"; type="cran"; sha256="19dxrssy4dw7v3s4hhhy6yilbc7zb6pvcnh3mm1z6vv5a1wfr245"; depends=[partykit Formula rpart ]; };
quipu = derive { name="quipu"; version="1.9.0"; type="cran"; sha256="1py1qpbwp2smr5di8b3zmzxxhchfmr5qfhqkdiqig28mcnqcmp5n"; depends=[agricolae stringr pixmap shiny xtable ]; };
qusage = derive { name="qusage"; version="1.6.0"; type="bioc"; sha256="16c5rrvqz784m49556h9six1p7r7mxfjwmms6lz416r9cvjg9khh"; depends=[limma Biobase ]; };
qvalue = derive { name="qvalue"; version="1.43.0"; type="bioc"; sha256="169cfpwgq4lpapipwrc6yczfxgc9wczq47xf2vzl7wdp8arrblqz"; depends=[ ]; };
qvcalc = derive { name="qvcalc"; version="0.8-9"; type="cran"; sha256="1ysbsm65n05vypvvpsbdfbrb60gij50vsmybzi4405g5z2ds1j72"; depends=[ ]; };
qwraps2 = derive { name="qwraps2"; version="0.1.1"; type="cran"; sha256="1kikw92i9l06rxwlnp2sa17wkd8xshryx1rbk4qjzf4yfgmgbkbd"; depends=[dplyr ggplot2 ]; };
r2d2 = derive { name="r2d2"; version="1.0-0"; type="cran"; sha256="1zl0b36kx49ymfks8rm33hh0z460y3cz6189zqaf0kblg3a32nsi"; depends=[KernSmooth MASS sp ]; };
r2dRue = derive { name="r2dRue"; version="1.0.4"; type="cran"; sha256="1apdq7zj5fhs349wm9g6y06nn33x24pg3gdp4z1frd18qlacf8z5"; depends=[rgdal sp matrixStats ]; };
r2lh = derive { name="r2lh"; version="0.7"; type="cran"; sha256="1kkyjv9x2klrjnaaw4a16sxdfqmpp9s5mlclzlczlqjypbf2aa6d"; depends=[ ]; };
r2stl = derive { name="r2stl"; version="1.0.0"; type="cran"; sha256="18lvnxr40cm450s8qh09c3cnkl1hg83jhmv1gzsv6nkjrq4mj5wh"; depends=[ ]; };
r3Cseq = derive { name="r3Cseq"; version="1.12.1"; type="bioc"; sha256="0df52ccial9axnpmawap3pfvmjdgnl8pfvcgjwyvddrg2xbi8n32"; depends=[Rsamtools data_table rtracklayer VGAM qvalue RColorBrewer sqldf ]; };
r4ss = derive { name="r4ss"; version="1.22.1"; type="cran"; sha256="1rjnglwa3i8rlzyqqr5h8yh7vglrh8zpd3829qcc1vfi4swcwwqw"; depends=[coda corpcor gplots gtools maps pso RCurl ]; };
rARPACK = derive { name="rARPACK"; version="0.7-0"; type="cran"; sha256="1r1ypa56wkxvll9yqr50f3x2krimi22lwyrkksf5zf6laksmiq1w"; depends=[Matrix Rcpp Rcpp RcppEigen ]; };
rAltmetric = derive { name="rAltmetric"; version="0.6"; type="cran"; sha256="0ym8p9rq64ig3vlaimk38rmc2h1315bphx7v1rd6g4gypgx4ym15"; depends=[plyr RCurl reshape2 png ggplot2 RJSONIO ]; };
rAverage = derive { name="rAverage"; version="0.4-13"; type="cran"; sha256="0yfy81p99a3cb31cagxdvby7l2hcc60g3mnfizd9nvgamdmw08sy"; depends=[ ]; };
rAvis = derive { name="rAvis"; version="0.1.2"; type="cran"; sha256="0m5dl8as0vmmsd3j0z0xwcpq55yfax42fa67qn4lsnaglyqmd4lm"; depends=[stringr XML RCurl scrapeR gdata scales rgdal maptools raster sp ]; };
rBeta2009 = derive { name="rBeta2009"; version="1.0"; type="cran"; sha256="0ljzxlndn9ba36lh7s3k4biim2qkh2mw9c0kj22a507qbzw1vgnq"; depends=[ ]; };
rBiopaxParser = derive { name="rBiopaxParser"; version="2.4.0"; type="bioc"; sha256="0jcwf7a24w5ccm93fwqcvlbp54k18v68dnalqbr5dqb9jl6ncfzy"; depends=[data_table XML ]; };
rCMA = derive { name="rCMA"; version="1.1"; type="cran"; sha256="0dswshg80hbgcib5x9w791sh71q5s4435q8sm9dh170v4ngbax0w"; depends=[ ]; };
rCUR = derive { name="rCUR"; version="1.3"; type="cran"; sha256="1f38xbc5n91k2y88cg0sv1z2p4g5vl7v2k1024f42f7526g2p2lx"; depends=[MASS Matrix lattice ]; };
rCarto = derive { name="rCarto"; version="0.8"; type="cran"; sha256="08813l4xfahjyn0jv48q8f6sy402n78dqsg01192pxl2dfc2i9ry"; depends=[RColorBrewer maptools classInt ]; };
rChoiceDialogs = derive { name="rChoiceDialogs"; version="1.0.6"; type="cran"; sha256="0lp8amdalirpsba44aa3r31xnhmi36qb9qf8f8gdxxbarpgprsbi"; depends=[rJava ]; };
rClinicalCodes = derive { name="rClinicalCodes"; version="1.0.1"; type="cran"; sha256="1p4p8r2n0k8h9xdzbngb95rshjp3376f5lsx228biqmswhpkhvlf"; depends=[stringr RCurl XML rjson tm ]; };
rDEA = derive { name="rDEA"; version="1.1-1"; type="cran"; sha256="17j7cz08nd5sgr1z75jlrdjl9ffkdhmzmqcyrf1qcy36v9i2fqzk"; depends=[slam truncreg truncnorm maxLik ]; };
rDNA = derive { name="rDNA"; version="1.30.1"; type="cran"; sha256="12h83zirv55sryc1zww97ws8kvsym1z7p7y5d4w43nam8mi3fpcd"; depends=[rJava ]; };
rDVR = derive { name="rDVR"; version="0.1.1"; type="cran"; sha256="19a4f9k65bd49vkn3sxkjdmcpwyawk7gwmvancvqr745gfgs0wzg"; depends=[RCurl ]; };
rEMM = derive { name="rEMM"; version="1.0-9"; type="cran"; sha256="0b3g30s8nw107y5yg113xdw1s2h96mq0j5cldj01z3j676idjgw5"; depends=[proxy igraph clusterGeneration MASS ]; };
rFDSN = derive { name="rFDSN"; version="0.0.0"; type="cran"; sha256="1ffiqpdzy4ipy2aci22zkih4373ifkjkpvsrza8awhyf9fwqwdsl"; depends=[XML ]; };
rFerns = derive { name="rFerns"; version="1.1.0"; type="cran"; sha256="00ddb9zwf4hqkx9qmrndz182mg69mb5fyg0v0v4b32sy4sixnps5"; depends=[ ]; };
rGADEM = derive { name="rGADEM"; version="2.14.0"; type="bioc"; sha256="0303nl790qvay6qdh45acc3yvw8hxw2gy7lsxmnl5gn3sk23cbnh"; depends=[Biostrings IRanges BSgenome seqLogo Biostrings IRanges seqLogo ]; };
rGammaGamma = derive { name="rGammaGamma"; version="1.0.12"; type="cran"; sha256="1051ah6q11qkxj1my4xybbzc8xcqkxfmps8mv2his5cyfllwidbs"; depends=[gsl ]; };
rHVDM = derive { name="rHVDM"; version="1.32.0"; type="bioc"; sha256="151pcx2dnfplkpdhxmvfd8dl0dkaggy96fi5h1zkgbzjggn6ig07"; depends=[R2HTML affy minpack_lm Biobase ]; };
rHealthDataGov = derive { name="rHealthDataGov"; version="1.0.1"; type="cran"; sha256="0lkjprss15yl6n9wgh79r4clip3jndly2ab1lv4iijzxnxay099d"; depends=[bit64 httr jsonlite ]; };
rHpcc = derive { name="rHpcc"; version="1.0"; type="cran"; sha256="0096z90mmf1j2xpb9034a5ph52m8z6n6xjh3km2vrhw63g3cpwap"; depends=[RCurl XML ]; };
rJPSGCS = derive { name="rJPSGCS"; version="0.2-7"; type="cran"; sha256="1j8lc56q20b0qkl20r8mqa6q822rpfphj00dlmj50rgwk02pfc69"; depends=[rJava chopsticks ]; };
rJava = derive { name="rJava"; version="0.9-6"; type="cran"; sha256="008g6s6rcb5lnz5y2a2rs4iq85a4nl522g714s1w1r153qcc0jz0"; depends=[ ]; };
rJavax = derive { name="rJavax"; version="0.3"; type="cran"; sha256="0sv2fjinp4wmdfvcpgm4hv8v3fkiiv84ywqyr4hz86j50ncd79km"; depends=[rJava ]; };
rJython = derive { name="rJython"; version="0.0-4"; type="cran"; sha256="13fpcw37cca738v9idqgi3gv9avfkfwfacxj54p2c4wyg46ghnah"; depends=[rJava rjson ]; };
rLTP = derive { name="rLTP"; version="0.1"; type="cran"; sha256="0dv8jj8rgcx4cbbs10sqdblcznxgm9ld5md922ghnka4ymar244m"; depends=[RCurl ]; };
rLakeAnalyzer = derive { name="rLakeAnalyzer"; version="1.7.3"; type="cran"; sha256="1w9z0m8ddslsk4d9r8dm5npm1s8sqdjv11x0gc08awa77iwak4wh"; depends=[plyr ]; };
rLiDAR = derive { name="rLiDAR"; version="0.1"; type="cran"; sha256="1zm3c3xpxk1ll0cq589k1kf69wgn93qmaqkvpgcjib0ay35q7c7f"; depends=[spatstat sp deldir plyr raster geometry rgl bitops ]; };
rLindo = derive { name="rLindo"; version="8.0.1"; type="cran"; sha256="05qyc4wvpjgw8jxmwn2nwybi695fjn0cdilkprwmjg07c82f0q5n"; depends=[ ]; };
rMAT = derive { name="rMAT"; version="3.16.0"; type="bioc"; sha256="0vad1qhslvqcvva78i7isxmd9llcwn06vjhvayk2a6f38hfd4m69"; depends=[BiocGenerics IRanges Biobase affxparser BiocGenerics IRanges Biobase affxparser ]; };
rNMF = derive { name="rNMF"; version="0.5.0"; type="cran"; sha256="1nz6h0j5ywdh48m0swmhp34hbkycd7n13rclrxaw85qi9wc42597"; depends=[nnls knitr ]; };
rNOMADS = derive { name="rNOMADS"; version="2.1.3"; type="cran"; sha256="1m2qbkqaninczs4v558vpzkiqh0rngkmpp9sk7y4k5j3g4x1jrpf"; depends=[rvest scrapeR stringr fields GEOmap MBA RCurl XML ]; };
rPlant = derive { name="rPlant"; version="2.7"; type="cran"; sha256="0gqxb49d6qzkd533s9qp75byvz66v1csdlnmh3m2zg96aw32178r"; depends=[rjson RCurl seqinr knitcitations ]; };
rPref = derive { name="rPref"; version="0.5"; type="cran"; sha256="0wgyf785izfhx1jvff4as1dir1s432z9v2b2rgdxvay9y5zpc2ar"; depends=[Rcpp RcppParallel dplyr igraph Rcpp RcppParallel ]; };
rPython = derive { name="rPython"; version="0.0-5"; type="cran"; sha256="0d608v1x8walwnx7aa3m0n7999jlbiymhl7605z4n7ps6l1140mv"; depends=[RJSONIO ]; };
rRDP = derive { name="rRDP"; version="1.0.0"; type="bioc"; sha256="06rd9dmsrpp1k70iap9y6vfxgrg77mdd5g67q4qspmfm3srrig8y"; depends=[Biostrings ]; };
rSCA = derive { name="rSCA"; version="2.1"; type="cran"; sha256="1lpix8xsjzyhgksmigvqxpv2bvaka0b1q2kcvdyfrfcw713n19rw"; depends=[ ]; };
rSFA = derive { name="rSFA"; version="1.04"; type="cran"; sha256="0gd6ji1ynbb04rfv8jfdmp7dqnyz8pxcl5636fypd9a81fggl0gs"; depends=[MASS ]; };
rSFFreader = derive { name="rSFFreader"; version="0.14.0"; type="bioc"; sha256="10bnliqpmch3fgnmi0cnq4xkh66r1r5k72asnlmmh9jcfi5ziaqy"; depends=[ShortRead Biostrings IRanges S4Vectors IRanges XVector Biostrings ]; };
rSPACE = derive { name="rSPACE"; version="1.1.1"; type="cran"; sha256="03ibsrhvjs5fn6syr65aw07s05apxbbm7biwlylha28yrazp2z89"; depends=[raster RMark ggplot2 tcltk2 sp plyr ]; };
rSymPy = derive { name="rSymPy"; version="0.2-1.1"; type="cran"; sha256="1mrfpyalrq8b6yicy28jsj0xy7hlawa72imsfhabwd3hrx6ld150"; depends=[rJython ]; };
rTANDEM = derive { name="rTANDEM"; version="1.6.1"; type="bioc"; sha256="17gv6rbhbmn0v1bsqn5cd78wd6g415dcr72pg0h2r6cxyc611qjv"; depends=[XML Rcpp data_table Rcpp ]; };
rTRM = derive { name="rTRM"; version="1.4.0"; type="bioc"; sha256="06kfxb4rmq38xpmd53bnbgfg5w275ik88x1my829lk441prj2vi6"; depends=[igraph RSQLite AnnotationDbi ]; };
rTRMui = derive { name="rTRMui"; version="1.4.0"; type="bioc"; sha256="1pd4fjzi4qlghy7si8g63dm4rrk1nzvpxr4yf5fzd0k48fyhmz0r"; depends=[shiny rTRM MotifDb ]; };
rTableICC = derive { name="rTableICC"; version="1.0.2"; type="cran"; sha256="11mjlgvmghppy2m35w799z93b4f8wn307dl3c9dyk2sib9nxcpyv"; depends=[partitions aster ]; };
rTensor = derive { name="rTensor"; version="1.2"; type="cran"; sha256="1qikicdi8d5yhw43660m8v587f5xzs2k2lpmbhfw037n0liivay2"; depends=[ ]; };
rUnemploymentData = derive { name="rUnemploymentData"; version="1.0.0"; type="cran"; sha256="1gbmr3kcv3wv4lmr7171sd76p95nhsa104955yi7y6wd5h0hk1ba"; depends=[stringr choroplethr rvest ]; };
rWBclimate = derive { name="rWBclimate"; version="0.1.3"; type="cran"; sha256="0vs56hx7a85pw4jx8nb8bdlr9dbkl4zdhzhqsm0505xc3qz18vxh"; depends=[ggplot2 httr plyr rgdal jsonlite reshape2 sp ]; };
rYoutheria = derive { name="rYoutheria"; version="1.0.0"; type="cran"; sha256="1yj66ars5a8mbv2axl6l5g7wflwz3j4mhwk3iz5w33rfhixixm9l"; depends=[plyr RJSONIO reshape2 RCurl ]; };
race = derive { name="race"; version="0.1.59"; type="cran"; sha256="13jprlnngribgvyr7fbg9d36i8qf3cax85n71dl71iv0y24al1cy"; depends=[ ]; };
radar = derive { name="radar"; version="1.0.0"; type="cran"; sha256="1wh5j3cfbj01jx2kbm9ca5cqhbb0vw7ifjn426bllm4lbbd8l273"; depends=[ ]; };
radiant = derive { name="radiant"; version="0.1.83"; type="cran"; sha256="0456iddvsnw2p0mnchig18ccbl0z53spb3nqwx43ms31b1nbfpjw"; depends=[lubridate ggplot2 dplyr magrittr car MASS gridExtra AlgDesign GPArotation psych wordcloud markdown knitr ggdendro broom tidyr pryr shiny shinyAce ]; };
radir = derive { name="radir"; version="1.0"; type="cran"; sha256="1aiy92r854h1l9fsa8j65w495hj7hll7k1csfnvb92h0wh0bxyzy"; depends=[hermite ]; };
rags2ridges = derive { name="rags2ridges"; version="1.4"; type="cran"; sha256="1vwd39vp8xdrcz1kfsjng3lzfrfb3czsxg1kvll5d275xsrhz5ix"; depends=[igraph expm reshape ggplot2 Hmisc fdrtool snowfall ]; };
rain = derive { name="rain"; version="1.0.1"; type="bioc"; sha256="01dlpz9cdwxkgfdmshyh9hy4clsx0yk12nlndgz06gjr07l7ip2q"; depends=[gmp multtest ]; };
rainbow = derive { name="rainbow"; version="3.3"; type="cran"; sha256="0xiqljshkdhhkdgcvz5n9qgbxgxskpxbq14vbpil9nqw2syj9xvj"; depends=[MASS pcaPP hdrcde cluster colorspace ks ]; };
raincpc = derive { name="raincpc"; version="0.4"; type="cran"; sha256="0yzpyidvf24frf82pj7rarjh0ncm5dhm0mmpsf2ycqlvp0qld10i"; depends=[SDMTools ]; };
rainfreq = derive { name="rainfreq"; version="0.3"; type="cran"; sha256="0985ck2bglg22gfj7m0hc7kpk0apljsbssf1ci99mgk47yi8fk9v"; depends=[RCurl SDMTools ]; };
rama = derive { name="rama"; version="1.40.0"; type="bioc"; sha256="1bmx8f0nvqfnl756mzf6m0d392hlvz6swlvs2m07abj0ka32z6jb"; depends=[ ]; };
ramify = derive { name="ramify"; version="0.2.0"; type="cran"; sha256="1fn2r6mr461yp00z8c7f1wsyhz3ag13q6ckf84sj11rgg6jivzjj"; depends=[ ]; };
ramps = derive { name="ramps"; version="0.6-13"; type="cran"; sha256="1y7jaajzbf6d9xwr0rg0qr43l8kncgwbpfy5rpka90g3244v8nwz"; depends=[coda maps Matrix nlme fields ]; };
randNames = derive { name="randNames"; version="0.2"; type="cran"; sha256="0mgfwdbadfvxg1dp8aqp2c24lkhz3bi9ssmym4ns6xjq088l3ldh"; depends=[dplyr httr jsonlite ]; };
randPack = derive { name="randPack"; version="1.12.0"; type="bioc"; sha256="16ykrzdhhns5nww7jqh4vax6v96wkhsj3capxbq510ljb97zpayy"; depends=[Biobase ]; };
randaes = derive { name="randaes"; version="0.3"; type="cran"; sha256="14803argy0xdd8mpn4v67gbp90qi2is4x6na9zw7i9pm504xji1x"; depends=[ ]; };
random = derive { name="random"; version="0.2.4"; type="cran"; sha256="17d1gcdymgcc08hx3998vs0x70fn8gxw2a1ycm9z7xrasx03g7kn"; depends=[curl ]; };
random_polychor_pa = derive { name="random.polychor.pa"; version="1.1.4-1"; type="cran"; sha256="1051v7krrawdqnhz9q01rsknp2i7iv82d370q7m9i9d9i8wfnpk5"; depends=[psych nFactors boot MASS mvtnorm sfsmisc ]; };
randomForest = derive { name="randomForest"; version="4.6-10"; type="cran"; sha256="0glj08w6sbabr3n71kzd5w3jb7vhrys8rq904j27a4xk0qp4s5lv"; depends=[ ]; };
randomForestSRC = derive { name="randomForestSRC"; version="1.6.1"; type="cran"; sha256="174ky1wwdpq6wkn8hanfpfgy55jf6v1hlm6k688gjs0515y5490r"; depends=[ ]; };
randomGLM = derive { name="randomGLM"; version="1.02-1"; type="cran"; sha256="031338zxy6vqak8ibl2as0l37pa6qndln0g3i9gi4s6cvbdw3xrv"; depends=[MASS foreach doParallel ]; };
randomLCA = derive { name="randomLCA"; version="1.0-2"; type="cran"; sha256="14v6jmsbyzmavxjdwh9nb0lljhc7kdly4p1v2a9jypjil6kk5ibc"; depends=[lattice boot fastGHQuad ]; };
randomNames = derive { name="randomNames"; version="0.0-8"; type="cran"; sha256="10fhqxnnw6gk5g8jnb83hh2nvvj65g8mwy7rfln8yzq93gjxnykm"; depends=[data_table ]; };
randomUniformForest = derive { name="randomUniformForest"; version="1.1.5"; type="cran"; sha256="1amr3m7h5xcb8gahrr58233chsnx1naf9x5vpjy9p5ivh71xcxf7"; depends=[Rcpp doParallel iterators foreach ggplot2 pROC gtools cluster MASS Rcpp ]; };
randomizationInference = derive { name="randomizationInference"; version="1.0.3"; type="cran"; sha256="0x36r9bjmpx90fz47cha4hbas4b31mpnbd8ziw2wld4580jkd6mk"; depends=[permute matrixStats ]; };
randomizeBE = derive { name="randomizeBE"; version="0.3-1"; type="cran"; sha256="06hj614wp9lb348qwyqgw5zk2vn0m81bkwz4jprgjd72kpy8kv1h"; depends=[ ]; };
randomizr = derive { name="randomizr"; version="0.2.2"; type="cran"; sha256="0g870sr8zjfl1dh3ay14kd6v6jg2qw86w2wcdzr8f201xy5i1fgr"; depends=[ ]; };
randtests = derive { name="randtests"; version="1.0"; type="cran"; sha256="03z3kxl4x0l91dsv65ld9kgc58z82ld1f4lk18i18dpvwcgkqk82"; depends=[ ]; };
randtoolbox = derive { name="randtoolbox"; version="1.16"; type="cran"; sha256="03z4g2mmdywsgl95xbj80awirkgrghdk2kwhsh58p00aq4bpl5ff"; depends=[rngWELL ]; };
rangeMapper = derive { name="rangeMapper"; version="0.2-8"; type="cran"; sha256="0bxb37gy98smypjj27r3dbd0vfyvaqw2p25qv07j3isykcn2pxpn"; depends=[RSQLite rgdal sp rgeos raster maptools lattice RColorBrewer classInt ]; };
rankdist = derive { name="rankdist"; version="0.4.1"; type="cran"; sha256="11lc7ggi5bv836f3bwk8gb5pry4fw4qwbj95bzg34xdascaapw59"; depends=[Rcpp hash optimx Rcpp ]; };
rankhazard = derive { name="rankhazard"; version="1.0"; type="cran"; sha256="1kylg8yjrixbv86i2ffhhn8f5shsj8kvi66k202ari0li92y7dsg"; depends=[survival ]; };
rappdirs = derive { name="rappdirs"; version="0.3"; type="cran"; sha256="1yjd91h1knagri5m4djal25p7925162zz5g6005h1fgcvwz3sszd"; depends=[ ]; };
rapport = derive { name="rapport"; version="0.51"; type="cran"; sha256="1qn45nrcawr8d9pkdnpmm37dg31l28gfbnwjl62fs7y691187cqp"; depends=[lattice plyr pander yaml reshape ]; };
rapportools = derive { name="rapportools"; version="1.0"; type="cran"; sha256="1sgv4sc737i12arh5dc3263kjsz3dzg06qihfmrqyax94mv2d01b"; depends=[reshape plyr pander ]; };
rareGE = derive { name="rareGE"; version="0.1"; type="cran"; sha256="0v3a2wns77q923ilddicqzg0108f8kmfdnsff1n65icin7cfzsny"; depends=[MASS nlme survey ]; };
rareNMtests = derive { name="rareNMtests"; version="1.1"; type="cran"; sha256="13r2hipqsf8z9k48ha5bh53n3plw1whb7crpy8zqqkcac8444b2z"; depends=[vegan ]; };
rasclass = derive { name="rasclass"; version="0.2.1"; type="cran"; sha256="04g2sirxrf16xjmyn4zcci757k7sgvsjbg0qjfr5phbr1rssy9qf"; depends=[car nnet RSNNS e1071 randomForest ]; };
raster = derive { name="raster"; version="2.3-40"; type="cran"; sha256="1swfhf6c70ybvlkw5v2wg0zbzsmzn63n9fkwj4sfp3n08flikma2"; depends=[sp ]; };
rasterVis = derive { name="rasterVis"; version="0.35"; type="cran"; sha256="0kdpng32b3l0hsf24zzj5m5srcka1wr26dpxfjxxsyilg6frp83r"; depends=[raster lattice latticeExtra sp zoo hexbin RColorBrewer ]; };
rateratio_test = derive { name="rateratio.test"; version="1.0-2"; type="cran"; sha256="1a2v12z2dr893ha80fhada1820z5ih53w4pnsss9r9xw3hi0m6k5"; depends=[ ]; };
raters = derive { name="raters"; version="2.0.1"; type="cran"; sha256="16jnx6vv39k4niqkdlj4yhqx8qbrdi99bwzxjahsxr12ab5npbp1"; depends=[ ]; };
rationalfun = derive { name="rationalfun"; version="0.1-0"; type="cran"; sha256="15949vs9pdjz7426zhgqn7y87xzn79ikrpa2vyjnsid1igpyh0mp"; depends=[polynom ]; };
rattle = derive { name="rattle"; version="3.4.1"; type="cran"; sha256="0p3iaaf4kc88xcjf5p30imnch34p0kplf6za6b976pfp9zw54x2n"; depends=[ ]; };
rawFasta = derive { name="rawFasta"; version="1.0.0"; type="cran"; sha256="0krvs8d1r8hggjg84n7g3ncdkifa3hipbma98f49kf81fzn2npip"; depends=[ ]; };
rbamtools = derive { name="rbamtools"; version="2.10.0"; type="cran"; sha256="00y5393nac4x1vz9m5li0053cr679dj29v7ss6njgph8q27mv19c"; depends=[ ]; };
rbefdata = derive { name="rbefdata"; version="0.3.5"; type="cran"; sha256="12mcqz0pqgwfw5fmma0gwddj4zk0hpwmrsb74dvzqvgcvpfjnv98"; depends=[XML RCurl rjson wordcloud rtematres RColorBrewer ]; };
rbenchmark = derive { name="rbenchmark"; version="1.0.0"; type="cran"; sha256="010fn3qwnk2k411cbqyvra1d12c3bhhl3spzm8kxffmirj4p2al9"; depends=[ ]; };
rbhl = derive { name="rbhl"; version="0.1.0"; type="cran"; sha256="1m2n1qczhhdlv9pkmw9dlqi2wmdw8wac8d557c4rk0vnzwzgpgpi"; depends=[httr XML RJSONIO plyr ]; };
rbison = derive { name="rbison"; version="0.4.5"; type="cran"; sha256="1bvirsil4674r5xb0ksmzdrg0km988rsmq93mr0q6a089zw9lhna"; depends=[plyr httr mapproj ggplot2 gridExtra maptools sp dplyr jsonlite ]; };
rbitcoinchartsapi = derive { name="rbitcoinchartsapi"; version="1.0.4"; type="cran"; sha256="0r272jvjh3rzch8dmn4s0a5n5k6dsir7pr4qswzfvafqjdiwjajz"; depends=[RJSONIO RCurl ]; };
rbmn = derive { name="rbmn"; version="0.9-2"; type="cran"; sha256="1zy832y399cmfmhpyfh7vfd293fylf1ylmp8w8krkmzkmyfa80f2"; depends=[MASS ]; };
rbounds = derive { name="rbounds"; version="2.1"; type="cran"; sha256="1h334bc37r1vbwz1b08jazsdrf6qgzpzkil9axnq5q04jf4rixs3"; depends=[Matching ]; };
rbsurv = derive { name="rbsurv"; version="2.24.0"; type="bioc"; sha256="0cnhdfpwgxx3fbj8zvhrzlkv0qhgs3v05ql7x91ningg554isvz8"; depends=[Biobase survival ]; };
rbugs = derive { name="rbugs"; version="0.5-9"; type="cran"; sha256="1kvn7x931gjpxymrz0bv50k69s1x1x9mv34vkz54sdkmi08rgb3y"; depends=[ ]; };
rbundler = derive { name="rbundler"; version="0.3.7"; type="cran"; sha256="0wmahn59h9vqm6bq1gwnf6mvfkyhqh6xvdc5hraszn1419asy26f"; depends=[devtools ]; };
rcbalance = derive { name="rcbalance"; version="1.5"; type="cran"; sha256="1lqxx9ghxnskl8sy26x03d8baw8kn78mlxbh1gjjkszx4y5bm4vl"; depends=[MASS plyr ]; };
rcdd = derive { name="rcdd"; version="1.1-8"; type="cran"; sha256="09bb92rp44palx9dvc9pb0gdmb1g22289xjk8p9s918lalc6i9aw"; depends=[ ]; };
rcdk = derive { name="rcdk"; version="3.3.2"; type="cran"; sha256="02rlg3w8dbmag8b4z4wayh7xn61xc9g3647kxg91r0mvfhmrxl2h"; depends=[fingerprint rJava rcdklibs png iterators ]; };
rcdklibs = derive { name="rcdklibs"; version="1.5.8.4"; type="cran"; sha256="0mzkr23f4d639vhxfdbg44hzxapmpqkhc084ikcj93gjwvdz903k"; depends=[rJava ]; };
rcicr = derive { name="rcicr"; version="0.3.0"; type="cran"; sha256="0fvv6diqg6sw3ar3gzvhl3mbm6zvx0k12lzsa92mccg0giqa9n0w"; depends=[matlab aspace jpeg ]; };
rclinicaltrials = derive { name="rclinicaltrials"; version="1.4.1"; type="cran"; sha256="1x8mj4gzfpgvdj3glwanr76g5x8pks8fm806bvnfls35g967z4p4"; depends=[httr XML plyr ]; };
rcorpora = derive { name="rcorpora"; version="1.0.1"; type="cran"; sha256="10bmsmx9pznfpddddvk7khm7klxg1c82bf85613bnpcwjyb7xcid"; depends=[jsonlite ]; };
rcppbugs = derive { name="rcppbugs"; version="0.1.4.1"; type="cran"; sha256="0wb5mzw1sdrr7lc6izilv60k5v0wcvy8q31a863b63a9jvh16g8d"; depends=[Rcpp Rcpp RcppArmadillo BH ]; };
rcrossref = derive { name="rcrossref"; version="0.3.0"; type="cran"; sha256="1w822n6mlld7fa92iy38xjvgnkhyns3mvy7vaqabgr2bikcz6545"; depends=[jsonlite XML httr plyr bibtex dplyr ]; };
rda = derive { name="rda"; version="1.0.2-2"; type="cran"; sha256="1g2q7c0y138i9r7jgjrlpqznvwpqsj6f7vljqqfzh2l6kcj43vjj"; depends=[ ]; };
rdatamarket = derive { name="rdatamarket"; version="0.6.5"; type="cran"; sha256="1y4493cvhcgyg2j5hadx1fzmv2lzwan78jighi2dzyxxzv6pxccn"; depends=[zoo RCurl RJSONIO ]; };
rdd = derive { name="rdd"; version="0.56"; type="cran"; sha256="1x61ik606mwn46x3qzgq8wk2f6d5qqr95h30bz6hfbjlpcxw3700"; depends=[sandwich lmtest AER Formula ]; };
rdetools = derive { name="rdetools"; version="1.0"; type="cran"; sha256="0pkl990viv7ifr7ihgdcsww93sk2wlzp2cg931wywagfp8dijd02"; depends=[ ]; };
rdrobust = derive { name="rdrobust"; version="0.80"; type="cran"; sha256="02adafhbjp259hbbbk32yllgn35xxim2mwn6yixv4wh5dgr974v6"; depends=[ ]; };
rdrop2 = derive { name="rdrop2"; version="0.6"; type="cran"; sha256="1yxg38v7r34f9rid5q6q1g9f30q3zc4dnkziyps3514l5dnbvk3j"; depends=[assertthat data_table dplyr httr jsonlite magrittr ]; };
rdryad = derive { name="rdryad"; version="0.1.1"; type="cran"; sha256="0mqpkmwkznyxj0nn1v389p741dlc66dixcvljsn2rvg0q6p75fkj"; depends=[XML RCurl OAIHarvester ape gdata plyr stringr RJSONIO ]; };
reGenotyper = derive { name="reGenotyper"; version="1.2.0"; type="cran"; sha256="13g4fhj25kdk6wbl1hcabcaxcpv0dj0hj2l502wl1aywk1fvmy8m"; depends=[gplots zoo MatrixEQTL ]; };
readBrukerFlexData = derive { name="readBrukerFlexData"; version="1.8.2"; type="cran"; sha256="1cagv6l29h3p87h7c2bgba23v2wxrs2kg4zg1dk046m2x11mwx3c"; depends=[ ]; };
readGenalex = derive { name="readGenalex"; version="1.0"; type="cran"; sha256="1lhfw8xbwnjhslriaxziw4dskmjfawz5g31h2yl9ds2nwvwhmdwi"; depends=[pegas ]; };
readMLData = derive { name="readMLData"; version="0.9-7"; type="cran"; sha256="0l752j1jq37j9pdcsbmcb23b5l8fkfsbisfr3yjy3q4rxsphc7k6"; depends=[XML ]; };
readMzXmlData = derive { name="readMzXmlData"; version="2.8"; type="cran"; sha256="0x5h3dh6fkc30m6gx6pzmrxr31s80d1qgpcakspjza53qn6fjb16"; depends=[base64enc digest XML ]; };
readODS = derive { name="readODS"; version="1.4"; type="cran"; sha256="00xcas8y0cq3scgi9vlfkrjalphmd7bsynlzpy7izxa5w9b7x79f"; depends=[XML ]; };
readbitmap = derive { name="readbitmap"; version="0.1-4"; type="cran"; sha256="08fqqsdb2wsx415mnac9mzl5sr5and0zx72ablnlidqfxv8xsi9d"; depends=[bmp jpeg png ]; };
reader = derive { name="reader"; version="1.0.5"; type="cran"; sha256="1g22pnlfr2c974s6rqnyixknhgy2crqbxg2cg2s3ja1sk29v4gr0"; depends=[NCmisc ]; };
readr = derive { name="readr"; version="0.1.0"; type="cran"; sha256="0w6576lrnwk1p90mjwsgy7hi3rk5dqmksnwnmn1gw46lh2888bc8"; depends=[Rcpp curl Rcpp BH ]; };
readstata13 = derive { name="readstata13"; version="0.7"; type="cran"; sha256="14il790jgn8l9c8gxgl2s11vzff5xz77jsgdgjs044r407a72wkb"; depends=[Rcpp Rcpp ]; };
readxl = derive { name="readxl"; version="0.1.0"; type="cran"; sha256="0a0mjcn70a0nz1bkrdjwq495000kswxvyq1nlad9k3ayni2ixjkd"; depends=[Rcpp Rcpp ]; };
reams = derive { name="reams"; version="0.1"; type="cran"; sha256="07hqi0y59kv5lg0nl75xy8n48zw03y5m71zx58aiig94bf3yl95c"; depends=[leaps mgcv ]; };
reb = derive { name="reb"; version="1.44.0"; type="bioc"; sha256="10lalx5fdrgfi4z557ciq445bdnp31ihdcphniw58v0cm1nirl0i"; depends=[Biobase idiogram ]; };
rebird = derive { name="rebird"; version="0.1.1"; type="cran"; sha256="0s8wmp2sghs56ppca57fjfab7wngszmy1g8rd3hiwx6br0sjidcg"; depends=[RJSONIO httr RCurl plyr ]; };
rebmix = derive { name="rebmix"; version="2.7.1"; type="cran"; sha256="1m3mmqi4kfai0hx2khkblqairp59fgh0japg23rgib1djmdcqb4n"; depends=[ ]; };
rebus = derive { name="rebus"; version="0.0-5"; type="cran"; sha256="06rl6knnk93k537hhjx4r55hq6hssij7xc426ilki329vwfi5kyf"; depends=[ ]; };
recalls = derive { name="recalls"; version="0.1.0"; type="cran"; sha256="121r2lf32x4yq8zxx6pbnphs7ygn382ns85qxws6jnqzy52q41vh"; depends=[RCurl RJSONIO ]; };
reccsim = derive { name="reccsim"; version="0.9-1"; type="cran"; sha256="17nsp91xq20vfwjfwav80qjs2wc7gwpmrdnwv7lc61baq0kkcs7k"; depends=[ ]; };
recluster = derive { name="recluster"; version="2.8"; type="cran"; sha256="05g8k10813zbkgja6gvgscdsjd99q124jx31whncc4awdsgk69s4"; depends=[vegan ape picante phangorn phytools cluster ]; };
recommenderlab = derive { name="recommenderlab"; version="0.1-5"; type="cran"; sha256="1hpgd2la4wnlxx5h8cjni4i978hdssr041zrg851lpjrkbxmxfsi"; depends=[Matrix registry arules proxy ]; };
recommenderlabBX = derive { name="recommenderlabBX"; version="0.1-0"; type="cran"; sha256="0dl79cxarsfp8l4nxnns05jwnjygigjhwpjrr4lzx4nvsfxmgsr2"; depends=[recommenderlab ]; };
recommenderlabJester = derive { name="recommenderlabJester"; version="0.1-0"; type="cran"; sha256="1m5jg8gs16cwwwcnjzqkyzwyip8fshrwhmqz8g7nlf6g3p9347rl"; depends=[recommenderlab ]; };
reconstructr = derive { name="reconstructr"; version="0.5"; type="cran"; sha256="0lffi30grk88na2jmkbhs62xf3d8mzrmjsiajrpp7dsaxa650bf0"; depends=[Rcpp Rcpp ]; };
recosystem = derive { name="recosystem"; version="0.2.5"; type="cran"; sha256="0i5rgkmjaz50qlyi85hmr61r0iir53prrphzvnjq5bjchb1k3m09"; depends=[Rcpp Rcpp ]; };
redcapAPI = derive { name="redcapAPI"; version="1.3"; type="cran"; sha256="08js2lvrdl9ig0pq1wf7cwkmvaah6xs65bgfysdhsyayx0lz5rii"; depends=[chron DBI Hmisc httr stringr ]; };
redist = derive { name="redist"; version="1.1"; type="cran"; sha256="0ddwvmzmqv5nm3azia1g0x0icj1jcd7s34f1kv01phky2pmz5wy4"; depends=[Rcpp spdep sp coda Rcpp RcppArmadillo ]; };
ref = derive { name="ref"; version="0.99"; type="cran"; sha256="0f0yz08pqpg57mcm7rh4g0rbvlcvs5fbpjkfrq7fmj850z1ixvw0"; depends=[ ]; };
refGenome = derive { name="refGenome"; version="1.3.0"; type="cran"; sha256="121aw4w84hlhxgwlf1gh0w3ydvd8zsijrh0q7fzcwi1vdgnjb7lv"; depends=[doBy RSQLite DBI ]; };
referenceIntervals = derive { name="referenceIntervals"; version="1.1.1"; type="cran"; sha256="04199nxh216msaghkp66zsi96h76a7c42ldml0fm66v2vamcslg8"; depends=[boot extremevalues car outliers ]; };
refset = derive { name="refset"; version="0.1.0"; type="cran"; sha256="0yj87sp6ghxv20hz5knmw3d7way1hsggk759wqxsbfprd38y6khd"; depends=[ ]; };
refund = derive { name="refund"; version="0.1-11"; type="cran"; sha256="1afsxab1jivs4vj6diqh7352v98divna6az1dxsdn7lvw6cmph6y"; depends=[fda lattice boot mgcv MASS glmnet magic nlme wavethresh Matrix gamm4 matrixStats lme4 RLRsim ]; };
refund_wave = derive { name="refund.wave"; version="0.1"; type="cran"; sha256="1vnhg7gi5r8scwivqjwhrv72sq8asnm4whx3jk39saphdxpk5hxv"; depends=[glmnet wavethresh ]; };
regRSM = derive { name="regRSM"; version="0.4"; type="cran"; sha256="1rg74jqj8rw69q6my0n4alflx7mgfwng35ff72bxwjhn9ghhj347"; depends=[ ]; };
regexr = derive { name="regexr"; version="1.0.2"; type="cran"; sha256="1mr8qmiz9bgq5v6f065z40aj9zllidsv6gg8mjc28zxmkz5zn6gp"; depends=[ ]; };
regionReport = derive { name="regionReport"; version="1.0.5"; type="bioc"; sha256="16k82hlyspcldhdl6kwixjdwd3drchdwmc9bb7s8yd8ijhqh8xdm"; depends=[derfinder derfinderPlot devtools GenomeInfoDb GenomicRanges ggbio ggplot2 gridExtra IRanges knitcitations knitr knitrBootstrap mgcv RColorBrewer rmarkdown ]; };
registry = derive { name="registry"; version="0.2"; type="cran"; sha256="1ifv9sql70kylfj12cdb1j1zpk3ix728m8qj46sf1zyc5mhll01s"; depends=[ ]; };
reglogit = derive { name="reglogit"; version="1.2-2"; type="cran"; sha256="0nq60s8l860z6nd52l6c77vamis7hl2j667gkxry0jir2pxsk4jp"; depends=[mvtnorm boot Matrix ]; };
regpro = derive { name="regpro"; version="0.1.0"; type="cran"; sha256="0d47ffsqx1633pmf3abi7wksyng2g71mz2z9nb2zqdak794l1n44"; depends=[denpro ]; };
regress = derive { name="regress"; version="1.3-14"; type="cran"; sha256="0qnks28fr8siq95iiiqyvz82cbdg14i18rj7g9rqyjhiam12fshl"; depends=[ ]; };
regsubseq = derive { name="regsubseq"; version="0.12"; type="cran"; sha256="0879r4r8kpr8jd6a3fa9cifm7cv0sqzz8z1alkm1b2fr1625md3g"; depends=[ ]; };
regtest = derive { name="regtest"; version="0.05"; type="cran"; sha256="1wrrpp2hvkas0yc512gya3pvd0v97pn4v51k5jxkwyd1pp68zd1q"; depends=[ ]; };
rehh = derive { name="rehh"; version="1.13"; type="cran"; sha256="0hi9bfclai1b948yq9fp1q7rxb8nwvdm368l09la8ghlgxi5lnm8"; depends=[gplots ]; };
relSim = derive { name="relSim"; version="0.2-0"; type="cran"; sha256="0cqcp7r263sk874l17wz84mzm4b1dxbfbsk74937rcz1wfc623k5"; depends=[Rcpp Rcpp ]; };
rela = derive { name="rela"; version="4.1"; type="cran"; sha256="00ksm7zh1mpd2d5c5d823id3sxj0h3x0ccg6a40fadibvr1ay3ny"; depends=[ ]; };
relaimpo = derive { name="relaimpo"; version="2.2-2"; type="cran"; sha256="1rxjg2yw2gyshaij98w83cshxwscnq3ql7bg13n7v4nbjsi1l6zh"; depends=[MASS boot survey mitools corpcor ]; };
relations = derive { name="relations"; version="0.6-5"; type="cran"; sha256="00apza97y3v9q95if4fm5w5f7fw1i091pz4avqs1v59kysahdj9h"; depends=[cluster slam sets ]; };
relax = derive { name="relax"; version="1.3.15"; type="cran"; sha256="0cgvxw3pmy9kx8p81bb5n5nnbn6l9hm07k6hdy7p2j2gl15xxnpq"; depends=[ ]; };
relaxnet = derive { name="relaxnet"; version="0.3-2"; type="cran"; sha256="1l83rk7r4vkcxbfljmibzm8lzpx0vf406hv4h5cy9x0k3rz2bfh0"; depends=[glmnet ]; };
relaxo = derive { name="relaxo"; version="0.1-2"; type="cran"; sha256="1rzmq7q3j271s6qwwrmwidv0vxcjpgjhyiqgr6fkczkai2lbnd8x"; depends=[lars ]; };
reldist = derive { name="reldist"; version="1.6-4"; type="cran"; sha256="0v86wws29zy67jidrvfxkfwhpxppqrpq5h3b22cjif5qjqz3kk8f"; depends=[mgcv ]; };
relevent = derive { name="relevent"; version="1.0-4"; type="cran"; sha256="10bf1s7jmas8ck1izqibqcaqg4z55ciwdpd9pm2697y8z0jhr2rj"; depends=[trust sna coda ]; };
reliaR = derive { name="reliaR"; version="0.01"; type="cran"; sha256="000nafjp386nzd0n57hshmjzippiha6s6c4nfrcwl059dzmi088i"; depends=[ ]; };
relimp = derive { name="relimp"; version="1.0-4"; type="cran"; sha256="1i9j218b6lh6ag4a8x4vwhmqqclbzx46mpwd36s8hdqayzs6lmad"; depends=[ ]; };
relsurv = derive { name="relsurv"; version="2.0-4"; type="cran"; sha256="1da3sj7hks5azm18m23fh8r2g02p0nivgilayndxwwvd1i70ycrx"; depends=[survival date MASS ]; };
remMap = derive { name="remMap"; version="0.2-0"; type="cran"; sha256="1k2niiaq2lr4inrx443clff9cqqvyiiwd45k7yqjd8ixnbaa3mrk"; depends=[ ]; };
remix = derive { name="remix"; version="2.1"; type="cran"; sha256="0s1gaf7vj08xd4m7lc9qpwvk0mpamabbxk71970mfazx6hk24dr0"; depends=[plyr survival Hmisc ascii ]; };
remote = derive { name="remote"; version="0.3.0"; type="cran"; sha256="1f41j26grkv4830bvi6z16b63yksplrq3yg1amd4l634lwhp6x55"; depends=[Rcpp raster foreach Rcpp ]; };
rentrez = derive { name="rentrez"; version="0.4.1"; type="cran"; sha256="1prpzfq5106f0r5z4ffjvs9qkmfaf67icj8k1wngqwmvl2wg88gq"; depends=[XML httr jsonlite ]; };
repfdr = derive { name="repfdr"; version="1.1-3"; type="cran"; sha256="15f7x7vqwlpyzvzsybyz825a9dmglbrngjmajrsqlwffypgxjvi8"; depends=[ ]; };
replicatedpp2w = derive { name="replicatedpp2w"; version="0.1-1"; type="cran"; sha256="0q6mfrdjpx6nh4xgr5i7ka3xvnx9585xdhni020q4pm05rhimid2"; depends=[spatstat ]; };
replicationInterval = derive { name="replicationInterval"; version="0.3"; type="cran"; sha256="1zqs114514xj59dlkhw5kmq73grghmb3i5rnnq05qzgf5wjn581i"; depends=[MBESS ]; };
repmis = derive { name="repmis"; version="0.4.2"; type="cran"; sha256="1pjf010h4rkrwarq541wh8x1267894fsdg8na41z8cp3hr5aql21"; depends=[data_table digest httr plyr R_cache ]; };
repolr = derive { name="repolr"; version="2.0"; type="cran"; sha256="10wg07sfxcxzswf3zh5sx2cm9dxjx11zymy82a4q9awnacb5gp9b"; depends=[gee ]; };
reportRx = derive { name="reportRx"; version="1.0"; type="cran"; sha256="0npiflql0lq8sqp6xgydxbw7xdr0zdxj1s2h4bnpmn4clc05r7m4"; depends=[reshape survival xtable aod cmprsk geoR stringr ]; };
reportr = derive { name="reportr"; version="1.1.2"; type="cran"; sha256="0lxnmay9vgg7dsa3scszx3v4lb6m3bv6kjl0dk7hrl7bd67azdrk"; depends=[ ]; };
reports = derive { name="reports"; version="0.1.4"; type="cran"; sha256="0r74fjmdqax2x5fhbkdxb8gsvzi6v794fh81x4la9davz6w1fnxh"; depends=[ ]; };
reporttools = derive { name="reporttools"; version="1.1.1"; type="cran"; sha256="0cnxzq679f860z063j3pbm2c5qcaz45g73khj9rdp3if0cci8ikj"; depends=[xtable ]; };
repra = derive { name="repra"; version="0.4.2"; type="cran"; sha256="1djcs83z8ckpmsbyzscnysmy45z28kswzm852176b9pip21mb1w8"; depends=[data_table dplyr Rcpp reshape2 ggplot2 assertthat Rcpp ]; };
represent = derive { name="represent"; version="1.0"; type="cran"; sha256="0jvb40i6r1bh9ysfqwsj7s1g933d7z5fq9d618yjrqr6hbbqsvac"; depends=[ ]; };
reproducer = derive { name="reproducer"; version="0.1.3"; type="cran"; sha256="1pz2l123xc16m1pqi95khg9r267s25igcyjgr7hn9gy623cqgzah"; depends=[openxlsx ggplot2 gridExtra tm wordcloud RColorBrewer xtable metafor ]; };
rerddap = derive { name="rerddap"; version="0.1.0"; type="cran"; sha256="1a58vsm1m9ybafda6pak0fa7kdfscslq9855a5r2x12bzqy98k4f"; depends=[httr dplyr data_table jsonlite xml2 digest ncdf ]; };
resample = derive { name="resample"; version="0.4"; type="cran"; sha256="1rckzm2p0rkf42isc47x72j17xqrg8b7jpc440kn24mqw4szgmgh"; depends=[ ]; };
resemble = derive { name="resemble"; version="1.1.1"; type="cran"; sha256="0mz5mxm6p1drfx2s9dx35m2bnvirr8lkjjh5b4vdk9p2cdv1qkkv"; depends=[RcppArmadillo foreach iterators pls Rcpp Rcpp RcppArmadillo ]; };
reshape = derive { name="reshape"; version="0.8.5"; type="cran"; sha256="08jm9fb02g1fp9vmiqmc0yki6n3rnnp2ph1rk8n9lb5c1s390f4k"; depends=[plyr ]; };
reshape2 = derive { name="reshape2"; version="1.4.1"; type="cran"; sha256="0hl082dyk3pk07nqprpn5dvnrkqhnf6zjnjig1ijddxhlmsrzm7v"; depends=[plyr stringr Rcpp Rcpp ]; };
reshapeGUI = derive { name="reshapeGUI"; version="0.1.0"; type="cran"; sha256="0kb57isws8gw0nlr6v9lg06c8000hqw0fvhfjsjyf8w6zwbbq3zs"; depends=[reshape2 plyr gWidgets gWidgetsRGtk2 ]; };
restlos = derive { name="restlos"; version="0.1-3"; type="cran"; sha256="03bsakp9kd8i468wz7xhdjqb6ck6p9wci3gk2b2bykv73c0g6n95"; depends=[som rgl geometry igraph ]; };
restorepoint = derive { name="restorepoint"; version="0.1.5"; type="cran"; sha256="0xmpxprirnd1yavwk3vkc0cp715d187mn0amppya7kd47iw10wsy"; depends=[ ]; };
retimes = derive { name="retimes"; version="0.1-2"; type="cran"; sha256="019sllyfahlqnqry2gqw4w5cy4cavrqnwpwrbb25cgjpdb19raja"; depends=[ ]; };
retistruct = derive { name="retistruct"; version="0.5.10"; type="cran"; sha256="1wg2a906y09hcqba42hh9r2x59w35dms2aa5mw44avigc1nwm0s2"; depends=[foreign RImageJROI png ttutils sp geometry RTriangle rgl R_matlab ]; };
retrosheet = derive { name="retrosheet"; version="1.0.2"; type="cran"; sha256="079rfc55sy315i7zhv1a8r6drgpiglbf3b4gwyria2mfbn94a5qb"; depends=[RCurl XML data_table stringi ]; };
reutils = derive { name="reutils"; version="0.1.2"; type="cran"; sha256="0f2c6zxk6x2plq649b1ml6b112j6y8ys074pn30yw35ncg3h86fa"; depends=[assertthat RCurl XML ]; };
revealedPrefs = derive { name="revealedPrefs"; version="0.2"; type="cran"; sha256="1f871y4wkjznzgwxfbnmrfiafq43cyf0i5hjy68ybxc7bbvfryxc"; depends=[Rcpp Rcpp RcppArmadillo ]; };
reweight = derive { name="reweight"; version="1.2.1"; type="cran"; sha256="0fv7q1zb3f4vplg3b5ykb1ydwbzmiajgd1ihrxl732ll8rkkfa4v"; depends=[ ]; };
rex = derive { name="rex"; version="1.0.1"; type="cran"; sha256="1k1s5rx3lpyh6apakaf4mw94y72zkxf14c2kj0d9njhf5j6g1sdj"; depends=[magrittr lazyeval ]; };
rexpokit = derive { name="rexpokit"; version="0.24.1"; type="cran"; sha256="143zi6qb0l8vbx87jf58v1zfxqmvv6x4im1knd6q4dpp9gffqs22"; depends=[SparseM Rcpp Rcpp ]; };
rfPermute = derive { name="rfPermute"; version="1.6.2"; type="cran"; sha256="069dhv41bwyp2nywkrr2hihyz8zialhxlyzpfpq4r9lyjnamg2k9"; depends=[ggplot2 randomForest gridExtra ]; };
rfPred = derive { name="rfPred"; version="1.4.0"; type="bioc"; sha256="0r55i8sdy0zjv1lf8wyafysgvh8krsghhbc1h2nblfab8875v4z7"; depends=[Rsamtools GenomicRanges IRanges data_table ]; };
rfUtilities = derive { name="rfUtilities"; version="1.0-1"; type="cran"; sha256="0y0jn4c5dpr9drjyjg2vsgsb37s0l284hvh35zm53hs8f881ycx3"; depends=[randomForest ]; };
rfigshare = derive { name="rfigshare"; version="0.3.6"; type="cran"; sha256="1n6i5ppn3v93126gvva8sn85v1h4f7hgc43pxja9bwr1ypmzgr45"; depends=[RJSONIO httr httpuv plyr yaml ggplot2 XML ]; };
rfishbase = derive { name="rfishbase"; version="0.2-2"; type="cran"; sha256="09pa5zpw9rclf5pqj1wjjhdcblca9sm9xcs9ka3xfa7azj7n9ljd"; depends=[XML RCurl ]; };
rfisheries = derive { name="rfisheries"; version="0.1"; type="cran"; sha256="1g0h3icj7cikfkh76yff84hil23rfshlnnqmgvnfbhykyr2zmk61"; depends=[httr data_table assertthat ggplot2 rjson ]; };
rfoaas = derive { name="rfoaas"; version="0.1.3"; type="cran"; sha256="0wdb645fx2wsy4vwz43d8ynwx3divpjwbkql52zkikyr8zv21gz5"; depends=[httr ]; };
rfordummies = derive { name="rfordummies"; version="0.1.1"; type="cran"; sha256="0k725wgba9132cfbm0ppgy476iyh9gcn6bdh9gjqab5sj3jb0iva"; depends=[ ]; };
rforensicbatwing = derive { name="rforensicbatwing"; version="1.3"; type="cran"; sha256="0ff4v7px4wm5rd4f4z8s4arh48hgayqjfpnni2997c92wlsq3d12"; depends=[Rcpp Rcpp ]; };
rgabriel = derive { name="rgabriel"; version="0.7"; type="cran"; sha256="1c6awfppm1gqg7rm3551k6wyhqvjpyidqikjisg2p2kkhmyfkyzx"; depends=[ ]; };
rgam = derive { name="rgam"; version="0.6.3"; type="cran"; sha256="0mbyyhhyr7ijv2sq9n7g0vaxivngwf4nbb5398xpsh7fxvgw5zdw"; depends=[Rcpp Rcpp RcppArmadillo ]; };
rgauges = derive { name="rgauges"; version="0.2.0"; type="cran"; sha256="0p42hh32wcjcchsalpsan52kvz6nd1gw28xnydqgfzkzcqkl22dd"; depends=[ggplot2 lubridate plyr httr reshape2 gridExtra scales data_table ]; };
rgbif = derive { name="rgbif"; version="0.8.0"; type="cran"; sha256="1sdjlymymfc5chnrc5if0fvf64mjz6sc4071xsw2ja7zcdasxb40"; depends=[XML plyr ggplot2 maps httr rgeos sp data_table stringr whisker magrittr jsonlite ]; };
rgcvpack = derive { name="rgcvpack"; version="0.1-4"; type="cran"; sha256="1vlvw9slrra18qaizqk2xglzky0i6z3bsan85x908wrg8drss4h5"; depends=[ ]; };
rgdal = derive { name="rgdal"; version="0.9-3"; type="cran"; sha256="011vw2pgaxgbba0a0c5ha2n0haljbn00z5km13fhgqlvhhdhzd6n"; depends=[sp sp ]; };
rgenoud = derive { name="rgenoud"; version="5.7-12"; type="cran"; sha256="17gzkn4laylnksy8h2w8c0whcxpchsx7bwjzk1q5sfqxswclqq0g"; depends=[ ]; };
rgeos = derive { name="rgeos"; version="0.3-8"; type="cran"; sha256="0snbfxzh700fn415li0wia94zgb0x73vwdrbrpimvz9k3y43yvp8"; depends=[sp sp ]; };
rgexf = derive { name="rgexf"; version="0.15.3"; type="cran"; sha256="0iw1vk32ad623aasf6f8hl0qkj59f1dsc2riwqc775zvs5w7k2if"; depends=[XML Rook igraph ]; };
rggobi = derive { name="rggobi"; version="2.1.20"; type="cran"; sha256="1a7l68h3m9cq14k7y96ijgh0iz3d6j4j2anxg50pykz20lnykr9g"; depends=[RGtk2 ]; };
rgl = derive { name="rgl"; version="0.95.1247"; type="cran"; sha256="1zmb09lljng1dmwd23w5ld8z9wr0xd0s365vz54il0ndwrqfhsi1"; depends=[ ]; };
rglobi = derive { name="rglobi"; version="0.2.8"; type="cran"; sha256="1033cmwairf4nm9r6nvi1ddgq0j9mzchlzvj1hph0vlcbb53ybqh"; depends=[rjson RCurl ]; };
rgp = derive { name="rgp"; version="0.4-1"; type="cran"; sha256="1p5qa46v0sli7ccyp39iysn04yvq80dy2w1hk4c80pfwrxc6n03g"; depends=[emoa ]; };
rgpui = derive { name="rgpui"; version="0.1-2"; type="cran"; sha256="0sh5wj4f2wj6g3r7xaq95q89n0qjavchi5kfi6sj1j34ykybbs3g"; depends=[rgp shiny emoa ]; };
rgr = derive { name="rgr"; version="1.1.11"; type="cran"; sha256="01hlj3nqzfsffr4k7d3iyp4mfqs1sy94d0scy64wh9kkplrzkh4i"; depends=[MASS fastICA ]; };
rgrass7 = derive { name="rgrass7"; version="0.1-0"; type="cran"; sha256="19fwf3gaq25x3imj9kc1112cf9dhafp0d1gjly2xh2gz1kam5wl6"; depends=[sp XML ]; };
rhdf5 = derive { name="rhdf5"; version="2.10.0"; type="bioc"; sha256="1lb0wni0l2k18p6n88chdgm132xv4ff0p5ah95z08k3vajgm4afp"; depends=[zlibbioc ]; };
rhosp = derive { name="rhosp"; version="1.06"; type="cran"; sha256="0kii29w292kffxablqnmgvl127jwsriz0p5y5d1xd6n8yzji79j3"; depends=[ ]; };
ri = derive { name="ri"; version="0.9"; type="cran"; sha256="00y01n9cx95bjhdpnh7vi0xd5p6al3sxbjszbyxafn7m9mygmnhv"; depends=[ ]; };
riboSeqR = derive { name="riboSeqR"; version="1.0.5"; type="bioc"; sha256="19i703ykbm0f9rfc08nrzf6b9d3nin4illf35kljf0nlmmpj68f7"; depends=[GenomicRanges abind ]; };
rich = derive { name="rich"; version="0.3"; type="cran"; sha256="122xb729xlm8gyb7b3glw4sdvrh98wh89528kcbibpx83bp3frc0"; depends=[boot vegan permute ]; };
ridge = derive { name="ridge"; version="2.1-3"; type="cran"; sha256="1i5klabnv328kgy7p11nwdid2x7hzl1j80yqqshbraladszyfpwk"; depends=[ ]; };
rinat = derive { name="rinat"; version="0.1.4"; type="cran"; sha256="1m5k1wcinm6is3mf86314scgy3xfifz7ly7il5zgqyg9jkkpywbz"; depends=[httr plyr jsonlite ggplot2 maps ]; };
rindex = derive { name="rindex"; version="0.12"; type="cran"; sha256="1k9zihvrp955c4lh70zjlsssviy2app8w6mv5ln4nawackbz0six"; depends=[regtest ]; };
ringbuffer = derive { name="ringbuffer"; version="1.1"; type="cran"; sha256="1jj6zdvqlkc30bnxapg0sjl5ci5kq76611smqc4jc8adzhzwrh3f"; depends=[ ]; };
ringscale = derive { name="ringscale"; version="0.1.2"; type="cran"; sha256="1gnnapkvxmkfws8dw41gj9h3svy3h6mi4zv413aykg9vrmy7d3rp"; depends=[FITSio ]; };
rio = derive { name="rio"; version="0.2"; type="cran"; sha256="0v64zkxcs2bajdh9hqlhacc6msy7l3h31cvcxpj6in5hb3m1wfv3"; depends=[foreign haven openxlsx readODS jsonlite XML curl data_table readxl ]; };
rioja = derive { name="rioja"; version="0.9-5"; type="cran"; sha256="0bi80d8ffn1kgs0b45ia8rj057id8l3mnph16y5wc5nr8fndxrm4"; depends=[vegan mgcv lattice gdata ]; };
ripa = derive { name="ripa"; version="2.0-2"; type="cran"; sha256="0n1gaga0d4bb9qdlm7gksa1nwi4y28kbgwr3icwqgihf1bfb9m81"; depends=[Rcpp Rcpp ]; };
riskRegression = derive { name="riskRegression"; version="1.1.1"; type="cran"; sha256="1qjy2wmbfalbxszjfplisqrdca0n0yccr0wvdf1kbzxblba82mx6"; depends=[prodlim rms pec cmprsk survival randomForestSRC ]; };
riskSimul = derive { name="riskSimul"; version="0.1"; type="cran"; sha256="0s2a1mn6g11m96gqscb916caj2aykcs3rkacpqcdnlyzryk1gsnb"; depends=[Runuran ]; };
risksetROC = derive { name="risksetROC"; version="1.0.4"; type="cran"; sha256="1fh0jf8v536qzf1v3awx3f73wykzicli4r54yg1z926ccqb4h80l"; depends=[survival MASS ]; };
rite = derive { name="rite"; version="0.3.4"; type="cran"; sha256="196ashcfj5p52qpnpnrkg7vxq87v7vhf1d7z40mk134gmxk2784j"; depends=[tcltk2 RCurl knitr markdown ]; };
riv = derive { name="riv"; version="2.0-4"; type="cran"; sha256="1c9k62plqgxcgcm2j1s26hqvgww96n6bfjz2yk7m3p2wf8gkkyam"; depends=[MASS rrcov quantreg ]; };
rivernet = derive { name="rivernet"; version="1.0"; type="cran"; sha256="0za5k00k9vivpq4wr1xqc4aw7mlcxhjj2b3iiip1qy13fg7bhbjm"; depends=[ ]; };
riverplot = derive { name="riverplot"; version="0.3"; type="cran"; sha256="1x02ci6744k3lsqh53vmpmv957b5wwr1idvn16nzixvzknixryq8"; depends=[ ]; };
rivervis = derive { name="rivervis"; version="0.46.0"; type="cran"; sha256="19jsl5g46jcbc0kg47bsif1wrw9z9brgvwdcxqjc89shnx3hzzfv"; depends=[ ]; };
rivr = derive { name="rivr"; version="0.9.2"; type="cran"; sha256="1xz7l7j8adhlzdasx9ljrh8z6cx017pl6761z8q4ixpcgr3vf5ws"; depends=[Rcpp reshape2 Rcpp ]; };
rjade = derive { name="rjade"; version="0.1"; type="cran"; sha256="0f1jljj6m1almz0na984n0g314y0rl6a0mx04rbrpipgfgz1h37c"; depends=[V8 ]; };
rjags = derive { name="rjags"; version="3-15"; type="cran"; sha256="02nmaqv0xddh7bgrlwrr30gb10mcz2f5lilbyzfw6wpjgi2aihx5"; depends=[coda ]; };
rje = derive { name="rje"; version="1.9"; type="cran"; sha256="1dyd34z6lb0p6zmyax5dpzflgc9a4saka33mvdfcxi5pj0rnygaz"; depends=[ ]; };
rjson = derive { name="rjson"; version="0.2.15"; type="cran"; sha256="1vzjyvf57k1fjizlk28rby65y5lsww5qnfvgnhln74qwda7hvl3p"; depends=[ ]; };
rjstat = derive { name="rjstat"; version="0.2"; type="cran"; sha256="1ylwp6d3cc8xb8129yr49grx9vb4xyp62ig0qa7vzkbdplba2zr2"; depends=[jsonlite assertthat ]; };
rkafka = derive { name="rkafka"; version="1.0"; type="cran"; sha256="02h3nlffgd48xm38i2arlrgbilraf6r7k65s35906v33i0kjzrgg"; depends=[rJava RUnit rkafkajars ]; };
rkafkajars = derive { name="rkafkajars"; version="1.0"; type="cran"; sha256="0ss9gjjq92hba6nkhnda0pbm3a5bqm00hy0zbj4kivg5dlsf30q0"; depends=[rJava RUnit ]; };
rkt = derive { name="rkt"; version="1.4"; type="cran"; sha256="01c8fwnml1n0sw5lw9p2nz15i1zhxirr0kh39qvjmdiw97c1v1yq"; depends=[ ]; };
rkvo = derive { name="rkvo"; version="0.1"; type="cran"; sha256="0ci8jqf9nc8hb063nckxdnp0nlyr4ghby356lxm00anw44jlmw8v"; depends=[Rcpp Rcpp ]; };
rlecuyer = derive { name="rlecuyer"; version="0.3-3"; type="cran"; sha256="1n0vny3k5s5152y0ggz9vfn4bqay9ncbdzkw9g4703pszrbwq7xh"; depends=[ ]; };
rlist = derive { name="rlist"; version="0.4"; type="cran"; sha256="00h00jka64m7skrjp1454805fhr3q1k9sqih4pnvbb0maxlzgn7g"; depends=[yaml jsonlite ]; };
rlm = derive { name="rlm"; version="1.1"; type="cran"; sha256="147hn780hjbp8ly3mc5q05g36b080ndq0z0r0vq75c2qfkhybvdc"; depends=[ ]; };
rlme = derive { name="rlme"; version="0.4"; type="cran"; sha256="02683sklihj3726a90jryybf855rvbz9v3dm9z9yhb32q9bfmy34"; depends=[MASS quantreg nlme mgcv stringr magic robustbase Rcpp Rcpp ]; };
rmaf = derive { name="rmaf"; version="3.0.1"; type="cran"; sha256="0w247mamwgibr5576p5c2lzaiz2lv2c25n7gw9q99s7rc4bps7j7"; depends=[ ]; };
rmarkdown = derive { name="rmarkdown"; version="0.6.1"; type="cran"; sha256="1j6hz7ybyvqzd5zdshb9z1v5y5gfgdlcvzacx06c5kgf8h6i0k3h"; depends=[knitr yaml htmltools caTools ]; };
rmatio = derive { name="rmatio"; version="0.11.0"; type="cran"; sha256="0cmlh16nf3r94gpczq0j46g4dgjy9q1c647rqd9i14hvfrpxzcfa"; depends=[Matrix lattice ]; };
rmeta = derive { name="rmeta"; version="2.16"; type="cran"; sha256="1s3n185kk0ddv8v6c7mbc7cpj6yg532r7is6pjf9vda7317rxywy"; depends=[ ]; };
rmetasim = derive { name="rmetasim"; version="2.0.4"; type="cran"; sha256="1a3bhiybzdvgqnnyh3d31d6vdsp4mi33sv8ks9b9xd9r369npk86"; depends=[ape ade4 gtools ]; };
rmgarch = derive { name="rmgarch"; version="1.2-8"; type="cran"; sha256="19q35kzyzzs19b4xgslrnl8ihlx1wlmrwfdimnq8racfx0y46lm5"; depends=[rugarch Rsolnp MASS Matrix zoo xts Bessel ff shape pcaPP spd Rcpp Rcpp RcppArmadillo ]; };
rminer = derive { name="rminer"; version="1.4"; type="cran"; sha256="07s971fpl16l4ryrbb24zwy1xx6dwia1ms4hrcpnpz3kb8f6ydda"; depends=[kknn plotrix lattice nnet pls MASS mda rpart randomForest adabag party Cubist kernlab e1071 ]; };
rmngb = derive { name="rmngb"; version="0.6-1"; type="cran"; sha256="1wyq8jvzqpy1s6w0j77ngh5x2q7mpj0ib01m8mla20w6yr6xbqjk"; depends=[Hmisc ]; };
rmongodb = derive { name="rmongodb"; version="1.8.0"; type="cran"; sha256="035a76ak6wi21hdvgzzbggz0qnb53rrr2wfx97ngc8ijwhw8hjh7"; depends=[jsonlite plyr ]; };
rmp = derive { name="rmp"; version="1.0"; type="cran"; sha256="1g0785fwjbwbj82sir3n7sg3idsjzdhrpxc7z88339cv9g4rl7ry"; depends=[ ]; };
rms = derive { name="rms"; version="4.3-1"; type="cran"; sha256="07198lzk3yzl9vnqcfxqgp5kpb50s1ydg33m883rcr3a5pd9m094"; depends=[Hmisc survival lattice ggplot2 SparseM quantreg nlme rpart polspline multcomp ]; };
rms_gof = derive { name="rms.gof"; version="1.0"; type="cran"; sha256="1n0h3nrp11f2x70mfjxpk2f3g4vwjaf4476pjjwy49smxxlxwz82"; depends=[ ]; };
rnaSeqMap = derive { name="rnaSeqMap"; version="2.24.0"; type="bioc"; sha256="06q1a6zyxzarimwyiq4bszs5s0s921i0d3d59hifgkvarlqf0ki9"; depends=[Biobase Rsamtools GenomicAlignments GenomicRanges IRanges edgeR DESeq DBI ]; };
rnaseqWrapper = derive { name="rnaseqWrapper"; version="1.0-1"; type="cran"; sha256="1fa3hmwrpccf09dlpginl31lcxpj5ypxspa0mlraynlfl5jrivch"; depends=[ecodist gplots gtools ]; };
rnbn = derive { name="rnbn"; version="1.0.3"; type="cran"; sha256="05amrx12b7p4pca1wbysn1n2rxbg5r54mpmga4i3xlpijx9baj80"; depends=[httr ]; };
rncl = derive { name="rncl"; version="0.2.2"; type="cran"; sha256="1l9g7mylj4ip15x4985i27n42fhi9vyi1ii23dc9k27s84b274y7"; depends=[Rcpp ape Rcpp ]; };
rneos = derive { name="rneos"; version="0.2-8"; type="cran"; sha256="0cg88l1irqkx7d72sa5bfqcn5fb5rapvimi1gw15klci39w0s43q"; depends=[RCurl XML ]; };
rngSetSeed = derive { name="rngSetSeed"; version="0.3-2"; type="cran"; sha256="00mqjjkhbnvxqkf1kz16gipsf98q62vmhx9v8140qs7c4ljbhc3a"; depends=[ ]; };
rngWELL = derive { name="rngWELL"; version="0.10-3"; type="cran"; sha256="1wijscc0s6h1ipc1r8h179y94s1bzf409xlpiyr1njaxvvvpwvw1"; depends=[ ]; };
rngtools = derive { name="rngtools"; version="1.2.4"; type="cran"; sha256="1fcgfqrrb48z37xgy8sffx91p9irp39yqzxv7nqp1x2hnwsrh097"; depends=[pkgmaker stringr digest ]; };
rngwell19937 = derive { name="rngwell19937"; version="0.6-0"; type="cran"; sha256="0m6icqf7nckdxxvmqvwfkrpjs10hc7l8xisc65q8iqpnpwl5p2f6"; depends=[ ]; };
rnoaa = derive { name="rnoaa"; version="0.3.3"; type="cran"; sha256="12iwyl0nr6d8xpl5vcqwli4rlh79y8l13sfj34457klqdzmrg126"; depends=[httr lubridate plyr ggplot2 scales sp RCurl rgdal rgeos maptools stringr XML data_table jsonlite digest ]; };
rnrfa = derive { name="rnrfa"; version="0.1.5"; type="cran"; sha256="0lpa0gmf9j9adq0p41jgayzcwg6220bihnsfqj55d217mfalbhnd"; depends=[XML2R RCurl zoo rjson rgdal sp stringr ]; };
roar = derive { name="roar"; version="1.2.0"; type="bioc"; sha256="0xq8pjjzvcwl1wh91kla7rws1bx7gc1v246al4piymmjisivz3wq"; depends=[GenomicRanges GenomicAlignments rtracklayer S4Vectors ]; };
robCompositions = derive { name="robCompositions"; version="1.9.1"; type="cran"; sha256="1n8mbm62ywp1wnccv85ydm91bzp05i4fjvyriid8751pcb4zndn9"; depends=[robustbase rrcov GGally MASS pls sROC ]; };
robcor = derive { name="robcor"; version="0.1-6"; type="cran"; sha256="1hw8simv93jq8a5y79hblhqz157wr8q9dzgm0xhvvv5nkzyqkpzf"; depends=[ ]; };
robeth = derive { name="robeth"; version="2.7"; type="cran"; sha256="03pnwd3xjb9yv8jfav0s4l9k5pgpampp15ak7z0yvkjs20rvfq3d"; depends=[ ]; };
robfilter = derive { name="robfilter"; version="4.1"; type="cran"; sha256="161rsqyy2gq1n6ysz0l4d4gqvxhs72hznc2d5hljxdaz3sbdzzig"; depends=[robustbase MASS lattice ]; };
robumeta = derive { name="robumeta"; version="1.6"; type="cran"; sha256="13hwbl4pym3pkxxfbffhv22nn3f4spc6lb4gz1wxi9iha1s9ywi5"; depends=[ ]; };
robust = derive { name="robust"; version="0.4-16"; type="cran"; sha256="0psai9d6w7yi0wfm57cc7b2jd5i7wbk2xagrhnvhxknw0dwzf2jh"; depends=[fit_models MASS lattice robustbase rrcov ]; };
robustDA = derive { name="robustDA"; version="1.1"; type="cran"; sha256="1yys6adkyms5r4sw887y78gnh97qqr7sbi5lxv5l9bnc4ggcfiz6"; depends=[MASS mclust Rsolnp ]; };
robustHD = derive { name="robustHD"; version="0.5.0"; type="cran"; sha256="14ql2k5880lbwkv1acydrli6jyh6dls32jjhimbz82zzkzfk2cxr"; depends=[ggplot2 perry robustbase MASS Rcpp RcppArmadillo ]; };
robustX = derive { name="robustX"; version="1.1-4"; type="cran"; sha256="1s2aav2jr22dgrl7xzk09yn9909k76kpiz271w5r1id6hpfprjwc"; depends=[robustbase ]; };
robustbase = derive { name="robustbase"; version="0.92-3"; type="cran"; sha256="0b7rld5pa9nrnqj7600ybvzy74lxz6s41dibamwdssh36mx6ayvb"; depends=[DEoptimR ]; };
robustfa = derive { name="robustfa"; version="1.0-5"; type="cran"; sha256="04nk5ipml54snsmiqf5sbhx490i46gnhs7yibf4wscrsj1bh2mqy"; depends=[rrcov ]; };
robustgam = derive { name="robustgam"; version="0.1.7"; type="cran"; sha256="0s1z7jylj757g91najbyi1aiqnssd207jfm9yhias746540qp3kw"; depends=[Rcpp RcppArmadillo mgcv robustbase Rcpp RcppArmadillo ]; };
robustlmm = derive { name="robustlmm"; version="1.6"; type="cran"; sha256="18lhbnmcd6nc0qr23a19mhw9k9r30li6z92g600dil6ll8s5m54z"; depends=[lme4 Matrix ggplot2 lattice nlme robustbase xtable ]; };
robustloggamma = derive { name="robustloggamma"; version="0.4-31"; type="cran"; sha256="19ycdvpzns46gjnkddwznnszs0941blpss7l0cqligv91cz7bkjc"; depends=[robustbase ]; };
robustreg = derive { name="robustreg"; version="0.1-7"; type="cran"; sha256="1nrz10065mwccil78c74vmkhinskpnk1vyp1ikrdw23vyk2l00nc"; depends=[Rcpp Matrix Rcpp RcppArmadillo ]; };
robustvarComp = derive { name="robustvarComp"; version="0.1-2"; type="cran"; sha256="187mcpih509hx15wjjr7z2h6h76mz2v0d8xgsxjd8wz7l3dnlp2f"; depends=[robustbase GSE numDeriv robust plyr ]; };
rocc = derive { name="rocc"; version="1.2"; type="cran"; sha256="00yxbbphhwkg4sj2h7pd9vw86yavl711nk8yylwmjd3qv39qjml0"; depends=[ROCR ]; };
rockchalk = derive { name="rockchalk"; version="1.8.92"; type="cran"; sha256="1mi1w8323m4q0s17cnafnlswgnlxqb5c9nq3rv8fq77k7klmq5rz"; depends=[lme4 car MASS tables ]; };
rococo = derive { name="rococo"; version="1.1.2"; type="cran"; sha256="08204y3g3xd2srpcpnbkq1laqfr3wrhy73whlxf83gffw8j0iyv8"; depends=[Rcpp Rcpp ]; };
rodd = derive { name="rodd"; version="0.1-1"; type="cran"; sha256="0x7w7v04nqb1gl4h32a674gwc68h6p9pff2piisyd74cgx90sm1b"; depends=[numDeriv quadprog Matrix rootSolve matrixcalc ]; };
rols = derive { name="rols"; version="1.8.0"; type="bioc"; sha256="10p8lcifff39cmnx34hmhfs11yi4jd8xp0h0blhwhv4dmnp5bn9j"; depends=[XML Biobase ]; };
rootSolve = derive { name="rootSolve"; version="1.6.5.1"; type="cran"; sha256="02ydj4ydgljs80nrrrxb4dhfa7m12rw65xy79d7g71w97326w8p2"; depends=[ ]; };
ropensecretsapi = derive { name="ropensecretsapi"; version="1.0.1"; type="cran"; sha256="0d4yl0h4am3blskdnzk119hk374c3vx0cg99r20w07yh8jfafrw7"; depends=[RJSONIO RCurl ]; };
ror = derive { name="ror"; version="1.2"; type="cran"; sha256="0n8mk35rm3rp0c7a3i961kij21a177znh9hkq4snqqlw9vf50hdg"; depends=[rJava ROI ROI_plugin_glpk igraph ]; };
rorutadis = derive { name="rorutadis"; version="0.1.3"; type="cran"; sha256="0ik0dpmsyb4g9wl1fb7mm0dry9s26nfvv1v91cslss82phhf16wd"; depends=[Rglpk ggplot2 gridExtra ]; };
rotationForest = derive { name="rotationForest"; version="0.1"; type="cran"; sha256="07my0i84jvmjxvg2ifvsrbc0r5z4s32xi0vfdwrkhhdzdn87h527"; depends=[rpart ]; };
rotations = derive { name="rotations"; version="1.3"; type="cran"; sha256="01qqiqlp370llk8w9g0nip08cd54rj9dsvf0qxznalyb7vpnvgxf"; depends=[ggplot2 Rcpp rgl sphereplot Rcpp RcppArmadillo ]; };
roughrf = derive { name="roughrf"; version="1.0"; type="cran"; sha256="0nwdynqfb9yzjvi1lykgdkch3b4g09aj8vbd6sf5pyx473s066y4"; depends=[randomForest mice nnet ]; };
rowr = derive { name="rowr"; version="1.1.2"; type="cran"; sha256="1hvj17n3fy1jaaz551s1icjv1kgr2s22xvg4fllzs8hpgdsybp1j"; depends=[ ]; };
roxygen2 = derive { name="roxygen2"; version="4.1.1"; type="cran"; sha256="0qr562p3jb9kqim6mj344956pikmq1137gv1p086b4k90h5c3wyd"; depends=[stringr brew digest Rcpp Rcpp ]; };
royston = derive { name="royston"; version="1.2"; type="cran"; sha256="1rywc89qzx0hldbq10201bjdhz60pq2gmgd9b9j52mza3w4canjz"; depends=[nortest moments ]; };
rpanel = derive { name="rpanel"; version="1.1-3"; type="cran"; sha256="1wm0dcbyvxz4ily8skz2yda44n74x2nmc4pg11ja0yvk038gjfns"; depends=[ ]; };
rpart = derive { name="rpart"; version="4.1-9"; type="cran"; sha256="108zsalgmp4mj66m2mxr56qrh3yz0pxfij81gri224r5brypqak1"; depends=[ ]; };
rpart_plot = derive { name="rpart.plot"; version="1.5.2"; type="cran"; sha256="0aw0bhd0bliih7fsvnfkdkxq65v3v3fl88irp8vxrdblqgjyc09x"; depends=[rpart ]; };
rpart_utils = derive { name="rpart.utils"; version="0.5"; type="cran"; sha256="00ahvmly6cdf7qhhcic0dbjlljqq8kbhx15rc7vrkd3hzd55c0im"; depends=[rpart ]; };
rpartScore = derive { name="rpartScore"; version="1.0-1"; type="cran"; sha256="15zamlzbf6avir8zfw88531zg5c0a6sc5r9v5cy9h08ypf34xf4y"; depends=[rpart ]; };
rpartitions = derive { name="rpartitions"; version="0.1"; type="cran"; sha256="1gklsi4pqhk16xp9s49n1lr9ldm1vx61pvphjqsqkzrlxwcpx3j8"; depends=[hash ]; };
rpf = derive { name="rpf"; version="0.44"; type="cran"; sha256="1q68lb7cw4p31mrjwxyn2bkpclmgfcnln8z0brs9pkkh70j0vii8"; depends=[mvtnorm RcppEigen ]; };
rpg = derive { name="rpg"; version="1.4"; type="cran"; sha256="0sisn5l1qxlqg6jq4lzr7w3axkaw5jlpz8vl9gp2hs0spxsjhcyn"; depends=[Rcpp uuid RApiSerialize Rcpp RApiSerialize ]; };
rphast = derive { name="rphast"; version="1.6"; type="cran"; sha256="0ni8969bj3pv0wl8l0v352pqw2d5mlshsdw1rb6wlxk7qzfi5cl2"; depends=[ ]; };
rplexos = derive { name="rplexos"; version="1.0"; type="cran"; sha256="129izg9ipn2pfm4yq0lg597nn9rcxr8m9yslmra85jmzbisc1vfw"; depends=[Rcpp dplyr RSQLite DBI data_table lubridate reshape2 stringi assertthat doParallel foreach Rcpp ]; };
rplos = derive { name="rplos"; version="0.4.7"; type="cran"; sha256="0d6p6cgjmfv615mpvp6vxm92gxfdi6fn4mp0ixhj2gkm1hmpwwc5"; depends=[ggplot2 httr jsonlite XML dplyr plyr lubridate reshape2 whisker solr ]; };
rplotengine = derive { name="rplotengine"; version="1.0-5"; type="cran"; sha256="1wwpfnr5vi8z26alm8y5gply0y4iniagimldzy2z696djzz8p8p8"; depends=[xtable ]; };
rportfolios = derive { name="rportfolios"; version="1.0"; type="cran"; sha256="1zcv5ddmk15l0p03nlffimlhhpcc7l1c05xl2d1xlfk58rkvqns6"; depends=[ ]; };
rprintf = derive { name="rprintf"; version="0.1-2"; type="cran"; sha256="1jsn6i3ikcdbrg8g89hmb1ky3a84fykx5gpnbswplhidh2qhb9jz"; depends=[stringr ]; };
rpsychi = derive { name="rpsychi"; version="0.8"; type="cran"; sha256="1h40kbqvvwwjkz5hrclj6j22zhav3yyfbbhqahs1whwjkksnam4w"; depends=[gtools ]; };
rpubchem = derive { name="rpubchem"; version="1.5.0.2"; type="cran"; sha256="0lvi7m8jb2izsfia3c0qigsd1k1x9r02gymlwfg29pb8k10lwcjf"; depends=[XML car RCurl RJSONIO ]; };
rpud = derive { name="rpud"; version="0.0.2"; type="cran"; sha256="03xddc6kh39wlcv8dvpnv4h0f5qx5cv327xip26zk7gg7pgrn05x"; depends=[ ]; };
rpx = derive { name="rpx"; version="1.2.0"; type="bioc"; sha256="1cq569spv8k54xpl6kh2lw8xvs4kj25vgq8nvj9akisipbnf1n8f"; depends=[XML RCurl ]; };
rqPen = derive { name="rqPen"; version="1.1"; type="cran"; sha256="0da6pbzx2my052v8s9nyw0j5ljy4pfigyy82n72zp0jzhdzmq479"; depends=[quantreg ]; };
rqubic = derive { name="rqubic"; version="1.12.0"; type="bioc"; sha256="0l90rzajw966k96c5azzi4p5b0dnc5ydjf2bvfjbnfs21kgcqkqg"; depends=[Biobase biclust ]; };
rr = derive { name="rr"; version="1.3"; type="cran"; sha256="00m5h01j3qb83s7bcjp4xx6pf16hjjhl0qryb929cnxn1ln0ddns"; depends=[MASS arm coda ]; };
rrBLUP = derive { name="rrBLUP"; version="4.3"; type="cran"; sha256="0wydh4sx7b6rcrgb3qvqh0z46pixx63711q2nf8s3c32090a5g81"; depends=[ ]; };
rrBlupMethod6 = derive { name="rrBlupMethod6"; version="1.3"; type="cran"; sha256="1qwv954mhry46ff2ax48xcmnasygi5alv8d413g3qbk2da6i0d8l"; depends=[ ]; };
rrcov = derive { name="rrcov"; version="1.3-8"; type="cran"; sha256="0f71khnsvd95yh6y1hnl62vqjp1z3wg74g8jvg2q28v1ysk68p1b"; depends=[robustbase mvtnorm lattice cluster pcaPP ]; };
rrcovHD = derive { name="rrcovHD"; version="0.2-3"; type="cran"; sha256="18k5c590wbi0kmx4nl1mkv7h6339as0s4jcr9am8v9v3w4pn0xni"; depends=[rrcov robustbase pls spls pcaPP ]; };
rrcovNA = derive { name="rrcovNA"; version="0.4-7"; type="cran"; sha256="1b3ffcs1szwswsayz8q3w87wndd7xbcg5rqamhjr2damgialx3bq"; depends=[rrcov robustbase lattice cluster norm ]; };
rredis = derive { name="rredis"; version="1.6.9"; type="cran"; sha256="00fgrhyj6bai0kc18c2m1fsk9ja5c9q7m6dpsb8wsn4gs79mw3sc"; depends=[ ]; };
rriskDistributions = derive { name="rriskDistributions"; version="2.1"; type="cran"; sha256="1sc0bj5sivclbq0grif99vclnlhg1k9dz4xdvng6vv392xkwbmfd"; depends=[mc2d eha msm tkrplot ]; };
rrlda = derive { name="rrlda"; version="1.1"; type="cran"; sha256="06n9jah190cz25n93jlb5zb0xrx91bjvxgswwdx9hdf0fmwrpkvz"; depends=[pcaPP mvoutlier glasso matrixcalc ]; };
rrules = derive { name="rrules"; version="0.1-0"; type="cran"; sha256="0f9msp289akzricjrm8dvfbh2dihfbszr7ms4fld1cr30zssajin"; depends=[ ]; };
rsae = derive { name="rsae"; version="0.1-5"; type="cran"; sha256="1f3ry3jwa6vg2vq2npx2pzzvfwadz8m48hjrqjk860nfjrymwgx5"; depends=[ ]; };
rsatscan = derive { name="rsatscan"; version="0.3.9200"; type="cran"; sha256="00vgby24jknq8nl7rnqcwg7gawcxhwq8b7m98vjx2hkqx39n4g21"; depends=[foreign ]; };
rsbml = derive { name="rsbml"; version="2.24.1"; type="bioc"; sha256="1xq64md8i1yjbngpds96b73ywa1qsfraiw21dckl731hqggw6q6a"; depends=[BiocGenerics BiocGenerics graph ]; };
rscala = derive { name="rscala"; version="1.0.6"; type="cran"; sha256="065ll2xza09hi05w4hq35jl6y1nvwrv93ld983nxaji81z9pfgzx"; depends=[ ]; };
rscproxy = derive { name="rscproxy"; version="2.0-5"; type="cran"; sha256="1bjdv7drlnffcnyc0j8r22j7v60k1xj58bw8nk9l8wvnmngrjz86"; depends=[ ]; };
rsdepth = derive { name="rsdepth"; version="0.1-5"; type="cran"; sha256="064jbb6gnx0sm41w3sbi6mvsbzsfkjqfici6frk8sfm9ybvm591j"; depends=[ ]; };
rsdmx = derive { name="rsdmx"; version="0.4-6"; type="cran"; sha256="0hsf0jkp31qfvl4pxaqxwz1fvwgmqld3rnbk9g29g5bqwld40syc"; depends=[XML RCurl plyr ]; };
rseedcalc = derive { name="rseedcalc"; version="1.2"; type="cran"; sha256="1di9bzwxyxm9gs14ks9z6sixi656hz9xwmq3aaqh53cjjr1ka0rc"; depends=[ ]; };
rsem = derive { name="rsem"; version="0.4.6"; type="cran"; sha256="16nsbp4s20396h2in0zymbpmsn24gqlbik0vgv86zhy1yg1rz9ia"; depends=[MASS lavaan ]; };
rsgcc = derive { name="rsgcc"; version="1.0.6"; type="cran"; sha256="12f8xsg6abmhdgkrrc8sfzmv4i1pycq1g0jfad664d17yciw7rhh"; depends=[biwt cairoDevice fBasics gplots gWidgets gWidgetsRGtk2 minerva parmigene stringr snowfall ]; };
rsig = derive { name="rsig"; version="1.0"; type="cran"; sha256="129k78i8kc30bzlphdb68vv3sw2k6xyiwrhw08vhzz6mf3jxlqsh"; depends=[survival BBmisc glmnet superpc survcomp Matrix ]; };
rsm = derive { name="rsm"; version="2.7-2"; type="cran"; sha256="0pn018n36h1xhhlsimggbfgfgl9nh5a49x8amkqy3drrnamjl577"; depends=[ ]; };
rsml = derive { name="rsml"; version="1.2"; type="cran"; sha256="1w9bqs32sn5ry5qjgnqnns56ylr59cq5kczjsssw3yvc8a8lr39x"; depends=[XML rgl ]; };
rsnps = derive { name="rsnps"; version="0.1.6"; type="cran"; sha256="1pqdmg1cwpm0cvr5ma7gzni88iq5kqv1w40v8iil3xvcmns8msjk"; depends=[plyr stringr httr RCurl XML jsonlite ]; };
rspa = derive { name="rspa"; version="0.1-6"; type="cran"; sha256="0zwmcjakpir8mvy8cvy8j85gar4s7gmizxc3z4mdrc4iadps9gqd"; depends=[editrules ]; };
rspear = derive { name="rspear"; version="0.1-2"; type="cran"; sha256="1rjg84plnvlcp3p2929f1afl43lb92d3bfsvlhsaw92z7iva1vad"; depends=[plyr ]; };
rstackdeque = derive { name="rstackdeque"; version="1.1.1"; type="cran"; sha256="0i1qqbfj0yrqbkad8bqc1qlxmyxpn7zycbnq83cdmfbilcmi87ql"; depends=[ ]; };
rstiefel = derive { name="rstiefel"; version="0.10"; type="cran"; sha256="0b2sdgpb3hzal34gd9ldd7aihlhl3wndg4i4b3wy6rrrjkficrl1"; depends=[ ]; };
rstream = derive { name="rstream"; version="1.3.2"; type="cran"; sha256="1habswhdlx7l92s9p9554px4kf9f9mhk5vkdq2fv4wk3381c0fgi"; depends=[ ]; };
rstudioapi = derive { name="rstudioapi"; version="0.3.1"; type="cran"; sha256="0q7671d924nzqsqhs8d9p7l907bcam56wjwm7vvz44xgj0saj8bs"; depends=[ ]; };
rsubgroup = derive { name="rsubgroup"; version="0.6"; type="cran"; sha256="1hz8rnbsl97ch6sjwxdicn2sjyn6cajg2zwmfp03idzpb3ixlk7l"; depends=[rJava foreign ]; };
rsunlight = derive { name="rsunlight"; version="0.3.0"; type="cran"; sha256="148byg8180657ny01xny28sdawbq87hf89f8c1rzfjl5qwcxmbqd"; depends=[httr plyr jsonlite stringr assertthat ]; };
rtable = derive { name="rtable"; version="0.1.0"; type="cran"; sha256="1jp7bd782ply2xb8p8xnmrds2w62bp7l2v4vlvbv1468kxhlfgf2"; depends=[xtable ReporteRs knitr tidyr shiny ]; };
rtape = derive { name="rtape"; version="2.2"; type="cran"; sha256="0q7rs7pc1k1kayr734lvh367j5qig2nnq5mgak1wbpimhl7z3wm7"; depends=[ ]; };
rtdists = derive { name="rtdists"; version="0.2-6"; type="cran"; sha256="1f2yv4qq27i1fc0ys3kk31lsnbdzrmrk44widnxd19hxn4r05cs6"; depends=[evd msm gsl ]; };
rtematres = derive { name="rtematres"; version="0.2"; type="cran"; sha256="1d0vrprvnlk4hl2dbc6px9xn9kx9d1qvlqxd798hzda6qg5wwvf2"; depends=[XML RCurl plyr gdata ]; };
rtf = derive { name="rtf"; version="0.4-11"; type="cran"; sha256="04z0s5l9qjlbqahmqdaqv7mkqavsz4yz25swahh99xfwp9plknfl"; depends=[R_oo R_methodsS3 ]; };
rtfbs = derive { name="rtfbs"; version="0.3.4"; type="cran"; sha256="1z5rhxgi44xdv07g3l18ricxdmp1p59jl8fxawrh5jr83qpcxsks"; depends=[rphast ]; };
rtiff = derive { name="rtiff"; version="1.4.4"; type="cran"; sha256="13cz35dfz735yk2lci8cmjmsg4ddm31lv98lpx8ymy3bwmzdmc3c"; depends=[pixmap ]; };
rtkpp = derive { name="rtkpp"; version="0.8.6"; type="cran"; sha256="0alg3002q8mcqd55prmsa6hfwg0qfrv30aq5p85v094l8cl7qd8l"; depends=[Rcpp Rcpp ]; };
rtop = derive { name="rtop"; version="0.3-45"; type="cran"; sha256="0dh7jlnakk1hd27swspa0fj6pq6yddxhz32w3d7xq8jgr7xm8d70"; depends=[sp gstat ]; };
rtracklayer = derive { name="rtracklayer"; version="1.26.3"; type="bioc"; sha256="1731z3hnhn6kqyijw2haq7jqh0izpvqxywrnk1mfmn7wx9sp6nbj"; depends=[GenomicRanges XML BiocGenerics S4Vectors IRanges XVector GenomeInfoDb Biostrings zlibbioc RCurl Rsamtools GenomicAlignments S4Vectors IRanges XVector ]; };
rts = derive { name="rts"; version="1.0-3"; type="cran"; sha256="0jqk0p2q1vx9l6zf9pbc5k3lsw4hg5x1r6p0f7wjiks50x55pbl4"; depends=[raster xts zoo ]; };
rtype = derive { name="rtype"; version="0.1-1"; type="cran"; sha256="0wjf359w7gb1nrhbxknzg7qdys0hdn6alv07rd9wm6zynnn1vwxy"; depends=[ ]; };
rucm = derive { name="rucm"; version="0.4"; type="cran"; sha256="1s3q6wfp9nb50rqsaq6h2wb48qvxncmlf8l4gm18pr25wkangfxq"; depends=[KFAS ]; };
rugarch = derive { name="rugarch"; version="1.3-4"; type="cran"; sha256="1za92hqfaws8azf2zml1q8mlbirrdw3rb4rvwg6sclfx7z7gsqkh"; depends=[Rsolnp nloptr ks numDeriv spd xts zoo chron SkewHyperbolic expm Rcpp Rcpp RcppArmadillo ]; };
runjags = derive { name="runjags"; version="2.0.1-4"; type="cran"; sha256="1any5f7paf8a8yyvk594iixvh1l1dc87pil292sd1pq1lh2510lw"; depends=[lattice coda ]; };
ruv = derive { name="ruv"; version="0.9.5"; type="cran"; sha256="19n2zrbfg6kzks395iiv1wbz2zf1j25aap3iy3d8yspmasqxi93x"; depends=[ ]; };
rv = derive { name="rv"; version="2.3.1"; type="cran"; sha256="0bjqwk7djl625fws3jlzr1naanwmrfb37hzkyy5szai52nqr2xij"; depends=[ ]; };
rvHPDT = derive { name="rvHPDT"; version="3.0"; type="cran"; sha256="05nrfnyvb8ar7k2bmn227rn20w1yzkp1smwi4sysc00hyjrlyg8s"; depends=[gtools ]; };
rvTDT = derive { name="rvTDT"; version="1.0"; type="cran"; sha256="09c2fbqnlwkhaxfmgpsdprl0bb447ajk9xl7qdlda201fvxkdc8v"; depends=[CompQuadForm ]; };
rvalues = derive { name="rvalues"; version="0.3"; type="cran"; sha256="0fkf0gngrx1rfa67blzf3xxjwhlp2m2jplxw3z3j9vgl6ray0nqs"; depends=[ ]; };
rversions = derive { name="rversions"; version="1.0.0"; type="cran"; sha256="0k9v77bpxbxxmf5bdansg074zx3cm4hhaw6vl9f6c58xzxl567nf"; depends=[RCurl XML ]; };
rvertnet = derive { name="rvertnet"; version="0.2.2"; type="cran"; sha256="14afdf0mflpa2arxdy44y8mak9j3cg2cgk97idd7k4pi8vf6q0jg"; depends=[plyr jsonlite httr data_table ggplot2 maps ]; };
rvest = derive { name="rvest"; version="0.2.0"; type="cran"; sha256="1bg9l0wzh9xs7rpacl8s6q33hkjvv85vsl8079qsri0lr856wni7"; depends=[httr XML selectr magrittr ]; };
rvgtest = derive { name="rvgtest"; version="0.7.4"; type="cran"; sha256="1lhha5nh8fk42pckg4ziha8sa6g20m0l4p078pjj51kz0k8929ng"; depends=[ ]; };
rworldmap = derive { name="rworldmap"; version="1.3-1"; type="cran"; sha256="0wrg6ap39bq88sv5axxd90yyqafn77amk5429pxd9v5a2hdm3g8w"; depends=[sp maptools fields ]; };
rworldxtra = derive { name="rworldxtra"; version="1.01"; type="cran"; sha256="183z01h316wf1r4vjvjhbj7cg4xarn4b8qbmnn5y7nrrdndzi163"; depends=[sp ]; };
rwt = derive { name="rwt"; version="1.0.0"; type="cran"; sha256="112wp682z4gkxsd3bqnlkdrh42bfzwnnhzyangxi2dh0qw63bgcr"; depends=[matlab ]; };
ryouready = derive { name="ryouready"; version="0.3"; type="cran"; sha256="0nms3zfkis2fsxkyj3dr95vz3kk6pkm7l5ga7iz8pxy1ywrawj2i"; depends=[stringr car ]; };
rysgran = derive { name="rysgran"; version="2.1.0"; type="cran"; sha256="1l2mx297iyipap8cw2wcw5gm7jq4076bf4gvgvij4q35vp62m85z"; depends=[soiltexture lattice ]; };
rzmq = derive { name="rzmq"; version="0.7.7"; type="cran"; sha256="0gf8gpwidfn4756jqbpdbqsl8l4ahi3jgavrrvbbdi841rxggfmx"; depends=[ ]; };
s20x = derive { name="s20x"; version="3.1-16"; type="cran"; sha256="10z19q28wv3jnrs8lhban4a6hxqxgivcalq633p3hpa4zhw7nsj7"; depends=[ ]; };
s2dverification = derive { name="s2dverification"; version="2.1.1"; type="cran"; sha256="1m3m5sbq96fhnl4slxgb2j0009kqfdivdn3nbb203pc0knjpflnq"; depends=[GEOmap geomapdata maps mapproj ]; };
s4vd = derive { name="s4vd"; version="1.0"; type="cran"; sha256="07pnkhyqf9iymj913813d93dmb3iqbdlcl0gsgacihyyinb4id5s"; depends=[biclust ]; };
sBF = derive { name="sBF"; version="1.1.1"; type="cran"; sha256="0dankakl4rwl9apl46hk57ps4mvn2l1crw4gdqds26fc8w6f6rab"; depends=[ ]; };
sExtinct = derive { name="sExtinct"; version="1.1"; type="cran"; sha256="1l6232z6c4z3cfl1da94wa6hlv9hj5mcb85fj1y0yparkvvl8249"; depends=[lattice ]; };
sGPCA = derive { name="sGPCA"; version="1.0"; type="cran"; sha256="16aa5jgvkabrlxaf1p7ngrls79mksarh6di3vp26kb3d3wx087dx"; depends=[Matrix fields ]; };
sRAP = derive { name="sRAP"; version="1.6.0"; type="bioc"; sha256="0js1b4mad83635n08g2bz259knknffa4zqqh4an697fz0q4gkf55"; depends=[WriteXLS gplots pls ROCR qvalue ]; };
sROC = derive { name="sROC"; version="0.1-2"; type="cran"; sha256="0cp6frhk9ndffb454dqp8fzjrla76dbz0mn4y8zz1nbq1jzmz0d3"; depends=[ ]; };
sSeq = derive { name="sSeq"; version="1.4.0"; type="bioc"; sha256="1c6an23l69210zqb76b4n66pn7iin4im9g8wm750k567w92xs3ry"; depends=[caTools RColorBrewer ]; };
sac = derive { name="sac"; version="1.0.1"; type="cran"; sha256="1rl5ayhg5y84fw9w3zf43dijjlw9x0g0w2z4haw5xmxfni72ms8w"; depends=[ ]; };
saccades = derive { name="saccades"; version="0.1-1"; type="cran"; sha256="138a6g3hjmcyvflpxx1lhgxnb8svrynplrjnvzij7c4bzkp8zip6"; depends=[zoom ]; };
sadists = derive { name="sadists"; version="0.2.0"; type="cran"; sha256="156a1xzii2nkfismwbrfli5yxz52alpkqdi7maqlx9b1qrpybmhs"; depends=[PDQutils hypergeo orthopolynom ]; };
sads = derive { name="sads"; version="0.1.10"; type="cran"; sha256="02662vbbk3jikp506ljil9zqchs6bq3lsw4fwbbi2wgg7xvb260g"; depends=[MASS bbmle poilog VGAM untb ]; };
sae = derive { name="sae"; version="1.0-5"; type="cran"; sha256="05jvzq4cqb78pgdlxf8vlanx3v10n5njlw7g666nrnziy9ak8z4f"; depends=[nlme MASS ]; };
sae2 = derive { name="sae2"; version="0.1-1"; type="cran"; sha256="0fbbh2s0gjhyhypaccnd37b5g2rhyzq7mrm6s0z36ldg1pzi4dd9"; depends=[MASS ]; };
saeSim = derive { name="saeSim"; version="0.7.0"; type="cran"; sha256="03zfw18fvx8blh9iijh3rnglg8zbsvd9dq3kqv6ajz3hwr90z29g"; depends=[dplyr functional ggplot2 MASS spdep parallelMap ]; };
saemix = derive { name="saemix"; version="1.2"; type="cran"; sha256="1whwn54iiapdfig6qpzji3z3skir6jrs34dq78zlynibgrg95hx6"; depends=[ ]; };
saery = derive { name="saery"; version="1.0"; type="cran"; sha256="09x1v627llqbpiwkh1wr0z7gsndfdrjzag2hprhq1adbzh05k47z"; depends=[ ]; };
safe = derive { name="safe"; version="3.6.1"; type="bioc"; sha256="18s8p3cjyxka3xkwmmzbp8pnqn3rvd85zan46f41j8awgaxw8db2"; depends=[AnnotationDbi Biobase SparseM ]; };
safeBinaryRegression = derive { name="safeBinaryRegression"; version="0.1-3"; type="cran"; sha256="1g68r6pp5l41rbgyfqgcha1gpsisnl0ybdmdqr4ylr43f61dpgvd"; depends=[lpSolveAPI ]; };
safi = derive { name="safi"; version="1.0"; type="cran"; sha256="1km58w57kdmyfj4a97zhnjcka4q4pxm8r2br01qq2niaihpbzp98"; depends=[ ]; };
sagenhaft = derive { name="sagenhaft"; version="1.36.0"; type="bioc"; sha256="19s55x4d5s0imkkyg9ihrc7l4q1w4xm8n4pg7l18zx4xb316fv88"; depends=[SparseM SparseM ]; };
sampSurf = derive { name="sampSurf"; version="0.7-3"; type="cran"; sha256="165y2z9bhf7cyrh177fk87apqpgzyn69gf53f9mmii931cyykihw"; depends=[sp raster rasterVis boot ]; };
sampleSelection = derive { name="sampleSelection"; version="1.0-2"; type="cran"; sha256="1hzvvwvqp6v9d6ldm17kx3g8pbgngw2pxklny0b3man47zh5jshc"; depends=[maxLik miscTools systemfit Formula ]; };
samplesize4surveys = derive { name="samplesize4surveys"; version="2.4.0.900"; type="cran"; sha256="199g2gsbv1w1acn7nnlv2wbrhq7lc1mx8vvs1w9a9a8dkxdmml0g"; depends=[TeachingSampling ]; };
sampling = derive { name="sampling"; version="2.6"; type="cran"; sha256="11r8p29kwc0ggycbv7sm1zmazmfm4p5207l764ad4znjib0cab6p"; depends=[MASS lpSolve ]; };
samplingEstimates = derive { name="samplingEstimates"; version="0.1-3"; type="cran"; sha256="1srdchlpxksfdqhf5qdvl7nz0qsxkxww7hzqj0q71asbzlq3am3p"; depends=[samplingVarEst ]; };
samplingVarEst = derive { name="samplingVarEst"; version="0.9-9"; type="cran"; sha256="04wgsq3sh69iy8p07ch210p22n5mds7cxp5s6zggzamqpf0hpnw7"; depends=[ ]; };
samplingbook = derive { name="samplingbook"; version="1.2.0"; type="cran"; sha256="1vynz6hsnz5d0vg66f8k67h24rb809k9chb4waymk6vwnp8lksz9"; depends=[pps sampling survey ]; };
samr = derive { name="samr"; version="2.0"; type="cran"; sha256="0rsfca07pvmhfn7b49yk2ycw00wsq6dmrpv9haxz8q0xv7n5n2q9"; depends=[impute matrixStats ]; };
sand = derive { name="sand"; version="1.0.2"; type="cran"; sha256="1y371ds86gcq2id996vp56h5dax2wm0mlk1ks2mp1k81n63l7wmf"; depends=[igraph igraphdata ]; };
sandwich = derive { name="sandwich"; version="2.3-3"; type="cran"; sha256="1x2x0yxlrhdfyhk6jw4pim03yl5mg1wsi8cxxpbf9x4p68vd0w8y"; depends=[zoo ]; };
sangerseqR = derive { name="sangerseqR"; version="1.3.4"; type="bioc"; sha256="0as1ynn1lvffiaflfiijjglyjx9ms812vyb6qlhdcp4cz2lzjyzk"; depends=[Biostrings shiny ]; };
sanitizers = derive { name="sanitizers"; version="0.1.0"; type="cran"; sha256="1c1831fnv1nzpq8nw9krgf9fm8v54w0gvcn4443b6jghnnbhn2n6"; depends=[ ]; };
sanon = derive { name="sanon"; version="1.4"; type="cran"; sha256="0zg0paiz3rb0fk2mgi8rlzqy9vq3afy5vx6s15k1xqz8rjgsbd1x"; depends=[ ]; };
sapFinder = derive { name="sapFinder"; version="1.4.0"; type="bioc"; sha256="1h4b44hz8016ggvqxcjzkxk84xgk1d1vxa9y3nxxwr4cz6f6i7k2"; depends=[rTANDEM pheatmap Rcpp Rcpp ]; };
sapa = derive { name="sapa"; version="2.0-1"; type="cran"; sha256="11xgd2ijfz5yn0zyl5gfy97h2cxi1vyxkrijy2s9b78wm7fzpnkv"; depends=[ifultools splus2R ]; };
sas7bdat = derive { name="sas7bdat"; version="0.5"; type="cran"; sha256="0qxlapb6wdhzpwlmzlhscy3av7va3h6gkzsppn4sx5q960310an3"; depends=[ ]; };
saturnin = derive { name="saturnin"; version="1.0"; type="cran"; sha256="0686c0y6dcnr8jcx26pd4g08hmlalbid6idg465pngshr57kl79k"; depends=[ ]; };
savR = derive { name="savR"; version="1.4.0"; type="bioc"; sha256="1baj5bnx32wwq3y3xwgqvp57629a3jfvjvzhnyn6f9qac68d4c67"; depends=[ggplot2 reshape2 scales gridExtra XML ]; };
saves = derive { name="saves"; version="0.5"; type="cran"; sha256="1b4mfi2851bwcp0frx079h5yl6y1bhc2s8ziigmr8kwy1y1cxw10"; depends=[ ]; };
saws = derive { name="saws"; version="0.9-6.1"; type="cran"; sha256="0w40j6xczqs74z1z3na4510w06px7yn55s2mw9mddd6736l56fv1"; depends=[gee ]; };
sbgcop = derive { name="sbgcop"; version="0.975"; type="cran"; sha256="0f47mvwbsym4khwgl0ic3pqkw3jwdah9a48qi3q93d46p2xich61"; depends=[ ]; };
sbioPN = derive { name="sbioPN"; version="1.1.0"; type="cran"; sha256="0yvg55xnkhm35hfl7rldy2grb26hm4a68jr4x9n45fs7hhdylxri"; depends=[ ]; };
sca = derive { name="sca"; version="0.8-9"; type="cran"; sha256="024yxm1rlyz3hx9viv2nb6rapy938diaknc3nzkgq0ffky2gf0s3"; depends=[ ]; };
scaRabee = derive { name="scaRabee"; version="1.1-3"; type="cran"; sha256="1yap3hi36f8hk93jn59nxrbgq8iw0xwkkm3pc2gb50cpcpaq41pd"; depends=[neldermead lattice deSolve ]; };
scagnostics = derive { name="scagnostics"; version="0.2-4"; type="cran"; sha256="0fhc7d2nfhm8w6s6z1ls6i8d7c90h4q7rb92rz8pgq3xh031hpcf"; depends=[rJava ]; };
scales = derive { name="scales"; version="0.2.4"; type="cran"; sha256="08dryii8ibh16wxs61pam07b24rwhqvdcdhk09mij289l309192v"; depends=[RColorBrewer dichromat munsell plyr labeling ]; };
scalreg = derive { name="scalreg"; version="1.0"; type="cran"; sha256="06iqij1cyiw55ijzk2byrwh3m5iwsra7clx8l4v69rc236q8zbdi"; depends=[lars MASS ]; };
scam = derive { name="scam"; version="1.1-8"; type="cran"; sha256="1190xdahr4cx50qn32lxqm3p8m9c3968qx6f5mpyicaw34j9whz4"; depends=[mgcv Matrix ]; };
scape = derive { name="scape"; version="2.2-0"; type="cran"; sha256="0dgbh65fg6i5x4lpfkshn382zcc4jk1wp62pwd2l2f59pyfb92a3"; depends=[coda Hmisc lattice ]; };
scar = derive { name="scar"; version="0.2-1"; type="cran"; sha256="04x42414qxrz8c7xrnmpr00r46png2jy5giwicdx6gx8jwrkzhzs"; depends=[ ]; };
scatterplot3d = derive { name="scatterplot3d"; version="0.3-35"; type="cran"; sha256="1w0r7cyz01rzmgcf2x7wa4xs88ga6fd67wksyjyzrh2pdcbc56yx"; depends=[ ]; };
schoRsch = derive { name="schoRsch"; version="1.1"; type="cran"; sha256="0bi2vn9qr49yy3g45xgglqn1b5b6z8cbn9phzmqjc1v7rn80s5zg"; depends=[ ]; };
scholar = derive { name="scholar"; version="0.1.2"; type="cran"; sha256="1h1a6psgmiifi7p87ar3fr0mcfmg44yh4683dmqxrxrfcvgaxvca"; depends=[stringr plyr R_cache XML ]; };
schoolmath = derive { name="schoolmath"; version="0.4"; type="cran"; sha256="06gcmm294d0bs5whvknrq48sk7li961lzy4bcncjg052zbbpn67x"; depends=[ ]; };
schwartz97 = derive { name="schwartz97"; version="0.0.6"; type="cran"; sha256="0l34f30l75zrg3n377jp0cw7m88cqkgzy6ql78mrx8ra88aspfzn"; depends=[FKF mvtnorm RUnit ]; };
scidb = derive { name="scidb"; version="1.2-0"; type="cran"; sha256="17y1bml8kb896l3hsw356qdj25sfbdvm10dyxhaafdgcbp5ywcrn"; depends=[Matrix iterators RCurl zoo digest ]; };
scio = derive { name="scio"; version="0.6.1"; type="cran"; sha256="0h15sscv7k3j7qyr70h00n58i5f44k96qg263mxcdjk9mwqr0y65"; depends=[ ]; };
sciplot = derive { name="sciplot"; version="1.1-0"; type="cran"; sha256="0na4qkslg3lns439q1124y4fl68dgqjck60a7yvgxc76p355spl4"; depends=[ ]; };
scoring = derive { name="scoring"; version="0.5-1"; type="cran"; sha256="0vxjcbp43h2ipc428qc0gx7nh6my7202hixwhnmspl4f3kai3wkp"; depends=[ ]; };
scout = derive { name="scout"; version="1.0.3"; type="cran"; sha256="0wmjmk0ckd211cq5ykd0yzjschs7fkg04w67arl4pwma0z5z56lq"; depends=[glasso lars ]; };
scrapeR = derive { name="scrapeR"; version="0.1.6"; type="cran"; sha256="1rqgqpn9rc43rh356z9gb51pjhdczr9a9mgv0i078nniq156rmlb"; depends=[XML RCurl ]; };
scrime = derive { name="scrime"; version="1.3.3"; type="cran"; sha256="1vp7ai10m0f3s0hywyqh0yllxj6z6p795zqpr6vp58fh6yq20x73"; depends=[ ]; };
scriptests = derive { name="scriptests"; version="1.0-15"; type="cran"; sha256="1f55rnz4zbywyn79l2ac2600k95fwxgnyh1wzxvyxjh4qcg50plv"; depends=[ ]; };
scrm = derive { name="scrm"; version="1.5.0-1"; type="cran"; sha256="176k3qmlfs1cj8gm421p3hivs434xvm6ch3gva7x7766vz5mxi39"; depends=[Rcpp Rcpp ]; };
scrypt = derive { name="scrypt"; version="0.1.0"; type="cran"; sha256="1hc1rziigwggdx2pvklldkw88mdzbwa8b8a2a0ip4cm1w6flsl9n"; depends=[Rcpp Rcpp ]; };
scsR = derive { name="scsR"; version="1.3.2"; type="bioc"; sha256="17xmcbsch7p45a3ir11n6izw92jipbflp0778bvqrhwjaahi41kx"; depends=[STRINGdb BiocGenerics Biostrings IRanges plyr sqldf hash ggplot2 RColorBrewer ]; };
scuba = derive { name="scuba"; version="1.7-0"; type="cran"; sha256="11mdc8pj552ag36ib4sfbjv8r0psa6wnb13spz0v3rbaslz25hpw"; depends=[ ]; };
sda = derive { name="sda"; version="1.3.6"; type="cran"; sha256="1igdkgpxlni4d8h5k912aikbd66jqkabzq144xlgd2vp3kcbw4ly"; depends=[entropy corpcor fdrtool ]; };
sdcMicro = derive { name="sdcMicro"; version="4.5.0"; type="cran"; sha256="1cz34g6si7f8kgybcvcsr0lkcspqp3vrkvfqsfdjd0mb8lv5pbjj"; depends=[brew knitr data_table xtable car robustbase cluster MASS e1071 Rcpp sets Rcpp ]; };
sdcMicroGUI = derive { name="sdcMicroGUI"; version="1.2.0"; type="cran"; sha256="0bhrpric17y1ljm18a00i6bkxfq1cpljfkib8qbb4jyj5s50f3ps"; depends=[sdcMicro gWidgetsRGtk2 gWidgets cairoDevice vcd foreign Hmisc ]; };
sdcTable = derive { name="sdcTable"; version="0.18.1"; type="cran"; sha256="18l6d6q6pawvswj1v9mfmcg4m94dkp38yd2mnndz9l7qmvf6n7kx"; depends=[stringr Rcpp Rglpk lpSolveAPI data_table Rcpp ]; };
sdcTarget = derive { name="sdcTarget"; version="0.9-11"; type="cran"; sha256="18cf276mh1sv16xn0dn8par4zg8k7y8710byxiih6db4i616fjpi"; depends=[magic foreach doParallel tuple ]; };
sddpack = derive { name="sddpack"; version="0.9"; type="cran"; sha256="1963l8jbfwrqhqcpif73di9i5mb996r4f8smjyil6l7sdir7cg9l"; depends=[ ]; };
sde = derive { name="sde"; version="2.0.13"; type="cran"; sha256="194dkwrww9win5chhlffjv1xkhpxx2bcv6hf81xaqk7pdf7ifj80"; depends=[MASS fda zoo ]; };
sdef = derive { name="sdef"; version="1.5"; type="cran"; sha256="1xmx3nfjjfh6zw1vq7iip4rnshh40azja83xyvnz04jcv574vhxm"; depends=[ ]; };
sdmvspecies = derive { name="sdmvspecies"; version="0.3.1"; type="cran"; sha256="1rpbj55598862vb4bwrvcbskm10xibsvx58fpvkn58zbm6ab2534"; depends=[GPArotation ggplot2 psych raster ]; };
sdnet = derive { name="sdnet"; version="2.03.3"; type="cran"; sha256="1884pil3brm7llczacxda6gki501ddyc5m8ggqjix64kbvw37slv"; depends=[ ]; };
sdprisk = derive { name="sdprisk"; version="1.1-3"; type="cran"; sha256="1rwzi112fjckzxmhagpg60qm9a35fqx8g8xaypxsmnml6q00ysiq"; depends=[numDeriv PolynomF rootSolve ]; };
sdtoolkit = derive { name="sdtoolkit"; version="2.33-1"; type="cran"; sha256="0pirgzcn8b87hjb35bmg082qp14idc5pfvm6dikpgkswag23hwh8"; depends=[ ]; };
sdwd = derive { name="sdwd"; version="1.0.1"; type="cran"; sha256="1df8xx538ba3axi0jbkvyrdl7qnmkvh1x15kh57jmw3qbpf5gh56"; depends=[Matrix ]; };
seacarb = derive { name="seacarb"; version="3.0.6"; type="cran"; sha256="0xhyy8nd20f29j9y3x250fq8qp57gdv61gg4ck24v4jbl8qvwhla"; depends=[oce ]; };
sealasso = derive { name="sealasso"; version="0.1-2"; type="cran"; sha256="0cjy3fj170p5wa41c2hwscmhqxwkjq22vhg9kbajnq7df2s20jcp"; depends=[lars ]; };
searchable = derive { name="searchable"; version="0.3.3.1"; type="cran"; sha256="0xc87i2q42j7dviv9nj4hkgjvpfiprkkjpgzwsy47vp7q8024dv0"; depends=[magrittr stringi ]; };
seas = derive { name="seas"; version="0.4-3"; type="cran"; sha256="1n0acg6fvaym4nx1ihw0vmb79csds0k4x9427qmcyxbl9hxxmllp"; depends=[ ]; };
season = derive { name="season"; version="0.3-5"; type="cran"; sha256="08f382kq51r5g9p5hsnjf17dwivhx1vfgmmwp1vzmbqx1drlqkzx"; depends=[ggplot2 MASS mgcv survival coda ]; };
seasonal = derive { name="seasonal"; version="0.90.0"; type="cran"; sha256="0r5l69vl0lqi9hdxi90wx22v38p3izwx3cn124awzlak49i2qn0l"; depends=[ ]; };
seawaveQ = derive { name="seawaveQ"; version="1.0.0"; type="cran"; sha256="19vm1f0qkmkkbnfy1hkqnfz6x2a7g9902ka76bhpcscynl69iy56"; depends=[survival NADA lubridate ]; };
secr = derive { name="secr"; version="2.9.4"; type="cran"; sha256="0g7j68ys9dd8rz1y8wsmy3lwwxpwwkps6wpx67l86lzz99nwh64g"; depends=[abind MASS nlme sp mgcv raster ]; };
secrdesign = derive { name="secrdesign"; version="2.3.0"; type="cran"; sha256="1f5swggkky721z0js2jr1gb3mrx9h6qlld70bjd86x9f73s9cm0n"; depends=[secr abind ]; };
secrlinear = derive { name="secrlinear"; version="1.0.5"; type="cran"; sha256="084d0spshf3lh1m50kyb0r8x9lz4yrfj6b7snywffxhqyjw147hf"; depends=[secr sp igraph maptools MASS ]; };
seedy = derive { name="seedy"; version="1.2"; type="cran"; sha256="1m800b2faaih4xjsl3jwrqd177jjygbvrf9mb1h84hdzy095b5c0"; depends=[ ]; };
seeg = derive { name="seeg"; version="1.0"; type="cran"; sha256="1d45vl075p4qbd74gpaa8aw1h82p9n633fym10yp9bmcv4gwksg6"; depends=[car spatstat sgeostat ]; };
seem = derive { name="seem"; version="1.0"; type="cran"; sha256="0cjdi9c89bqvrx9gzxph958cfqicc1qfnzsair0gvsk3cxsrw6bf"; depends=[ ]; };
seewave = derive { name="seewave"; version="1.7.6"; type="cran"; sha256="1sh2i9hb8v0awhczvkj803lmdvg5p1fla685xb3s2a3if1q5zc5i"; depends=[fftw tuneR ]; };
seg = derive { name="seg"; version="0.5-1"; type="cran"; sha256="0gsdbq7b5wpknhlilrw771japr63snvx4vpirvzph4fjyby1c7rg"; depends=[sp splancs ]; };
segmag = derive { name="segmag"; version="1.2.2"; type="cran"; sha256="130saznhssg0qsc34fcw80x92mmqhjgizrb4fxpjsg7a8jjrclp8"; depends=[Rcpp Rcpp ]; };
segmentSeq = derive { name="segmentSeq"; version="2.0.1"; type="bioc"; sha256="0kxmnsfdpmsaxdhdvskh8g87ldvnkdm09lhbpq0irbi7k9nq94g3"; depends=[baySeq ShortRead GenomicRanges IRanges S4Vectors ]; };
segmented = derive { name="segmented"; version="0.5-1.1"; type="cran"; sha256="0rkbhg8wwqk08jfd29sh4ifx427kmd4mfqrssllckha9hcglqhz7"; depends=[ ]; };
seismicRoll = derive { name="seismicRoll"; version="1.0.1"; type="cran"; sha256="1lls2gbx994j7y3kwpf00ngga5qlzqxwc3cy9x21gy9iq2s8hn0x"; depends=[Rcpp Rcpp ]; };
selectMeta = derive { name="selectMeta"; version="1.0.7"; type="cran"; sha256="1ibiiddl9km8dahfc3kdpl42k43fx4mqgqibxgv5q8zbcp2829p9"; depends=[DEoptim ]; };
selectiongain = derive { name="selectiongain"; version="2.0.40"; type="cran"; sha256="1xzvz747242wfv789dl3gqvgbc8l1c4i2r3p95766ypcjw51j55d"; depends=[mvtnorm ]; };
selectr = derive { name="selectr"; version="0.2-3"; type="cran"; sha256="1ppm1f6mwfwbq92iwacyjn46k1d8148j4zykmjvw8as6c8blgap1"; depends=[XML stringr ]; };
selectspm = derive { name="selectspm"; version="0.1"; type="cran"; sha256="0bihyjaacpyjnm5vznix8krw2sqmy62in33hmb5yj4yidwz1gpv0"; depends=[spatstat ecespa ]; };
selfingTree = derive { name="selfingTree"; version="0.2"; type="cran"; sha256="18ylxmg2ms4ccgm4ahzfl65x614wiq5id7zazjjz5y75h8gs7gzj"; depends=[foreach ]; };
sem = derive { name="sem"; version="3.1-5"; type="cran"; sha256="093kklhl9fnawpwj3km1q0px6fm40kc3vg7kw93y3yb6hniwla35"; depends=[matrixcalc ]; };
semGOF = derive { name="semGOF"; version="0.2-0"; type="cran"; sha256="1lsv72yaza80jqadmah7v2cpfqfay57y12hcz6brvia6bmr5qagb"; depends=[sem MASS matrixcalc ]; };
semPLS = derive { name="semPLS"; version="1.0-10"; type="cran"; sha256="0q5linjyv5npkw4grx3vq58iq2q1grf06ikivhkg8w7rvb7pqn6b"; depends=[lattice ]; };
semPlot = derive { name="semPlot"; version="1.0.1"; type="cran"; sha256="0sdp970qb4mz5vzncfmqxvg1z12gmiyqi3yaz9x2drm3rgzavy83"; depends=[qgraph lavaan sem plyr XML igraph lisrelToR rockchalk colorspace corpcor ]; };
semTools = derive { name="semTools"; version="0.4-6"; type="cran"; sha256="1rxs6kwfc4bp273i9p25v4mc2sm91fkgsg178ifd4d3235xawcvz"; depends=[lavaan ]; };
semdiag = derive { name="semdiag"; version="0.1.2"; type="cran"; sha256="0kjcflw7dn907zx6790w7hnf5db6bf549whfsc0c2r173kf13irp"; depends=[sem ]; };
semiArtificial = derive { name="semiArtificial"; version="1.2.0"; type="cran"; sha256="11pwdqpsf5d5g74s2b8ixmrh2khkha3d4akzlkn652s98qr55dpc"; depends=[CORElearn MASS nnet cluster mclust fpc timeSeries timeDate ]; };
semisupKernelPCA = derive { name="semisupKernelPCA"; version="0.1.5"; type="cran"; sha256="1v8wdq63b1gqicj8c9a24k0w7cc0bkg0mnc9z5mklsfcl7g0g6k9"; depends=[datautils irlba ]; };
semsfa = derive { name="semsfa"; version="1.0"; type="cran"; sha256="1x227rigjk9glq5x9lp6xxcf3y9i73rv3mrj7lkr2ycnsx8zz57h"; depends=[mgcv np moments doParallel foreach iterators ]; };
sendmailR = derive { name="sendmailR"; version="1.2-1"; type="cran"; sha256="0z7ipywnzgkhfvl4zb2fjwl1xq7b5wib296vn9c9qgbndj6b1zh4"; depends=[base64enc ]; };
sendplot = derive { name="sendplot"; version="4.0.0"; type="cran"; sha256="0ia2xck94nwirwxi38nv0viz5wb8291yiak6f0wgwh84irsrfp1h"; depends=[rtiff ]; };
sensR = derive { name="sensR"; version="1.4-5"; type="cran"; sha256="1vp06ghmk852wkc4vmp4k68z6v623hsay69c8nm3m8xvf2vrqfgb"; depends=[multcomp MASS numDeriv ]; };
sensitivity = derive { name="sensitivity"; version="1.11"; type="cran"; sha256="197gm4ylh8giyh5iv9lf5dyb9ad7m406d08ai3vnf7irj7f8nwp2"; depends=[boot ]; };
sensitivityPStrat = derive { name="sensitivityPStrat"; version="1.0-6"; type="cran"; sha256="0rfzvkpz7dll3173gll6np65dyb40zms63fkvaiwn0lk4aryinlh"; depends=[survival ]; };
sensitivitymv = derive { name="sensitivitymv"; version="1.2"; type="cran"; sha256="0h8lbl5yhxgzdrajjydb2ap9q3dnm1abxdk8gdhp84m1bv8pznkj"; depends=[ ]; };
sensitivitymw = derive { name="sensitivitymw"; version="1.1"; type="cran"; sha256="1bknnfkkqgmchabcjdfikm37sn5k41ar8lpnjw58i8qh7yzq237i"; depends=[ ]; };
sensory = derive { name="sensory"; version="1.0"; type="cran"; sha256="0mfjj3lsx5i8bc8ikhqwycmfryzg9vd64m6ahqjf6xva7bj5h1v6"; depends=[Matrix gtools MASS ]; };
separationplot = derive { name="separationplot"; version="1.1"; type="cran"; sha256="0qfkrk8n6jj8l7ywngwsaikfwmd9hbrpr43x0l9wkjjp1asgs5l6"; depends=[ ]; };
seqCBS = derive { name="seqCBS"; version="1.2"; type="cran"; sha256="1kywi3kvvl9y6nm7cwf6fj8gz9gzznp5va336g1akzgy77k82d8v"; depends=[clue ]; };
seqCNA = derive { name="seqCNA"; version="1.10.0"; type="bioc"; sha256="01aa533a6qsjsw5yr47c2k2dmxpgzgxixn99dmbc336kwrq6vhgf"; depends=[GLAD doSNOW adehabitatLT ]; };
seqDesign = derive { name="seqDesign"; version="1.1"; type="cran"; sha256="1694swd8ik9fbiflmnw4xpq82kq18rqzkw0dv5pvq30c47xjgamv"; depends=[survival xtable ]; };
seqLogo = derive { name="seqLogo"; version="1.32.1"; type="bioc"; sha256="1bnhfmwbzprpyz6p7rwsk1idcjg0plhxwfs9v4k8wsx83mcdyral"; depends=[ ]; };
seqMeta = derive { name="seqMeta"; version="1.5"; type="cran"; sha256="1igag08qkfvkx83w6jjyfmjpxil9wvag1yfnxp3pqbglj9l99pmn"; depends=[survival Matrix coxme CompQuadForm ]; };
seqPERM = derive { name="seqPERM"; version="1.0"; type="cran"; sha256="1i8ai4gxybh08wxjh96m6xlqxhh7ch0xihjs879snmy4zqfi0pap"; depends=[ ]; };
seqRFLP = derive { name="seqRFLP"; version="1.0.1"; type="cran"; sha256="1i98hm8wgwr8b6hd237y2i9i0xgn35w4n2rxy4lqc5zq71gkwkvk"; depends=[ ]; };
seqTools = derive { name="seqTools"; version="1.0.0"; type="bioc"; sha256="1q41w150w4j73ihsy6pibn1dd48jfs7fhgymq9rd0510mrlp770i"; depends=[zlibbioc zlibbioc ]; };
seqbias = derive { name="seqbias"; version="1.14.0"; type="bioc"; sha256="0q5zxf4ds4adnp1cxlldyfli844lf1zd1sz9rn7gv34hmfyw1jdc"; depends=[GenomicRanges Biostrings zlibbioc Rsamtools ]; };
seqinr = derive { name="seqinr"; version="3.1-3"; type="cran"; sha256="0bbjfwbqg74wsamb3iz01g0ssdpdpg65gh00y9xlnpk4wb990n4n"; depends=[ade4 ]; };
seqminer = derive { name="seqminer"; version="3.9"; type="cran"; sha256="12m0mhfnnpl8pn1mmxs7hxljpg48ppmd6yvw6lac5gpvg0q6z47a"; depends=[stringr ]; };
seqmon = derive { name="seqmon"; version="0.2"; type="cran"; sha256="075hc6vgl1w3nisrihf5w6mkkg9q601jsqxm9hk9yagyvvd7d78w"; depends=[ ]; };
seqplots = derive { name="seqplots"; version="1.2.0"; type="bioc"; sha256="17rrfiphrdsajr5mbigcbv4wgd8x72wb37my1wzdw54nhg8l69w6"; depends=[IRanges BSgenome digest rtracklayer GenomicRanges Biostrings shiny DBI RSQLite RJSONIO plotrix fields kohonen Cairo GenomeInfoDb class S4Vectors ggplot2 reshape2 gridExtra ]; };
sequences = derive { name="sequences"; version="0.5.9"; type="cran"; sha256="17571m525b6a3k4f0m936wfq401181gx1fpb7x4v0fhaldzdmk3a"; depends=[Rcpp Rcpp ]; };
sequenza = derive { name="sequenza"; version="2.1.1"; type="cran"; sha256="0vrdmfy8qyzjflyl5skcy9mazl56py5gzb1kn1xh2hiv3mshdrfx"; depends=[copynumber squash ]; };
seriation = derive { name="seriation"; version="1.0-14"; type="cran"; sha256="0a7m1x6dhk00wh6djiz75x462y06fammr7fd2z8ks32migsbbvpp"; depends=[TSP cluster gclus colorspace MASS ]; };
seroincidence = derive { name="seroincidence"; version="1.0.4"; type="cran"; sha256="0m3hlbv3277qyhqi3liwbna7czd6kdc7gqaxc7xn5x8d2hsc45hk"; depends=[ ]; };
servr = derive { name="servr"; version="0.2"; type="cran"; sha256="0gah99snaj8lk5zfzbxi3jwvpnlff9diz9gqv4qalfxpmb7fp6lc"; depends=[mime httpuv jsonlite ]; };
sesem = derive { name="sesem"; version="1.0.1"; type="cran"; sha256="0s4xkv6bc5nxhj09mk9agnj11b9h7swccs9jrn4lg3fy12vqhf5a"; depends=[lavaan mgcv gplots ]; };
session = derive { name="session"; version="1.0.3"; type="cran"; sha256="04mcy1ac75fd33bg70c47nxqxrmqh665m9r8b1zsz5jij1sbl8q5"; depends=[ ]; };
setRNG = derive { name="setRNG"; version="2013.9-1"; type="cran"; sha256="02198cikj769yc32v8m2qrv5c01l2fxmx61l77m5ysm0hab3j6hs"; depends=[ ]; };
sets = derive { name="sets"; version="1.0-14"; type="cran"; sha256="1wfg4yc3p7zqcj2z3lb5knv6l3lw4pf20s3rkpz4yj4nsb41zs4g"; depends=[ ]; };
settings = derive { name="settings"; version="0.2.1"; type="cran"; sha256="0dxnysa3857d141rk46pyfkbgzk6ms3fhb2bz0y41jy72bdhxmrm"; depends=[ ]; };
setwidth = derive { name="setwidth"; version="1.0-3"; type="cran"; sha256="1s6m24kmkafscgibgfldm70m57bv4gs0m7fdki18nwdi1rvwpkbf"; depends=[ ]; };
severity = derive { name="severity"; version="2.0"; type="cran"; sha256="1mp19y2pn7nl9m8xfljc515kk5dirv0r2kypazpmd956lcivziqq"; depends=[ ]; };
sfa = derive { name="sfa"; version="1.0-1"; type="cran"; sha256="1acqxgydf8j5csdkx0yf169x3yaa31r0ccdrqarh6vj1hacm89ad"; depends=[ ]; };
sfsmisc = derive { name="sfsmisc"; version="1.0-27"; type="cran"; sha256="16hkm0ylwipc1zqsi8fiwyqvl9hpjgl7kyvgamibxlbp1y669qgm"; depends=[ ]; };
sft = derive { name="sft"; version="2.0-7"; type="cran"; sha256="1fq1b32f08i4k9bv4hh7rhk1jj7kgans6dwh1bmawaqkchyab3jr"; depends=[fda ]; };
sgPLS = derive { name="sgPLS"; version="1.2"; type="cran"; sha256="1q3pf4sfh8l2qwxm0qd3sg29kvvprpcyis0afbcjhvfr10w91xpw"; depends=[mixOmics ]; };
sgd = derive { name="sgd"; version="0.1"; type="cran"; sha256="16jqzshkg1n1azyfjadyg454ar0hk2dmw9ba1wrn6rh7mxsngik6"; depends=[Rcpp MASS Rcpp RcppArmadillo BH ]; };
sgeostat = derive { name="sgeostat"; version="1.0-25"; type="cran"; sha256="04zl932s6zb26r42h2l8qf3d43bmrq67281mrkh4spn4vcddv5da"; depends=[ ]; };
sglOptim = derive { name="sglOptim"; version="1.0.122.1"; type="cran"; sha256="0ld53rdxai85r9hwz9jrsxr08lxin0ksxa6823r7cr96w18c1ssm"; depends=[Matrix Rcpp RcppProgress RcppArmadillo BH ]; };
sglasso = derive { name="sglasso"; version="1.2"; type="cran"; sha256="1y2ms6p792klzmy3prhsyanlbp7n004di9hscma7ih3jx9703wsr"; depends=[Matrix igraph ]; };
sglr = derive { name="sglr"; version="0.7"; type="cran"; sha256="11gjbvq51xq7xbmpziyzwqfzf4avyxj2wpiz0kp4vfdj3v7p4fp9"; depends=[ggplot2 shiny ]; };
sgof = derive { name="sgof"; version="2.2"; type="cran"; sha256="087f4nbx9ppzi5za3f4w4msq2gd3r08v16fihppa30nqydg3ssbj"; depends=[poibin ]; };
sgr = derive { name="sgr"; version="1.3"; type="cran"; sha256="0zxmrbv3fyb686hcgfy2w1w2jffxf41ab8yc90dsgf931s9c55wn"; depends=[MASS ]; };
sgt = derive { name="sgt"; version="1.1"; type="cran"; sha256="0j4xxh5lypcl0hyfx7gzrhb40z36ygn97hf1nl6m8wj4dncg39jf"; depends=[maxLik ]; };
shape = derive { name="shape"; version="1.4.2"; type="cran"; sha256="0yk3cmsa57svcvbnm21pyr0s0qbhnllka8nmsg4yb41frjlqph66"; depends=[ ]; };
shapeR = derive { name="shapeR"; version="0.1-5"; type="cran"; sha256="17fq4gsdvyniq7n4x1xdvb5kk50184i7why3pdf1djjhknym087j"; depends=[gplots jpeg pixmap wavethresh vegan MASS ]; };
shapefiles = derive { name="shapefiles"; version="0.7"; type="cran"; sha256="08ghndihs45kylbzd9wnxffn8ixvxjhjnjldjyd526ai2sj8xcgf"; depends=[foreign ]; };
shapes = derive { name="shapes"; version="1.1-10"; type="cran"; sha256="038xps6f8b6w9qa9csqk33ggmb311h5zxwsxr027bd95a3vmyijx"; depends=[scatterplot3d rgl MASS ]; };
sharpshootR = derive { name="sharpshootR"; version="0.7-2"; type="cran"; sha256="04plsgmyil6znmcqx2j78n2vjj4y4mprb3wqbhwagapdhvp9rcis"; depends=[aqp ape soilDB igraph cluster lattice latticeExtra vegan sp reshape2 Hmisc scales circular RColorBrewer plyr ]; };
sharx = derive { name="sharx"; version="1.0-4"; type="cran"; sha256="1flcflx6w93s8bk4lcwcscwx8vacdl8900ikwkz358jbgywskd5n"; depends=[Formula dcmle dclone ]; };
shiny = derive { name="shiny"; version="0.12.0"; type="cran"; sha256="1mv2l2jlayg8jwr2710mp5awazdxbmq2vz8ld1jr2apq9irai14l"; depends=[httpuv mime jsonlite xtable digest htmltools R6 ]; };
shinyAce = derive { name="shinyAce"; version="0.1.0"; type="cran"; sha256="1031hzh647ys0d5hkw7cqxj0wgry3rxgq95fgs7slbm0rgx9g6f7"; depends=[shiny ]; };
shinyBS = derive { name="shinyBS"; version="0.61"; type="cran"; sha256="0rhim4mbp4x9vvm7xkmpl7mhb9qd1gr96cr4dv330v863ra2kgji"; depends=[shiny htmltools ]; };
shinyFiles = derive { name="shinyFiles"; version="0.6.0"; type="cran"; sha256="08cvpvrsr1bh0yh17ap20bmwxa4bsan3h6bicrxzanl2dlwp8kvr"; depends=[shiny htmltools RJSONIO ]; };
shinyMethyl = derive { name="shinyMethyl"; version="1.0.2"; type="bioc"; sha256="0n73qi3vvlqyg87ww3azwakvz6z6saz59rknv8267p48dzasnivc"; depends=[BiocGenerics shiny minfi matrixStats RColorBrewer ]; };
shinyRGL = derive { name="shinyRGL"; version="0.1.0"; type="cran"; sha256="07llg1yg5vmsp89jk60ly695zvxky6n06ar77mjxzlyc294akwmy"; depends=[rgl shiny ]; };
shinyTANDEM = derive { name="shinyTANDEM"; version="1.4.0"; type="bioc"; sha256="1vb3s7qvrh0b42dnbdyyrxx89rq0f1m5dygcygsl1mgc587spgm7"; depends=[rTANDEM shiny mixtools xtable ]; };
shinyTree = derive { name="shinyTree"; version="0.2.2"; type="cran"; sha256="08n2s6pppbxn23ijp6vms609p4qwlmfh9g0k5hdfqsqxjrz1nndi"; depends=[shiny ]; };
shinybootstrap2 = derive { name="shinybootstrap2"; version="0.2.1"; type="cran"; sha256="17634l3swlvgj1sv56nvrpgd6rqv7y7qjq0gygljbrgpwmfj198c"; depends=[htmltools jsonlite shiny ]; };
shinydashboard = derive { name="shinydashboard"; version="0.4.0"; type="cran"; sha256="0my1bz983ncnvljhz6d25q9bqc510q9dgl9wzcg8c0civyjaps39"; depends=[shiny htmltools ]; };
shinyjs = derive { name="shinyjs"; version="0.0.3.3"; type="cran"; sha256="1fgydm8ai0fvfqbwlkj27pa3nl242kb3xiai50lrda0ssqbrnw67"; depends=[shiny ]; };
shinythemes = derive { name="shinythemes"; version="1.0.1"; type="cran"; sha256="0wv579cxjlnd7wkfqzy2x3qk7d1abql1nhw10rx1c4c808vsylkw"; depends=[shiny ]; };
shopifyr = derive { name="shopifyr"; version="0.28"; type="cran"; sha256="1ypqgiqimdwj9fjy9ykk42rnkipb4cvdxy5m9z9jklvk5a7cgrml"; depends=[RCurl R6 RJSONIO ]; };
shotGroups = derive { name="shotGroups"; version="0.6"; type="cran"; sha256="0khcgzli6114yqrglmsvhr8rwkkkwdkd06b50isbc24vpv6xbfx9"; depends=[boot coin CompQuadForm energy KernSmooth mvoutlier robustbase ]; };
showtext = derive { name="showtext"; version="0.4-1"; type="cran"; sha256="1c2wd107g2xg8khlad5vimwj7wdxk7b7i2k1ydkkd7b47c6d9zhh"; depends=[sysfonts showtextdb ]; };
showtextdb = derive { name="showtextdb"; version="1.0"; type="cran"; sha256="14iv5nyc9wszy1yhbggk7zs042kv10lwk92pn9751hfws53yq6hf"; depends=[sysfonts ]; };
shp2graph = derive { name="shp2graph"; version="0-2"; type="cran"; sha256="09gbb7f9h3q2p56dwb2813mr36115ah70szq47jimpymzkd2x08m"; depends=[maptools igraph ]; };
shrink = derive { name="shrink"; version="1.2.0"; type="cran"; sha256="0r207mj57kjn6wfmz4f2l4wmbz7g1pvj96gpl0s76vkdjzbh1l47"; depends=[survival MASS rms ]; };
shuffle = derive { name="shuffle"; version="1.0"; type="cran"; sha256="037i45mfys1nr9sqmmsfb2yd3ba3aa22hc701f5j2zp8jx57qn3k"; depends=[ ]; };
siRSM = derive { name="siRSM"; version="1.1"; type="cran"; sha256="0fx6bfb5c8hdlgjxddwhhzr09ls53kfgn36hjk9zi5z8m14a7wbn"; depends=[rsm MASS foreach doSNOW ]; };
siar = derive { name="siar"; version="4.2"; type="cran"; sha256="1c4z72jr81dzkp9xqyrrkwjsalvvksl67pnbaadkc52v84fhzx3r"; depends=[hdrcde coda MASS bayesm mnormt spatstat ]; };
sideChannelAttack = derive { name="sideChannelAttack"; version="1.0-6"; type="cran"; sha256="1xcsy1h8gc8a4f9nzs7zv8x6v55g1pg8vy1kg64iqxm0gnz2f20l"; depends=[MASS corpcor mmap ade4 infotheo ]; };
sidier = derive { name="sidier"; version="3.0.1"; type="cran"; sha256="1vl28biy7inycn74kzq0gm3r2fd5ylkndl863jy8b3jvdrq9achk"; depends=[ape network igraph gridBase ggmap ggplot2 ]; };
sievetest = derive { name="sievetest"; version="1.2.2"; type="cran"; sha256="0mbgkf014m6bc7qg60vf065i6mvl5n4a0bvg8vb7dw531vsw2771"; depends=[ ]; };
sig = derive { name="sig"; version="0.0-5"; type="cran"; sha256="084wwpj5mnmq4k98ijbv23z80sj4axadc7c6hn3917dazsaa6ngn"; depends=[ ]; };
sigPathway = derive { name="sigPathway"; version="1.34.0"; type="bioc"; sha256="05l87qm8myfnqj3pndnazsfjy7c7ib5mphr31xiyrz8ipl2y7462"; depends=[ ]; };
sigaR = derive { name="sigaR"; version="1.10.0"; type="bioc"; sha256="0z7pnrizmindckl1vafg1dpp7xwp7pvx6hr8d5diwyaw0mfj430f"; depends=[Biobase CGHbase mvtnorm penalized corpcor igraph marray MASS mvtnorm quadprog penalized snowfall ]; };
sigclust = derive { name="sigclust"; version="1.1.0"; type="cran"; sha256="0151v7lr4n4yyn93j0s06gzc9jh9xhdgvfw6kvpfy24jl6wdii7g"; depends=[ ]; };
siggenes = derive { name="siggenes"; version="1.40.0"; type="bioc"; sha256="1w1c187dqdhk3wqh8bgslw85zwr6pzfkq0dlgs9d58fsrky0wsay"; depends=[Biobase multtest ]; };
sigloc = derive { name="sigloc"; version="0.0.4"; type="cran"; sha256="13v2dlgsbcsqqm8yxls62i7r3sk8m3c78jv8f9lgdihq5pjnd9zp"; depends=[nleqslv ellipse ]; };
signal = derive { name="signal"; version="0.7-4"; type="cran"; sha256="0sz8im7i46qy5wjpm34a2nqvrc1vipmqlw8ns3i2s1vhcvp7fjs1"; depends=[MASS ]; };
signal_hsmm = derive { name="signal.hsmm"; version="1.2.1"; type="cran"; sha256="0nxhksvwkidmp5x27hxmwxbv747lrwa19b4vi6dx72hny8prgvpc"; depends=[biogram seqinr shiny ]; };
simFrame = derive { name="simFrame"; version="0.5.3"; type="cran"; sha256="154d4k6x074ib813dp42l5l8v81x9bq2c8q0p5mwm63pj0rgf5f3"; depends=[Rcpp lattice Rcpp ]; };
simMSM = derive { name="simMSM"; version="1.1.41"; type="cran"; sha256="04icijrdc269b4hwbdl3qz2lyxcxx6z63y2wbak1884spn6bzbs8"; depends=[survival mvna ]; };
simPH = derive { name="simPH"; version="1.3.2"; type="cran"; sha256="0zlzlan2syl51smc3wm52yiak82v1f3pjgsba3w677a37g3badls"; depends=[data_table dplyr ggplot2 gridExtra lazyeval MASS mgcv reshape2 stringr survival quadprog ]; };
simPop = derive { name="simPop"; version="0.2.9"; type="cran"; sha256="1vi2jab57aqf1jyf87vrybz5qbhv7wdjhsm963z3cpyva2bj0i60"; depends=[lattice vcd data_table laeken MASS Rcpp e1071 nnet doParallel foreach colorspace Rcpp ]; };
simSummary = derive { name="simSummary"; version="0.1.0"; type="cran"; sha256="1ay2aq6ajf1rf6d0ag3qghxpwj0f8b3fhpr2k0imzmpbyag1i3gj"; depends=[abind svUnit gdata ]; };
simTool = derive { name="simTool"; version="1.0.3"; type="cran"; sha256="1x018p5mssrhz2ghs3ly9wss12503h93gl7zk0mqh1bcrzximh0k"; depends=[plyr reshape ]; };
simba = derive { name="simba"; version="0.3-5"; type="cran"; sha256="14kqxqavacckl5s1518iiwzrmlgbxz1lxy33y8c9qq7xaln41g9h"; depends=[vegan ]; };
simboot = derive { name="simboot"; version="0.2-5"; type="cran"; sha256="0slznwk8i3z76sxbfd4y5rp28jr6jv4i5ynnckpr10i59ba04wlq"; depends=[boot mvtnorm ]; };
simcausal = derive { name="simcausal"; version="0.1"; type="cran"; sha256="0i39rkfmaqw0f9g3mw05rz7bf0vd4nqxwaixf8i8mvhnbn5gglv3"; depends=[data_table reshape2 ]; };
simctest = derive { name="simctest"; version="2.4.1"; type="cran"; sha256="0v4l3dqhr551kr1kivsndk4ynkiaarp8hp65vgng4q8jm60il98c"; depends=[ ]; };
simecol = derive { name="simecol"; version="0.8-6"; type="cran"; sha256="0h48klfwk0836byncqn9d0z8mkh6lc8qm4zivyk5af79mr5s0bn5"; depends=[deSolve ]; };
simex = derive { name="simex"; version="1.5"; type="cran"; sha256="01706vbmfgcg13w1kq8v5rnk5xggbd1n7fv50c6bvhdyc1dly313"; depends=[ ]; };
simexaft = derive { name="simexaft"; version="1.0.7"; type="cran"; sha256="13w9m35qrrp8kkz4gqp7fg9jv8fs99y19n21bdxsd3f5mlkbvqgl"; depends=[mvtnorm survival ]; };
simone = derive { name="simone"; version="1.0-2"; type="cran"; sha256="071krim64s7fjwvwq7bjr0pw33mw9am9wpyypcy4gs7g1hj8wcir"; depends=[mixer ]; };
simpleNeural = derive { name="simpleNeural"; version="0.1.1"; type="cran"; sha256="0rm6kvz1mppvgcvwsgg3nz6ci37l95ins64g0jh4rw6lfmy0grjc"; depends=[ ]; };
simpleaffy = derive { name="simpleaffy"; version="2.42.0"; type="bioc"; sha256="0wz3kzn5fy4bkpzq9njs2lz6a29mcz91a5gvfrf06wq5gsn6l3rz"; depends=[BiocGenerics Biobase affy genefilter gcrma BiocGenerics Biobase affy genefilter gcrma ]; };
simpleboot = derive { name="simpleboot"; version="1.1-3"; type="cran"; sha256="1qprjisfflhzg8ll12p3q1zcfdiyc45glic2j9cw9nhx5rb065fk"; depends=[boot ]; };
simplexreg = derive { name="simplexreg"; version="1.0"; type="cran"; sha256="144kljh968i7n2d21r4204i4h952mfrkfc8b5r6x760msgjphxvh"; depends=[Formula plotrix ]; };
simrel = derive { name="simrel"; version="1.0-1"; type="cran"; sha256="0905rjqh8c08vyg090h0i7sx89vdryignslldzfz2r5yrszl4ga8"; depends=[FrF2 sfsmisc ]; };
simsalapar = derive { name="simsalapar"; version="1.0-5"; type="cran"; sha256="1z3dwylfrl08pq2k5ppfma3ijh356qc7wwdvgyp3wmw1bcq1amyf"; depends=[sfsmisc gridBase colorspace ]; };
simsem = derive { name="simsem"; version="0.5-8"; type="cran"; sha256="1kir1c0g5xb4gzmpvx13qp071b3d5v0br3093q394wzp22d816xk"; depends=[lavaan ]; };
simulatorZ = derive { name="simulatorZ"; version="1.0.0"; type="bioc"; sha256="1sabjya98prprq10gbra4c3maclw1y38r4826b9vzxp41ragm1sf"; depends=[Biobase survival CoxBoost GenomicRanges gbm Hmisc ]; };
siplab = derive { name="siplab"; version="1.1"; type="cran"; sha256="1b5drhla4p7n1y1cp7kqwqzw0b286kgij9j6wsks5vjgy5qfal1x"; depends=[spatstat ]; };
sirad = derive { name="sirad"; version="2.0-7"; type="cran"; sha256="009icj1jil757vvsf88sgmdz40swrx1qvrhnx7wwj7p3dlh78pvw"; depends=[zoo ncdf RNetCDF raster ]; };
sirt = derive { name="sirt"; version="1.6-0"; type="cran"; sha256="0sgbg2n7ww7vafrpvkkid63i935m5kav6qzmqp2wr40gfakyax56"; depends=[TAM CDM Rcpp mirt lavaan qgraph semPlot combinat ic_infer sfsmisc sm psych pbivnorm gtools igraph coda mvtnorm MASS Matrix lavaan_survey survey Rcpp RcppArmadillo ]; };
sisVIVE = derive { name="sisVIVE"; version="1.1"; type="cran"; sha256="1p1l07pgd88ap3bp0zwinnzda07pfg6cn92ync2pkqn5l0gmfxbs"; depends=[lars ]; };
sisus = derive { name="sisus"; version="3.9-13"; type="cran"; sha256="0lz9ww07dvdx6l3k5san8gwq09hycc3mqwpgzmr2ya9z8y27zadr"; depends=[MASS RColorBrewer coda gdata gtools moments polyapost rcdd ]; };
sitar = derive { name="sitar"; version="1.0.2"; type="cran"; sha256="0z9r3z512s0gpkcpdbi45qdl40rp4jacpm9k0c5pjilwiga6p07z"; depends=[nlme quantreg ]; };
sitools = derive { name="sitools"; version="1.4"; type="cran"; sha256="0c0qnvsv06g6v7hxad96fkp9j641v8472mbphvaxa60k3xc7ackb"; depends=[ ]; };
sivipm = derive { name="sivipm"; version="1.0-0"; type="cran"; sha256="1r548kfsi90rzisx37nw3w9vwj3gs4ck5zhwlskbdzgigb78spfp"; depends=[seqinr ]; };
sizepower = derive { name="sizepower"; version="1.36.0"; type="bioc"; sha256="0lgb7gsqa8cq5mjkp7hxidkvhms7nj8cyxhxcb2716d6ivllkvff"; depends=[ ]; };
sjPlot = derive { name="sjPlot"; version="1.8"; type="cran"; sha256="10hbm76qrlbcl384vfp9gkhlkxpvic8iq3l0k97pb7pv8k4482mx"; depends=[car dplyr ggplot2 MASS psych scales sjmisc tidyr ]; };
sjdbc = derive { name="sjdbc"; version="1.5.0-71"; type="cran"; sha256="0i9wdfadfcabayq78ilcn6x6y5csazbsgd60vssa2hdff0ncgvk1"; depends=[rJava ]; };
sjmisc = derive { name="sjmisc"; version="1.0.2"; type="cran"; sha256="1hgmm5yjgnd2n3k0gjcv58pv0wxzx5pia38ycjix4vyjgbp01kq0"; depends=[MASS ]; };
skatMeta = derive { name="skatMeta"; version="1.4.3"; type="cran"; sha256="0bknv066ya4yl4hl4y02d9lglq2wkl9c2j1shzg3d64dg4sjvbak"; depends=[Matrix coxme survival CompQuadForm ]; };
skda = derive { name="skda"; version="0.1"; type="cran"; sha256="0a6mksr1d0j3pd0kz4jb6yh466gvl4fkrvgvnlmvivpv6b2gqs3q"; depends=[ ]; };
skewt = derive { name="skewt"; version="0.1"; type="cran"; sha256="1xm00zfzjv53cq9drfcx7w2ri5dwsq7kajrk2hc1mvw0b6s4x2ix"; depends=[ ]; };
skmeans = derive { name="skmeans"; version="0.2-6"; type="cran"; sha256="02zw2y7s13hb6mx9w2yr5s2v1p5yxg3k67bhrl92g9n2jkbim3ni"; depends=[slam clue cluster ]; };
sla = derive { name="sla"; version="0.1"; type="cran"; sha256="0fr5n65ppwsh9z7a6rma9ak0bl8x3nz7v25lij7wb5nrf3sl74yb"; depends=[ ]; };
slackr = derive { name="slackr"; version="1.2"; type="cran"; sha256="1ymj3x52wyp0mp41xnnycg0vhdmv8whimwk1hzfsqr30pccnvn9j"; depends=[httr jsonlite data_table ggplot2 ]; };
slam = derive { name="slam"; version="0.1-32"; type="cran"; sha256="000636dwj4kmj5w1w5s6bqixh78m7262y3fgizj7rfhcnc2gz7ad"; depends=[ ]; };
sld = derive { name="sld"; version="0.3"; type="cran"; sha256="18xj57v9gg78d894cr1h6wp10i05hrnmwhmq6yh6211kdyj9ljp1"; depends=[lmom ]; };
slfm = derive { name="slfm"; version="0.1"; type="cran"; sha256="0s5q6ank6075sls9pkqhf7jlvi6gyvsbxa99c34d6ccrv88skyzq"; depends=[Rcpp coda Rcpp RcppArmadillo ]; };
slp = derive { name="slp"; version="1.0-3"; type="cran"; sha256="09jyrp6y3rigy043d8s5i7nh89pgpvn3cv51mr729c9ccr6jdjb1"; depends=[mgcv ]; };
sm = derive { name="sm"; version="2.2-5.4"; type="cran"; sha256="0hnq5s2fv94gaj0nyqc1vjdjd64vsp9z23nqa8hxvjcaf996rwj9"; depends=[ ]; };
smaa = derive { name="smaa"; version="0.2-3"; type="cran"; sha256="1vabxxyz2k10sbvrzdf51jlh59zlkjdq82vblk5s37ddmzgwnif9"; depends=[ ]; };
smac = derive { name="smac"; version="1.0"; type="cran"; sha256="1inn7i5k0q5vln24kazh3gl3szf6lxwnjr2rw70jcyn9dr9iy952"; depends=[ ]; };
smacof = derive { name="smacof"; version="1.6-2"; type="cran"; sha256="10yg4dxyv08wq1a74jac6jnmzhbjm6qip3vg5ca06w5pqk6lbdgn"; depends=[rgl polynom scatterplot3d Hmisc colorspace nnls ]; };
smacpod = derive { name="smacpod"; version="1.1.1"; type="cran"; sha256="1pmgxvww24mcgrvv87axqvw457r5wl57scqy93inmzia2mgyva1p"; depends=[spatstat ]; };
smam = derive { name="smam"; version="0.2-2"; type="cran"; sha256="1p6bzk4b9kpmfs4nxmcgc46hgdpldqg0pzpc0zhvs187z2nrfw75"; depends=[Matrix ]; };
smart = derive { name="smart"; version="1.0.1"; type="cran"; sha256="0ki3qn71zrw0nyv395qijcwahnxyv1p21j8x6cxr9spah2wzz8lb"; depends=[Matrix gplots gtools PMA elasticnet pcaPP igraph ]; };
smatr = derive { name="smatr"; version="3.4-3"; type="cran"; sha256="0iiazln4albj7k5w67slvyn98cqg4f6k409mml0n1pvlkki0h7gy"; depends=[plyr ]; };
smbinning = derive { name="smbinning"; version="0.1"; type="cran"; sha256="1r3l8z875k5sjnbjg0dpkv3x122hn8g601025lfdpl2ndkbz4qms"; depends=[sqldf partykit Formula gsubfn ]; };
smcUtils = derive { name="smcUtils"; version="0.2.2"; type="cran"; sha256="0d1kmg386j0zrpp8vgxjwvpf1i25l86xrh82767xkp0n9qj8srwq"; depends=[ ]; };
smcfcs = derive { name="smcfcs"; version="1.0.0"; type="cran"; sha256="04r8a2p8549pq8yl92ajj893w1rj03s14q6dv14vp0873zrxkxza"; depends=[VGAM MASS survival ]; };
smco = derive { name="smco"; version="0.1"; type="cran"; sha256="1sj3y1x6pc32cwzyhn9gaxs964xh5xl4vw08hsa8kfcxhh2r0s99"; depends=[ ]; };
smcure = derive { name="smcure"; version="2.0"; type="cran"; sha256="1j7fxnb0sx57a0l929c3haz4f1y829ymlq0cvdh0cia4qp6ydv60"; depends=[survival ]; };
smdata = derive { name="smdata"; version="1.1"; type="cran"; sha256="1hcr093xfkp88fn75imjkmfnp9cfsng5ndxpa8m2g0l29qhpxfvk"; depends=[ ]; };
smdc = derive { name="smdc"; version="0.0.2"; type="cran"; sha256="1j6xnzjbmmakbmk3lyjck3bsy8w8hyd9d8h04s4gbddhci283mqm"; depends=[proxy tm ]; };
smds = derive { name="smds"; version="1.0"; type="cran"; sha256="0aqf3wfn6mlsl8a32gaf9qdpyxwsx19g6mma8qzgaysdmk6vhbpd"; depends=[MASS ]; };
sme = derive { name="sme"; version="0.8"; type="cran"; sha256="1djrs3z699p6q2y1hfywh27csqc9cp1cfm3lxkigmmvxqjhyshz6"; depends=[lattice ]; };
smfsb = derive { name="smfsb"; version="1.1"; type="cran"; sha256="0khd23b6k9zgxz2x6g6c6k2g32mbpli32izdq6fgk1a990kdsp6j"; depends=[ ]; };
smirnov = derive { name="smirnov"; version="1.0-1"; type="cran"; sha256="09mpb45wj8rfi6n6822h4c335xp2pl0xsyxgin1bkfw97yjcvrgk"; depends=[ ]; };
smnet = derive { name="smnet"; version="1.0"; type="cran"; sha256="185ihq44fp00qp03lp9hz821a1ddm1bd09k3j0ii715grc91nc49"; depends=[SSN spam dfoptim RSQLite igraph DBI ]; };
smoof = derive { name="smoof"; version="1.0"; type="cran"; sha256="10yvx5lr73kzjk7xn4jy97yzvv8qilrp7ilvk0fg5hyimbwlz13s"; depends=[ParamHelpers BBmisc checkmate ggplot2 RColorBrewer plot3D emoa ]; };
smoothHR = derive { name="smoothHR"; version="1.0.1"; type="cran"; sha256="02kjqkgnhjwhq1vmva9nmy36a7bc6zjj6g81dw9m4zd3y9nbb005"; depends=[survival ]; };
smoothSurv = derive { name="smoothSurv"; version="1.5-2"; type="cran"; sha256="07yr97nzp4mfj37v9sr37dgriq0a7kbmsj0n3lmxrzfjhinwnhij"; depends=[survival ]; };
smoother = derive { name="smoother"; version="1.1"; type="cran"; sha256="0nqr1bvlr5bnasqg74zmknjjl4x28kla9h5cxpga3kq5z215pdci"; depends=[TTR ]; };
smoothie = derive { name="smoothie"; version="1.0-1"; type="cran"; sha256="12p4ig8fbmlsby5jjd3d27njv8j7aiwx0m2n1nmgvjj0n330s1kj"; depends=[ ]; };
smoothmest = derive { name="smoothmest"; version="0.1-2"; type="cran"; sha256="14cri1b6ha8w4h8m26b3d7qip211wfv1sywgdxw3a6vqgc65hmk5"; depends=[MASS ]; };
smoothtail = derive { name="smoothtail"; version="2.0.3"; type="cran"; sha256="0yr3j5mq1h9pd72kyi9z6wzly9cqkscim814yi710y79l03gp0fd"; depends=[logcondens ]; };
sms = derive { name="sms"; version="2.3"; type="cran"; sha256="0grxyp590hj2rvw1fw3yidzkl8nqqp5a14bp9xfpdph2nyas61qq"; depends=[doParallel foreach ]; };
smss = derive { name="smss"; version="1.0-1"; type="cran"; sha256="17a0x92hxzn212yiz87n7ssyi3bdhnyawxk1kkmk46q1ss22a1pm"; depends=[ ]; };
sn = derive { name="sn"; version="1.2-1"; type="cran"; sha256="0sqmabksvv13adf521mbzbi76dgbxc37xppjw4vwzmp4x6d8h0jf"; depends=[mnormt numDeriv ]; };
sna = derive { name="sna"; version="2.3-2"; type="cran"; sha256="1dmdv1bi22gg4qdrjkdzdc51qsbb2bg4hn47b50lxnrywdj1b5jy"; depends=[ ]; };
snapCGH = derive { name="snapCGH"; version="1.36.0"; type="bioc"; sha256="17c5gybk7mpl4w9aja01hxirjs6rygqpinsqlfmsnjk9pknqw43d"; depends=[limma DNAcopy aCGH cluster DNAcopy GLAD limma tilingArray ]; };
snapshot = derive { name="snapshot"; version="0.1.2"; type="cran"; sha256="0cif1ybxxjpyp3spnh98qpyw1i5sgi1jlafcbcldbqhsdzfz4q10"; depends=[ ]; };
snht = derive { name="snht"; version="1.0.2"; type="cran"; sha256="1rs9q8fmvz3x21ymbmgmgkqr7hqf3ya3xb33zj31px799jlldpb9"; depends=[ggplot2 gridExtra mgcv zoo plyr reshape ]; };
snipEM = derive { name="snipEM"; version="1.0"; type="cran"; sha256="0f98c3ycl0g0l3sgjgk7xrjp6ss7n8zzlyzvpcb6agc60cnw3w03"; depends=[Rcpp mvtnorm MASS GSE Rcpp RcppArmadillo ]; };
snm = derive { name="snm"; version="1.14.0"; type="bioc"; sha256="1d979rbxpypbc2s192p5f6ynps2pbap3ym4gig14fjrd61gzcmrb"; depends=[corpcor lme4 ]; };
snow = derive { name="snow"; version="0.3-13"; type="cran"; sha256="1habq43ncac9609xky3nqfkbq52cz36dg8jbdihag269z1kazdnf"; depends=[ ]; };
snowFT = derive { name="snowFT"; version="1.3-0"; type="cran"; sha256="10hhhzzzyz1ph7c8k08s79h4pdwq4jk8bh47y37ww0yjq0fd6gik"; depends=[snow ]; };
snowfall = derive { name="snowfall"; version="1.84-6"; type="cran"; sha256="1n9v9m4c02pspgkxfmq7zdk41s2vjcsk06b0kz9km4xy1x7k0hsg"; depends=[snow ]; };
snp_plotter = derive { name="snp.plotter"; version="0.5.1"; type="cran"; sha256="16apsqvkah5l0d5qcwp3lq2jspkb6n62wzr0wskmj84jblx483vv"; depends=[genetics ]; };
snpEnrichment = derive { name="snpEnrichment"; version="1.6.3"; type="cran"; sha256="0hg1cgyr4nlrqfv60aky8ljwh46ldslca3jmb6v6criyz6knqdv3"; depends=[snpStats ]; };
snpRF = derive { name="snpRF"; version="0.4"; type="cran"; sha256="1amxc4jprrc6n5w5h9jm2as025gqdqkla2asz7x97sjdnnj9kzzn"; depends=[ ]; };
snpStats = derive { name="snpStats"; version="1.16.0"; type="bioc"; sha256="1560mxm9ni4wlssw2kdd86nflb45rcjv8060zqiainy1jd92ys0x"; depends=[survival Matrix BiocGenerics zlibbioc ]; };
snpStatsWriter = derive { name="snpStatsWriter"; version="1.5-6"; type="cran"; sha256="04qhng888yih8gc7yd6rrxvvqf98x3c2xxz22gkwqx59waqd4jlq"; depends=[snpStats colorspace ]; };
snpar = derive { name="snpar"; version="1.0"; type="cran"; sha256="0c9myg748jm7khqs8yhg2glxgar1wcf6gyg0xwbmw0qc41myzfnq"; depends=[ ]; };
snplist = derive { name="snplist"; version="0.13"; type="cran"; sha256="1v9n3gdvygx4s6hlm0ijyw04szxwn9c1dqnhaqn61a8yfkmmnxn8"; depends=[RSQLite biomaRt Rcpp R_utils DBI Rcpp ]; };
sns = derive { name="sns"; version="1.0.0"; type="cran"; sha256="0qr5gj095xg48mqj7maz1m1zizx1jdjca8qygygqvak1b7nl4ccs"; depends=[mvtnorm coda ]; };
soc_ca = derive { name="soc.ca"; version="0.7.1"; type="cran"; sha256="0lg1bpbd0crywa29xc79cn3kr614wq4hr09xpwk17nv7q8qw8cnh"; depends=[ggplot2 gridExtra ellipse scales ]; };
softImpute = derive { name="softImpute"; version="1.4"; type="cran"; sha256="07cxbzkl08q58m1455i139952rmryjlic4s2f2hscl5zxxmfdxcq"; depends=[Matrix ]; };
softclassval = derive { name="softclassval"; version="1.0-20150416"; type="cran"; sha256="1zrf0nmyy4pfs4dzardghzznw1ahl21w4nykfh2pp8il4dpi21fs"; depends=[arrayhelpers svUnit ]; };
soil_spec = derive { name="soil.spec"; version="2.1.4"; type="cran"; sha256="129iqr6fdvlchq56jmy34s6qc2j5fcfir6pa5as5prw0djyvbdv0"; depends=[pls KernSmooth wavelets hexView sp GSIF ]; };
soilDB = derive { name="soilDB"; version="1.5-4"; type="cran"; sha256="1n8ybryrg88m12qb6bwiqs04dxgbs4nv8ay27d2vi0xrkqhs99k2"; depends=[aqp plyr Hmisc RCurl XML sp ]; };
soilphysics = derive { name="soilphysics"; version="2.3"; type="cran"; sha256="1d64jaw5ra1l0za2kpigqfdf52a5zrxy9j9g2g7f5yffqsp0jwb5"; depends=[rpanel MASS ]; };
soilprofile = derive { name="soilprofile"; version="1.0"; type="cran"; sha256="0sdfg6m2m6rb11hj017jx2lzcgk6llb01994x749s0qhzxmvx9mb"; depends=[aqp lattice munsell splancs ]; };
soiltexture = derive { name="soiltexture"; version="1.2.19"; type="cran"; sha256="0nw72913qb1hpifjqv0s1z5sxhgavhbalqhjczxg8b66fwqzrs7l"; depends=[sp MASS ]; };
soilwater = derive { name="soilwater"; version="1.0.1"; type="cran"; sha256="08rz1i5dsgwfvfd4sl5x9j970v82v3kny0rqg1zbdnr53vp2xc7j"; depends=[ ]; };
solaR = derive { name="solaR"; version="0.41"; type="cran"; sha256="003f8dka0jqlfshzc3d4z9frq5jb5nq6sw3sm44x7rj79w3ynpyg"; depends=[zoo lattice latticeExtra RColorBrewer ]; };
solarius = derive { name="solarius"; version="0.2.3"; type="cran"; sha256="164va71v77b0lyhccgrb47idhi7dlgyyw1vbs2iqci77ld6x50yl"; depends=[plyr ggplot2 data_table ]; };
solr = derive { name="solr"; version="0.1.4"; type="cran"; sha256="0b1f6mf8fi2ql8j06b0mkk7nyy5wj1zsg46lfxi6bp8n4ywbym9n"; depends=[plyr httr XML assertthat rjson ]; };
som = derive { name="som"; version="0.3-5"; type="cran"; sha256="01xsysmqj0zhzifqpwcrs0mflh56ndv4q3nm5n5imx7wmzx2lrzp"; depends=[ ]; };
soma = derive { name="soma"; version="1.1.1"; type="cran"; sha256="1mc1yr9sq9h2z60v40aqmil0xswj5hgxfdh4racq297qw3a97my4"; depends=[reportr ]; };
someKfwer = derive { name="someKfwer"; version="1.2"; type="cran"; sha256="0widny5l04ja91fy16x4giwrabwqhx0fs3yl48pv9xh4zj6sx563"; depends=[ ]; };
someMTP = derive { name="someMTP"; version="1.4.1"; type="cran"; sha256="19bsn8rny1vv9343bvk8xzhh82sskl0zg0f5r59g9k812q5llchn"; depends=[ ]; };
somebm = derive { name="somebm"; version="0.1"; type="cran"; sha256="1iwwc94k6znh4d3bbjnvwp4chc4wg0iy4v2f99cs4jasrsimb4p8"; depends=[ ]; };
somplot = derive { name="somplot"; version="1.6.4"; type="cran"; sha256="06c8p2lqz3yxmxdl7ji8a3czvxnsbl7bwyiig76pkwc3a5qqfbb9"; depends=[hexbin ]; };
sonicLength = derive { name="sonicLength"; version="1.4.4"; type="cran"; sha256="1v46xzx3jxxxs2biyrq6xbv2lhpz1i95la93hj6dl4jfyikmx0im"; depends=[ ]; };
soobench = derive { name="soobench"; version="1.0-73"; type="cran"; sha256="1y2r061pd4kr0kdgp8db3qy2aj07jdiyvy2py4fmwg6b8pcf9y0l"; depends=[ ]; };
sortinghat = derive { name="sortinghat"; version="0.1"; type="cran"; sha256="1wrxwhdp3gj1ra0rgldnmc0w019bnjb6z9j20c5p1ab09x4dmlny"; depends=[MASS bdsmatrix mvtnorm ]; };
sorvi = derive { name="sorvi"; version="0.7.20"; type="cran"; sha256="1cd0lg74lfdbkp314i40asc3vshs1acb20wz1cxzg62vyz6ia055"; depends=[reshape ggplot2 plyr RColorBrewer XML ]; };
sos = derive { name="sos"; version="1.3-8"; type="cran"; sha256="0vcgq8hpgdnlmkxc7qh1jqigr0gvm9x3w4ijbhma7x4i5fx3c2il"; depends=[brew ]; };
sos4R = derive { name="sos4R"; version="0.2-11"; type="cran"; sha256="0r4lficx8wr0bsd510z4cp6la32xf928rsiznbywpxghnypsrcgg"; depends=[XML RCurl sp ]; };
sotkanet = derive { name="sotkanet"; version="0.9.10"; type="cran"; sha256="0nshd6caxxayr7w39d6ildz42aarr3ff8iyfpwjd544yhblkj7jh"; depends=[ggplot2 RCurl rjson ]; };
soundecology = derive { name="soundecology"; version="1.3"; type="cran"; sha256="1kcmsas359xcwqd0lxffr5p996jikqdag6idibq57qb6rnz3hgfz"; depends=[pracma oce ineq vegan tuneR seewave ]; };
source_gist = derive { name="source.gist"; version="1.0.0"; type="cran"; sha256="03bv0l4ccz9p41cjw18wlz081vbjxzfgq3imlhq3pgy9jdwcd8fp"; depends=[RCurl rjson ]; };
sp = derive { name="sp"; version="1.1-0"; type="cran"; sha256="1lnc1vlxw15wk69hh7c26dc7vxydyxwi8rfpwrpn9wj4pm0hp8a5"; depends=[lattice ]; };
sp23design = derive { name="sp23design"; version="0.9"; type="cran"; sha256="1ihvcld19cxflq2h93m9k9yaidhwixvbn46fqqc1p3wxzplmh8bs"; depends=[mvtnorm survival ]; };
spBayes = derive { name="spBayes"; version="0.3-9"; type="cran"; sha256="1zdyz5jqbixwj59q9f1x8f3knz0jwdfl0abj0w6cxrllkb38yg10"; depends=[coda magic abind Formula ]; };
spBayesSurv = derive { name="spBayesSurv"; version="1.0.2"; type="cran"; sha256="0pxndjksrd22p60pvc4czxwqhrpx5ik0yr23nz7kmg6wnp36hc6w"; depends=[Rcpp survival coda Rcpp RcppArmadillo ]; };
spMC = derive { name="spMC"; version="0.3.6"; type="cran"; sha256="0h71m55jmv80kx5ccsrpsakrh4qw5f3kx2qizwi10jlybwggqv0m"; depends=[ ]; };
spTest = derive { name="spTest"; version="0.1.0"; type="cran"; sha256="0asfgf0dx72025q41ndzgwm2n471lwha7bcc1dfk3zwib75w3lgl"; depends=[ ]; };
spThin = derive { name="spThin"; version="0.1.0"; type="cran"; sha256="06qbk0qiaw7ly1ywbr4cnkmqfasymr7gbhvq8jjbljm0l69fgjpp"; depends=[spam fields knitr ]; };
spTimer = derive { name="spTimer"; version="2.0-0"; type="cran"; sha256="0ldby68p4y5cz5dj2m33jcbgd3mw9nv0py4llg8aj10bxylarmfv"; depends=[coda sp ]; };
spa = derive { name="spa"; version="2.0"; type="cran"; sha256="1np50qiiy3481xs8w0xfmyfl3aypikl1i1w8aa5n2qr16ksxrnq3"; depends=[cluster MASS ]; };
spaMM = derive { name="spaMM"; version="1.5.1"; type="cran"; sha256="1sv5ndg7jmyivwkj7y7i4da862qb8p3z7m83vmbphwbykpl7jfs5"; depends=[Matrix MASS lpSolveAPI proxy geometry Rcpp nlme Rcpp RcppEigen ]; };
spaa = derive { name="spaa"; version="0.2.1"; type="cran"; sha256="0qlfbfvv97avbnixm5dz9il3dmd40wnpvv33jh7fa0mh740bircy"; depends=[ ]; };
space = derive { name="space"; version="0.1-1"; type="cran"; sha256="1qigfz62xz47hqi43aii3yr4h7ddvaf11a5nil7rqprgkd0k6mv3"; depends=[ ]; };
spaceExt = derive { name="spaceExt"; version="1.0"; type="cran"; sha256="0lp8qmb7vcgxqqpsi89zjy7kxpibg3x2mq205pjmsrbbh7saqzr4"; depends=[limSolve glasso ]; };
spacejam = derive { name="spacejam"; version="1.1"; type="cran"; sha256="1mdxmfa1aifh3h279cklm4inin0cx3h0z2lm738bai34j6hpvar7"; depends=[igraph Matrix ]; };
spacetime = derive { name="spacetime"; version="1.1-4"; type="cran"; sha256="1amxdjjqxibllwnb70chqmfnn66n95yf0wjmbrkjnzjszhbb25q2"; depends=[sp zoo xts intervals lattice ]; };
spacodiR = derive { name="spacodiR"; version="0.13.0115"; type="cran"; sha256="0c0grrvillpwjzv6fixviizq9l33y7486ypxniwg7i5j6k36nkpl"; depends=[picante colorspace Rcpp Rcpp ]; };
spacom = derive { name="spacom"; version="1.0-4"; type="cran"; sha256="1jfsbgy7b0mwl4n2pgrkkghx9p8b0wipvg4c5jar6v8ydby6qg94"; depends=[spdep foreach iterators lme4 nlme Matrix ]; };
spade = derive { name="spade"; version="1.14.0"; type="bioc"; sha256="0fhhmx80zjixd1wp55aphkb9pfvgm03pd2kg4yxim1iic7n09xm3"; depends=[igraph Rclusterpp Biobase flowCore ]; };
spam = derive { name="spam"; version="1.0-1"; type="cran"; sha256="033s5ka05kg97fmc3l1li3z6x5225rwhrdxh57wwn4axrjwy1nyy"; depends=[ ]; };
spanr = derive { name="spanr"; version="1.0"; type="cran"; sha256="1x29hky347kvmk9q75884vf6msgcmfi3w4lyarq99aasi442n1ps"; depends=[plyr stringr survival ]; };
sparc = derive { name="sparc"; version="0.9.0"; type="cran"; sha256="0jsirrkmvrfxav9sphk8a4n52fg0d1vnk3i8m804i4xl0s7lrg8s"; depends=[ ]; };
sparcl = derive { name="sparcl"; version="1.0.3"; type="cran"; sha256="1348pi8akx1k6b7cf4bhpm4jqr5v8l5k086c7s6rbi5p6qlpsrvz"; depends=[ ]; };
spareserver = derive { name="spareserver"; version="1.0.0"; type="cran"; sha256="0vaql5v3337xh1ifjziav3v7fkjff4zhrz557mgy75ham554gs7c"; depends=[assertthat pingr httr ]; };
spark = derive { name="spark"; version="1.0.0"; type="cran"; sha256="0ryc7kq3hx8nd5m999p1y7lxli6x862y6hqpv8xwpqak0y863p6m"; depends=[magrittr ]; };
sparkTable = derive { name="sparkTable"; version="1.0.0"; type="cran"; sha256="1d5vv7whayblq5g4pjrngkqf3d1pi4f0gibnskllv7rdad10n4nd"; depends=[Cairo gridExtra ggplot2 shiny Rglpk xtable StatMatch boot pixmap RGraphics ]; };
sparktex = derive { name="sparktex"; version="0.1"; type="cran"; sha256="0r6jnn9fj166pdhnjbsaqmfmnkq0qr1cjprihlnln9jad05mrkjx"; depends=[ ]; };
sparr = derive { name="sparr"; version="0.3-6"; type="cran"; sha256="1imgph2bf575rm06l4vsz0nhizkrwa3p5j6b6gdn30l0hlhxjp0j"; depends=[spatstat rgl MASS ]; };
sparseBC = derive { name="sparseBC"; version="1.1"; type="cran"; sha256="1w60n2875n809lbrn0hd4kdmsyfd64aikgzxchza8b59x77l0psy"; depends=[glasso fields ]; };
sparseHessianFD = derive { name="sparseHessianFD"; version="0.2.0"; type="cran"; sha256="1sj9d2d8bfjd00jr682gj21d4y0hjm91l3hj7356fpq461nb9pl8"; depends=[Rcpp Matrix Rcpp RcppEigen ]; };
sparseLDA = derive { name="sparseLDA"; version="0.1-6"; type="cran"; sha256="0k9v2pjx4q4nhvpjhv496v4gfr5h19w0h2h7za7j6zqfn6aygvz6"; depends=[lars elasticnet MASS mda ]; };
sparseLTSEigen = derive { name="sparseLTSEigen"; version="0.2.0"; type="cran"; sha256="11llmrkq0pnrdphgjvhmg269bq3xbbn4s7kd7xhvk62sigvspkcj"; depends=[robustHD Rcpp RcppEigen Rcpp RcppEigen ]; };
sparseMVN = derive { name="sparseMVN"; version="0.2.0"; type="cran"; sha256="12g387bvpy4249kwq946v006ab095zsmgfsrkc1yqncxhmjwrgqn"; depends=[Matrix ]; };
sparseSEM = derive { name="sparseSEM"; version="2.5"; type="cran"; sha256="0ig8apsi94kvbcq3i8nzmywbdizlss7c6r9bppcyl9lxgikc3cds"; depends=[ ]; };
sparsediscrim = derive { name="sparsediscrim"; version="0.2"; type="cran"; sha256="0m8ccmqpg1np738njavf736qh917hd3blywyzc3vwa1xl59wqccl"; depends=[corpcor bdsmatrix mvtnorm ]; };
sparsenet = derive { name="sparsenet"; version="1.2"; type="cran"; sha256="106a2q4syrcnmicrx92gnbsf2i5ml7pidwghrpl6926glj59j248"; depends=[glmnet shape ]; };
spartan = derive { name="spartan"; version="2.2.1"; type="cran"; sha256="1syrvx3gmgsi3f49j27zg59b3i29v20352qbsc5mrqnwh5lawi1y"; depends=[ ]; };
spatcounts = derive { name="spatcounts"; version="1.1"; type="cran"; sha256="0rp8054aiwc62r1m3l4v5dh3cavbs5h2yb01453bw9rwis1pj2qm"; depends=[ ]; };
spate = derive { name="spate"; version="1.4"; type="cran"; sha256="1cr63qm3hgz6viw6ynzjv7q5ckfsan7zhbp224gz4cgx5yjg0pn3"; depends=[mvtnorm truncnorm ]; };
spatgraphs = derive { name="spatgraphs"; version="2.62"; type="cran"; sha256="1h7sv6qc5zhaiaqlrzagrlc2mxlasdzilmi5q9nrd1vsdzsqxvb4"; depends=[ ]; };
spatial = derive { name="spatial"; version="7.3-9"; type="cran"; sha256="12qhfqmznij1jddjklhlqzywcfw2hww8sff7b2m6mjxlky08p5jg"; depends=[ ]; };
spatial_gev_bma = derive { name="spatial.gev.bma"; version="1.0"; type="cran"; sha256="1rjn0gsbgiv69brhnm0zj25ya3nyfh4yf6jizng85mvss3viv3hj"; depends=[SpatialExtremes msm coda ]; };
spatial_tools = derive { name="spatial.tools"; version="1.4.8"; type="cran"; sha256="0qnsjfx974na87p3n7sp711sc13v6dmpvb2kjpvscixs8rsy03y1"; depends=[iterators foreach rgdal raster mmap abind doParallel ]; };
spatialCovariance = derive { name="spatialCovariance"; version="0.6-8"; type="cran"; sha256="06z6jz9sadqc382w07ysnnlhqc96hxaasz9wncbhipd4cd1y4daa"; depends=[ ]; };
spatialEco = derive { name="spatialEco"; version="0.1-1"; type="cran"; sha256="1k7xdgg541mwr9rk3h8pi7hgb61wza14azvmbxqd92m29p2yqn00"; depends=[RANN rms sp raster spatstat cluster spdep SDMTools RCurl rgeos ]; };
spatialTailDep = derive { name="spatialTailDep"; version="1.0.2"; type="cran"; sha256="107yldc43pgbadxdisnc7vq8vyvcps1b1isyvxd0kyf59xldiq47"; depends=[cubature mvtnorm SpatialExtremes ]; };
spatialkernel = derive { name="spatialkernel"; version="0.4-19"; type="cran"; sha256="0gbl6lrbaxzv2f975k0vd6ghrljgf1kjazld3hm7781kv1f87lji"; depends=[ ]; };
spatialnbda = derive { name="spatialnbda"; version="1.0"; type="cran"; sha256="14mx5jybymasyia752f3vnr5vmswcavbz8bpqr69vlxphw27qkwk"; depends=[SocialNetworks mvtnorm ]; };
spatialprobit = derive { name="spatialprobit"; version="0.9-10"; type="cran"; sha256="1z88nss69pixazqk3b6rpyc7mjryfznrgw9swfyfxky0bsdfj6mv"; depends=[Matrix spdep mvtnorm tmvtnorm ]; };
spatialsegregation = derive { name="spatialsegregation"; version="2.40"; type="cran"; sha256="0kpna2198nrj93bjsdgvj85wnjfj18psdq919fjnnhbzgzdkxs7l"; depends=[spatstat ]; };
spatstat = derive { name="spatstat"; version="1.41-1"; type="cran"; sha256="1r2538h4arvlsn49ci84ch45wy5k9kiq4d22bd98jrh6xna3rd6x"; depends=[mgcv Matrix deldir abind tensor polyclip goftest ]; };
spatsurv = derive { name="spatsurv"; version="0.9-8"; type="cran"; sha256="1dsqkcmhka8yzl13jfn19ywq1bk7788amj4nrl1bz05q3vz3drpp"; depends=[survival sp iterators RandomFields fields rgl Matrix stringr ]; };
spc = derive { name="spc"; version="0.5.1"; type="cran"; sha256="1299lhk8snrhm7xpq0ccmq5kmpapc13rxcyvljs4c7frj645rwz4"; depends=[ ]; };
spca = derive { name="spca"; version="0.6.0"; type="cran"; sha256="156bz3w3999vhjpsa9cs21rf2r9hv49vw1pfak0r37kbvf2d4rm6"; depends=[MASS ]; };
spcadjust = derive { name="spcadjust"; version="0.1-3"; type="cran"; sha256="1l6m4aisk780znpjr7lnlh0z42rbc2jyblv17hafbr1siymrasc2"; depends=[ ]; };
spcosa = derive { name="spcosa"; version="0.3-5"; type="cran"; sha256="15q0f2sfhm1b13zs5a50yfvqhgcn4fyncf0h5ivin2k9g5xvq4k4"; depends=[rJava ggplot2 sp ]; };
spcov = derive { name="spcov"; version="1.01"; type="cran"; sha256="1brmy64wbk56bwz9va7mc86a0ajbfy09qpjafyq2jv7gm7a35ph5"; depends=[ ]; };
spcr = derive { name="spcr"; version="1.2.1"; type="cran"; sha256="0cm59cfw3c24i1br08fdzsz426ldljxb41pdrmbmma4a69jkv1sb"; depends=[ ]; };
spd = derive { name="spd"; version="2.0-0"; type="cran"; sha256="0aznzj68gynhx295gdb4sb7xxjiya4vbdg3gshfs0mwg1qzrhxy9"; depends=[KernSmooth ]; };
spdep = derive { name="spdep"; version="0.5-88"; type="cran"; sha256="1m2bxbf472xq7wr76znjirslx3hb1ylk6lp7x5003ka3i2zpakxn"; depends=[sp Matrix LearnBayes deldir boot coda nlme MASS ]; };
spdynmod = derive { name="spdynmod"; version="1.0"; type="cran"; sha256="05gaaln14lrrds43l2f9hw43c86gswyzymz97hc3mci1cgiwfwbz"; depends=[deSolve raster animation ]; };
spe = derive { name="spe"; version="1.1.2"; type="cran"; sha256="0xyx42n3gcsgqmy80nc9la6p6gq07anpzx0afwffyx9fv20fvys0"; depends=[ ]; };
speaq = derive { name="speaq"; version="1.2.1"; type="cran"; sha256="0glvw1jdyc8w8b8m7l74d0rl74xfs4zmanmx4i41l7ynswhmqm01"; depends=[MassSpecWavelet ]; };
specL = derive { name="specL"; version="1.0.0"; type="bioc"; sha256="03igq0cb134kfr36g3gsvzj8n4hz5zwmg2j0pd4zhr500d9sxfs7"; depends=[DBI RSQLite seqinr protViz ]; };
speccalt = derive { name="speccalt"; version="0.1.1"; type="cran"; sha256="0j7rbidmmx78vgwsqvqjbjjh92fnkf2sdx0q79xlpjl2dph7d6l6"; depends=[ ]; };
specificity = derive { name="specificity"; version="0.1.1"; type="cran"; sha256="1gvlyx9crkzm3yyp1ln5j9czcg83k7grm6ijabhl919gjjr1p60n"; depends=[car ]; };
spectralGP = derive { name="spectralGP"; version="1.3.2"; type="cran"; sha256="0gzkwi3npb97y06gvsidaq75h8lg1cvkq8mr9hxp9n7ib6n924v9"; depends=[ ]; };
speedglm = derive { name="speedglm"; version="0.2-1.0"; type="cran"; sha256="13gjij9pb65j9c52d5cxl9n6fjmcwbhja4wdl4619dy5rj9vsyi4"; depends=[Matrix ]; };
speff2trial = derive { name="speff2trial"; version="1.0.4"; type="cran"; sha256="0dj5mh2sdp6j4ijgv14hjr39rasab8g83lx1d9y50av11yhbf2pw"; depends=[leaps survival ]; };
sperich = derive { name="sperich"; version="1.5-5"; type="cran"; sha256="0xwzyfx3z06lapvhzdzrfr9hw2hm8d0cyfmc29p5fcplmjm24idh"; depends=[ ]; };
sperrorest = derive { name="sperrorest"; version="0.2-1"; type="cran"; sha256="17jq8r98pq3hsyiinxg30lddxwpwi696srsvm3lfxrzk11076j6v"; depends=[ROCR rpart ]; };
spfrontier = derive { name="spfrontier"; version="0.1.12"; type="cran"; sha256="1jy1604gppis7vbn55pv13bywy1aqwzshwj03bbfln0qxikzqzi0"; depends=[moments ezsim tmvtnorm mvtnorm maxLik spdep ]; };
spgrass6 = derive { name="spgrass6"; version="0.8-6"; type="cran"; sha256="0vpv2vycd6rdnwm1f73733x1nclhr2x4x1s5116szskni77b0pii"; depends=[sp XML ]; };
spgs = derive { name="spgs"; version="1.0"; type="cran"; sha256="1f75dvp6m5w5phg158ykvl4myvw6q4vysb2pc3bgm0f9fpcadfip"; depends=[ ]; };
spgwr = derive { name="spgwr"; version="0.6-26"; type="cran"; sha256="02kwpg927r2d2zrnhb5cjp1p8j0pal344hzvzsl4d0hz0xcipp8f"; depends=[sp ]; };
sphereplot = derive { name="sphereplot"; version="1.5"; type="cran"; sha256="1i1p20h95cgw5wqp9bwfs9nygm4dxzsggz08ncjs1xrsvhhq9air"; depends=[rgl ]; };
sphet = derive { name="sphet"; version="1.6"; type="cran"; sha256="0149wkak7lp2hj69d83rn05fzh9bsvyc1kyg0d3b69sx92kqlwr0"; depends=[nlme spdep Matrix sp ]; };
spi = derive { name="spi"; version="1.1"; type="cran"; sha256="0gc504f7sji5x0kmsidnwfm7l5g4b1asl3jkn2jzsf2nvjnplx1z"; depends=[ ]; };
spider = derive { name="spider"; version="1.3-0"; type="cran"; sha256="1p6f8mlm055xq3qwa4bqn9kvq60p8fn2w0cc6qcr22cblm5ww7jp"; depends=[ape pegas ]; };
spiders = derive { name="spiders"; version="1.0"; type="cran"; sha256="1n3ym9vc3vzjzm35z29sz4mz8sa25r761y0ph45srhq0lv7c66w6"; depends=[plyr ]; };
spikeLI = derive { name="spikeLI"; version="2.26.0"; type="bioc"; sha256="1hdrrlkiiqkaypp425cgggjcwb3gdsd0v0frqqx3bb845r91x42x"; depends=[ ]; };
spikeSlabGAM = derive { name="spikeSlabGAM"; version="1.1-8"; type="cran"; sha256="0h9b3hhnsqbxbxww7jhbkqf1wl72q347naxpjjbz3q5p2y8yli4z"; depends=[ggplot2 akima coda cluster gridExtra MASS MCMCpack mvtnorm R2WinBUGS reshape scales ]; };
spikeslab = derive { name="spikeslab"; version="1.1.5"; type="cran"; sha256="0dzkipbrpwki6fyk4hqlql3yhadwmclgbrx00bxahrmlaz1vjzh2"; depends=[lars randomForest ]; };
spkTools = derive { name="spkTools"; version="1.22.0"; type="bioc"; sha256="0dw27jfmdjn75ga086a19inl6xc02jpwk9vjc3yvayp67i8nh1mb"; depends=[Biobase Biobase gtools RColorBrewer ]; };
splancs = derive { name="splancs"; version="2.01-37"; type="cran"; sha256="0q548i76107laa9yrsjxqvwhl8zyhlib557qqr8aa7kjg6j0p5fn"; depends=[sp ]; };
spliceR = derive { name="spliceR"; version="1.8.0"; type="bioc"; sha256="1v6451mry0sjj1bi3s2da6dymq1650pk1g7h09ckdvsvhnyrfmxq"; depends=[cummeRbund rtracklayer VennDiagram RColorBrewer plyr GenomicRanges IRanges ]; };
spliceSites = derive { name="spliceSites"; version="1.4.0"; type="bioc"; sha256="1y93fzsmw15gqn1l9i4qkds4xfvlsv9ynlwkxwfdrd5vy6sclahr"; depends=[rbamtools refGenome doBy Biobase Biostrings seqLogo BiocGenerics ]; };
splicegear = derive { name="splicegear"; version="1.38.0"; type="bioc"; sha256="1sxvd2qvvbhcrsmij8jz9r9l6zk2a8idmhrrf1hkmkx8a9xkdq9r"; depends=[Biobase annotate Biobase XML ]; };
splitstackshape = derive { name="splitstackshape"; version="1.4.2"; type="cran"; sha256="0m9karfh0pcy0jj3dzq87vybxv9gmcrq5m2k7byxpki95apbrsmg"; depends=[data_table ]; };
splm = derive { name="splm"; version="1.3-7"; type="cran"; sha256="1bfi80vg129v8d0vp7sigbhskl227lmbry1vmklvcczrjqf2bh45"; depends=[spdep plm maxLik MASS bdsmatrix ibdreg nlme Matrix spam ]; };
splots = derive { name="splots"; version="1.32.0"; type="bioc"; sha256="1bz76nvplm862072m4dd6bm7qb93fld7lwsx18jah7xkjrr3alp6"; depends=[RColorBrewer ]; };
spls = derive { name="spls"; version="2.2-1"; type="cran"; sha256="0zgk9qd825zqgikpkg13jm8hi6ncg48qw5f985bi145nwy9j19xs"; depends=[MASS nnet pls ]; };
splus2R = derive { name="splus2R"; version="1.2-0"; type="cran"; sha256="0kmyr1azyh0m518kzwvvgz7hv1x5myj37xn7w2gfn0vbn5xl8pv1"; depends=[ ]; };
splusTimeDate = derive { name="splusTimeDate"; version="2.5.0-135"; type="cran"; sha256="0hghggdcr70vfjx4npj37nmd96qvgrp1gpwa9bznvjkvyfawwy6i"; depends=[ ]; };
splusTimeSeries = derive { name="splusTimeSeries"; version="1.5.0-73"; type="cran"; sha256="1csk0ffgg1bi2k1m2bbxl6aqqqxf6i8sc8d4azip8ck7rn8vya46"; depends=[splusTimeDate ]; };
spnet = derive { name="spnet"; version="0.9.0.6"; type="cran"; sha256="1kbf53ww2wdr2nsml9zhzd80dhi48izw1nwjszv9jqidd6nk7v29"; depends=[sp shape ]; };
spocc = derive { name="spocc"; version="0.2.4"; type="cran"; sha256="0hhjdx3vgzfwf368pvmapgb5hll659mwkyzvgagvzz90sm44134a"; depends=[ggplot2 rgbif rinat rbison ecoengine rebird AntWeb ggmap maptools rworldmap sp rgeos lubridate RColorBrewer httr rgdal leafletR whisker gistr ]; };
sporm = derive { name="sporm"; version="1.1"; type="cran"; sha256="07sxz62h4jb7xlqg08sj4wpx121n9jfk65196mnxdvb36lqmb4hp"; depends=[ ]; };
spotSegmentation = derive { name="spotSegmentation"; version="1.40.0"; type="bioc"; sha256="02k3d3kz8rssn6c8y5ywwsynh3zjnkxwy7w4d16zx4haivrpziyn"; depends=[mclust ]; };
sprex = derive { name="sprex"; version="1.1"; type="cran"; sha256="1lwkdi8g1dlfdnxxvspgpz6f5h2gml176xhfrcxa9gcy3y9rlcpm"; depends=[ ]; };
sprint = derive { name="sprint"; version="1.0.7"; type="cran"; sha256="1yzx1qjpxx9yc0hbm1mmha5b7aq13iflq66af597b7yj6abm7zjp"; depends=[rlecuyer ff randomForest boot e1071 ]; };
sprinter = derive { name="sprinter"; version="1.1.0"; type="cran"; sha256="12v4l4fxijh2d46yzs0w4235a8raip5rfbxskl0dw7701ryh7n8g"; depends=[CoxBoost survival GAMBoost randomForestSRC LogicReg ]; };
sprm = derive { name="sprm"; version="1.1"; type="cran"; sha256="0xnbdnzgf54r93bvnyjcdcqlr0q7s7f2cvayw681zi0ig3z633j0"; depends=[ggplot2 cvTools reshape2 pcaPP ]; };
sprsmdl = derive { name="sprsmdl"; version="0.1-0"; type="cran"; sha256="09klwsjp5w6p7dkn5ddmqp7m9a3zcmpr9vhcf00ynwyp1w7d26gi"; depends=[ ]; };
spsmooth = derive { name="spsmooth"; version="1.1-3"; type="cran"; sha256="09b740586zyi8npq0bmy8qifs9rq0rzhs9c300fr6pjpc7134xn4"; depends=[mgcv ]; };
spsurvey = derive { name="spsurvey"; version="3.0"; type="cran"; sha256="15i10a6hhk1wwnyd4lbrqaql8i4s10302bxmpr0s5cyifs084l77"; depends=[sp deldir foreign MASS rgeos ]; };
spt = derive { name="spt"; version="1.13-8-8"; type="cran"; sha256="18s74pxfmsjaj92z2a34nq90caf61s84c616yv33a0xvfvp32qr5"; depends=[ ]; };
sptm = derive { name="sptm"; version="14.10-11"; type="cran"; sha256="1g7dqfsyy0cvv3idx16bpny9z4f638aprbc50x8kk4zfk3km7wnr"; depends=[survival survey kyotil ]; };
spuRs = derive { name="spuRs"; version="2.0.0"; type="cran"; sha256="0lbc3nny6idijdaxrxfkfrn40bxfyp9z3yl9mwb1k6cyd10v5mfj"; depends=[MASS lattice ]; };
sqldf = derive { name="sqldf"; version="0.4-10"; type="cran"; sha256="0n8yvrg3gjgbc3vzq0vlf7fwhgm28kwf0jv25qy44x21n6fg11h7"; depends=[gsubfn proto RSQLite DBI chron ]; };
sqliter = derive { name="sqliter"; version="0.1.0"; type="cran"; sha256="17jjljq60szz0m8p2wc5l56659aap7an5gknc848dp89ycjgj3zx"; depends=[stringr functional DBI RSQLite ]; };
sqlshare = derive { name="sqlshare"; version="1.0.3"; type="cran"; sha256="1qy8vlzi6i4wsr53i71jlsv1b7ww254mbk2qzsvmcrranf42zbp8"; depends=[RCurl ]; };
sqlutils = derive { name="sqlutils"; version="1.2"; type="cran"; sha256="0dq4idg8i4hv9xg8jllllizqf3s75pdfm1wgncdjj52xhxh169pf"; depends=[roxygen2 stringr DBI ]; };
squash = derive { name="squash"; version="1.0.6"; type="cran"; sha256="16iplngzzlif999z821a9bwx9jlmikdvwnk6p6d9w75b1fsbc0pz"; depends=[ ]; };
sra = derive { name="sra"; version="0.1.1"; type="cran"; sha256="03nqjcydl58ld0wq1f9f5p666qnvdfxb5vhd584sdilw1b730ykd"; depends=[ ]; };
srd = derive { name="srd"; version="1.0"; type="cran"; sha256="04j2gj7fn7p2rm34haayswrfhn6w5lln439d07m9g4c020kqqsr3"; depends=[plyr animation colorspace stringr survival ]; };
ss3sim = derive { name="ss3sim"; version="0.8.2"; type="cran"; sha256="1gj3kf4ccd5n2jr4sm50gny5x1zq4brkhqgw0nww41spnimascfr"; depends=[plyr r4ss gtools lubridate reshape2 ]; };
ssanv = derive { name="ssanv"; version="1.0-2"; type="cran"; sha256="18ib0djqxjpp4xgvsffwqgxqljpwc24ysxj26phpr6p8kdl3hr2f"; depends=[ ]; };
sscore = derive { name="sscore"; version="1.38.0"; type="bioc"; sha256="0bxclcx3xbsqs1i2w80rh8amzsxzv5mavbpy81pgrqsnqhldriyd"; depends=[affy affyio ]; };
ssd = derive { name="ssd"; version="0.3"; type="cran"; sha256="1z61n9m6vn0ijawyz924ak0zfl9z13jsb4k4575b7c424ci2p6gy"; depends=[ ]; };
sse = derive { name="sse"; version="0.5-4"; type="cran"; sha256="126dc4gk0hynwfz887d3wdcs7xacmmjhpf82sbhmhvg73dc1r5jz"; depends=[lattice ]; };
ssfa = derive { name="ssfa"; version="1.0"; type="cran"; sha256="119r3li4dwflm4kkk6q9hax12rhi02v7w4v2p31dq122fz10s4a6"; depends=[Matrix maxLik spdep sp ]; };
ssfit = derive { name="ssfit"; version="1.1"; type="cran"; sha256="1fais0msi2ppgfp0vbx3qri7s9zs51i7n90w36xkwwac4f46bq5y"; depends=[survey ]; };
ssh_utils = derive { name="ssh.utils"; version="1.0"; type="cran"; sha256="08313zzzgcyvzkrkq0w0yf748ya1a9shx5xnan5891v0lah9v0b1"; depends=[stringr ]; };
ssize = derive { name="ssize"; version="1.40.0"; type="bioc"; sha256="1fb3c28v7p3fgpciv9b7v7clyiyyaiaz6r4hjkvdcf236xs1kjwm"; depends=[gdata xtable ]; };
ssize_fdr = derive { name="ssize.fdr"; version="1.2"; type="cran"; sha256="0y723lwsnmk3rxbhlsrny9hiy07a5p255ygy9qkj6mri64gk1hby"; depends=[ ]; };
ssizeRNA = derive { name="ssizeRNA"; version="1.1.2"; type="cran"; sha256="11dnc3wqj0i5blzc9ndpgl48xm5fibjgx9sxrzdcza0gbj8qpadm"; depends=[MASS Biobase edgeR limma qvalue ssize_fdr ]; };
ssmrob = derive { name="ssmrob"; version="0.4"; type="cran"; sha256="1inndspir7571f54kalbj0h599v9k6dxdmp0n1l5r3a62vn45hd3"; depends=[sampleSelection robustbase mvtnorm MASS ]; };
sspline = derive { name="sspline"; version="0.1-6"; type="cran"; sha256="0d6ms8szyn39c7v0397d5ar2hrl8v1l2b7m8hlj37hgp70b9s55h"; depends=[ ]; };
sspse = derive { name="sspse"; version="0.5-1"; type="cran"; sha256="0gih9d0g4kp08c4v01p699lavb491khyj16i8vldhcb194bvs8m5"; depends=[coda ]; };
sss = derive { name="sss"; version="0.0-11"; type="cran"; sha256="0k7p1ws0w7wg9wyxcg1zpk8q6kr32l3jl6yd9r4qmzq04dwqrdgz"; depends=[plyr XML ]; };
ssvd = derive { name="ssvd"; version="1.0"; type="cran"; sha256="1fdpr38qi59ijrz16jixn6ii1hvmxfjirjqfcp7dxrqz9nx8x0sk"; depends=[ ]; };
ssviz = derive { name="ssviz"; version="1.0.0"; type="bioc"; sha256="0y0nvlvwfhf1nhghxaigskh4rsjjfy59lnbr2s8jqswzk39n6843"; depends=[Rsamtools Biostrings reshape ggplot2 RColorBrewer ]; };
ssym = derive { name="ssym"; version="1.5.2"; type="cran"; sha256="0c3c4disiicavr8m2yvvi2k38gnw4akdqp0f1v6647i5zj160zkr"; depends=[GIGrvg numDeriv normalp Formula ]; };
st = derive { name="st"; version="1.2.4"; type="cran"; sha256="1lnrzz7kc21mrs8xrqs21fcwd92d5kzhvfiq36j02982n18f6c64"; depends=[sda fdrtool corpcor ]; };
staRank = derive { name="staRank"; version="1.8.0"; type="bioc"; sha256="0yzcz2vpx7gxswy6rxdp59qfsa2jiy35kya2i2n3yrpnhb0s7wbm"; depends=[cellHTS2 ]; };
staTools = derive { name="staTools"; version="0.1.0"; type="cran"; sha256="1ksr0sjkhlwh0fkwcxjcxzbyxs1g78m4spkhrmgdpfzmk5zskqf9"; depends=[Rcpp VGAM magicaxis Rcpp ]; };
stab = derive { name="stab"; version="0.1.9"; type="cran"; sha256="1awf8bj3c4wvs818g4wfmw23vdhv06kn229cmhqbr7dsz933vwwf"; depends=[MASS reshape ]; };
stabledist = derive { name="stabledist"; version="0.7-0"; type="cran"; sha256="06xd3kkyand0gzyj5phxlfjyygn5jlsq7gbwh62pc390by7ld2c7"; depends=[ ]; };
stabs = derive { name="stabs"; version="0.5-1"; type="cran"; sha256="0mlwbf8wf38mr39si31i4iz00hpsmchbhgagwgsf3x9422zpq92p"; depends=[ ]; };
stackoverflow = derive { name="stackoverflow"; version="0.1.2"; type="cran"; sha256="1psw96iscgsx11drmcnh0yjg2jjcaa4akmywh337i6gbgam8kj61"; depends=[ ]; };
stacomirtools = derive { name="stacomirtools"; version="0.3"; type="cran"; sha256="1lbbnvmilf3j3hyhvpkyjd4b4sf3zwygilb8x0kjn2jfhkxnx4c1"; depends=[RODBC xtable ]; };
stagePop = derive { name="stagePop"; version="1.1-1"; type="cran"; sha256="0949r5ibl3sb10sr5xsswxap3wd824riglrylk7fx43ynsv5hzpy"; depends=[deSolve PBSddesolve ]; };
stam = derive { name="stam"; version="0.0-1"; type="cran"; sha256="1x1j45fir64kffny0nssb2hwn4rcp8gd2cjv6fw4yy0l4d0xi5iv"; depends=[np sp ]; };
stargazer = derive { name="stargazer"; version="5.1"; type="cran"; sha256="0ar0qm289ncsns2pqkabpyjc90ws0il1q7fp5206wqghgsvqjcc0"; depends=[ ]; };
startupmsg = derive { name="startupmsg"; version="0.9"; type="cran"; sha256="1l75w4v1cf4kkb05akhgzk5n77zsj6h20ds8y0aa6kd2208zxd9f"; depends=[ ]; };
stashR = derive { name="stashR"; version="0.3-5"; type="cran"; sha256="1lnpi1vb043aj4b9vmmy56anj4344709986b27hqaqk5ajzq9c3w"; depends=[filehash digest ]; };
statar = derive { name="statar"; version="0.1.3"; type="cran"; sha256="1lkbp6ki4w0gm3l683xar44vrkw69883qvr73mc179bdh31znqli"; depends=[data_table dplyr ggplot2 Hmisc lazyeval lfe lubridate matrixStats stargazer stringr tidyr ]; };
statcheck = derive { name="statcheck"; version="1.0.1"; type="cran"; sha256="01b40bjagkj6hfyq9ppdlaafwgykv8p9s8sm0abd3if82ivdpixj"; depends=[plyr ]; };
statebins = derive { name="statebins"; version="1.0"; type="cran"; sha256="1mqky4nb31xjhn922csvv8ps2fwgcgazxs56rcn3ka32c59a4mmg"; depends=[ggplot2 scales gridExtra RColorBrewer ]; };
statfi = derive { name="statfi"; version="0.9.8"; type="cran"; sha256="0kg9bj2mmd95ysg604rcg4szqx3whbqm14fwivnd110jgfy20gk2"; depends=[pxR ]; };
statmod = derive { name="statmod"; version="1.4.21"; type="cran"; sha256="138lh9qa25w6vaksbq43iqisj4c8hvmkjc3q81fn7m8b7zlnz6da"; depends=[ ]; };
statnet = derive { name="statnet"; version="2014.2.0"; type="cran"; sha256="0xp8xnqb32wzkxfm7f34z6mnsd9id8an5829n16czwldj9vv6s10"; depends=[network ergm sna networkDynamic tergm ergm_count latentnet statnet_common ]; };
statnet_common = derive { name="statnet.common"; version="3.2.2"; type="cran"; sha256="1xdkc1pyf6wfb86dwz6bkjli5qw6yz6dvlxwp5bpgkpg83aa9n7g"; depends=[ ]; };
stcm = derive { name="stcm"; version="0.1.0"; type="cran"; sha256="0j2yhmg6m69igg3ilrf7rq3l37aqab7h4fx08k3gfgc8005w7ils"; depends=[QCA plyr ggplot2 XML randomForest caret dendextend magrittr ]; };
steepness = derive { name="steepness"; version="0.2-2"; type="cran"; sha256="0bw7wm7n2xspkmj90qsjfssnig683s3qwg1ndkq2aw3f6clh4ilm"; depends=[ ]; };
stellaR = derive { name="stellaR"; version="0.3-3"; type="cran"; sha256="098sz6b8pl3fyca3g6myp97nna368xhxf8krmibadnnsr49q5zs9"; depends=[ ]; };
stepNorm = derive { name="stepNorm"; version="1.38.0"; type="bioc"; sha256="0267smjz132lj2ka0ccvgdn12r416hc9wqlbdzix59i80py45hwh"; depends=[marray marray MASS ]; };
stepPlr = derive { name="stepPlr"; version="0.92"; type="cran"; sha256="16j32sk7ri4jdgss7vw5zz7s42rxk7rs376iyxzzpy1zcc9b64rv"; depends=[ ]; };
stepR = derive { name="stepR"; version="1.0-2"; type="cran"; sha256="1z2jncjhaxzxw5kqa8s3jlsl9blz3b7hlnzr3phfhwmb1hr6r56k"; depends=[ ]; };
stepp = derive { name="stepp"; version="3.0-11"; type="cran"; sha256="0jrwfvcgh3sjm3zag93kjyny2qqsyiw988vnx6jw7s31bv9g0d6s"; depends=[car survival ]; };
stepwise = derive { name="stepwise"; version="0.3"; type="cran"; sha256="1lbx1bxwkf9dw6q46w40pp7h5nkxgghmx8rkpaymm6iybc7gyir2"; depends=[ ]; };
stepwiseCM = derive { name="stepwiseCM"; version="1.12.0"; type="bioc"; sha256="1p5yhz2s4ad30p47bx0vmvfdm8y7adcvdi5ydqg3g0zdh2akvg21"; depends=[randomForest MAclinical tspair pamr snowfall glmpath penalized e1071 Biobase ]; };
stheoreme = derive { name="stheoreme"; version="1.2"; type="cran"; sha256="14w3jcbs8y8cz44xlq8yybr2jwgk3w7s2msgjhlp1vazy8959s65"; depends=[ ]; };
stilt = derive { name="stilt"; version="1.0.1"; type="cran"; sha256="1vrbbic0vqzgy574kzcr38iqyhax4wa6zl6w74n65z15map2fyma"; depends=[fields ]; };
stima = derive { name="stima"; version="1.1"; type="cran"; sha256="1i8l7pfnqxx660h3r2jf6a9bj5ikg9hw7v8apwk98ms8l7q77p5l"; depends=[rpart ]; };
stinepack = derive { name="stinepack"; version="1.3"; type="cran"; sha256="0kjpcjqkwndqs7cyc6w62z1nnkqmhkifz2w0bi341jh0ybmak4fq"; depends=[ ]; };
stm = derive { name="stm"; version="1.0.8"; type="cran"; sha256="0dnzkqh3hnnjm0wmzpn48bwylmh49a8ib263bzvjaqpi70mck49p"; depends=[matrixStats slam lda stringr Matrix glmnet ]; };
stmCorrViz = derive { name="stmCorrViz"; version="1.1"; type="cran"; sha256="03bjxil8v4ixgbabg2gq78xgqy4s3wh89hq1z5598gxysz12z3ji"; depends=[jsonlite stm ]; };
stocc = derive { name="stocc"; version="1.23"; type="cran"; sha256="183rv1l1hpa691f3xf455bv8dzdw6ac79zg3v99zksli6i7c8jdz"; depends=[truncnorm coda Matrix fields ]; };
stochprofML = derive { name="stochprofML"; version="1.2"; type="cran"; sha256="0gqfm2l2hq1dy3cvg9v2ksphydqdmaj8lppl5s5as2khnh6bd1l1"; depends=[MASS numDeriv ]; };
stochvol = derive { name="stochvol"; version="1.1.0"; type="cran"; sha256="1ca48vwmc9b8g6v1w07hfgx7zs8a39s6lxczpifpvcmc4ixka8yb"; depends=[coda Rcpp Rcpp ]; };
stockPortfolio = derive { name="stockPortfolio"; version="1.2"; type="cran"; sha256="0k5ss6lf9yhcvc4hwqmcfpdn6qkbq5kaw0arldkl46391kac3bd1"; depends=[ ]; };
stocks = derive { name="stocks"; version="1.1.1"; type="cran"; sha256="1qwd16bw40w2ns7b0n9wm8l344r4vyk27rmg0vr5512zsrcjkcfb"; depends=[rbenchmark Rcpp Rcpp ]; };
stoichcalc = derive { name="stoichcalc"; version="1.1-3"; type="cran"; sha256="0z9fnapibfp070jxg27k74fdxpgszl07xiqfj448dkydpg8ydkrb"; depends=[ ]; };
stosim = derive { name="stosim"; version="0.0.12"; type="cran"; sha256="0c4sj5iirm542hx782izfdmy2m3kl5q28l10xjj0ib4xn5y6yx3c"; depends=[tcltk2 Rcpp Rcpp ]; };
stpp = derive { name="stpp"; version="1.0-5"; type="cran"; sha256="1444dbwm0nyb5k8xjfrm25x984a7h9ln2vddrwjszfpmscv0iwm1"; depends=[splancs KernSmooth spatstat ]; };
stppResid = derive { name="stppResid"; version="1.1"; type="cran"; sha256="0hgzsyy5y0sqd4d2agdr7p2kq0w51vs8f63dvj6j49h8cvgiws2x"; depends=[deldir splancs cubature ]; };
strap = derive { name="strap"; version="1.4"; type="cran"; sha256="0gdvx02w0dv1cq9bb2yvap00lsssklfnqw0mwsgblcy2j6fln7b0"; depends=[ape geoscale ]; };
strataG = derive { name="strataG"; version="0.9.4"; type="cran"; sha256="0lxp6s0gfqxyla7mx19fbx6w8am3islv02iyyixi94xbwphpcqf3"; depends=[swfscMisc pegas ape MASS reshape2 Rcpp ]; };
stratification = derive { name="stratification"; version="2.2-5"; type="cran"; sha256="0cgr49gvh12s6rr43878jxjkir7b7absqgbfsvj1bjlf2r3gyqy9"; depends=[ ]; };
stratigraph = derive { name="stratigraph"; version="0.66"; type="cran"; sha256="1idn5rwar9pxp1vsra68wrlhagmc92y5rs7vn4h63p35p357qdwz"; depends=[ ]; };
straweib = derive { name="straweib"; version="1.0"; type="cran"; sha256="0bh2f4n4i7fiki52sa57v96757qw1gn1lcn7vgxmc5hk5rzp2mi8"; depends=[ ]; };
stream = derive { name="stream"; version="1.1-2"; type="cran"; sha256="1d0f7qffwfn1k7bdj8r3gr1s34lq3y80iw8clak1r0vv4kxi4lph"; depends=[hash proxy animation clue cluster clusterGeneration fpc MASS mlbench Rcpp Rcpp ]; };
streamMOA = derive { name="streamMOA"; version="1.1-0"; type="cran"; sha256="0h45saz5jf9jfsajy987ljpfpm2cxigyqkgmybd0m3aqyrqlljbc"; depends=[stream rJava ]; };
streamR = derive { name="streamR"; version="0.2.1"; type="cran"; sha256="1ml33mj7zqlzfyyam23xk5d25jkm3qr7rfj2kc5j5vgsih6kr0gl"; depends=[RCurl rjson ]; };
stremo = derive { name="stremo"; version="0.2"; type="cran"; sha256="13b9xnd8ykxrm8gnakh0ixbsb7yppqv3isga8dsz473wzy82y6h1"; depends=[lavaan numDeriv MASS ]; };
stressr = derive { name="stressr"; version="1.0.0"; type="cran"; sha256="00b93gfh1jd5r7i3dhsfqjidrczf693kyqlsa1krdndg8f0jkyj7"; depends=[xts XML lattice latticeExtra ]; };
stringdist = derive { name="stringdist"; version="0.9.0"; type="cran"; sha256="0304a3qyssq2l2c7da5a90fca32n3ph5jixqnqvb3jwzdb8dxm2f"; depends=[ ]; };
stringi = derive { name="stringi"; version="0.4-1"; type="cran"; sha256="01ig59cmvrk9vfh4l84i2h4vgddfspyrxwh3am33apv8r8vr4bnj"; depends=[ ]; };
stringr = derive { name="stringr"; version="1.0.0"; type="cran"; sha256="0jnz6r9yqyf7dschr2fnn1slg4wn6b4ik5q00j4zrh43bfw7s9pq"; depends=[stringi magrittr ]; };
strucchange = derive { name="strucchange"; version="1.5-0"; type="cran"; sha256="17ikp36ahnsx1q3avqkz5r2n2yagzq7j6m515vdm8rxgv0538is3"; depends=[zoo sandwich ]; };
structSSI = derive { name="structSSI"; version="1.1.1"; type="cran"; sha256="06rwmrgqc4qy4x0bhlshjdsjxfmp5fr9d1wjglhlb1gbp72fmkdv"; depends=[multtest igraph rjson ggplot2 reshape2 ]; };
strum = derive { name="strum"; version="0.6.1"; type="cran"; sha256="128xrprdmncnn2a7z6g2qzkps323qq33g3fxh1q23ys11p37dnjw"; depends=[pedigree Rgraphviz Matrix MASS Rcpp graph Rcpp RcppArmadillo ]; };
strvalidator = derive { name="strvalidator"; version="1.4.0"; type="cran"; sha256="1zgfy5w4qwcm3jdqigahxi7xn8328jr568ssbj99ibzdj0m0hmfw"; depends=[gridExtra ggplot2 gWidgets gtable plyr scales gWidgetsRGtk2 RGtk2 data_table ]; };
stsm = derive { name="stsm"; version="1.7"; type="cran"; sha256="080xakf7rf53vzv64g338hz87sk4cqfwd6ly4f122sxvn4xypq3n"; depends=[KFKSDS ]; };
stsm_class = derive { name="stsm.class"; version="1.3"; type="cran"; sha256="19jrja5ff31gh5k2zqhqsyd7w2ivr4s6bkliash6x8fmd22h5zs8"; depends=[ ]; };
stylo = derive { name="stylo"; version="0.5.9"; type="cran"; sha256="061nfjh932qjlzvnarpwvzar0qv7ij8l6m3iax1jilygzhfqfyin"; depends=[tcltk2 ape pamr e1071 class lattice tsne ]; };
suRtex = derive { name="suRtex"; version="0.9"; type="cran"; sha256="0xcy3x1079v10bn3n3y6lxignb9n3h57w4hhrvzi5y14x05jjyda"; depends=[ ]; };
subgroup = derive { name="subgroup"; version="1.1"; type="cran"; sha256="1n3qw7vih1rngmp4fwjbs050ngby840frj28i8x7d7aa52ha2syf"; depends=[ ]; };
subplex = derive { name="subplex"; version="1.1-4"; type="cran"; sha256="0c6y5ibyxh0mpn77f7kwrmkpb3mah10hbqhwqmz4i1lfv58mb4zk"; depends=[ ]; };
subrank = derive { name="subrank"; version="0.9.1"; type="cran"; sha256="0ghfpvw7aflbnnisn3rq8vrpi134ghm6vnyb7md1gi730mqgxfxv"; depends=[ ]; };
subselect = derive { name="subselect"; version="0.12-5"; type="cran"; sha256="00wlkj6p0p2x057zwwk1xdvji25yakgagf98ggixmvfrk1m1saa4"; depends=[ ]; };
subsemble = derive { name="subsemble"; version="0.0.9"; type="cran"; sha256="0vzjmxpdwagqb9p2r4f2xyghmrprx3nk58bd6zfskdgj0ymfgz5z"; depends=[SuperLearner ]; };
subtype = derive { name="subtype"; version="1.0"; type="cran"; sha256="1094q46j0njkkqv09slliclp3jf8hkg4147hmisggy433xwd19xh"; depends=[penalized ROCR ]; };
sudoku = derive { name="sudoku"; version="2.6"; type="cran"; sha256="13j7m06m38s654wn75kbbrin5nqda4faiawlsharxgrljcibcbrk"; depends=[ ]; };
sudokuAlt = derive { name="sudokuAlt"; version="0.1-4"; type="cran"; sha256="14jqwsp692dq0bfnk2i70qc42inb6jbissvp88c5r2cgzc1ry072"; depends=[ ]; };
summarytools = derive { name="summarytools"; version="0.3"; type="cran"; sha256="1hhkhpyaj8sc62vap5s7ds0kmk1jiy6gdvsz65ynqy2qfz58c3ms"; depends=[htmltools pander xtable rapportools rstudioapi ]; };
supclust = derive { name="supclust"; version="1.0-7"; type="cran"; sha256="0437pccagvqv6ikdsgzpif9yyiv6p24lhn5frk6yqby2asj09727"; depends=[rpart class ]; };
supcluster = derive { name="supcluster"; version="1.0"; type="cran"; sha256="1rkd4bpzzvzbmqaj907pqv53hxcgic0jklbsf5iayf0ra768b5w6"; depends=[mvtnorm gtools ]; };
superMDS = derive { name="superMDS"; version="1.0.2"; type="cran"; sha256="0jxbwm3izk7bc3bd01ygisn6ihnapg9k5lr6nbkr96d3blpikk04"; depends=[ ]; };
superbiclust = derive { name="superbiclust"; version="1.1"; type="cran"; sha256="1gzjbzbl8y1nzdfhyd6dlrwjq8mwj43a26qav84s1bdzwx6dra48"; depends=[biclust fabia Matrix ]; };
superdiag = derive { name="superdiag"; version="1.1"; type="cran"; sha256="0pa3mv74riabpm7j4587zww2364fszzlw48ijj1apcgz8y6pyqbw"; depends=[coda boa ]; };
superpc = derive { name="superpc"; version="1.09"; type="cran"; sha256="1p3xlg2n7p57n54g2w4frfrng5vjh97kp6ax4mrgvj3pqmd1m69z"; depends=[survival ]; };
support_BWS = derive { name="support.BWS"; version="0.1-3"; type="cran"; sha256="1qlh2zgmr3b6gz3xmncjawgg08c6kgfg3d2m9x78iw95x7p3p5h8"; depends=[ ]; };
support_CEs = derive { name="support.CEs"; version="0.3-3"; type="cran"; sha256="0772j0sssf6fwig9v1ra83fwas8109yf30n0xq8s5cxsnnn41m2y"; depends=[DoE_base MASS simex ]; };
supraHex = derive { name="supraHex"; version="1.4.0"; type="bioc"; sha256="1qq2cbq04623qp1yb22dkiz5d7gz7fspia4601jhair1c129vm4g"; depends=[hexbin ape MASS ]; };
surface = derive { name="surface"; version="0.4-1"; type="cran"; sha256="0z7fh09hjmxfmqzi588gjwqqlpj1a475aixrnvy911lkx3zfk146"; depends=[ape ouch MASS geiger ]; };
surv2sampleComp = derive { name="surv2sampleComp"; version="1.0-4"; type="cran"; sha256="1ihz71vzrkd5ksy7421myrgkbww0z5k0ywcb2bfalxx2bd2cs2wf"; depends=[survival plotrix flexsurv survC1 ]; };
survAUC = derive { name="survAUC"; version="1.0-5"; type="cran"; sha256="0bcj982ib1h0sjql09zbvx3h1m96jy9q37krmk6kfzw25ms6bzzr"; depends=[survival ]; };
survAccuracyMeasures = derive { name="survAccuracyMeasures"; version="1.2"; type="cran"; sha256="1i41xkvqpxpq9spryh1syp57ymlzw71ygdjqn41rv8jjc9q52x9g"; depends=[survival Rcpp Rcpp RcppArmadillo ]; };
survC1 = derive { name="survC1"; version="1.0-2"; type="cran"; sha256="1bidjhq3k5ab7gqj1b2afngip7pp6c9c7q0m6ww7h7i2vg505l7v"; depends=[survival ]; };
survIDINRI = derive { name="survIDINRI"; version="1.1-1"; type="cran"; sha256="03lsypx189zm28gv764gdq24a18jj3kpdk91ssa501qxj5jv7v29"; depends=[survival survC1 ]; };
survJamda = derive { name="survJamda"; version="1.1.3"; type="cran"; sha256="03cwp1nw8nnkcjiafysbc1w24fwb7j5ksr01rlpf0g0qdi9zlgwi"; depends=[survival survivalROC ecodist survcomp survJamda_data ]; };
survJamda_data = derive { name="survJamda.data"; version="1.0.2"; type="cran"; sha256="0a010v2ar48i5m0jiqjvdyqm93ckfgfmcmym9a02h0rclnizd75r"; depends=[ ]; };
survMisc = derive { name="survMisc"; version="0.4.6"; type="cran"; sha256="1d16kkzg0clwvv5rgv4rlm79dxhxhhzv9bkx6420izmyx0wjcnhn"; depends=[survival KMsurv combinat Hmisc zoo km_ci ggplot2 data_table gridExtra rpart gam ]; };
survPresmooth = derive { name="survPresmooth"; version="1.1-8"; type="cran"; sha256="1qva7yx4vv99mgh3wqxdnbasa1gy0ixxyxpqrfbn6827whjzf91m"; depends=[ ]; };
survRM2 = derive { name="survRM2"; version="1.0-1"; type="cran"; sha256="1qcjdx4a9b9dg8jkzak6rq4d4byf9377h43f1m3icdgf79vghlhr"; depends=[survival ]; };
survSNP = derive { name="survSNP"; version="0.23.2"; type="cran"; sha256="0vpk5qdvsagv5pnap7ja7smqvibvfp5v7smhikbbwl0h6l83jjw4"; depends=[survival Rcpp lattice foreach xtable Rcpp ]; };
survcomp = derive { name="survcomp"; version="1.16.0"; type="bioc"; sha256="1z03krc9lznry1izaxb91jbw3zghajxfiigfkgdj0n2a5rd3yhwk"; depends=[survival prodlim ipred SuppDists KernSmooth survivalROC bootstrap rmeta ]; };
surveillance = derive { name="surveillance"; version="1.8-3"; type="cran"; sha256="10d170l0ah92awpa9cafxshpvmj3d206fqn5sm7bd73q87mvbgdp"; depends=[sp xtable polyCub Rcpp MASS Matrix spatstat Rcpp ]; };
survexp_fr = derive { name="survexp.fr"; version="1.0"; type="cran"; sha256="12rjpnih0xld4dg5gl7gwxdxmrdmyzsymm7j05v98ynldd1jkjl8"; depends=[survival ]; };
survey = derive { name="survey"; version="3.30-3"; type="cran"; sha256="0vcyph1vpnl4xaqd85ffh1gm0dqhvgr3343q0mlycmyq485x0idy"; depends=[ ]; };
surveydata = derive { name="surveydata"; version="0.1-14"; type="cran"; sha256="1zcp3wb7yhsa59cl4bdw7p08vpviypvfa9hggwc60w7ashpky73i"; depends=[stringr plyr ]; };
survival = derive { name="survival"; version="2.38-1"; type="cran"; sha256="0kq0a6h1bmphp4vi1f3wzs5pddp3zw9vfi7vk6x27zglnwjhkfgm"; depends=[ ]; };
survivalMPL = derive { name="survivalMPL"; version="0.1.1"; type="cran"; sha256="0c4hr2q50snd5qm2drg4qzfkcz4klxr4jba6xpc8n2i8wn573cvc"; depends=[survival ]; };
survivalROC = derive { name="survivalROC"; version="1.0.3"; type="cran"; sha256="0wnd65ff5w679hxa1zrpfrx9qg47q21pjxppsga6m3h4iq1yfj8l"; depends=[ ]; };
survrec = derive { name="survrec"; version="1.2-2"; type="cran"; sha256="0b77ncr1wg2xqqg1bv1bvb48kmd9h3ja2dysiggvprzjrj7hdlmx"; depends=[boot ]; };
survsim = derive { name="survsim"; version="1.1.3"; type="cran"; sha256="1xcmgwzbflm1v7hxj1niwl7386mnp9asgrngs77vrayv056l8nm0"; depends=[eha statmod ]; };
svDialogs = derive { name="svDialogs"; version="0.9-57"; type="cran"; sha256="1qwnimzqz7jam3jnhpr90bgwp9zlsswy2jl17brdpsrpiwcg6jlr"; depends=[svGUI ]; };
svDialogstcltk = derive { name="svDialogstcltk"; version="0.9-4"; type="cran"; sha256="16166f8i6nsg7palqmnlp5b9s91d6ja9n0zm6rcvd2fwnw2ljkr4"; depends=[svDialogs svGUI ]; };
svGUI = derive { name="svGUI"; version="0.9-55"; type="cran"; sha256="1fkkc12mhcbn3s2wzk0xdsp8jl2xmn48ys2an8jhxbww3gplk1rq"; depends=[ ]; };
svHttp = derive { name="svHttp"; version="0.9-55"; type="cran"; sha256="0qxsh6ifk3fszgzz497qwia4pxzplwraf2qnn5cqlv5l79nja5yq"; depends=[svMisc ]; };
svIDE = derive { name="svIDE"; version="0.9-52"; type="cran"; sha256="19wsmi1i7nlnqdah1h2pxzsy8m50bnb282fdbj4219p86bb92a86"; depends=[svMisc XML ]; };
svKomodo = derive { name="svKomodo"; version="0.9-63"; type="cran"; sha256="0x2774lhckhg8kw6plsn6dpks3b3fisb0psa03p7di7jx8vrkg5n"; depends=[svMisc ]; };
svMisc = derive { name="svMisc"; version="0.9-70"; type="cran"; sha256="1xprymz5hblbc929kmbaz0lj633xvgz6mm4snhhjib47cz5anl1w"; depends=[ ]; };
svSocket = derive { name="svSocket"; version="0.9-57"; type="cran"; sha256="0id93b500iybza6sbn60ybm91mkh5cjpvhypqs4f3dv13m6blb9j"; depends=[svMisc ]; };
svSweave = derive { name="svSweave"; version="0.9-8"; type="cran"; sha256="0zkng8lwdpjdbic9f6jnk2ndxbch2kjyz71ds1bksvd3kmk03lks"; depends=[knitr ]; };
svTools = derive { name="svTools"; version="0.9-4"; type="cran"; sha256="0szr5dcxjsh5p1nkszvmj0vmi9x70d656hfvhmqf0wyjwv63vp90"; depends=[codetools svMisc ]; };
svUnit = derive { name="svUnit"; version="0.7-12"; type="cran"; sha256="16iiryj3v34zbnk1x05g30paza7al1frqx52fkw8ka61icizsrf5"; depends=[ ]; };
svWidgets = derive { name="svWidgets"; version="0.9-44"; type="cran"; sha256="18k06wldcg6xpyf8nz9rdbig5nhvghn7zgf1316413kq3v90vz7b"; depends=[svMisc ]; };
sva = derive { name="sva"; version="3.12.0"; type="bioc"; sha256="1x2lh2fl53zv1r97p4gq8jvip99wq2j1wpps7j2qlfh9fclwbbsk"; depends=[mgcv genefilter ]; };
svapls = derive { name="svapls"; version="1.4"; type="cran"; sha256="12gk8wrgp556phdv89jqza22zmsnachsydr5vlz38s664d2lplbg"; depends=[class pls ]; };
svcm = derive { name="svcm"; version="0.1.2"; type="cran"; sha256="1lkik65md8xdxzkmi990dvmbkc6zwkyxv8maypv2vbi2x534jkhl"; depends=[Matrix ]; };
svd = derive { name="svd"; version="0.3.3-2"; type="cran"; sha256="064y4iq4rj2h35fhi6749wkffg37ppj29g9aw7h156c2rqvhxcln"; depends=[ ]; };
svdvisual = derive { name="svdvisual"; version="1.1"; type="cran"; sha256="02mzh2cy4jzb62fd4m1iyq499fzwar99p12pyanbdnmqlx206mc2"; depends=[lattice ]; };
svgViewR = derive { name="svgViewR"; version="1.0.0"; type="cran"; sha256="0js3mc5lxzfwbnc30mn9k9g9jiy2aivqs08x0zcg9dir5n7gs9sg"; depends=[ ]; };
svmpath = derive { name="svmpath"; version="0.953"; type="cran"; sha256="0hqga4cwy1az8cckh3nkknbq1ag67f4m5xdg271f2jxvnmhdv6wv"; depends=[ ]; };
svyPVpack = derive { name="svyPVpack"; version="0.1-1"; type="cran"; sha256="15k5ziy2ng853jxl66wjr27lzc90l6i5qr08q8xgcs359vn02pmp"; depends=[survey ]; };
swamp = derive { name="swamp"; version="1.2.3"; type="cran"; sha256="1xpnq5yrmmsx3d48x411p7nx6zmwmfc9hz6m3v9avvpjkbc3glkg"; depends=[impute amap gplots MASS ]; };
sweidnumbr = derive { name="sweidnumbr"; version="0.2"; type="cran"; sha256="0zsijh9jf0pnil5n69ix408j3plbrnj0235whh9rch486ibyk779"; depends=[lubridate ]; };
swfscMisc = derive { name="swfscMisc"; version="1.0.3"; type="cran"; sha256="0ciwvxpafpc6an58r1ffkab8kj4np6l2kbpkijnqnfbf6cya0aim"; depends=[mapdata maps ]; };
swirl = derive { name="swirl"; version="2.2.21"; type="cran"; sha256="0lpin7frm1a6y9lz0nyykhvydr1qbx85iqy24sm52r1vxycv2r8h"; depends=[stringr testthat httr yaml RCurl digest ]; };
switchBox = derive { name="switchBox"; version="1.0.0"; type="bioc"; sha256="1m5icry27l4hh2h3f7kfph0qc332n2l0miazhaqfazilyw3pvyai"; depends=[ ]; };
switchnpreg = derive { name="switchnpreg"; version="0.8-0"; type="cran"; sha256="1vaanz01vd62ds2g2xv4kjlnvp13h59n8yqikwx07293ixd4qhpw"; depends=[MASS fda expm HiddenMarkov ]; };
sybil = derive { name="sybil"; version="1.2.6"; type="cran"; sha256="1d7q0dvpqxay86dy4zbllv78dsh0amr8n7wl0vkrb8jbakq4afip"; depends=[Matrix lattice ]; };
sybilDynFBA = derive { name="sybilDynFBA"; version="0.0.2"; type="cran"; sha256="1sqk6dwwfrwvgkwk6mra0i1dszhhvcwm58ax6m89sxk8n0nbmr4b"; depends=[sybil ]; };
sybilEFBA = derive { name="sybilEFBA"; version="1.0.2"; type="cran"; sha256="07c32xwql7sr217j8ixqd2pj43hhyr99vjdh7c106lsmqd1pifa4"; depends=[sybil Matrix ]; };
sybilSBML = derive { name="sybilSBML"; version="2.0.8"; type="cran"; sha256="1sxp0naws7d1ak0xna1sy87zzjrravwax0qvcd6vy4p0f39z06ci"; depends=[Matrix sybil ]; };
sybilccFBA = derive { name="sybilccFBA"; version="2.0.0"; type="cran"; sha256="0x0is1a56jyahaba6dk9inj5v248m8n46f70ynqyqp1xpiax1fkr"; depends=[sybil Matrix ]; };
sybilcycleFreeFlux = derive { name="sybilcycleFreeFlux"; version="1.0.1"; type="cran"; sha256="0ffmgnr239xz8864vmrqlhwwc97fqzzib6kwrsm7bszdnw1kkv3r"; depends=[sybil Matrix MASS ]; };
symbolicDA = derive { name="symbolicDA"; version="0.4-2"; type="cran"; sha256="1vn7r7b7yyn2kp8j3ghw50z49yzvwhm0izc6wgc7a99300xrr77s"; depends=[clusterSim XML rgl shapes e1071 ade4 cluster ]; };
symbols = derive { name="symbols"; version="1.1"; type="cran"; sha256="1234rx3divhg60p0h0zn11viqn51fm6b8876m6rip2i6z8vrg319"; depends=[shape ]; };
symmoments = derive { name="symmoments"; version="1.2"; type="cran"; sha256="074k0285c0yri39zags420kjls6kjlvlhymg3r7y24h42zdy82d4"; depends=[mvtnorm cubature combinat multipol ]; };
synRNASeqNet = derive { name="synRNASeqNet"; version="1.0"; type="cran"; sha256="05ncwbv8kvvhqqrxa8qq7s0jc6krs5a56ph04z50iwgd91rzyi7x"; depends=[parmigene GenKern igraph KernSmooth ]; };
synapter = derive { name="synapter"; version="1.8.4"; type="bioc"; sha256="1j4dm2d43ji2xrj9835724qn7ji7vsi5rsvmc0m0za81lz2zvak3"; depends=[MSnbase hwriter RColorBrewer lattice qvalue multtest Biobase knitr Biostrings cleaver BiocParallel ]; };
synbreed = derive { name="synbreed"; version="0.10-5"; type="cran"; sha256="0qhcxmcxa0ixn6ql2dr7pq10g7hmv55rcn279wz4cg5mbgqkhvmm"; depends=[doBy BLR regress abind lattice igraph MASS LDheatmap qtl synbreedData ]; };
synbreedData = derive { name="synbreedData"; version="1.5"; type="cran"; sha256="16wv9r7p0n8726qv0jlizmkvnrqwjj1q4xaxvfmj9611rm47vckx"; depends=[ ]; };
synchronicity = derive { name="synchronicity"; version="1.1.4"; type="cran"; sha256="0hcxwgf1irswwabgl0b6vb9q09nhxc1ljsm195lc8ql49sfj9mfz"; depends=[bigmemory_sri BH ]; };
synchrony = derive { name="synchrony"; version="0.2.3"; type="cran"; sha256="0fi9a3j8dfslf1nqx8d53fi635y3aq8isxw0dbjbpgk7rc71nzby"; depends=[ ]; };
synlik = derive { name="synlik"; version="0.1.1"; type="cran"; sha256="0g4n78amydihsq4jg2i9barjm9g40zczasb31fj10yn6wir1dhv7"; depends=[Rcpp Matrix Rcpp RcppArmadillo ]; };
synthpop = derive { name="synthpop"; version="1.1-0"; type="cran"; sha256="1j9d0jpmr8dva2c7gd6z1q0a3qdxkvmm83xlv08dxkbvsfbzvmmr"; depends=[lattice MASS nnet ggplot2 coefplot rpart party foreign plyr proto ]; };
sysfonts = derive { name="sysfonts"; version="0.5"; type="cran"; sha256="1vppj3jnag88351f8xfk9ds8gbbij3m55iq5rxbnrzy89c04zpzp"; depends=[ ]; };
systemPipeR = derive { name="systemPipeR"; version="1.0.12"; type="bioc"; sha256="0d0kpgkn2nlh54v5rdiacjykh6vxyf20yw18dji0q1l8ggklmz04"; depends=[Rsamtools Biostrings ShortRead BiocGenerics rjson ggplot2 limma edgeR DESeq2 GOstats annotate pheatmap BatchJobs ]; };
systemfit = derive { name="systemfit"; version="1.1-14"; type="cran"; sha256="0f33v96awyhxw3i6zr6whdz91hbfi7vwnfs0bz7xsrjcinqhm6h5"; depends=[Matrix car lmtest sandwich ]; };
systemicrisk = derive { name="systemicrisk"; version="0.2"; type="cran"; sha256="06061hca2x9hj0caann69j6x2jgy8bq40nxs27iqb3zfqp2cz44f"; depends=[Rcpp lpSolve Rcpp ]; };
syuzhet = derive { name="syuzhet"; version="0.2.0"; type="cran"; sha256="1l83wjiv1xsxw4wrcgcj3ryisi7zn4sbdl0sail0rhw0g9y9cz76"; depends=[openNLP NLP ]; };
tRanslatome = derive { name="tRanslatome"; version="1.4.0"; type="bioc"; sha256="173vb64bd3qxy4hikn7d31nvlpzvpby12akgc5pqbg5hcgm8rqkm"; depends=[limma sigPathway samr anota DESeq edgeR RankProd topGO GOSemSim Heatplus gplots plotrix ]; };
taRifx = derive { name="taRifx"; version="1.0.6"; type="cran"; sha256="10kp06hkdx1qrzh2zs9mkrgcnn6d31cldjczmk5h9n98r34hmirx"; depends=[reshape2 plyr ]; };
taRifx_geo = derive { name="taRifx.geo"; version="1.0.6"; type="cran"; sha256="0w7nwp3kvidqhwaxaiq267h99akkrj6xgkviwj0w01511m2lzghs"; depends=[taRifx sp rgdal RJSONIO rgeos RCurl ]; };
tab = derive { name="tab"; version="3.1.1"; type="cran"; sha256="05wypi4v9r2qlgwafd9f58vnxn2c4fnz18l8xpb24nhdgm35adqy"; depends=[survey survival gee ]; };
table1xls = derive { name="table1xls"; version="0.3.1"; type="cran"; sha256="0zd93wrdj4q0ph375qlgdhpqm3n8s941vks5h07ks9gc8id1bnx5"; depends=[XLConnect ]; };
tableone = derive { name="tableone"; version="0.6.3"; type="cran"; sha256="0r91vzq3whz949kxg9q9bf413r41cxqsjvmicmb4najhwzhdr9fv"; depends=[e1071 gmodels ]; };
tableplot = derive { name="tableplot"; version="0.3-5"; type="cran"; sha256="1jkkl2jw7lwm5zkx2yaiwnq1s3li81vidjkyl393g1aqm9jf129l"; depends=[ ]; };
tables = derive { name="tables"; version="0.7.79"; type="cran"; sha256="05f23y5ff961ksx4fnmwpf6zvc9573if8s2cmz9bwki66h2g9xb7"; depends=[Hmisc ]; };
tabplot = derive { name="tabplot"; version="1.1"; type="cran"; sha256="0vyc6b6h540sqwhrza2ijg7ghw2x8rla827b8qy2sh0ckm0ybjrx"; depends=[ffbase ]; };
tabplotd3 = derive { name="tabplotd3"; version="0.3.3"; type="cran"; sha256="0mbj45vb17wlnndpkhvq7xaawsb814x7zxa4rqbfgidvbm1p3abv"; depends=[tabplot httpuv Rook brew RJSONIO ]; };
tabuSearch = derive { name="tabuSearch"; version="1.1"; type="cran"; sha256="0bri03jksm314xy537dldbdvgyq6sywfmpmj2g2acdcli31kkpq0"; depends=[ ]; };
tagcloud = derive { name="tagcloud"; version="0.5"; type="cran"; sha256="0d6h54p20pjnh1y7bw381nqbml1hv5x71gm33mgrzcib7mqa0c0b"; depends=[Rcpp RColorBrewer Rcpp ]; };
tau = derive { name="tau"; version="0.0-18"; type="cran"; sha256="04rj3jrcz4h60dqm1xmnmpr52csz1s7rf2wv6ivybgyvbq0w2ijf"; depends=[ ]; };
tawny = derive { name="tawny"; version="2.1.2"; type="cran"; sha256="0ihg3qlng8swak1dfpbnlx5xc45d1i9rgqawmqa97v5m91smfa71"; depends=[lambda_r lambda_tools futile_logger futile_matrix tawny_types zoo xts PerformanceAnalytics quantmod ]; };
tawny_types = derive { name="tawny.types"; version="1.1.3"; type="cran"; sha256="1v0k6nn45rdczjn5ymsp2fqq0ijnlniyf3bc08ibd8yd1jcdyjnj"; depends=[lambda_r lambda_tools futile_logger futile_options zoo xts quantmod ]; };
taxize = derive { name="taxize"; version="0.5.2"; type="cran"; sha256="1141ypz76nda9ij0fr63kgjagj9al63gnqwxa7ld7v9xzig8zgyp"; depends=[XML RCurl stringr plyr httr jsonlite foreach ape Taxonstand reshape2 data_table vegan bold ]; };
tbart = derive { name="tbart"; version="1.0"; type="cran"; sha256="0m8l9ic7na70il6r9ha0pyrjwznbgjq7gk5xwa5k9px4ysws29k5"; depends=[Rcpp sp Rcpp ]; };
tbdiag = derive { name="tbdiag"; version="0.1"; type="cran"; sha256="1wr2whgdk84426hb2pf8iiyradh9c61gyazvcrnbkgx2injkz65q"; depends=[ ]; };
tcR = derive { name="tcR"; version="2.0"; type="cran"; sha256="05y3nbqdaxry7jwph6z2v8d2304xh791l0vviywyghrw7b2hqw9q"; depends=[ggplot2 dplyr gridExtra reshape2 igraph Rcpp data_table gtable roxygen2 stringdist Rcpp ]; };
tcltk2 = derive { name="tcltk2"; version="1.2-11"; type="cran"; sha256="1ibxld379600xx7kiqq3fck083s8psry12859980218rnzikl65d"; depends=[ ]; };
tclust = derive { name="tclust"; version="1.2-3"; type="cran"; sha256="0a1b7yp4l9wf6ic5czizyl2cnxrc1virj0icr8i6m1vv23jd8jfp"; depends=[mvtnorm sn mclust cluster ]; };
tdm = derive { name="tdm"; version="3.0.3"; type="cran"; sha256="01xy090h9idw05jssfgdarbqp5d1vsiir5x7fr1ylaz0k8ai23d4"; depends=[rjags coda png deSolve ]; };
tdr = derive { name="tdr"; version="0.11"; type="cran"; sha256="1ga1lczqj5pka2yz7igxfm83xmkx7lla8pz6ryij0ybn284agszs"; depends=[lattice ggplot2 RColorBrewer ]; };
tdthap = derive { name="tdthap"; version="1.1-7"; type="cran"; sha256="0lqcw4bzjd995pwn2yrmzay82gnkxnmxxsqplpbn5gg8p6sf5qqk"; depends=[ ]; };
teigen = derive { name="teigen"; version="2.0.8"; type="cran"; sha256="0gh5p2rwv1krrbq92wpgl1ya74vrdxhsagd7r7wvyxvxdv3j94v5"; depends=[ ]; };
tempdisagg = derive { name="tempdisagg"; version="0.24.0"; type="cran"; sha256="02ld14mppyyqvgz537sypr3mqc758cchfcmpj46b7wswwa2y7fyz"; depends=[ ]; };
tensor = derive { name="tensor"; version="1.5"; type="cran"; sha256="19mfsgr6vz4lgwidm80i4yw0y1dr3n8i6qz7g4n2xa0k74zc5pp1"; depends=[ ]; };
tensorA = derive { name="tensorA"; version="0.36"; type="cran"; sha256="1xpczn94a6vfkfibfvr71a7wccksg16pc22h0inpafna4qpygcwp"; depends=[ ]; };
tergm = derive { name="tergm"; version="3.2.4"; type="cran"; sha256="0ndkgkb31bwdy78nw6nq4wfhgzibxsixx3ylsgcs5rv3y0w1pczw"; depends=[statnet_common ergm network networkDynamic robustbase coda nlme ergm ]; };
termstrc = derive { name="termstrc"; version="1.3.7"; type="cran"; sha256="12bycwhjrhkadafcckc30jr0md0ssj21n4v75yjhy21yvqjx1d7a"; depends=[lmtest Rcpp rgl sandwich urca zoo Rcpp ]; };
ternarynet = derive { name="ternarynet"; version="1.10.0"; type="bioc"; sha256="1n6dh3y2bpvcccbpglw788i236bh36n9npk6rc1j4n7pi0wimzcl"; depends=[igraph ]; };
ternvis = derive { name="ternvis"; version="1.1"; type="cran"; sha256="16q1a1ns7q0d46js2m1hr6zm8msg3ncgp8w7yrwch11xq0759sb4"; depends=[quadprog maps maptools mapdata dichromat ]; };
tester = derive { name="tester"; version="0.1.7"; type="cran"; sha256="1x5m43abk3x3fvb2yrb1xwa7rb4jxl8wjrnkyd899ii1kh8lbimr"; depends=[ ]; };
testit = derive { name="testit"; version="0.4"; type="cran"; sha256="1805i82kb2g08r0cqdk6dhfhwqjjdigdm1rqf88sp7435wksyv8i"; depends=[ ]; };
testthat = derive { name="testthat"; version="0.10.0"; type="cran"; sha256="0b3akwcx5mv9dmi8vssbk91hr3yrrdxd2fm6zhr31fnyz8kjx4pw"; depends=[digest crayon ]; };
testthatsomemore = derive { name="testthatsomemore"; version="0.1"; type="cran"; sha256="0j9sszm4l0mn7nqz47li6fq5ycb3yawc2yrad9ngb75cvp47ikkk"; depends=[testthat ]; };
texmex = derive { name="texmex"; version="2.1"; type="cran"; sha256="17x4xw2h4g9a10zk4mvi3jz3gf4rf81b29hg2g3gq6a6nrxsj8sy"; depends=[mvtnorm ]; };
texmexseq = derive { name="texmexseq"; version="0.1"; type="cran"; sha256="18lpihiwpjkjkc1n7ka6rzasrwv8npn4939s1gl8g1jb27vnhzb5"; depends=[ ]; };
texreg = derive { name="texreg"; version="1.35"; type="cran"; sha256="0c1w6kzczzflcmvr544v3gdasvyjxcwqgdm2w2i9wp7kd1va37fr"; depends=[ ]; };
textcat = derive { name="textcat"; version="1.0-2"; type="cran"; sha256="0sjhahmqva9pwp75zwxxf8g1cw38awid3w6rx9xfx73cpj2blcz3"; depends=[tau slam ]; };
textir = derive { name="textir"; version="2.0-3"; type="cran"; sha256="039xl2h0igrp3fzr1qiyb0zr6j4bbajhj36apylqvwsczzaywhwb"; depends=[distrom gamlr Matrix ]; };
textometry = derive { name="textometry"; version="0.1.4"; type="cran"; sha256="17k3v9r5d5yqgp25bz69pj6sw2j55dxdchq63wljxqkhcwxyy9lh"; depends=[ ]; };
textreg = derive { name="textreg"; version="0.1.2"; type="cran"; sha256="0qya0czbi78a29jp9pd3lbqh574d9k0i340hrgc6jmdhwzhimhk7"; depends=[tm NLP Rcpp Rcpp ]; };
tfer = derive { name="tfer"; version="1.1"; type="cran"; sha256="19d31hkxs6dc4hvj5495a3kmydm29mhp9b2wp65mmig5c82cl9ck"; depends=[ ]; };
tfplot = derive { name="tfplot"; version="2015.4-1"; type="cran"; sha256="1qrw8x7pz7xcmpym3j1d095bhvy2s7znxplml1qyw5minc67n1mh"; depends=[tframe ]; };
tframe = derive { name="tframe"; version="2015.1-1"; type="cran"; sha256="10igwmrfslyz3z3cbyldik8fcxq43pwh60yggka6mkl0nzkxagbd"; depends=[ ]; };
tframePlus = derive { name="tframePlus"; version="2015.1-2"; type="cran"; sha256="043ay79x520lbh4jm2nb3331pwd7dvwfw20k1kc9cxbplxiy8pnb"; depends=[tframe timeSeries ]; };
tgp = derive { name="tgp"; version="2.4-11"; type="cran"; sha256="0hdi05bz9qn4zmljfnll5hk9j8z9qaqmya77pdcgr6vc31ckixw5"; depends=[maptree ]; };
tgram = derive { name="tgram"; version="0.2-2"; type="cran"; sha256="091g6j5ry1gmjff1kprk5vi2lirl8zbynqxkkywaqpifz302p39q"; depends=[zoo ]; };
thermocouple = derive { name="thermocouple"; version="1.0.0"; type="cran"; sha256="1pawk7aq27vc708xwz997pmxxhipw8449793zv6fw5aj47wcw1l5"; depends=[ ]; };
thgenetics = derive { name="thgenetics"; version="0.3-4"; type="cran"; sha256="1316nx0s52y12j9499mvi050p3qvp6b8i01v82na01vidl54b9c2"; depends=[ ]; };
threeboost = derive { name="threeboost"; version="1.1"; type="cran"; sha256="033vwn42ys81w6z90w5ii41xfihjilk61vdnsgap269l9l0c8gmn"; depends=[Matrix ]; };
threejs = derive { name="threejs"; version="0.2.1"; type="cran"; sha256="01zfv5lm11i2nkb876f3fg8vsff2wk271jqs6xw1njjdhbnnihs1"; depends=[htmlwidgets base64enc ]; };
threg = derive { name="threg"; version="1.0.2"; type="cran"; sha256="0wb9waj0j83zrj763d3fdnp3lp52gfdyzv23yrvxvd6zmk5clgi2"; depends=[survival Formula ]; };
thsls = derive { name="thsls"; version="0.1"; type="cran"; sha256="18z7apskydkg7iqrs2hgnzby578qsvyd73wx8v4z3aa338lssdi7"; depends=[Formula ]; };
tibbrConnector = derive { name="tibbrConnector"; version="1.5.0-71"; type="cran"; sha256="0d8gy126hzzardcwr9ydagdb0dy9bdw30l8s2wwi7zaxx2lpii6q"; depends=[RCurl rjson ]; };
tictoc = derive { name="tictoc"; version="1.0"; type="cran"; sha256="1zp2n8k2ax2jjw89dsri268asmm5ry3ijf32wbca5ji231y0knj7"; depends=[ ]; };
tidyjson = derive { name="tidyjson"; version="0.2.1"; type="cran"; sha256="178lc4ii4vjzvrkxfdf5cd9ryxva9h2vv4wl6xgxgaixkab9yv9w"; depends=[assertthat jsonlite dplyr ]; };
tidyr = derive { name="tidyr"; version="0.2.0"; type="cran"; sha256="169i6xnr4bs5vqkv6dilj5j8v95giz0b7byhi06qk414gdlj2r8n"; depends=[reshape2 dplyr stringi lazyeval ]; };
tiff = derive { name="tiff"; version="0.1-5"; type="cran"; sha256="0asf2bws3x3yd3g3ixvk0f86b0mdf882pl8xrqlxrkbgjalyc54m"; depends=[ ]; };
tiger = derive { name="tiger"; version="0.2.3.1"; type="cran"; sha256="0xr56c46b956yiwkili6vp8rhk885pcmfyd3j0rr4h8sz085md6n"; depends=[e1071 hexbin qualV klaR som lattice ]; };
tigerstats = derive { name="tigerstats"; version="0.2"; type="cran"; sha256="1wj4z1jj7jg3885nvfh4l812cyybjcm5r66w3l41s4c0civl4z5b"; depends=[mosaic mosaicData abd MASS ggplot2 lattice ]; };
tightClust = derive { name="tightClust"; version="1.0"; type="cran"; sha256="0psyzk6d33qkql8v6hzkp8mfwb678r95vfycz2gh6fky7m5k3yyz"; depends=[ ]; };
tigre = derive { name="tigre"; version="1.20.0"; type="bioc"; sha256="09298m4wg2f1ra45rhv8srsbzqz8cczy50aw2iiavzdrzibns31r"; depends=[BiocGenerics Biobase AnnotationDbi gplots annotate DBI RSQLite ]; };
tikzDevice = derive { name="tikzDevice"; version="0.8.1"; type="cran"; sha256="0262szfzv4yrfal19giinrphra1kfcm2arfckql4rf2zsq13rw35"; depends=[filehash ]; };
tileHMM = derive { name="tileHMM"; version="1.0-6"; type="cran"; sha256="18vqj7fdh4knnjk9s7yk2bgn3qwqz92fmm5fdny21gi0wl4qgdsd"; depends=[ ]; };
tilingArray = derive { name="tilingArray"; version="1.44.0"; type="bioc"; sha256="15bgljy9xd2sljklvmha361himkzaxkrjis9wcz9z6wjzfr14h1r"; depends=[Biobase pixmap strucchange affy vsn genefilter RColorBrewer ]; };
timeDate = derive { name="timeDate"; version="3012.100"; type="cran"; sha256="0cn4h23y2y2bbg62qgm79xx4cvfla5xbpmi9hbdvkvpmm5yfyqk2"; depends=[ ]; };
timeROC = derive { name="timeROC"; version="0.3"; type="cran"; sha256="0xl6gpb5ayppzp08wwry4i051rm40lzfx43jw2yn3jy2p3nrcakb"; depends=[pec mvtnorm ]; };
timeSeq = derive { name="timeSeq"; version="1.0.0"; type="cran"; sha256="1b7jcld1h3xsp3nl2nk9nqsgdg1pdi4m54hgsdlvivk9zzv3k6wr"; depends=[gss lattice pheatmap doParallel foreach reshape edgeR ]; };
timeSeries = derive { name="timeSeries"; version="3012.99"; type="cran"; sha256="06lz9xljzadfs94xwn8578h8mw56wp923k0xfppzq69hcpcrhsvf"; depends=[timeDate ]; };
timecourse = derive { name="timecourse"; version="1.38.0"; type="bioc"; sha256="14w87dqivhfp3xyxhlxvnka7v1rhyxxmmdygkjydag3yh4z6zfi4"; depends=[MASS Biobase limma MASS marray ]; };
timeit = derive { name="timeit"; version="0.2.1"; type="cran"; sha256="0fsa67jyk4yizyd079265jg6fvjsifkb60y3fkkxsqm7ffqi6568"; depends=[microbenchmark ]; };
timeline = derive { name="timeline"; version="0.9"; type="cran"; sha256="0zkanz3ac6cgsfl80sydgwnjrj9rm7pcfph7wzl3xkh4k0inyjq3"; depends=[ggplot2 ]; };
timeordered = derive { name="timeordered"; version="0.9.8"; type="cran"; sha256="1j0x2v22ybyl3l9r3aaz5a3bxh0zq81rbga9gh63zads2xy5axmf"; depends=[igraph plyr ]; };
timereg = derive { name="timereg"; version="1.8.7"; type="cran"; sha256="1xarqsdgl1zcc8ilg23g3p2xl3zbsfiak7lagvs5sbsq84b0wpr7"; depends=[survival lava numDeriv ]; };
timesboot = derive { name="timesboot"; version="1.0"; type="cran"; sha256="1ixmcigi1bf42np93md8d3w464papg9hp85v0c3hg3vl4nsm2bji"; depends=[boot ]; };
timeseriesdb = derive { name="timeseriesdb"; version="0.2.1"; type="cran"; sha256="0150zs8c8184jzry33aki21prmpnxp3rclp84q6igwxi4grdhlr0"; depends=[RPostgreSQL RJSONIO xts zoo reshape2 shiny DBI ]; };
timetools = derive { name="timetools"; version="1.6.5"; type="cran"; sha256="1ni1dqzkdrzmvr0sbnfdh7kcsd5sgfggfl6w7nqviidcff5dbc9g"; depends=[ ]; };
timetree = derive { name="timetree"; version="1.0"; type="cran"; sha256="1fpdp6mkwm67svqvkfflvqxn52y2041zl09rxrms28ybbd5f84c0"; depends=[XML phangorn ]; };
timma = derive { name="timma"; version="1.2.1"; type="cran"; sha256="1pypk0pwkhyilh1hsn8hasia1hf6hbskj0xw6vas03k19b6fjnli"; depends=[Rcpp QCA reshape2 Rcpp RcppArmadillo ]; };
timsac = derive { name="timsac"; version="1.3.3"; type="cran"; sha256="0jg9mjzzfl94z4dqb2kz0aiccpclnbyf9p08x3a3cw1y6wqmzrmy"; depends=[ ]; };
tipom = derive { name="tipom"; version="1.0.2-1"; type="cran"; sha256="1gdfv0g5dw742j6ycmi0baqh6xcchp3yf2n1g8vn7jmqgz5mlhdr"; depends=[ ]; };
tis = derive { name="tis"; version="1.27"; type="cran"; sha256="1kgzc032qa005hzcimhbbhcs5kcvm88pfb48ac84k205f6xhdsir"; depends=[ ]; };
titan = derive { name="titan"; version="1.0-16"; type="cran"; sha256="0x30a877vj99z3fh3cw9762j5ci56964j2466xfbwcywhn9njz5r"; depends=[MASS boot lattice ]; };
tkWidgets = derive { name="tkWidgets"; version="1.44.0"; type="bioc"; sha256="0s23ajd61jbklkhp1cr7nq4ssw8nkvr77r4viv4z3gnkndrflnl3"; depends=[widgetTools DynDoc ]; };
tkrgl = derive { name="tkrgl"; version="0.7"; type="cran"; sha256="1kpq5p6izqrn1zr53firis3rmifq9lf6326lf3z7l1p82nf2yps5"; depends=[rgl ]; };
tkrplot = derive { name="tkrplot"; version="0.0-23"; type="cran"; sha256="1cnyszn3rmr1kwvi5a178dr3074skdijfixf5ln8av5wwcy35947"; depends=[ ]; };
tlemix = derive { name="tlemix"; version="0.1.3"; type="cran"; sha256="0c4mvdxlhbmyxj070xyipx4c27hwxlb3c5ps65ipm6gi8v8r6spj"; depends=[ ]; };
tlm = derive { name="tlm"; version="0.1.3"; type="cran"; sha256="1jj8yihq4b13wavflkkv91m9ba2l5ar3vcwp1ss6iymyf3hzdgiv"; depends=[boot ]; };
tlmec = derive { name="tlmec"; version="0.0-2"; type="cran"; sha256="1gak8vxmfjf05bhaj6lych7bm8hgav1x3h14k2ra7236v82rqbw7"; depends=[mvtnorm ]; };
tlnise = derive { name="tlnise"; version="2.0"; type="cran"; sha256="1vh998vqj359249n9zmw04rsivb7nlbdfgzf20pgh2sndm3rh8qz"; depends=[ ]; };
tm = derive { name="tm"; version="0.6-1"; type="cran"; sha256="0i32gwic6vi7fkw05vg3rk8lmszzmy6gm9f5hrj0xckx7sf1ilfq"; depends=[NLP slam ]; };
tm_plugin_alceste = derive { name="tm.plugin.alceste"; version="1.1"; type="cran"; sha256="0wid51bbbx01mjfhnaiv50vfyxxmjxw8alb73c1hq9wlsh3x3vjf"; depends=[NLP tm ]; };
tm_plugin_dc = derive { name="tm.plugin.dc"; version="0.2-7"; type="cran"; sha256="1ikkxp5jdr385yqvhknvkvs97039jw964pcm6dl1k66nbdv1q59i"; depends=[DSL tm NLP slam ]; };
tm_plugin_europresse = derive { name="tm.plugin.europresse"; version="1.2"; type="cran"; sha256="1sgm9wnzlphl4qhc69nj5im4y1qs6b0vssmn5j98fbc3xlxiyzjx"; depends=[NLP tm XML ]; };
tm_plugin_factiva = derive { name="tm.plugin.factiva"; version="1.5"; type="cran"; sha256="06s75rwx9fzld1dw0nw6q5phc1h0zsdzhy1dcdcvmsf97d4s2qdr"; depends=[NLP tm XML ]; };
tm_plugin_lexisnexis = derive { name="tm.plugin.lexisnexis"; version="1.2"; type="cran"; sha256="0cjw705czzzhd8ybfxkrv0f9kvmv9pcswisc7n9hkx8lxi942h19"; depends=[NLP tm XML ISOcodes ]; };
tm_plugin_mail = derive { name="tm.plugin.mail"; version="0.1"; type="cran"; sha256="0ca2w2p5zv3qr4zi0cj3lfz36g6xkgkbck8pdxq5k65kqi5ndzyp"; depends=[NLP tm ]; };
tm_plugin_webmining = derive { name="tm.plugin.webmining"; version="1.3"; type="cran"; sha256="1694jidf01ilyk286q43bjchh1gg2fk33a2cwsf5jxv7jky3gl7h"; depends=[NLP tm boilerpipeR RCurl XML RJSONIO ]; };
tmap = derive { name="tmap"; version="0.7"; type="cran"; sha256="0lnlnnllj2bypw2cf8pgpv40w5zy4876kmjgav07ls8j11lklgwz"; depends=[rgeos gridBase sp rgdal classInt RColorBrewer igraph fields vegan ]; };
tmg = derive { name="tmg"; version="0.3"; type="cran"; sha256="0yqavibinzsdh85izzsx8b3bb9l36vzkp5a3bdwdbh410s62j68a"; depends=[Rcpp Rcpp RcppEigen ]; };
tmle = derive { name="tmle"; version="1.2.0-4"; type="cran"; sha256="06wndlqn51z71ck26l190mrg87hcvxg1p861l173rivz9k8kb404"; depends=[SuperLearner ]; };
tmle_npvi = derive { name="tmle.npvi"; version="0.10.0"; type="cran"; sha256="00jav1ql3lv18wh9msxnjvz36z2ds44fdi6lrp1pfphh1in4vdcl"; depends=[R_utils R_methodsS3 R_oo MASS Matrix geometry ]; };
tmvtnorm = derive { name="tmvtnorm"; version="1.4-9"; type="cran"; sha256="1dacdhqv6bb29a81bmxp8hxy4hragpg8mb5kql4cp59q08zmizyi"; depends=[mvtnorm Matrix gmm ]; };
tnet = derive { name="tnet"; version="3.0.11"; type="cran"; sha256="00hifb145w0a9f5qi3gx16lm1qg621jp523vswb8h86jqmxcczbc"; depends=[igraph survival ]; };
toOrdinal = derive { name="toOrdinal"; version="0.0-1"; type="cran"; sha256="1rr6liw0krzdarc9gd406mf242n3hl38bn52xphr1g0riq5y2m4q"; depends=[ ]; };
tolerance = derive { name="tolerance"; version="1.1.0"; type="cran"; sha256="1mrgvrdlawrmbz8bhq9cxqgn4fxvn18f1gjf9f9s8fvfnc4nda96"; depends=[rgl ]; };
topGO = derive { name="topGO"; version="2.18.0"; type="bioc"; sha256="1py4r0pq777r2xwvhyp80dyycfy072dsg1z0jd7vf7nn4x3xyjfl"; depends=[graph Biobase AnnotationDbi SparseM graph Biobase SparseM AnnotationDbi lattice ]; };
topicmodels = derive { name="topicmodels"; version="0.2-1"; type="cran"; sha256="1if1pdx4jnfx3xi37xs411qv3h449vkwxzzqd7krxaxbj3gqq7n9"; depends=[modeltools slam tm ]; };
topmodel = derive { name="topmodel"; version="0.7.2-2"; type="cran"; sha256="1nqa8fnpxcn373v6qcd9ma8qzcqwl2md347yql3c8bpqlm9ggz16"; depends=[ ]; };
topologyGSA = derive { name="topologyGSA"; version="1.4.4"; type="cran"; sha256="092f57gpm8jlb2y4j74a6dx1lwqjdgcm3yrm1yzy4511j6vg0axh"; depends=[graph gRbase qpgraph fields ]; };
topsis = derive { name="topsis"; version="1.0"; type="cran"; sha256="056cgi684qy2chh1rvhgkxwhfv9nnfd7dfzc05m24gy2wyypgxj3"; depends=[ ]; };
tosls = derive { name="tosls"; version="1.0"; type="cran"; sha256="03nqwahap504yvcksvxdhykplbzmf5wdwgpzm7svn8bymdc472v2"; depends=[Formula ]; };
tourr = derive { name="tourr"; version="0.5.4"; type="cran"; sha256="11xg5slvx7rgyzrc0lzandw7vr7wzk3w2pplsnyrqq3d990qp40d"; depends=[ ]; };
tourrGui = derive { name="tourrGui"; version="0.4"; type="cran"; sha256="1g9928q3x9rrd9k3k84r201wss3vjd2pngvbaflk5dqh9yf75jpq"; depends=[tourr colorspace RGtk2 gWidgets Cairo ]; };
toxtestD = derive { name="toxtestD"; version="2.0"; type="cran"; sha256="0b7hmpfhwg626r8il12shni0kw94cqnbj49y4vfh8gn98x1s6m48"; depends=[ ]; };
tpe = derive { name="tpe"; version="1.0.1"; type="cran"; sha256="0zsa8vb4qmln3sb4lplv43lh50yys9vfd3rxfp6qxqqjxivd0xsh"; depends=[ ]; };
tpr = derive { name="tpr"; version="0.3-1"; type="cran"; sha256="0nxl0m39zaii6rwm35hxcdk6iy2f729jjmhc2cpr8h0mgvgqf19d"; depends=[lgtdl ]; };
track = derive { name="track"; version="1.1.8"; type="cran"; sha256="0scrww0ba1lrv39fh416wcbzblxnd9f7lp2w24hyp0zbbf1nxs68"; depends=[ ]; };
trackViewer = derive { name="trackViewer"; version="1.2.0"; type="bioc"; sha256="00fc063zh9wk6dfp2haxrgk79nxcczf25jkkr1s22lh2rnr6q3r3"; depends=[GenomicRanges gWidgetstcltk GenomicAlignments GenomicFeatures Gviz pbapply Rsamtools rtracklayer scales ]; };
tracktables = derive { name="tracktables"; version="1.0.0"; type="bioc"; sha256="116y9ghw40qvf10m6g8pbd29rr67jijk13a1k7a3w70jh96vin1q"; depends=[IRanges GenomicRanges XVector Rsamtools XML tractor_base stringr RColorBrewer ]; };
tractor_base = derive { name="tractor.base"; version="2.5.0"; type="cran"; sha256="17s4iyp67w7m8gslm87p3ic5r9iq7x1ifpxqrmnin3y5a3d04f5v"; depends=[reportr ]; };
traitr = derive { name="traitr"; version="0.14"; type="cran"; sha256="1pkc8wcq55229wkwb54hg9ndbhlxziv51n8880z6yq73zac1hbmf"; depends=[digest proto gWidgets ]; };
traj = derive { name="traj"; version="1.2"; type="cran"; sha256="0mq6xdbxjqjivxyy7cwaghwmnmb5pccrah44nmalssc6qfrgys4n"; depends=[cluster psych pastecs NbClust GPArotation ]; };
trajectories = derive { name="trajectories"; version="0.1-3"; type="cran"; sha256="1lk2mxfsf8x8idhb4dcj9lqvkjwm2yarvjid42xr2a9wwylvz9vq"; depends=[lattice sp spacetime ]; };
translate = derive { name="translate"; version="0.1.2"; type="cran"; sha256="1w0xrg1xxwfdanlammmixf06hwq700ssbjlc3cfigl50p87dbc5x"; depends=[RCurl RJSONIO functional lisp ]; };
translateR = derive { name="translateR"; version="1.0"; type="cran"; sha256="11kh9hjpsj5rfmzybnh345n1gzb0pdksrjp04nzlv948yc0mg5gm"; depends=[RJSONIO RCurl textcat httr ]; };
transport = derive { name="transport"; version="0.6-3"; type="cran"; sha256="1sldlccsprzan1liyslzp9wzz3d36khyr6zri773npvnss9pa67w"; depends=[ ]; };
trapezoid = derive { name="trapezoid"; version="2.0-0"; type="cran"; sha256="0f6rwmnn61bj97xxdgbydi94jizv1dbq0qycl60jb4dsxvif8l3n"; depends=[ ]; };
treatSens = derive { name="treatSens"; version="1.1"; type="cran"; sha256="1h49idgv3rsday8xdj3rfqflj42ya9i5sg7cm1026arff1yqxxz8"; depends=[ ]; };
tree = derive { name="tree"; version="1.0-35"; type="cran"; sha256="1jvhl21wd1dwpn1f0jkn07msgmcasdh6bnf10dxxjks20vp9b618"; depends=[ ]; };
treeClust = derive { name="treeClust"; version="1.0-0"; type="cran"; sha256="1xn6m031vx12wcyyh04yb68cw416a6v5wd8rcp5f9jqirv1hp4xb"; depends=[rpart cluster ]; };
treebase = derive { name="treebase"; version="0.0-7.1"; type="cran"; sha256="0kj1cyk14j4qzm31f47a8g7qh4842rqkzr0fqh9i5c8kzrqxbc0g"; depends=[ape XML RCurl reshape2 data_table ]; };
treeclim = derive { name="treeclim"; version="1.0.11"; type="cran"; sha256="09i7zxwdrbfgridxsm20r554nyvwp40ngc47isy16a7f1q3rwjah"; depends=[Rcpp abind plyr ggplot2 lmtest lmodel2 np boot Rcpp RcppArmadillo ]; };
treecm = derive { name="treecm"; version="1.2.1"; type="cran"; sha256="02al6iz25pay7y1qmbpy04nw8dj9c5r7km6q5k3v3jdkfal6cm6k"; depends=[plyr ]; };
treelet = derive { name="treelet"; version="1.1"; type="cran"; sha256="0k3qhxjg7ws6jfhcvvv9jmy26v2wzi4ghnxnwpjm8nh7b90lbysd"; depends=[ ]; };
treemap = derive { name="treemap"; version="2.2"; type="cran"; sha256="0h4wkjw12n9awqsvrs72nmsxq3d5as3zjy8kyhw7715h1cvry769"; depends=[colorspace data_table ggplot2 gridBase igraph RColorBrewer shiny ]; };
treeperm = derive { name="treeperm"; version="1.6"; type="cran"; sha256="0mz7p9khrsq4dbkijymfvlwr01y4fvs0x6si4x5xid16s2zsnmm4"; depends=[ ]; };
treethresh = derive { name="treethresh"; version="0.1-8"; type="cran"; sha256="1xkbqlr9gkpw6axzl7v5aipackhvy873yrpwn2b9zqr35pj06pr6"; depends=[EbayesThresh wavethresh ]; };
trend = derive { name="trend"; version="0.0.1"; type="cran"; sha256="05awwsqp8vm2p00dq2hkb7dglwf45djw2xx2q2mq33blrlhn31sw"; depends=[ ]; };
triangle = derive { name="triangle"; version="0.8"; type="cran"; sha256="0jdphz1rf4cx4y28syfffaz7fbl41g3rw3mrv9dywycdznhxdnrp"; depends=[ ]; };
trifield = derive { name="trifield"; version="1.1"; type="cran"; sha256="0xk48fkd5xa3mfn3pwdya0ihpkwnh20sgj3rc7fmzjil47kqscvy"; depends=[ ]; };
triform = derive { name="triform"; version="1.8.0"; type="bioc"; sha256="0f02a7jc3l2scs6pimc6kvv5f7f67gvxk7y55im7jzhzwb39bv42"; depends=[IRanges yaml IRanges yaml BiocGenerics ]; };
trigger = derive { name="trigger"; version="1.12.0"; type="bioc"; sha256="0y8vzwh6a2ijf8g60sdnkhzq8pj0n9kxy60zb491n5pv9n84j5ws"; depends=[corpcor qtl qvalue sva ]; };
trimTrees = derive { name="trimTrees"; version="1.2"; type="cran"; sha256="0v75xf5186dy76332x4w7vdwcz7zpqga8mxrb5all2miq2v45fi8"; depends=[randomForest mlbench ]; };
trimcluster = derive { name="trimcluster"; version="0.1-2"; type="cran"; sha256="0lsgbg93hm0w1rdb813ry0ks2l0jfpyqzqkf3h3bj6fch0avcbv2"; depends=[ ]; };
trio = derive { name="trio"; version="3.4.0"; type="bioc"; sha256="0nc35ijljibzlxbfdps5z0snrgjwsx6hnwkg85m03mkmhgv6q513"; depends=[ ]; };
trioGxE = derive { name="trioGxE"; version="0.1-1"; type="cran"; sha256="1ra86l3i7fhb6nsy8izixyvm6z23shv7fcjmnnpil54995j15ax4"; depends=[msm mgcv gtools ]; };
trip = derive { name="trip"; version="1.1-21"; type="cran"; sha256="0rawckw3xd8kz2jn6xgspgl5axabjcp4xh4kp93n3h41xlarv9xa"; depends=[sp maptools MASS raster spatstat ]; };
tripEstimation = derive { name="tripEstimation"; version="0.0-42"; type="cran"; sha256="17spnvrrqv89vldd496wc1psmaby0mhw9nh0qnfm7yc2jcqaf5nb"; depends=[lattice mgcv rgdal sp zoo ]; };
tripack = derive { name="tripack"; version="1.3-6"; type="cran"; sha256="1dknz1arzfyknip04a9fxdhqmrkb0r0lr8hgria9s0d57hr1ay12"; depends=[ ]; };
triplex = derive { name="triplex"; version="1.6.0"; type="bioc"; sha256="1r4z9fb5xfmgvs22pc2ma0r9sxhknqa096wk9ff728jrmfdfnrzl"; depends=[S4Vectors IRanges XVector Biostrings GenomicRanges S4Vectors IRanges XVector Biostrings ]; };
trotter = derive { name="trotter"; version="0.6"; type="cran"; sha256="0i8r2f2klkkfnjm7jhvga3gx6m7r97pd73d88004jzlm9ficspgy"; depends=[ ]; };
trueskill = derive { name="trueskill"; version="0.1"; type="cran"; sha256="0mqvm64fcsxjlh789lqdk6l28q31yhh6jjirwjlgbpxxb90c5107"; depends=[ ]; };
truncSP = derive { name="truncSP"; version="1.2.2"; type="cran"; sha256="1hdi518j3sg9273g01l1jqlmqya3ppim82ma7zakwqpmsjmzw18q"; depends=[truncreg boot ]; };
truncdist = derive { name="truncdist"; version="1.0-1"; type="cran"; sha256="0aszs6rz8nydyf2dw1m4fj9fclb0r4vpgqywyaqjkdnhzmyn593g"; depends=[evd ]; };
truncgof = derive { name="truncgof"; version="0.6-0"; type="cran"; sha256="0b499i9zjwvva5jfl9fj02jjrgy8myxqfjwa0cjg0jrpgxczgwg8"; depends=[MASS ]; };
truncnorm = derive { name="truncnorm"; version="1.0-7"; type="cran"; sha256="1qac05z50618y4bw1d7yznsli1bv82s0g8h37iacrjrdkv87bmy7"; depends=[ ]; };
truncreg = derive { name="truncreg"; version="0.2-1"; type="cran"; sha256="0qvdfj93phk1s2p4n0rmpf8x9gj5n1j75h4z424mrg10r24699rd"; depends=[maxLik ]; };
trust = derive { name="trust"; version="0.1-6"; type="cran"; sha256="1jghgwnazhqgyn2k0b3x4n8swncyy6dzlkv86chv98zw4s3bnlak"; depends=[ ]; };
trustOptim = derive { name="trustOptim"; version="0.8.5"; type="cran"; sha256="1y9krw2z5skkwgfdjagl8l04l9sbiqbk1fbxp30wrf4qj3pba5w6"; depends=[Rcpp Matrix Rcpp RcppEigen ]; };
tsDyn = derive { name="tsDyn"; version="0.9-43"; type="cran"; sha256="0fhqfwhac1ac1vakwll41m54l88b1c5y34hln5i1y2ngvhy277l1"; depends=[mnormt mgcv nnet tseriesChaos tseries vars urca forecast MASS Matrix foreach ]; };
tsModel = derive { name="tsModel"; version="0.6"; type="cran"; sha256="0mkmhzj4g38ngzfcfx0zsiqpxs2qpw82kgmm1b8gl671s4rz00zs"; depends=[ ]; };
tsallisqexp = derive { name="tsallisqexp"; version="0.9-1"; type="cran"; sha256="0z4csd3ircpf5jync6h1snj1k2awkd0s6vj2k4ij6rvs8w3nf8nn"; depends=[ ]; };
tsbridge = derive { name="tsbridge"; version="1.1"; type="cran"; sha256="0mry3ia54cdfydpzm8asrq1ldj70gnpb5dqzj51w0jiyps2zlw6f"; depends=[mvtnorm tsbugs ]; };
tsbugs = derive { name="tsbugs"; version="1.2"; type="cran"; sha256="130v4x6cfy7ddvhijsnvipm4ycrispkj1j0z5f326yb4v5lrk91x"; depends=[ ]; };
tsc = derive { name="tsc"; version="1.0-3"; type="cran"; sha256="1acsdkxizlkix1sskwqv2a80rshw6f14zvcsjhrmmdfd4bmwh36y"; depends=[ ]; };
tscount = derive { name="tscount"; version="1.0.0"; type="cran"; sha256="0n01biifzjfvnj3zhrn87qigf4l1kij2zfqf6876qz8rps1jz626"; depends=[ltsa ]; };
tseries = derive { name="tseries"; version="0.10-34"; type="cran"; sha256="068mjgjcsvgpynkvga8lv430cg8zhlr9frj5yapsxni2vj534pqj"; depends=[quadprog zoo ]; };
tseriesChaos = derive { name="tseriesChaos"; version="0.1-13"; type="cran"; sha256="0f2hycxyvcaj3s1lmva1qy46xr6qi43k8fvnm4md5qj8jp2zkazg"; depends=[deSolve ]; };
tsfa = derive { name="tsfa"; version="2014.10-1"; type="cran"; sha256="0gkgl55v08dr288nf8r769f96qri7qbi5src7y6azrykb37nz6iz"; depends=[GPArotation dse EvalEst setRNG tframe tfplot ]; };
tsintermittent = derive { name="tsintermittent"; version="1.5"; type="cran"; sha256="1qziwdpxfc2v010bk2cnhkrajza0z7lrrsjg06m49msyk5bk62z1"; depends=[MAPA ]; };
tslars = derive { name="tslars"; version="1.0"; type="cran"; sha256="0ylpn4jxmrck7hna3j420kw2yhsrklrq2664w85z30xij3zrrrci"; depends=[ ]; };
tsne = derive { name="tsne"; version="0.1-2"; type="cran"; sha256="12q5s79r2949zhm61byd4dbgw6sz3bmxzcwr8b0wlp8g1xg4bhy6"; depends=[ ]; };
tsoutliers = derive { name="tsoutliers"; version="0.6"; type="cran"; sha256="1cyh56i7dsnclphi81fab6k8vkdqv8ing2zmpfsjq4gvq76p7piw"; depends=[forecast polynom stsm KFKSDS ]; };
tspair = derive { name="tspair"; version="1.24.0"; type="bioc"; sha256="1y48148ym5h493rvjvnf3kgw1gdi29m2l938lmig28c6xad3wjzi"; depends=[Biobase ]; };
tspmeta = derive { name="tspmeta"; version="1.1"; type="cran"; sha256="11kr5avf67v2cxy3k1yrpv9lcbmiprd0w43w7zvizhsij58h13vm"; depends=[ggplot2 TSP MASS BBmisc fpc vegan stringr splancs ]; };
ttScreening = derive { name="ttScreening"; version="1.5"; type="cran"; sha256="0qn8lkvgvqpmm368fwpqkm09yaj9mw42mjlikyiwpv2wrgbpmg9n"; depends=[sva limma matrixStats corpcor MASS ]; };
tth = derive { name="tth"; version="4.3-2"; type="cran"; sha256="1gs8xjljklvs0pavvn9f59y09hw7x2da58a46b5x01g08i0j8h1d"; depends=[ ]; };
ttutils = derive { name="ttutils"; version="1.0-1"; type="cran"; sha256="18mk30070mcplybg320vjbk9v5flxnbqi5gx0yyr1z6ymjmnrxbc"; depends=[ ]; };
ttwa = derive { name="ttwa"; version="0.8.5.1"; type="cran"; sha256="1lhypcwssq0dspizvln3w4dg16ad6mz8cj4w34c5vsrayqid7fyn"; depends=[data_table ]; };
tufterhandout = derive { name="tufterhandout"; version="1.2.1"; type="cran"; sha256="04fvvbx69a28nk7i4wz5ynamz1yvsa2ibz542r1xaq1ikk0ywqbw"; depends=[rmarkdown knitr ]; };
tumblR = derive { name="tumblR"; version="1.1"; type="cran"; sha256="0gl6q6rff9bp21gvi3bz8kmwbhimxqrv1mmzwshl1ys9r7d4dvps"; depends=[httr RCurl stringr RJSONIO ]; };
tuneR = derive { name="tuneR"; version="1.2.1"; type="cran"; sha256="1f6mdkfwfy6r62sbwq37sylvcji6f3mj9w13sgicxjn6swbszf57"; depends=[signal ]; };
tuple = derive { name="tuple"; version="0.4-02"; type="cran"; sha256="0fm8fsdfiwknjpc20ivi5m5b19r9scdxhzij70l8qi3ixw1f0rnk"; depends=[ ]; };
turboEM = derive { name="turboEM"; version="2014.8-1"; type="cran"; sha256="0g9nm1m542hslz8272n5qz6h59criyf71l2w218dvq34bcjcd3yy"; depends=[doParallel foreach numDeriv quantreg iterators ]; };
turfR = derive { name="turfR"; version="0.8-7"; type="cran"; sha256="007jmkppfv1x4zzvvd65fhg5k15ybjhsya2zfjgwm77wm34y81ca"; depends=[dplyr ]; };
turner = derive { name="turner"; version="0.1.7"; type="cran"; sha256="1xckb750hbfmzhvabj0lzrsscib7g187b44ag831z58zvawwh772"; depends=[tester ]; };
tvd = derive { name="tvd"; version="0.1.0"; type="cran"; sha256="07al7gpm81a16q5nppsyc5rhv6zzkcvw72isx955b1q189v073aw"; depends=[Rcpp Rcpp ]; };
tvm = derive { name="tvm"; version="0.2"; type="cran"; sha256="1fwa37xnp3idal8v1xxlc9gr25595f644i7a3h8xpd0k086sp1dg"; depends=[ggplot2 reshape2 ]; };
twang = derive { name="twang"; version="1.4-9.3"; type="cran"; sha256="06lgawzq3b2jg84rvg24582ndlk8qji4gcbvxz5acf302cvdnmji"; depends=[gbm survey xtable lattice latticeExtra ]; };
tweeDEseq = derive { name="tweeDEseq"; version="1.12.0"; type="bioc"; sha256="1gymsalw3bh0j8mvnwvslim9nramdpcrm7xq2fyy6zmqnfmfkc6n"; depends=[MASS limma edgeR cqn ]; };
tweedie = derive { name="tweedie"; version="2.2.1"; type="cran"; sha256="1fsi0qf901bvvwa8bb6qvp90fkx1svzswljlvw4zirdavy65w0iq"; depends=[ ]; };
twiddler = derive { name="twiddler"; version="0.5-0"; type="cran"; sha256="0r16nfk2afcw7w0j0n3g0sjs07dnafrp88abwcqg3jyvldp3kxnx"; depends=[ ]; };
twilight = derive { name="twilight"; version="1.42.0"; type="bioc"; sha256="0zwsbaqpya7rw012915l6q87xnqrz0pg0iqmrax7qfrv2ryv6ac2"; depends=[Biobase Biobase ]; };
twitteR = derive { name="twitteR"; version="1.1.8"; type="cran"; sha256="1gzahkipzpgfc160sgxzzga7byncih4j30r303m788c9lxk5dbxv"; depends=[bit64 rjson DBI httr ]; };
twoStageGwasPower = derive { name="twoStageGwasPower"; version="0.99.0"; type="cran"; sha256="1xvy6v444v47i29aw54y29xiizkmryv8p3mjha93xr3xq9bx2mq7"; depends=[ ]; };
twostageTE = derive { name="twostageTE"; version="1.2"; type="cran"; sha256="05k9lvkailv06cah71p71hnx8in045nxz6waplsccznplhgqg5ar"; depends=[isotone ]; };
txtplot = derive { name="txtplot"; version="1.0-3"; type="cran"; sha256="1949ab1bzvysdb79g8x1gaknj0ih3d6g63pv9512h5m5l3a6c31h"; depends=[ ]; };
ucbthesis = derive { name="ucbthesis"; version="1.0"; type="cran"; sha256="0l855if3a7862lxlnkbx52qa617mby634sbb2gkprj21rwd7lcbp"; depends=[knitr stringr ]; };
ucminf = derive { name="ucminf"; version="1.1-3"; type="cran"; sha256="19gmbz32rhrdagvhf2s901lvi1r6273wzznry5daryq6w1jx5z3v"; depends=[ ]; };
udunits2 = derive { name="udunits2"; version="0.6"; type="cran"; sha256="1dlxcx7yw7yqpimnfikdraqcmjsjz7js0j24li0879dzwrqa27ja"; depends=[ ]; };
ump = derive { name="ump"; version="0.5-4"; type="cran"; sha256="05nd9bnysp8gaw916h7hk425banffcm0xfygalbp7brl71q0zby6"; depends=[ ]; };
unbalanced = derive { name="unbalanced"; version="1.1"; type="cran"; sha256="0crkykmyxbag4ri2zikz4r22bf92r3v6q1lfdcvwdvv27slhyfn2"; depends=[FNN RANN ]; };
unbalhaar = derive { name="unbalhaar"; version="2.0"; type="cran"; sha256="0v6bkin1cakwl9lmv49s0jnccl9d6vdslbi1a7kfvmr5dgy760hs"; depends=[ ]; };
uniCox = derive { name="uniCox"; version="1.0"; type="cran"; sha256="1glgk6k8gwxk3haqaswd2gmr7a2hgwjkwk2i1qc5ya7gg8svyavv"; depends=[survival ]; };
uniReg = derive { name="uniReg"; version="1.0"; type="cran"; sha256="1xl19dqnxxibgiiny9ysll2z8j1i70qrszf4xbacq1a6z31vm840"; depends=[DoseFinding MASS mvtnorm quadprog SEL ]; };
unifiedWMWqPCR = derive { name="unifiedWMWqPCR"; version="1.2.0"; type="bioc"; sha256="04r07537pnnnrby2lnrm8qiihz2530h3ah9jbrw5knwc2jpi83qy"; depends=[BiocGenerics HTqPCR ]; };
uniftest = derive { name="uniftest"; version="1.1"; type="cran"; sha256="0a37m7l3lc6rznx10w9h9krnn5paim2i2wvw47ckwag7bv0d4pm4"; depends=[orthopolynom ]; };
uniqtag = derive { name="uniqtag"; version="1.0"; type="cran"; sha256="025q71mzdv3n1jw1fa37bbw8116msnfzcia01p1864si04ch5358"; depends=[ ]; };
unittest = derive { name="unittest"; version="1.2-0"; type="cran"; sha256="1g3f36kikxrzsiyhwpl73q2si5k28drcwvvrqzsqmfyhbjb14555"; depends=[ ]; };
unmarked = derive { name="unmarked"; version="0.10-6"; type="cran"; sha256="07mw9rg4i81fqdkgkpcb7kd7235hn4nyxpbf5b8vxzsly81ffpz7"; depends=[reshape lattice Rcpp plyr Rcpp RcppArmadillo ]; };
untb = derive { name="untb"; version="1.7-2"; type="cran"; sha256="1ha0xj94sz1r325qb4sb5hla9hw1gbqr76703vk792x9696skhji"; depends=[Brobdingnag partitions polynom ]; };
upclass = derive { name="upclass"; version="2.0"; type="cran"; sha256="0jkxn6jgglw6pzzbcvi1pnq4hwfach3xbi13zwml4i83s3n5b0vg"; depends=[mclust ]; };
uplift = derive { name="uplift"; version="0.3.5"; type="cran"; sha256="11xikfmg6dg8mhwqq6wq9j9aw4ljh84vywpm9v0fk8r5a1wyy2f6"; depends=[RItools MASS coin tables penalized ]; };
urca = derive { name="urca"; version="1.2-8"; type="cran"; sha256="0gyjb99m6w6h701vmsav16jpfl5276vlyaagizax8k20ns9ddl4b"; depends=[nlme ]; };
urltools = derive { name="urltools"; version="1.1.0"; type="cran"; sha256="0l0fqc1zvn8ps1cxxnpglbyfdwibyxaj3c2ivz8js8vphcr5i9zp"; depends=[Rcpp Rcpp ]; };
usdm = derive { name="usdm"; version="1.1-12"; type="cran"; sha256="0padc9ppfisnjg1nzw5csv2zki6dby7487lis8pixf1hhbinsnci"; depends=[raster ]; };
useful = derive { name="useful"; version="1.1.8"; type="cran"; sha256="1lzl7rr9qxqa0ga6ml7qi7wi02fd4isgpfskvi3igy10iw1zv3hb"; depends=[ggplot2 plyr scales ]; };
userfriendlyscience = derive { name="userfriendlyscience"; version="0.3-0"; type="cran"; sha256="0gz59n315dbjlyh6fdqihr1x458wplnd43q2gw9s6f9b55359m2c"; depends=[ggplot2 plyr psych pwr fBasics ltm MBESS SuppDists GPArotation MASS mosaic foreign car knitr xtable GGally lavaan ]; };
uskewFactors = derive { name="uskewFactors"; version="1.0"; type="cran"; sha256="1ixcxqw8ai77ndn1cfkq53a090fgs95yzvas1qg2siwpfsm4yix6"; depends=[tmvtnorm mvtnorm MCMCpack MASS ]; };
usl = derive { name="usl"; version="1.4.1"; type="cran"; sha256="0z3dvxczp2vp4clnwds34w5rgv4la5hpadbcmdkfqcpdy1vjryv5"; depends=[nlmrt ]; };
ustyc = derive { name="ustyc"; version="1.0.0"; type="cran"; sha256="1267bng2dz3229cbbq47w22i2yq2ydpw26ngqa1nbi3ma6hwqsv4"; depends=[XML plyr ]; };
utility = derive { name="utility"; version="1.3"; type="cran"; sha256="0ng7jc45k9rgj9055ndmgl308zjvxd2cjsk2pn57x44rl1lldcj5"; depends=[ ]; };
uuid = derive { name="uuid"; version="0.1-1"; type="cran"; sha256="1b35h2n86233zb6dwkgxxlvnlld8kmv0j6j3m31xjbpmc3ppr7w3"; depends=[ ]; };
vacem = derive { name="vacem"; version="0.1-1"; type="cran"; sha256="0lh32hj4g1hsa45v6pmfyj1hw0klk8gr1k451lvs4hzpkkcwkqbn"; depends=[foreach ]; };
varComp = derive { name="varComp"; version="0.1-360"; type="cran"; sha256="18xazjx102j6v1jgswxjdqjb0hq6hd646yhwb7bcplqyls9hzha0"; depends=[quadprog Matrix MASS CompQuadForm RLRsim SPA3G mvtnorm nlme ]; };
varSelRF = derive { name="varSelRF"; version="0.7-5"; type="cran"; sha256="1800d9vvkqpxjvmiqdr610hw7ji79j0wsbl823s097dndmv51axk"; depends=[randomForest ]; };
varSelectIP = derive { name="varSelectIP"; version="0.2-1"; type="cran"; sha256="180lzsg48hnlcmhpk0a5yzmy2syw8yr7f5npnyspx3897hjag1vp"; depends=[MASS mvtnorm ]; };
varbvs = derive { name="varbvs"; version="1.0"; type="cran"; sha256="0ywgb6ibijffjjzqqb5lvh1lk5qznwwiq7kbsyzkwcxbp8xkabjw"; depends=[ ]; };
vardiag = derive { name="vardiag"; version="0.2-0"; type="cran"; sha256="0avj900zx4nr67dk08n0n6arxx2cb2ymm0kd5xxnzsmyrmwm40mm"; depends=[ ]; };
vardpoor = derive { name="vardpoor"; version="0.3.0"; type="cran"; sha256="0gdvnz86c96i90zvbp5a6ljq4pcnx2zcqb0rbhcqhylcyqys054w"; depends=[data_table laeken stringr reshape2 foreach plyr gdata MASS ]; };
vars = derive { name="vars"; version="1.5-2"; type="cran"; sha256="1q45z5b07ww4nafrvjl48z0w1zpck3cd8fssgwgh4pw84id3dyjh"; depends=[MASS strucchange urca lmtest sandwich ]; };
vartors = derive { name="vartors"; version="0.2.6"; type="cran"; sha256="04dynqs903clllk9nyynh3dr7msxn5rr5jmw6ql86ppd5w3da0rl"; depends=[ ]; };
vbdm = derive { name="vbdm"; version="0.0.4"; type="cran"; sha256="1rbff0whhbfcf6q5wpr3ws1n4n2kcr79yifcni12vxg69a3v6dd3"; depends=[ ]; };
vbmp = derive { name="vbmp"; version="1.34.0"; type="bioc"; sha256="12x2kmjidpap9qbyppc8kka0z7ijsjhkipfs8kh91wfr6i4a89sm"; depends=[ ]; };
vbsr = derive { name="vbsr"; version="0.0.5"; type="cran"; sha256="1avskbxxyinjjdga4rnghcfvd4sypv4m39ysfaij5avvmi89bx3b"; depends=[ ]; };
vcd = derive { name="vcd"; version="1.3-2"; type="cran"; sha256="1ww69sgg178aqcs90mm599nlr6hnxn54d2wzyhddgx1z3qxhzwjd"; depends=[MASS colorspace ]; };
vcdExtra = derive { name="vcdExtra"; version="0.6-8"; type="cran"; sha256="00nxvq5fn5il3lmip8ag22cqc2sxlbl1rqw5zxp309wp4nrm5i2v"; depends=[vcd gnm MASS ]; };
vcrpart = derive { name="vcrpart"; version="0.3-3"; type="cran"; sha256="0rnf9cwynfwr956hwj4kxqiqq3cdw4wf5ia73s7adxixh5kpqxqa"; depends=[partykit nlme rpart numDeriv ucminf zoo sandwich strucchange ]; };
vdmR = derive { name="vdmR"; version="0.1.0"; type="cran"; sha256="0rv9c6bn711dn1fhgmr4ig0lr9s6yjk7r5ccvyiadgn6g5mr2bds"; depends=[ggplot2 plyr maptools gridSVG rjson GGally Rook dplyr ]; };
vec2dtransf = derive { name="vec2dtransf"; version="1.1"; type="cran"; sha256="029xynay9f9rn0syphh2rhd3szv50ib4r0h0xfhhvbbb37h5dc9s"; depends=[sp ]; };
vecsets = derive { name="vecsets"; version="1.1"; type="cran"; sha256="0k27g3frc9y9z2qlm19kfpls6wl0422dilhdlk6096f1fp3mc6ij"; depends=[ ]; };
vectoptim = derive { name="vectoptim"; version="0.2"; type="cran"; sha256="1n19sipx5r0qy08jmrbsrf0kgwgl31np88wc1zyc2bkx8h1zkmf2"; depends=[foreach doParallel ]; };
vegan = derive { name="vegan"; version="2.2-1"; type="cran"; sha256="06rq9qrcf180isjrczscl84m3jvygz5w2gz5nc4rm1pg89rf6lrd"; depends=[permute lattice MASS cluster mgcv ]; };
vegan3d = derive { name="vegan3d"; version="0.65-0"; type="cran"; sha256="0c75hybhwqv56f2zpskr99rr9k6hw6rbv29bcxn0fciw5jqk01m3"; depends=[vegan rgl scatterplot3d ]; };
vegclust = derive { name="vegclust"; version="1.6.3"; type="cran"; sha256="0l6j4sgzfqvcypx2dszpnsd1sivk33pixlgf9abqifp45skpkwfg"; depends=[vegan sp ]; };
vegdata = derive { name="vegdata"; version="0.6.9"; type="cran"; sha256="1a8b8wwsxq8090cj8pxw1digllmc2rnby8immjfmbi5rzjbksgi3"; depends=[foreign XML ]; };
vegetarian = derive { name="vegetarian"; version="1.2"; type="cran"; sha256="15ys1m8p3067dfsjwz6ds837n6rqd19my23yj8vw78xli3qmn445"; depends=[ ]; };
venneuler = derive { name="venneuler"; version="1.1-0"; type="cran"; sha256="10fviqv9vr7zkmqm6iy2l9bjxglf2ljb7sx423vi4s9vffcxjp17"; depends=[rJava ]; };
verification = derive { name="verification"; version="1.41"; type="cran"; sha256="1c8l0kqk02xijr4yhgpmhlqsflm3wizybkwpzmlnfanh8vzn49g2"; depends=[fields boot CircStats MASS dtw ]; };
vetools = derive { name="vetools"; version="1.3-28"; type="cran"; sha256="1470xgqdq9n5kj86gdfds15k3vqidk3h99zi3g76hhyfl8gyl1c0"; depends=[sp stringr tis lubridate maptools plyr xts scales ]; };
vines = derive { name="vines"; version="1.1.3"; type="cran"; sha256="1m862kgcwfz2af00p3vqg959dfldw88bdmb7p4zr3jnqzb6l7rnk"; depends=[copula ADGofTest cubature TSP ]; };
violinmplot = derive { name="violinmplot"; version="0.2.1"; type="cran"; sha256="1j3hb03y988xa704kp25v1z1pmpxw5k1502zfqjaf8cy4lr3kzsc"; depends=[lattice ]; };
vioplot = derive { name="vioplot"; version="0.2"; type="cran"; sha256="16wkb26kv6qr34hv5zgqmgq6zzgysg9i78pvy2c097lr60v087v0"; depends=[sm ]; };
viopoints = derive { name="viopoints"; version="0.2-1"; type="cran"; sha256="0cpbkkzm1rxch8gnvlmmzy8g521f5ang3nhlcnin419gha0w6avf"; depends=[ ]; };
viper = derive { name="viper"; version="1.2.0"; type="bioc"; sha256="1nx10mg6flll5ypg8bzx23703w27vf01xry1vbw211g7hhkb10hd"; depends=[Biobase mixtools ]; };
virtualspecies = derive { name="virtualspecies"; version="1.1"; type="cran"; sha256="0znrb6xqyzddd1r999rhx6ix6wgpj1laf5bcns7zgmq6zb39j74s"; depends=[raster ade4 dismo rworldmap ]; };
visreg = derive { name="visreg"; version="2.2-0"; type="cran"; sha256="1hnyrfgyk5fign5l35aql2q7q4mmw3jby5pkv696h8k1mc8qq096"; depends=[lattice ]; };
visualFields = derive { name="visualFields"; version="0.4.2"; type="cran"; sha256="14plg94g4znl8n6798na2rivjjamjgayqkk1qwn1nx5df040l4q5"; depends=[gridBase flip matrixStats Hmisc ]; };
visualize = derive { name="visualize"; version="4.2"; type="cran"; sha256="1jgk7j0f3p72wbqnmplrgpy7hlh7k2cmvx83gr2zfnbhygdi22mk"; depends=[ ]; };
vitality = derive { name="vitality"; version="1.1"; type="cran"; sha256="048i6ralh3gbh3hqkdxj3sdkxp1nrjbp3jpwrva4sa8d69vwxla5"; depends=[IMIS ]; };
vmsbase = derive { name="vmsbase"; version="2.0"; type="cran"; sha256="04j6zibwcn1ywckbdqw5p6da5qpgpll7a96x5a1kyimiwk408j1r"; depends=[sqldf ggmap mapdata maps marmap intervals plotrix sp foreign cluster cairoDevice ggplot2 DBI RSQLite fields gsubfn AMORE ecodist gWidgets gWidgetsRGtk2 chron maptools outliers PBSmapping R6 VennDiagram gmt ]; };
vowels = derive { name="vowels"; version="1.2-1"; type="cran"; sha256="0177xysb5y8jzpxn9wdygq2f74gys67g29cd12zw77vlq3c3kkbr"; depends=[ ]; };
vows = derive { name="vows"; version="0.4"; type="cran"; sha256="0cc0znrnzhfgp47dsyncjh7b072mbwk568n2pshxwdfxzh3kj65q"; depends=[fda gamm4 rpanel mgcv RLRsim oro_nifti shape stringr ]; };
vrmlgen = derive { name="vrmlgen"; version="1.4.9"; type="cran"; sha256="0lifhhf41yml4k83wpkssl14jgn8jaw1lcknwbci1sd8s1c4478l"; depends=[ ]; };
vrtest = derive { name="vrtest"; version="0.97"; type="cran"; sha256="00hdgb0r18nwv3qay97b09kqqw9xqsbya06rrjyddqh9r6ggx1y0"; depends=[ ]; };
vscc = derive { name="vscc"; version="0.2"; type="cran"; sha256="1p14v8vd8kckd44g4dvzh51gdkd8jvsc4bkd2i4csx8vjiwrni5w"; depends=[teigen mclust ]; };
vsn = derive { name="vsn"; version="3.34.0"; type="bioc"; sha256="14kvfvpfc2dvkv4692vdkj39agd9l7fh77jynpi5c5c2wkgamm4w"; depends=[Biobase affy limma lattice ]; };
vtpnet = derive { name="vtpnet"; version="0.6.0"; type="bioc"; sha256="1bs3nj4zairvf1hhwvrmckzj8w8q942kfrhphwv7gcyhgza1l01x"; depends=[graph GenomicRanges gwascat doParallel foreach ]; };
vudc = derive { name="vudc"; version="1.0"; type="cran"; sha256="1xjbjfya4zn94arc76pcfflc2dcn40qj1fkzwnzqz70czc2msppw"; depends=[ ]; };
vwr = derive { name="vwr"; version="0.3.0"; type="cran"; sha256="1h790vjcdfngs1siwldvqz8jrxpkajl3266lzadfnmchfan1x7xv"; depends=[stringdist lattice latticeExtra ]; };
wSVM = derive { name="wSVM"; version="0.1-7"; type="cran"; sha256="0c7rblzgagwfb8mmddkc0nd0f9rv6kapw8znpwapv3fv0j2qzq7h"; depends=[MASS quadprog ]; };
waffect = derive { name="waffect"; version="1.2"; type="cran"; sha256="0r5dvm0ggyxyv81hxdr1an658wkqkhqq2xaqzqpnh4sh4wbak35a"; depends=[Rcpp Rcpp ]; };
waffle = derive { name="waffle"; version="0.3.1"; type="cran"; sha256="0z6snwf29n1p1i4zc3hx95yq388jgw8v3mcmjhsa2w95zsz9dxr0"; depends=[ggplot2 RColorBrewer gridExtra gtable ]; };
wahc = derive { name="wahc"; version="1.0"; type="cran"; sha256="1324xhajgmxq6dxzpnkcvxdpm2m3g47drhyb2b3h227cn3aakxyg"; depends=[ ]; };
walkscoreAPI = derive { name="walkscoreAPI"; version="1.2"; type="cran"; sha256="1c2gfkl5yl3mkviah8s8zjnqk6lnzma1yilxgfxckdh5wywi39fx"; depends=[ ]; };
wasim = derive { name="wasim"; version="1.1.2"; type="cran"; sha256="1zydzw7cihhdwv0474fnc4lgaq5fwrv8jinz79vkbidbgcy7i2fd"; depends=[MASS qualV tiger fast ]; };
wateRmelon = derive { name="wateRmelon"; version="1.6.0"; type="bioc"; sha256="0akw9a6d6y04icgcfwsd6f5icbiwckkgrj4d7j7wqs96yzyjm47i"; depends=[limma matrixStats methylumi lumi ROC ]; };
waterData = derive { name="waterData"; version="1.0.4"; type="cran"; sha256="0wk49f079jfbjncyirdvq50wswf9g361iivshjfhyndv83gbqrzk"; depends=[lattice latticeExtra XML ]; };
waterfall = derive { name="waterfall"; version="0.9.9.20121030"; type="cran"; sha256="140s5639ayd9qgn4i1s1qk541vi34ndzdcqpaps7q53g42n8akfw"; depends=[lattice ]; };
wavClusteR = derive { name="wavClusteR"; version="2.0.0"; type="bioc"; sha256="0xnnmj5hqnf7zl6qfs4fc2srp1liq8xhjxphkaiqyk10h2442nbb"; depends=[GenomicRanges Rsamtools Biostrings foreach GenomicFeatures ggplot2 Hmisc IRanges mclust rtracklayer seqinr stringr wmtsa ]; };
waveTiling = derive { name="waveTiling"; version="1.8.1"; type="bioc"; sha256="19rlyhzid11x8d56lj5c8w127ycs6maw4xs8qqia4dsc6jdii617"; depends=[oligo oligoClasses Biobase Biostrings GenomeGraphs affy preprocessCore GenomicRanges waveslim IRanges ]; };
waveband = derive { name="waveband"; version="4.6"; type="cran"; sha256="1y2qi2zb8l2ap6f8ihnpq2yavic464bl5mp5yv1dscbk0nmfn966"; depends=[wavethresh ]; };
waved = derive { name="waved"; version="1.1-2"; type="cran"; sha256="17pr9qhz0dbbcr78vwm964d9zd7yrfrqvadr1lwf756bsrscmlg3"; depends=[ ]; };
wavelets = derive { name="wavelets"; version="0.3-0"; type="cran"; sha256="141s7z7wxl5plxp7xp7wczswlcvb18a4h3n881l9qc4ny9p7gfpa"; depends=[ ]; };
wavemulcor = derive { name="wavemulcor"; version="1.2"; type="cran"; sha256="1039y5rakjkx2mvfmykg2z4jpkpbcj7rclyg7ab19wnxmdm8ls81"; depends=[waveslim ]; };
waveslim = derive { name="waveslim"; version="1.7.5"; type="cran"; sha256="0lqslkihgrd7rbihqhhk57m9vkbnfsznkvk8430cvbcsn7vridii"; depends=[ ]; };
wavethresh = derive { name="wavethresh"; version="4.6.6"; type="cran"; sha256="1ykhfw1bdibvq2b3rrgqszvwqmzkd3fgxqg7p36ms1cxph68g2r9"; depends=[MASS ]; };
wbs = derive { name="wbs"; version="1.3"; type="cran"; sha256="1fdf3dj23n63nfnzafq88sxqvi15cbrzsvc8wrljw1raq5z012yv"; depends=[ ]; };
weatherData = derive { name="weatherData"; version="0.4.1"; type="cran"; sha256="19ynb9w52ay15awaf4bqm9lj2w6pk70lyaipn46jrspwxqsvfhlc"; depends=[plyr ]; };
weaver = derive { name="weaver"; version="1.32.0"; type="bioc"; sha256="16bqpq2p013m14rjzqh4r57skfj5k93xvl0s7cp8wyq6zhisp1lv"; depends=[digest codetools ]; };
webbioc = derive { name="webbioc"; version="1.38.0"; type="bioc"; sha256="00rwccdbvv7vk8gspkqizjjshh9rccmxzzb95yhgg6qw2n10afgd"; depends=[Biobase affy multtest annaffy vsn gcrma qvalue multtest qvalue BiocInstaller ]; };
webchem = derive { name="webchem"; version="0.0.1"; type="cran"; sha256="0hfsjaffxz78mxxh2wx5api2blnpg5y16lyc0jf1zmq7zkhccx3l"; depends=[XML RCurl RJSONIO ]; };
webutils = derive { name="webutils"; version="0.3"; type="cran"; sha256="1wzpwigc5mmdnz453qr4s1viaslgdrcg238n25qcg4xjakmnxrss"; depends=[jsonlite ]; };
webvis = derive { name="webvis"; version="0.0.2"; type="cran"; sha256="1cdn9jrpg2sbx4dsj0xf7m0daqr7fqiw3xy1lg0i0qn9cpvi348f"; depends=[ ]; };
weightedKmeans = derive { name="weightedKmeans"; version="1.2.0"; type="cran"; sha256="140cvl1jwwqyvcsf7pbsxh9k4bynd7c1q159pp7ia1f1sgimxafb"; depends=[lattice latticeExtra clv ]; };
weightedScores = derive { name="weightedScores"; version="0.9.1"; type="cran"; sha256="0wd2ymxy8yh3l4xd3xgifbihi89h53wy6n84x7x26px12c70q8fa"; depends=[mvtnorm rootSolve ]; };
weights = derive { name="weights"; version="0.80"; type="cran"; sha256="147fgs99sg1agq081ikj2fhb4b2vzsppdg1h1w036bb92vsjb0g5"; depends=[Hmisc gdata ]; };
weirs = derive { name="weirs"; version="0.24"; type="cran"; sha256="15iffimdr01m92wq6srb49vf900c3cbipj99sk7rxbqbdzbb0y6g"; depends=[ ]; };
wesanderson = derive { name="wesanderson"; version="0.3.2"; type="cran"; sha256="17acf9ydi2sw7q887ni9ly12mdmip66ix6gdkh68rncj8sx3csrd"; depends=[ ]; };
wfe = derive { name="wfe"; version="1.3"; type="cran"; sha256="16b39i60x10kw6yz44ff19h638s9lsgnz8azc76zl9b8s64jliya"; depends=[arm Matrix MASS ]; };
wgaim = derive { name="wgaim"; version="1.4-8"; type="cran"; sha256="1x1dgxw1viswdqd1k1gfbpipzhgy13lhncji0wlsgpcgfa40ap1a"; depends=[qtl lattice ]; };
wgsea = derive { name="wgsea"; version="1.8"; type="cran"; sha256="1114wik011sm2n12bwm2bhqvdxagbhbscif45k4pgxdkahy2abpi"; depends=[snpStats ]; };
whisker = derive { name="whisker"; version="0.3-2"; type="cran"; sha256="0z4cn115gxcl086d6bnqr8afi67b6a7xqg6ivmk3l4ng1x8kcj28"; depends=[ ]; };
widals = derive { name="widals"; version="0.5.4"; type="cran"; sha256="1bl59s1r4gkvq4nkf94fk7m0zvhbrszkgmig66lfxhyvk9r84fvb"; depends=[snowfall ]; };
widenet = derive { name="widenet"; version="0.1-2"; type="cran"; sha256="1nimm8szbg82vg00f5c7b3f3sk0gplssbl4ggasjnh7dl621vfny"; depends=[glmnet relaxnet ]; };
widgetTools = derive { name="widgetTools"; version="1.44.0"; type="bioc"; sha256="0lzf99s9jzhl98i6lr45n76jkaycjxrb0nrwi8hcc7rq30x0adjd"; depends=[ ]; };
wikibooks = derive { name="wikibooks"; version="0.2"; type="cran"; sha256="178lhri1b8if2j7y7l9kqgyvmkn4z0bxp5l4dmm97x3pav98c7ks"; depends=[ ]; };
wikipediatrend = derive { name="wikipediatrend"; version="1.1.1"; type="cran"; sha256="1v62zv24xami7rjf36z4w917j85jk976z0s2wy2pbrjz6yd3aczb"; depends=[jsonlite stringr rvest httr RCurl ]; };
wildlifeDI = derive { name="wildlifeDI"; version="0.2"; type="cran"; sha256="0z8zyrl3d73x2j32l6xqz5nwhygzy7c9sjfp6bql5acyfvn7ngjv"; depends=[sp rgeos adehabitatLT ]; };
windex = derive { name="windex"; version="1.0"; type="cran"; sha256="0ci10x6mm5i03j05fyadxa0ic0ngpyp5nsn05p9m7v1is5jhxci0"; depends=[geiger ape scatterplot3d ]; };
witness = derive { name="witness"; version="1.2"; type="cran"; sha256="1pccn7czm1q0w31zpmky5arkcbnfl94gh1nnkf8kmcccdrr3lxph"; depends=[ ]; };
wkb = derive { name="wkb"; version="0.1-0"; type="cran"; sha256="0ynamg8zrk80j5ysyg7pymdcxzlscbhhygp8czmsd33p2y31pggd"; depends=[sp ]; };
wle = derive { name="wle"; version="0.9-9"; type="cran"; sha256="032zqfqg6ghg56zgr005g8q94zskmbzv1p08lxv227ikkbmnwn53"; depends=[circular ]; };
wmlf = derive { name="wmlf"; version="0.1.2"; type="cran"; sha256="0zxw84l5v12r15hpyd1kbajjz3cbkn5g884kmj72y7yi0yi1b6d6"; depends=[waveslim ]; };
wmtsa = derive { name="wmtsa"; version="2.0-0"; type="cran"; sha256="0y2bv166xwwpb1wf6897qybyf84f34qjsmygdbv90r637c050yk5"; depends=[splus2R ifultools MASS ]; };
wnominate = derive { name="wnominate"; version="0.99"; type="cran"; sha256="19pis0p4kkwyddn8f93p4ff7l1hvcdr7m3hrv4bzmm9nd8iy8mk1"; depends=[pscl ]; };
wombsoft = derive { name="wombsoft"; version="2.0"; type="cran"; sha256="11ri29vj1yg2lpr6vf1i45w20hqh8dswj04ylbq0vy27cwmxqljd"; depends=[ ]; };
wordcloud = derive { name="wordcloud"; version="2.5"; type="cran"; sha256="1ajqdkm8h1wid3d41zd8v7xzf2swid998w31zrghd45a5lcp7qcm"; depends=[RColorBrewer slam Rcpp Rcpp ]; };
wordmatch = derive { name="wordmatch"; version="1.0"; type="cran"; sha256="0zscp361qf79y1zsliga18hc7wj36cnydshrqb9pv67b65njrznz"; depends=[plyr reshape2 ]; };
wordnet = derive { name="wordnet"; version="0.1-10"; type="cran"; sha256="1k0ncxqsvv5vd5xm6nxs66hvqic9zbxf63sshszgpva2cqlyj4q8"; depends=[rJava ]; };
wpp2008 = derive { name="wpp2008"; version="1.0-1"; type="cran"; sha256="0gd3vjw1fpzhp3qlf1jpc24f76i0pxsjs5pb1v3k2si6df7q4msd"; depends=[ ]; };
wpp2010 = derive { name="wpp2010"; version="1.2-0"; type="cran"; sha256="1h87r1cn4lnx80dprvawsyzfkriscqjgr27gvv7n19wvsx8qd57k"; depends=[ ]; };
wpp2012 = derive { name="wpp2012"; version="2.2-1"; type="cran"; sha256="00283s4r36zzwn67fydrl7ldg6jhn14qkf47h0ifmsky95bd1n5k"; depends=[ ]; };
wppExplorer = derive { name="wppExplorer"; version="1.6-1"; type="cran"; sha256="1pgfh9r98yfrk8228iw5hl5pdb4ki6pz49hpf796frd86d94hw0a"; depends=[shiny plyr reshape2 googleVis wpp2012 Hmisc ggplot2 ]; };
wq = derive { name="wq"; version="0.4.3"; type="cran"; sha256="1lgxf5pfw3563dpyq0dgj4ps2mc5nqh56y1i77ypscj5lrcgjxrf"; depends=[zoo ggplot2 reshape2 ]; };
wrassp = derive { name="wrassp"; version="0.1.3"; type="cran"; sha256="1xza4w5dgc6gda9ybmq386jnb1gkahdi6sds5dqay7pm5mjql6fl"; depends=[ ]; };
write_snns = derive { name="write.snns"; version="0.0-4.2"; type="cran"; sha256="0sxg7z8rnh4lssbivkrfxldv4ivy37wkndzzndpbvq2gbvbjnp4l"; depends=[ ]; };
wrspathrow = derive { name="wrspathrow"; version="0.1"; type="cran"; sha256="1xkh12aal85qhk8d0pdj2qbi6pp4jnr6zbxkhdw2zwav57ly3f4i"; depends=[wrspathrowData sp raster rgeos rgdal ]; };
wrspathrowData = derive { name="wrspathrowData"; version="1.0"; type="cran"; sha256="0a1aggcll0fmkwfg4h7rs4j5h3v1bh95dkbriwrb0bx0cikg63x3"; depends=[ ]; };
wskm = derive { name="wskm"; version="1.4.19"; type="cran"; sha256="16smir0b4pxkaxgr2vclq8kprpwn0y3fb43ba79q94d6m5hm844y"; depends=[lattice latticeExtra clv ]; };
wsrf = derive { name="wsrf"; version="1.4.0"; type="cran"; sha256="1b9ifswv0civaavmpzi2r3fdbccxg4akzvklqri0hj49kr4cw5pa"; depends=[Rcpp Rcpp ]; };
wtcrsk = derive { name="wtcrsk"; version="1.3"; type="cran"; sha256="1viddyms2d9q2hb9z788fcs8vp7gp6vzlsszcnyxgganfjsd85zy"; depends=[ ]; };
wux = derive { name="wux"; version="2.0-0"; type="cran"; sha256="04casnfx5cam5a1iqm2x6lldicv11zqxgxjb61qcivga781g5sxg"; depends=[sp ncdf reshape abind fields rgdal rgeos class stringr Hmisc gdata corpcor rworldmap ]; };
x_ent = derive { name="x.ent"; version="1.1.2"; type="cran"; sha256="0wbbhsnlm5yln72h648nz3y5w83kq9qvpw0pk56lsc1bafps712p"; depends=[opencpu rJava stringr xtable jsonlite venneuler ggplot2 statmod ]; };
x12 = derive { name="x12"; version="1.6.0"; type="cran"; sha256="0bl50nva4ai8p24f9hr622m0fc5nmbjakn3rsvl79g050gjsd4i3"; depends=[stringr ]; };
x12GUI = derive { name="x12GUI"; version="0.13.0"; type="cran"; sha256="1mga7g9gwb3nv2qs27lz4n9rp6j3svads28hql88sxaif6is3nk1"; depends=[x12 Hmisc RGtk2 cairoDevice lattice stringr ]; };
xcms = derive { name="xcms"; version="1.42.0"; type="bioc"; sha256="16icfyl3whvwgfzyz56wjl9ynrvd7bznghd6rczczkzcq2sgiqdf"; depends=[mzR BiocGenerics Biobase ]; };
xergm = derive { name="xergm"; version="1.4.1"; type="cran"; sha256="1lcqa2vxdg4ljk2p0m8cqw68bqxycxql57nr3n4ggic2ys0sbrxa"; depends=[statnet statnet_common network sna ergm texreg Matrix boot coda ROCR igraph vegan lme4 Rcpp speedglm Rcpp ]; };
xgobi = derive { name="xgobi"; version="1.2-15"; type="cran"; sha256="03ym5mm16rb1bdwrymr393r3xgprp0ign45ryym3g0x2zi8dy557"; depends=[ ]; };
xhmmScripts = derive { name="xhmmScripts"; version="1.1"; type="cran"; sha256="1qryyb34jx9c64l8bnwp40b08y81agdj5w0icj8dk052x50ip1hl"; depends=[gplots plotrix ]; };
xkcd = derive { name="xkcd"; version="0.0.4"; type="cran"; sha256="1hwr3ylgflzizgp8ffwdv9cgcngpjwmpxvgrvg8ad89a40l1mxcr"; depends=[ggplot2 extrafont Hmisc ]; };
xlsx = derive { name="xlsx"; version="0.5.7"; type="cran"; sha256="0qxkdpf1dvi0x7fy65abjx2j60rdx7fv5yi8l2wdm0f2631pnwin"; depends=[rJava xlsxjars ]; };
xlsxjars = derive { name="xlsxjars"; version="0.6.1"; type="cran"; sha256="1rka5smm7yqnhhlblpihhciydfap4i6kjaa4a7isdg7qjmzm3h9p"; depends=[rJava ]; };
xmapbridge = derive { name="xmapbridge"; version="1.24.0"; type="bioc"; sha256="01xdx7pda642479xg2kzy2bbxqwmwg4zlhigqpmycv13pmrpqa8c"; depends=[ ]; };
xml2 = derive { name="xml2"; version="0.1.0"; type="cran"; sha256="0p00lg8p5naw77k2fk6wbqmqdhj9iv2zn7g00gp7g253lmm8q740"; depends=[Rcpp Rcpp BH ]; };
xoi = derive { name="xoi"; version="0.61-1"; type="cran"; sha256="0ypy0rb0f0bns41vjzyln04k3hypgr3wysqbdi0b0r14ip5rb47k"; depends=[qtl ]; };
xpose4 = derive { name="xpose4"; version="4.5.3"; type="cran"; sha256="02m3ad4287ljsi4qrzwd84lfj1y6rz9nias2zk4cbqm14gf19pdf"; depends=[lattice gam Hmisc survival ]; };
xps = derive { name="xps"; version="1.26.1"; type="bioc"; sha256="1pqdkm8g9x74l0dfwyrcsqqmi0c8i9dkiq4sydg60zygdipmi65x"; depends=[ ]; };
xtable = derive { name="xtable"; version="1.7-4"; type="cran"; sha256="1fvx4p058ygsyj9f4xb9k5h0fdi4zibadqrsn4qbx4am30qrlqj7"; depends=[ ]; };
xtal = derive { name="xtal"; version="1.0"; type="cran"; sha256="1717pl64nbliwbdg5fs6cwj7zvgrm00zlyj2dhi06yyg16gq1w8k"; depends=[ ]; };
xtermStyle = derive { name="xtermStyle"; version="3.0.5"; type="cran"; sha256="1q4qq8w4sgxbbb1x0i4k5xndvwisvjszg830wspwb37wigxz8xvz"; depends=[ ]; };
xts = derive { name="xts"; version="0.9-7"; type="cran"; sha256="163hzcnxrdb4lbsnwwv7qa00h4qlg4jm289acgvbg4jbiywpq7zi"; depends=[zoo ]; };
yaImpute = derive { name="yaImpute"; version="1.0-24"; type="cran"; sha256="0vqzcxkrnsj99kpc4fx9lbm446fjgsjcbfakm9pdk013mxiii72d"; depends=[ ]; };
yacca = derive { name="yacca"; version="1.1"; type="cran"; sha256="0wg2wgvh1najmccmgzyigj11mshrdb8w4r2pqq360dracpn0ak6x"; depends=[ ]; };
yaml = derive { name="yaml"; version="2.1.13"; type="cran"; sha256="18kz5mfn7qpif5pn91w4vbrc5bkycsj85vwm5wxwzjlb02i9mxi6"; depends=[ ]; };
yaqcaffy = derive { name="yaqcaffy"; version="1.26.0"; type="bioc"; sha256="0n3pjvmx833yby6ip3cww42lsk3c4hl1csvd72480l28cwr4n4zz"; depends=[simpleaffy ]; };
ycinterextra = derive { name="ycinterextra"; version="0.1"; type="cran"; sha256="0hr37izbbmxqkjy6a7q8vcn0vs8an1ck9y8xfjpl5z0rygi8xc1v"; depends=[mcGlobaloptim ]; };
yhat = derive { name="yhat"; version="2.0-0"; type="cran"; sha256="0vdhkknmms7zy7iha894jn1hr1h5w67pr53r0q67m7p404w21iza"; depends=[yacca miscTools plotrix boot ]; };
yhatr = derive { name="yhatr"; version="0.13.4"; type="cran"; sha256="1z1i48nhyadn1l00sw50qif2zyjvy1jbvq91chnapfdbjjsgfv2x"; depends=[httr RCurl rjson plyr jsonlite stringr ]; };
ykmeans = derive { name="ykmeans"; version="1.0"; type="cran"; sha256="0xfji2fmslvc059kk3rwkv575ffzl787sa9d4vw5hxnsmkn8lq50"; depends=[plyr foreach ]; };
yuima = derive { name="yuima"; version="1.0.71"; type="cran"; sha256="0aqb87jlvlq6iw2mlngiylvayd6y2wrc82zl1za442gqq8py00if"; depends=[zoo expm cubature mvtnorm ]; };
zCompositions = derive { name="zCompositions"; version="1.0.3"; type="cran"; sha256="0lxy201ys9dvv8c09q8wbks1c2jkjyd1bbrxhjr7zi9j7m0parl7"; depends=[MASS NADA truncnorm ]; };
zendeskR = derive { name="zendeskR"; version="0.4"; type="cran"; sha256="06cjwk08w3x6dx717123psinid5bx6c563jnfn890373jw6xnfrk"; depends=[RCurl rjson ]; };
zic = derive { name="zic"; version="0.8.1"; type="cran"; sha256="05mn894qdx6k7158dbsjy2b49n0gz5xnmlixr2dhkxc12ydj6zs5"; depends=[Rcpp RcppArmadillo coda Rcpp RcppArmadillo ]; };
zipcode = derive { name="zipcode"; version="1.0"; type="cran"; sha256="1lvlf1h5fv412idpdssjfh4fki933dm5nhr41ppl1mf45b9j7azn"; depends=[ ]; };
zipfR = derive { name="zipfR"; version="0.6-6"; type="cran"; sha256="1y3nqfjg5m89mdvcmqwjmwlc8p3hpcqnwv4ji1a7ggg4n63lwl3j"; depends=[ ]; };
zlibbioc = derive { name="zlibbioc"; version="1.12.0"; type="bioc"; sha256="05ps73iwf1s57nksla5mbbbf35447j131qnk27aw8hgkwbq3hrrs"; depends=[ ]; };
zoeppritz = derive { name="zoeppritz"; version="1.0-5"; type="cran"; sha256="0a501411gjs02vvhxdy8z3a5449arkamdidf2q6qswkkiv68qq04"; depends=[ ]; };
zoib = derive { name="zoib"; version="1.3.0"; type="cran"; sha256="15i2gczc6sh0vyi51k105qd3bymwkpbpv2xm99jwflpa170yd8jp"; depends=[rjags coda matrixcalc Formula ]; };
zoo = derive { name="zoo"; version="1.7-12"; type="cran"; sha256="1n64pdmk2vrmiprwkncaaf936c97nlc1l78bvmzp991rijr9vqg5"; depends=[lattice ]; };
zooaRch = derive { name="zooaRch"; version="1.0"; type="cran"; sha256="1krzwrk2cknlsmd3hn8c2lly10pd8k8jj2x12mbjhr2wws0i5fj4"; depends=[ggplot2 ]; };
zooimage = derive { name="zooimage"; version="3.0-5"; type="cran"; sha256="1r3slmyw0dyqfa40dr5xga814z09ibhmmby8p1cii5lh61xm4c39"; depends=[svMisc svDialogs mlearning filehash jpeg png ]; };
zoom = derive { name="zoom"; version="2.0.4"; type="cran"; sha256="03f5rxfr6ncf1j6vpn7pip21q7ylj4bx0a5xphqb6x6i33lxf1g5"; depends=[ ]; };
ztable = derive { name="ztable"; version="0.1.5"; type="cran"; sha256="1jfqnqy9544gfvz3bsb48v4177nwp4b4n9l2743asq8sbq305b5r"; depends=[ ]; };
zyp = derive { name="zyp"; version="0.10-1"; type="cran"; sha256="0f1fqqxysf3psnvn08s5qly2c958h1hhznjjj8mvpjr5g6hqlr1k"; depends=[Kendall ]; }; 
}
